<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="type" for="all" attr.name="sourcecode" attr.type="string" />
  <key id="USES_REFLEXION" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="3305">
    <node id="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java;[1188-1209;31-31;16-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java;[1531-1555;43-43;19-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java;[2267-2276;73-73;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/AbstractFileComparator.java;[1955-1982;60-60;23-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[1798-1842;54-54;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[1547-1582;45-45;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[1956-1979;60-60;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[2220-2246;67-67;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[67472-67527;1565-1565;24-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[1637-1654;49-49;24-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[2527-2542;80-80;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[2846-2868;89-89;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3325-3339;105-105;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3174-3192;98-98;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3733-3746;119-119;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[4174-4191;133-133;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[4322-4335;140-140;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparator(java.lang.Iterable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[2923-2989;72-72;12-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparator(java.util.Comparator[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[2296-2355;57-57;12-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[3716-3758;92-92;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[4177-4186;109-109;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1215-1260;34-34;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ReverseComparator(java.util.Comparator)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java;[1484-1533;40-40;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[1837-1911;57-58;20-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[3206-3231;85-85;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[2207-2231;61-61;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[2782-2810;75-75;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DefaultFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java;[1761-1781;47-47;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DefaultFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java;[2532-2574;65-65;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DefaultFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java;[1131-1174;31-31;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java;[1288-1311;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java;[1758-1780;46-46;14-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java;[2536-2578;64-64;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java;[2791-2814;74-74;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1135-1180;31-31;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1294-1317;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1850-1864;52-52;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1986-1999;60-60;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[3839-3863;84-84;12-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparator(org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[4136-4188;93-93;12-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[4734-4776;108-108;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[38935-38969;1005-1005;26-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[4860-4911;144-144;16-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[5174-5183;120-120;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1164-1209;32-32;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1323-1346;38-38;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1750-1770;49-49;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.LastModifiedFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java;[1817-1842;48-48;14-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.LastModifiedFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java;[2758-2800;69-69;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.LastModifiedFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1141-1189;31-31;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1303-1326;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[3524-3543;80-80;12-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparator(org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[3812-3859;89-89;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[4382-4424;103-103;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[4686-4695;113-113;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1154-1194;32-32;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1308-1331;38-38;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1735-1755;49-49;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[3523-3542;80-80;12-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparator(org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[3811-3858;89-89;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[4384-4426;104-104;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[4688-4697;114-114;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1154-1194;32-32;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1308-1331;38-38;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1735-1755;49-49;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ReverseComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java;[2068-2110;55-55;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.ReverseComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java;[2367-2376;65-65;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[3184-3203;80-80;12-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparator(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[3834-3887;95-95;12-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[4354-4396;110-110;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108018-108054;2580-2580;24-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparator.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[5215-5224;139-139;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparatorTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1242-1282;36-36;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1396-1419;42-42;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[2580-2606;75-75;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[2269-2289;66-66;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[1247-1264;31-31;23-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[1492-1514;39-39;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[1857-1897;50-50;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[2104-2113;60-60;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3945-3985;112-112;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[4480-4547;126-126;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[2772-2830;78-78;12-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3108-3143;89-89;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3507-3569;101-101;12-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[2390-2421;66-66;12-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[5157-5179;144-144;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[113831-113881;2734-2734;28-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AgeFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[5454-5463;155-155;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[1830-1844;51-51;12-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[2153-2203;62-62;12-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[2706-2774;77-77;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3101-3146;89-89;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3791-3813;119-119;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java;[1425-1441;40-40;13-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[4151-4192;135-135;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/IOFileFilter.java;[1769-1797;51-51;13-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3413-3461;103-103;20-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[4618-4627;153-153;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3268-3283;96-96;31-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3579-3630;110-110;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1419-1458;33-33;10-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1313-1368;34-34;12-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2145-2167;63-63;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2736-2766;93-93;20-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2249-2265;68-68;29-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2346-2361;73-73;27-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2441-2460;78-78;27-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2555-2570;83-83;38-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2648-2663;88-88;29-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2048-2073;58-58;35-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1627-1679;44-44;26-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1894-1954;53-53;26-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1510-1533;38-38;15-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2833-2850;97-97;16-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.CanReadFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java;[2696-2714;80-80;15-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.CanReadFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java;[2952-2974;91-91;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.CanWriteFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java;[2282-2301;68-68;15-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.CanWriteFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java;[2550-2572;79-79;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[984-1030;25-25;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8297-8319;175-175;31-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8233-8263;173-173;31-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8067-8083;167-167;40-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8124-8139;169-169;38-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8180-8199;171-171;38-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[7951-7966;163-163;49-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[8009-8024;165-165;40-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[7694-7719;157-157;46-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[7759-7805;159-159;37-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[7845-7899;161-161;37-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[3618-3690;75-75;24-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4378-4397;97-97;11-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5123-5143;127-127;11-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[2166-2174;52-52;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java;[1483-1498;44-44;24-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java;[1272-1311;36-36;10-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4154-4207;89-89;24-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[3914-3969;81-81;24-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1085-1222;29-30;24-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[],boolean[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[2974-3082;63-63;24-132];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[],boolean[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[3295-3405;69-69;24-134];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1451-1592;36-37;24-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3811-3842;84-84;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3115-3126;70-70;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java;[1741-1783;54-54;13-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2108-2150;59-59;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FilenameFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[1703-1749;46-46;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2516-2538;74-74;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2900-2940;90-90;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DelegateFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[3265-3274;104-104;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DirectoryFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java;[2110-2130;60-60;15-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.DirectoryFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java;[2331-2353;70-70;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.EmptyFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java;[2234-2250;67-67;15-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java;[2514-2536;78-78;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FalseFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java;[1730-1746;49-49;15-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java;[1890-1912;58-58;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java;[2125-2165;69-69;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java;[1741-1756;49-49;15-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java;[1947-1969;59-59;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1632-1668;49-49;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1922-2021;63-63;17-116];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1730-1736;54-54;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1814-1840;59-59;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18563-18594;529-529;32-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18990-19048;542-542;32-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[19428-19463;555-555;32-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[19867-19929;568-568;32-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[20397-20437;582-582;32-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[20937-21004;596-596;32-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35930-35959;842-842;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36404-36434;852-852;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28070-28110;653-653;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[1820-1833;49-49;12-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53773-53788;1316-1316;20-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[17690-17726;503-503;32-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FilenameFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18077-18117;515-515;32-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[2467-2503;65-65;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[3550-3593;93-93;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[2930-2969;78-78;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[6978-7009;181-181;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36979-37006;863-863;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[99618-99664;2353-2353;24-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53115-53138;1297-1297;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[1527-1543;45-45;12-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16902-16929;412-412;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[17258-17274;490-490;32-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[20666-20707;498-498;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15078-15111;420-420;32-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21289-21329;507-507;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15560-15592;435-435;32-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[7661-7688;198-198;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[46732-46765;1125-1125;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[3690-3738;106-106;20-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12416-12448;341-341;32-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[2585-2638;76-76;26-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47926-47973;1159-1159;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[17027-17042;480-480;32-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47287-47329;1141-1141;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[4187-4247;121-121;26-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[48895-48927;1185-1185;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[5375-5439;151-151;30-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[50154-50183;1219-1219;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[49532-49574;1202-1202;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[6490-6547;180-180;30-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51087-51118;1243-1243;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[8770-8833;242-242;29-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[52347-52375;1277-1277;16-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51734-51775;1260-1260;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[7621-7677;211-211;29-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35444-35472;832-832;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[10061-10112;320-320;36-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[58170-58251;1532-1533;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[2749-2840;82-83;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[86580-86669;2065-2065;24-113];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[15563-15603;437-437;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[3786-3832;113-113;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[24836-24882;697-697;32-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[6970-7035;201-201;12-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[],long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[25695-25760;718-718;32-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[4559-4605;138-138;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[23296-23342;657-657;32-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[71596-71689;1868-1868;24-117];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[5439-5504;162-162;12-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[24143-24208;678-678;32-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[45451-45487;1082-1082;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[26673-26711;740-740;32-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[27802-27845;774-774;32-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[28334-28372;789-789;32-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[27220-27258;757-757;32-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[3146-3181;86-86;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[3559-3624;97-97;12-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[4271-4310;113-113;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[2066-2098;58-58;12-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12845-12907;354-354;32-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[15342-15386;371-371;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[15902-15951;386-386;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16227-16275;395-395;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNot()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17261-17286;420-420;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[16692-16731;469-469;32-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[1547-1586;41-41;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53247-53263;1301-1301;20-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.toList(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15952-15988;448-448;38-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[2685-2752;75-75;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[2133-2182;60-60;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3246-3261;94-94;31-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3391-3439;101-101;20-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3557-3608;108-108;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[4050-4091;130-130;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[3261-3301;90-90;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[10741-10777;293-293;32-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[2096-2132;60-60;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[4468-4512;119-119;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[3732-3802;103-103;12-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[2545-2611;73-73;12-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[5010-5084;133-133;12-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[11195-11261;306-306;32-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[21448-21483;609-609;32-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[21885-21948;622-622;32-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[22411-22488;636-636;32-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[3326-3366;91-91;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[11587-11623;317-317;32-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[2166-2202;61-61;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[4531-4575;120-120;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[3795-3865;104-104;12-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[2618-2684;74-74;12-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[5073-5147;134-134;12-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12039-12105;330-330;32-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16551-16577;404-404;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[2452-2492;65-65;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[2877-2947;76-76;12-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[3478-3521;91-91;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[3939-4012;103-103;12-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[4696-4743;119-119;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,T)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[9893-9988;268-269;51-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[14047-14115;390-390;32-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[13207-13227;364-364;32-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[13522-13537;374-374;32-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[2443-2505;69-69;12-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[14558-14625;405-405;32-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SizeFileFilter(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[2165-2195;58-58;12-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SizeFileFilter(long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[2600-2658;71-71;12-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.HiddenFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java;[2154-2171;64-64;15-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.HiddenFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java;[2411-2433;75-75;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5323-5345;133-133;24-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5700-5732;148-148;21-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5470-5510;139-139;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5622-5632;144-144;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5803-5809;152-152;21-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.TrueFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java;[1717-1732;48-48;15-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4575-4597;103-103;24-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4952-4984;118-118;21-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java;[1874-1896;57-57;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4722-4762;109-109;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/TrueFileFilter.java;[2106-2146;68-68;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4874-4884;114-114;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5055-5061;122-122;21-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1922-2055;44-45;24-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[8137-8159;234-234;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[11396-11434;338-338;24-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[9214-9223;263-263;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[4755-4824;125-125;12-81];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[5377-5399;141-141;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[5572-5620;162-162;20-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[5864-5904;159-159;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NameFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[6245-6254;174-174;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[1978-2000;55-55;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[2320-2361;67-67;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.NotFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[2568-2577;77-77;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3079-3124;87-87;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3769-3791;117-117;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[4438-4447;145-145;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1416-1454;33-33;10-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2137-2159;63-63;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2729-2759;93-93;20-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2241-2257;68-68;29-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2338-2353;73-73;27-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2433-2452;78-78;27-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2548-2563;83-83;39-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2641-2656;88-88;29-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2041-2066;58-58;35-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1623-1675;44-44;26-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1888-1948;53-53;26-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1506-1529;38-38;15-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2826-2843;97-97;16-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[5613-5635;148-148;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[6299-6351;180-180;20-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[6139-6180;166-166;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.PrefixFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[6530-6539;181-181;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[1943-1979;57-57;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[3189-3242;90-90;12-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[2486-2552;72-72;12-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.isCaseSensitive()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[4292-4308;128-128;20-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[3650-3687;103-103;12-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[4132-4172;119-119;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilterTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1159-1200;31-31;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1454-1553;45-45;17-116];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1262-1268;36-36;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1346-1372;41-41;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SizeFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[3333-3355;92-92;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SizeFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[3622-3631;103-103;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[5672-5694;149-149;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkEndsWith(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[6883-6931;195-195;20-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[6192-6233;167-167;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.SuffixFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[6586-6595;182-182;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[5217-5294;131-131;12-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[6430-6452;164-164;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[50601-50690;1287-1287;27-116];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[5948-5988;148-148;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFileFilter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[6866-6875;180-180;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[4710-4732;130-130;20-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[48545-48610;1243-1243;27-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[4144-4184;109-109;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java;[1993-2038;63-63;10-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[4730-4780;131-131;12-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[5236-5291;146-146;12-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[6416-6532;177-178;12-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[10214-10311;273-274;12-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14124-14270;361-362;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[11976-12164;312-314;12-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URL)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[7539-7587;208-208;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URLConnection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[8410-8469;230-230;12-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[29134-29160;712-712;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[29597-29624;722-722;20-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15586-15659;403-403;16-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[20526-20743;509-511;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[17413-17553;447-448;12-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java;[2816-3000;70-71;12-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java;[2053-2196;51-52;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[24914-24988;602-603;19-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[24239-24290;586-586;19-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[23680-23727;571-571;19-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[4195-4214;115-115;26-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15509-15521;398-398;19-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[25811-25890;631-632;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[27031-27128;663-664;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15888-15913;413-413;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[17143-17231;440-441;18-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java;[3318-3333;82-82;24-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[3825-3840;110-110;19-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[4547-4570;133-133;19-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[3787-3827;103-103;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[2836-2998;77-78;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest$MockXmlStreamReader(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[2342-2409;51-51;9-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1094-1134;27-27;14-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[1185-1212;32-32;14-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1211-1359;30-31;22-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[1948-1989;46-46;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[1785-1825;46-46;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStream.afterRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[2970-3010;77-77;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[2593-2618;64-64;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClosedInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ClosedInputStream.java;[1326-1342;34-34;14-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStream.finalize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[3347-3373;90-90;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1045-1068;28-28;14-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest$1(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1312-1337;39-39;47-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest$1.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1387-1393;41-41;25-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1211-1217;37-37;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1501-1530;48-48;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1671-1699;55-55;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1970-2004;64-64;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[2502-2548;79-79;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[4656-4682;139-139;88-114];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream$1.compare(org.apache.commons.io.ByteOrderMark,org.apache.commons.io.ByteOrderMark)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[4706-4764;141-141;20-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.length()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[3685-3692;102-102;16-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[3574-3615;108-108;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[5428-5521;164-164;12-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[3991-4055;120-120;12-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[4369-4439;132-132;12-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[6238-6264;183-183;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[7267-7293;212-212;26-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[6779-6828;198-198;20-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[4471-4494;137-137;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9743-9774;289-289;21-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.get(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[3878-3895;112-112;16-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[10589-10613;314-314;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.readFirstBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9107-9141;263-263;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[12074-12114;358-358;16-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[11208-11266;333-333;16-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[8522-8559;249-249;19-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.getCharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[3503-3518;93-93;19-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[13202-13232;401-401;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.find()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9384-9389;273-273;27-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[12353-12377;369-369;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[12686-12711;382-382;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2073-2094;57-57;26-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2396-2420;70-70;20-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2177-2195;60-60;21-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2286-2311;65-65;21-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[1748-1765;49-49;14-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream(byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2875-2942;86-86;25-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream(byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[3358-3425;100-100;25-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[3841-3908;114-114;25-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream(byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[4374-4441;130-130;25-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[4907-4971;146-146;25-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[2481-2574;75-76;18-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[5520-5612;162-162;18-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[5845-5932;168-168;18-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6674-6735;187-187;18-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[4732-4757;145-145;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6949-6987;196-196;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7233-7274;204-204;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7554-7581;213-213;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7822-7862;223-223;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8130-8173;232-232;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9722-9762;272-272;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10050-10093;281-281;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10382-10429;290-290;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10742-10787;299-299;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11166-11213;310-310;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11596-11646;326-326;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12030-12078;342-342;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12442-12493;357-357;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12858-12886;372-372;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14424-14462;413-413;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14579-14620;418-418;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22122-22162;599-599;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22560-22600;608-608;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23254-23297;621-621;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23662-23705;629-629;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[5689-5744;152-152;12-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25061-25101;654-654;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25434-25480;662-662;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25811-25857;670-670;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26188-26221;678-678;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26485-26521;687-687;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26786-26826;696-696;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27204-27247;706-706;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27683-27716;717-717;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[2712-2751;75-75;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[2284-2340;62-62;12-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.isPropagateClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[6719-6736;216-216;20-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[6328-6342;204-204;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.available()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[5006-5035;151-151;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[3086-3110;87-87;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[3583-3621;104-104;16-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[4079-4147;118-118;16-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[5307-5316;163-163;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[4723-4759;140-140;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[5566-5591;173-173;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[6071-6095;194-194;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[5834-5859;184-184;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStream.setPropagateClose(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[7121-7167;229-229;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[1157-1197;32-32;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String,byte[],byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[3547-3615;85-85;18-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[2485-2516;63-63;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[26366-26420;727-727;26-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[1245-1277;36-36;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[1921-1999;60-60;12-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[3764-3788;114-114;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[4428-4483;137-137;16-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[2285-2310;71-71;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[3321-3365;99-99;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReader.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[2572-2597;81-81;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1135-1151;32-32;14-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest$1(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4830-4880;170-170;31-81];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest$1.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4930-4971;172-173;25-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.closeTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4702-4731;168-168;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.markReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3172-3232;107-107;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3462-3538;118-118;17-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.readMulti()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1825-1854;58-58;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2329-2368;75-75;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.readTillEnd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1357-1388;39-39;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.shortReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1596-1627;49-49;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BoundedReaderTest.skipTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4482-4510;159-159;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[1698-1716;50-50;12-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[1509-1554;43-43;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream.available()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[2153-2182;72-72;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[1937-1961;61-61;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[2399-2435;84-84;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[2813-2838;104-104;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[2618-2643;94-94;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[1005-1025;27-27;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[1149-1155;34-34;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.testAvailable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[1903-1917;62-62;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[2573-2583;89-89;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[1288-1297;39-39;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.testReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[2352-2362;80-80;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.BrokenInputStreamTest.testSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[2132-2141;71-71;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[4246-4313;110-110;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[3258-3347;86-86;12-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[2093-2183;61-61;12-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[3771-3839;98-98;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[9835-9849;263-263;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.available()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[7139-7168;202-202;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6027-6051;163-163;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[4550-4593;120-120;18-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6404-6442;177-177;16-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[4851-4907;130-130;16-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6520-6550;182-182;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[7594-7619;211-211;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[7759-7783;219-219;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[8122-8147;229-229;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[1262-1288;34-34;14-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[15661-15713;436-436;21-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13037-13088;380-380;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[1817-1841;51-51;25-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.Charsets.requiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/Charsets.java;[3338-3355;74-74;46-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[14405-14436;416-416;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13276-13330;386-386;18-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13801-13855;400-400;18-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[1922-2007;55-55;18-103];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[3845-3898;92-92;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4253-4305;102-102;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4467-4508;109-109;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4584-4654;113-113;18-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5154-5222;127-127;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6481-6526;163-163;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6604-6648;168-168;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6725-6769;173-173;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6846-6890;178-178;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6967-7011;183-183;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7088-7132;188-188;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7209-7253;193-193;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop(java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7321-7400;197-197;18-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7668-7707;206-206;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7782-7820;211-211;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7894-7952;216-216;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8120-8166;223-223;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8257-8317;228-228;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10925-11012;315-315;18-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8487-8535;235-235;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8705-8755;240-240;18-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9443-9491;261-261;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9637-9676;268-268;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9748-9784;273-273;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9853-9888;278-278;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10102-10151;287-287;18-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10427-10469;298-298;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10742-10789;309-309;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11617-11672;332-332;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11836-11880;339-339;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11968-12011;344-344;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12159-12204;349-349;18-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12667-12710;364-364;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12851-12885;371-371;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12952-12983;376-376;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[1647-1697;45-45;12-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[2265-2279;74-74;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[2499-2504;85-85;16-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[3035-3094;103-103;16-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[4792-4801;163-163;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[4186-4203;142-142;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[1904-1910;53-53;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[2080-2109;64-64;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReader.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[3944-3950;131-131;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1161-1182;32-32;14-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.checkArray(char[],char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[4340-4393;125-125;18-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[4048-4119;118-118;18-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1268-1297;36-36;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testMark()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1694-1722;51-51;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1490-1525;44-44;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2591-2619;80-80;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2949-2986;91-91;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[3548-3592;107-107;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CharSequenceReaderTest.testSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2089-2117;65-65;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java;[1832-1991;48-50;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(java.io.ObjectStreamClass)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java;[2488-2597;65-66;24-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java;[3413-3511;88-89;24-34];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test(int,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[3607-3627;106-106;9-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equalObject(java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[4103-4127;122-122;25-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equals(java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[3756-3775;112-112;24-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.hashCode()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[4300-4309;129-129;20-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$E()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[3401-3401;96-96;25-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[1256-1306;34-34;12-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[1582-1612;44-44;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[2184-2210;61-61;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[4383-4412;134-134;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5008-5037;152-152;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testPrimitiveLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[2783-2818;78-78;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5647-5686;170-170;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java;[1500-1543;39-39;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java;[1799-1805;49-49;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1047-1072;28-28;14-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStreamTest$1(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1330-1355;41-41;24-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStreamTest$1.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1405-1411;43-43;25-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1252-1258;39-39;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CloseShieldInputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1575-1604;51-51;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClosedInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ClosedInputStream.java;[1627-1632;47-47;16-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClosedInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java;[948-968;24-24;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ClosedInputStreamTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java;[1006-1032;26-26;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[1519-1559;43-43;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[3011-3020;89-89;16-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.getByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[4343-4356;125-125;30-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.resetCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[3691-3702;107-107;16-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.resetByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[4758-4773;139-139;30-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[2034-2075;59-59;30-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3976-4013;116-116;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStream.afterRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[2394-2415;72-72;33-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1261-1302;35-35;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testCounting()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2709-2749;76-76;16-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2144-2168;57-57;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3393-3463;97-97;16-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testEOF1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5360-5386;156-156;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testEOF2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5895-5921;172-172;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testEOF3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6284-6310;184-184;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[2869-2900;81-81;12-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullOutputStream.java;[1196-1211;30-30;14-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[82972-83063;2135-2136;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[4577-4602;144-144;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testResetting()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4214-4247;122-122;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4560-4593;132-132;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4957-4990;144-144;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.DemuxInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/DemuxInputStream.java;[1155-1170;30-30;14-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.DemuxInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/DemuxInputStream.java;[2195-2227;71-72;16-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/DemuxInputStream.java;[1507-1543;41-41;24-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.DemuxInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/DemuxInputStream.java;[1821-1854;54-55;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream(long,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[3398-3491;96-96;12-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[5311-5325;172-172;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.available()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[4131-4141;126-126;16-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.doEndOfFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[10697-10729;332-332;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.processByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[9902-9914;305-305;19-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[5834-5858;187-187;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[6594-6636;210-210;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[7318-7396;228-228;16-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.processBytes(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[10316-10383;320-320;20-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.getPosition()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[3733-3745;107-107;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.getSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[3934-3942;116-116;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[9225-9273;282-282;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[4937-4961;158-158;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[8189-8214;254-254;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[7803-7837;222-222;16-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[7891-7987;225-225;16-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[8100-8112;229-229;23-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processBytes(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[8210-8277;233-233;24-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[1165-1202;32-32;12-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[1267-1290;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[1357-1383;42-42;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testEOFException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[3923-3957;115-115;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[4395-4429;128-128;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[6065-6103;179-179;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[1436-1462;46-46;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testReadByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[2479-2514;72-72;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullInputStreamTest.testSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[6847-6873;199-199;16-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[2826-2852;81-81;12-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader(long,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[3338-3426;96-96;12-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[4820-4834;155-155;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.doEndOfFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[10296-10328;315-315;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.processChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[9481-9493;288-288;19-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[5353-5377;170-170;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.read(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[6128-6170;193-193;16-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[6877-6955;211-211;16-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.processChars(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[9915-9982;303-303;20-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.getPosition()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[3668-3680;107-107;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.getSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[3858-3866;116-116;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[8799-8847;265-265;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[4081-4106;127-127;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[4446-4470;141-141;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReader.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[7748-7773;237-237;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest$TestNullReader(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7494-7523;219-219;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7577-7668;222-222;16-107];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest$TestNullReader.processChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7781-7793;226-226;23-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest$TestNullReader.processChars(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7891-7958;230-230;24-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1145-1177;32-32;12-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1242-1265;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1332-1358;42-42;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testEOFException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[3639-3673;112-112;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testMarkAndReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[4107-4141;125-125;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[5777-5815;176-176;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1411-1437;46-46;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testReadCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[2197-2232;69-69;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.NullReaderTest.testSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[6554-6580;196-196;16-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[5614-5628;180-180;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.available()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[4379-4408;131-131;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[7801-7857;236-236;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.beforeRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[6515-6556;202-202;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.afterRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[7406-7446;223-223;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[5051-5075;158-158;30-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyInputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[5282-5307;167-167;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[1620-1650;44-44;12-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.markSupported()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[6290-6304;203-203;20-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.ready()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[4909-4934;149-149;20-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[8443-8499;257-257;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[1974-1998;55-55;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.beforeRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[7191-7232;225-225;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.afterRead(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[8065-8105;245-245;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.read(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[2548-2588;74-74;16-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3241-3310;95-95;16-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3887-3934;115-115;16-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.skip(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[4497-4534;134-134;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5255-5280;163-163;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5618-5655;177-177;30-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReader.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5958-5983;190-190;30-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2304-2334;75-75;9-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2409-2451;79-79;20-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read(java.nio.CharBuffer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2560-2607;83-83;20-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2108-2142;68-68;9-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1135-1168;32-32;12-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1692-1728;54-54;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[7793-7830;185-185;12-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[6537-6597;151-151;12-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[7337-7400;173-173;12-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[6928-7013;162-162;12-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[5994-6076;136-136;12-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.CharsetEncoder,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[5407-5496;120-120;12-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.CharsetEncoder)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[5008-5075;108-108;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[10971-10995;276-276;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream.fillBuffer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[8053-8083;195-195;18-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[10644-10682;264-264;16-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[9335-9391;226-226;16-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[11465-11490;294-294;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[1115-1135;30-30;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4956-5007;138-138;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3603-3652;99-99;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[2120-2209;57-57;18-107];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3322-3373;89-89;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[1578-1669;44-44;18-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3923-3953;110-110;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4426-4467;123-123;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3747-3794;104-104;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3470-3514;94-94;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3185-3231;84-84;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader$FilePart(long,int,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[8089-8185;215-215;17-113];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[13141-13196;344-344;21-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[10316-10344;268-268;24-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.createLeftOver()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[12461-12476;325-325;22-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[9342-9370;243-243;26-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[2181-2239;64-64;12-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[3291-3394;96-96;12-115];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6397-6499;158-158;12-114];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/Charsets.java;[4677-4707;107-107;27-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/Charsets.java;[4173-4204;94-94;27-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[2611-2692;78-78;12-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6793-6821;168-168;19-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[7597-7622;195-195;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize(java.lang.Integer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[1971-2044;52-52;12-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.blockSizes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[1750-1761;45-45;41-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[9410-9480;190-190;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[9048-9136;183-183;17-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8636-8741;174-174;18-123];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[2909-2921;68-68;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4590-4643;104-104;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6288-6366;133-133;17-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3086-3145;77-77;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7297-7407;150-150;17-127];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5709-5765;125-125;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4947-5002;111-111;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5328-5383;118-118;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4228-4280;97-97;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3850-3910;90-90;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3465-3530;84-84;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6867-6974;143-143;17-124];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8333-8400;169-169;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7987-8055;163-163;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile(java.lang.String,java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[2823-2928;71-71;12-117];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.blockSizes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[1554-1565;46-46;40-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[4024-4036;101-101;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[3104-3179;78-78;17-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1148-1180;30-30;14-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1274-1286;35-35;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1451-1529;44-44;17-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2409-2476;60-60;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2077-2145;54-54;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[1530-1578;46-46;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readBoolean()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[1886-1939;57-58;20-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[2252-2302;69-70;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[2618-2668;81-82;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[6155-6206;196-197;18-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[2973-3025;93-94;19-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[17672-17740;467-468;26-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readFloat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[3346-3397;105-106;18-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[16760-16827;441-442;25-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readInt()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[4983-5032;159-160;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[13364-13433;346-347;23-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[6537-6595;208-209;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[6896-6955;220-221;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[12190-12265;313-314;23-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.skipBytes(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[7796-7864;246-247;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[5362-5412;171-172;19-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readUTF()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[7293-7342;232-233;19-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[5786-5836;184-185;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[15745-15811;411-412;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[11700-11767;299-300;25-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[3755-3825;118-119;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[4263-4369;134-135;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1296-1340;38-38;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1402-1408;43-43;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1765-1774;59-59;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1827-1862;63-63;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2313-2345;77-77;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2424-2456;81-81;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2544-2578;85-85;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2702-2735;89-89;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2846-2879;93-93;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3082-3113;101-101;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3197-3229;105-105;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3427-3459;113-113;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3553-3586;117-117;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3942-3973;129-129;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3676-3716;121-121;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3803-3844;125-125;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[4169-4202;137-137;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[2699-2740;76-76;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3026-3061;87-87;20-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[2478-2534;65-65;27-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStream.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3968-4024;112-112;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[3977-4045;111-111;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3623-3682;101-101;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[3485-3582;93-94;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1114-1134;31-31;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1172-1188;33-33;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1655-1672;46-46;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[9059-9229;249-250;12-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListener.init(org.apache.commons.io.input.Tailer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListener.java;[1203-1221;32-32;10-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[5320-5373;177-177;12-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[5721-5798;187-187;12-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[6267-6363;198-198;12-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[7558-7673;222-222;12-127];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[6926-7044;210-210;12-130];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[8257-8394;235-235;12-149];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.getRun()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14565-14572;381-381;23-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.getFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14379-14387;371-371;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.getDelay()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14725-14734;390-390;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[19260-19318;503-503;18-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListener.handle(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListener.java;[1862-1880;57-57;10-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[10315-10353;298-298;24-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[11578-11750;306-307;26-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14160-14213;362-362;26-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[12445-12541;324-324;26-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[13715-13792;350-350;26-103];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[9996-10111;274-274;26-141];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[13148-13266;338-338;26-144];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[10727-10876;289-290;26-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListener.fileNotFound()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListener.java;[1382-1395;39-39;10-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListener.fileRotated()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListener.java;[1685-1697;49-49;10-22];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListener.handle(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListener.java;[2041-2060;65-65;10-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.stop(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[18820-18842;484-484;18-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.Tailer.stop()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[18995-19000;492-492;17-22];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[998-1018;25-25;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter.fileNotFound()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[1364-1377;38-38;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter.fileRotated()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[1611-1623;47-47;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter.handle(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[1861-1886;61-61;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter.handle(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[1732-1756;54-54;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerListenerAdapter.init(org.apache.commons.io.input.Tailer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TailerListenerAdapter.java;[1235-1259;32-32;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[15964-15981;408-408;26-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16471-16480;425-425;29-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.clear()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16541-16547;429-429;21-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.fileNotFound()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16830-16843;441-441;21-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.fileRotated()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16951-16963;445-445;21-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.handle(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16609-16633;433-433;21-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.handle(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16375-16399;421-421;21-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest$TestTailerListener.init(org.apache.commons.io.input.Tailer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[16695-16719;437-437;21-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1766-1794;51-51;12-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[10108-10178;266-267;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1859-1885;56-56;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testBufferBreak()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.writeString(java.io.File,java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11290-11360;304-304;18-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testIO335()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testInterrupt()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[12613-12644;336-336;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testLongFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[8652-8684;243-243;24-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testMultiByteBreak()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[7884-7915;217-217;24-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testStopWithNoFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11658-11694;316-316;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[13813-13862;358-358;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testTailer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.write(java.io.File,java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[10892-10953;291-291;18-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[77425-77492;1846-1846;32-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TailerTest.testTailerEof()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[2323-2388;61-61;12-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[2984-3089;76-77;12-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[3997-4021;109-109;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream.read(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[5142-5182;145-145;16-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream.read(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[4588-4657;128-128;16-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[3505-3530;91-91;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1049-1066;28-28;14-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1240-1263;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testMarkReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[3066-3097;88-88;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testReadEverything()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1752-1788;52-52;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testReadNothing()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1468-1501;43-43;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1590-1623;47-47;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testReadToArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[2035-2068;60-60;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[2404-2447;70-70;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.TeeInputStreamTest.testSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[2795-2821;80-80;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream(java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[1530-1607;46-46;12-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[2630-2663;89-89;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[2077-2101;66-66;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[1728-1762;51-51;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[3014-3039;105-105;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[3177-3197;114-114;30-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[990-1018;26-26;14-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[2144-2185;75-75;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[2254-2311;79-79;20-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crAtEnd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1848-1873;64-64;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyEnsureAtEof()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1568-1611;50-51;17-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyNotAtEof()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1707-1747;57-58;17-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.inTheMiddleOfTheLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1169-1207;35-35;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.multipleBlankLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1303-1339;40-40;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1962-1994;70-70;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1049-1079;30-30;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1441-1472;45-45;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream(java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[1560-1640;45-45;12-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[2732-2740;88-88;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[2110-2134;65-65;16-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[1761-1795;50-50;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[3212-3237;109-109;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStream.mark(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[3375-3395;118-118;30-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[990-1021;26-26;14-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[2076-2117;65-65;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[2186-2243;69-69;20-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.inTheMiddleOfTheLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1173-1211;33-33;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1586-1618;48-48;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.malformed()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1764-1791;55-55;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.multipleBlankLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1311-1347;38-38;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1890-1922;60-60;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1051-1081;28-28;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1455-1486;43-43;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[5183-5233;137-137;12-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[6869-6947;183-183;12-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[8132-8240;215-215;12-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[17196-17312;423-424;20-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[11832-11929;295-296;12-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[15678-15798;376-377;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[13587-13737;334-335;12-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[18247-18394;450-451;20-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.net.URL)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[9313-9361;240-240;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[10241-10330;263-263;12-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[30935-30961;759-759;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[31487-31514;774-774;20-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[16432-16505;399-399;16-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[26823-26870;654-654;19-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[27589-27640;678-678;19-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[20455-20573;507-508;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[2144-2265;59-60;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[28684-28773;704-705;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[3346-3361;92-92;19-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[3587-3607;101-101;19-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[4654-4673;121-121;19-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[15993-16005;386-386;19-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[16734-16759;409-409;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[4166-4185;121-121;19-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1312-1330;36-36;14-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[21184-21318;430-431;27-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[22133-22242;458-459;20-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14848-15030;300-302;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[16811-16941;337-338;20-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[17475-17628;351-352;20-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[15931-16059;320-321;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4642-4757;133-134;20-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4076-4131;120-120;20-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[2772-2831;70-70;20-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[18257-18299;368-368;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testHttp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[7022-7048;191-191;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14361-14394;291-291;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40757-40803;1091-1091;26-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6257-6290;168-168;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6641-6674;179-179;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[5433-5465;152-152;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[13875-13907;281-281;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomCp1047()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3972-4008;116-116;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomIso8859_1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3854-3893;111-111;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUsAscii()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3176-3213;81-81;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16BE()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3398-3435;91-91;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16LE()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3512-3549;96-96;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32BE()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3626-3663;101-101;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3740-3777;106-106;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3290-3324;86-86;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[19557-19624;328-328;9-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[17605-17807;298-299;22-104];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11342-11490;216-217;22-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[4897-4950;104-104;18-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3310-3386;69-69;18-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3992-4064;83-83;18-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[16596-16817;284-285;18-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[10567-10734;204-205;18-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5557-5611;122-122;18-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[4231-4242;88-88;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[12822-12867;243-243;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[15134-15184;268-268;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[8624-8682;175-175;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[9600-9658;190-190;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5736-5785;127-127;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[6954-7006;145-145;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[7752-7871;161-161;18-137];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[7364-7421;154-154;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[2176-2200;51-51;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3561-3581;74-74;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5074-5086;109-109;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1757-1798;54-54;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[5807-5822;150-150;20-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[6572-6623;172-172;20-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[3073-3095;94-94;29-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[2670-2692;76-76;29-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[3476-3498;112-112;29-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[3277-3293;103-103;29-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[2869-2885;85-85;29-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[3675-3691;121-121;29-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[3491-3531;107-107;20-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[2853-2912;86-86;20-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[7009-7081;176-176;12-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[9340-9389;242-242;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[1103-1131;28-28;14-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.initialize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[71149-71203;1673-1673;24-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[3273-3299;98-98;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[1893-1942;44-44;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.clear()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[2312-2318;62-62;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[4059-4097;139-139;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[3849-3887;130-130;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[4269-4307;148-148;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onFileChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[4638-4666;166-166;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[4464-4492;157-157;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[4812-4840;175-175;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[2134-2179;53-53;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.CollectionFileListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[5023-5067;184-184;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[1680-1718;51-51;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[1503-1541;43-43;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[1857-1895;59-59;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[2171-2199;75-75;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[2019-2047;67-67;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[2323-2351;83-83;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStart(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[1319-1364;35-35;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStop(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListenerAdaptor.java;[2512-2556;91-91;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[1655-1677;42-42;12-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[1905-1946;52-52;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[2276-2360;63-63;12-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[3084-3133;95-95;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[3763-3776;119-119;45-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[2656-2668;77-77;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[3376-3428;106-106;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[5480-5484;179-179;17-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(java.util.concurrent.ThreadFactory)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[2834-2884;86-86;30-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.start()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[3960-3983;128-128;30-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.stop()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[4562-4584;149-149;30-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitor.stop(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[4974-5019;161-161;30-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.destroy()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10636-10661;289-289;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1198-1245;34-34;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String,java.io.File,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[5819-5894;173-173;18-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1348-1371;40-40;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[5537-5586;135-135;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1524-1547;48-48;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[6698-6741;166-166;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[7491-7593;188-188;12-114];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[8029-8136;200-200;15-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[2483-2508;63-63;12-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String,java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[5866-5944;145-145;12-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[6370-6478;157-157;12-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[5691-5699;174-174;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[8983-8996;223-223;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[9166-9180;233-233;23-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[15497-15522;429-429;20-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.getListeners()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[9940-9953;265-265;45-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[16100-16109;449-449;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[4661-4693;127-127;22-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[3607-3630;96-96;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setChildren(org.apache.commons.io.monitor.FileEntry[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[5489-5527;165-165;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[1336-1381;36-36;10-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getChildren()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[5274-5286;156-156;24-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.isExists()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[6959-6968;240-240;20-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[2361-2405;85-85;10-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14423-14469;395-395;18-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14943-14973;412-412;18-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.isDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[7389-7401;259-259;20-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[1496-1534;43-43;10-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[1940-1968;64-64;10-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[1802-1840;57-57;10-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[2196-2224;78-78;10-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[1649-1687;50-50;10-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationListener.onFileChange(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationListener.java;[2068-2096;71-71;10-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserver.removeListener(org.apache.commons.io.monitor.FileAlterationListener)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[9604-9656;253-253;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1316-1364;37-37;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[18203-18235;397-397;20-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1468-1491;43-43;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[68486-68515;1596-1596;27-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[2636-2649;75-75;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[2727-2776;73-73;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getLevel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[4985-4994;145-145;16-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[5830-5838;183-183;19-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getLastModified()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[6186-6202;202-202;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[6593-6603;221-221;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.getParent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[4854-4864;136-136;22-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setDirectory(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[7591-7627;268-268;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setExists(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[7166-7196;250-250;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setLastModified(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[6410-6449;212-212;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setLength(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[6731-6758;230-230;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.monitor.FileEntry.setName(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[5968-5993;192-192;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStream(T)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/AppendableOutputStream.java;[1519-1554;41-41;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStream.getAppendable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/AppendableOutputStream.java;[1937-1951;60-60;14-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/AppendableOutputStream.java;[1750-1780;51-51;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1099-1124;29-29;14-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1213-1236;34-34;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStreamTest.testWriteInt()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1568-1598;48-48;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.AppendableOutputStreamTest.testWriteStringBuilder()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1351-1391;39-39;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[1670-1689;50-50;12-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStream(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[1480-1526;43-43;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[2314-2339;81-81;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[2119-2144;71-71;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[1913-1949;61-61;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[1008-1029;27-27;14-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[1154-1160;34-34;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[2135-2145;71-71;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStreamTest.testFlush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[1914-1924;62-62;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.BrokenOutputStreamTest.testWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[1294-1304;39-39;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[3295-3317;79-79;12-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[3589-3625;90-90;12-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[4052-4084;106-106;18-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[12964-12976;361-361;32-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[7707-7712;213-213;29-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[6951-6996;192-192;29-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[10215-10291;290-291;31-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[11237-11323;317-318;31-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[12049-12063;336-336;37-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[13820-13829;389-389;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[14352-14413;403-403;19-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[14792-14822;416-416;19-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[8127-8152;226-226;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.reset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[8272-8278;233-233;30-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[5105-5155;139-139;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[6187-6204;171-171;30-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[9038-9087;257-257;30-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1332-1379;41-41;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(byte[],byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2299-2341;72-72;28-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1427-1560;45-47;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1948-2090;62-64;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2527-2585;81-81;18-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2844-2962;90-92;18-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedOutputStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java;[2096-2141;62-62;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedOutputStream(java.io.OutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java;[1723-1783;49-49;12-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java;[2305-2368;70-70;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedWriter(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedWriter.java;[2051-2084;61-61;12-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedWriter(java.io.Writer,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedWriter.java;[1699-1747;49-49;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ChunkedWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedWriter.java;[2248-2311;69-69;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java;[1514-1560;39-39;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[1620-1662;41-41;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java;[1820-1826;49-49;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ClosedOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ClosedOutputStream.java;[1315-1332;33-33;14-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1013-1039;27-27;14-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStreamTest$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1237-1259;37-37;24-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStreamTest$1.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1309-1315;39-39;25-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1204-1210;36-36;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1480-1509;47-47;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ClosedOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ClosedOutputStream.java;[1681-1717;47-47;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ClosedOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java;[979-1000;26-26;14-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ClosedOutputStreamTest.testRead()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java;[1100-1109;31-31;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[1455-1500;40-40;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream.getCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[2407-2416;68-68;16-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream.getByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[3739-3752;104-104;30-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream.resetCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[3087-3098;86-86;16-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream.resetByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[4154-4169;118-118;30-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStream.beforeWrite(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[1831-1854;53-53;33-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1231-1273;36-36;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String,byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[3895-3985;110-110;18-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[1967-2005;52-52;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2395-2436;68-68;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2969-3039;87-87;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[3713-3738;115-115;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[3149-3216;99-99;12-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File,java.lang.String,java.lang.String,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[4569-4700;134-134;13-144];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[2466-2510;73-73;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[3750-3858;116-116;12-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[6505-6516;195-195;20-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[5431-5451;200-200;20-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[6923-6931;209-209;19-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.getFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[7724-7732;233-233;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.getStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[5380-5409;158-158;28-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[7942-7967;245-245;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4457-4482;154-154;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[5829-5865;173-173;20-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[8308-8357;259-259;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[81112-81186;2088-2088;23-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[9477-9513;270-270;24-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1646-1692;50-50;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3803-3872;126-126;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[11538-11574;349-349;18-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[10930-10948;328-328;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3240-3279;107-107;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DemuxOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DemuxOutputStream.java;[1108-1124;28-28;14-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DemuxOutputStream.java;[1467-1505;39-39;25-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DemuxOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DemuxOutputStream.java;[1781-1814;52-53;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DemuxOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DemuxOutputStream.java;[2112-2145;68-69;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.DemuxOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DemuxOutputStream.java;[2495-2542;85-86;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[5680-5760;140-140;12-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[6208-6310;153-153;12-114];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[9040-9130;222-222;28-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[6716-6797;166-166;12-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[7245-7348;179-179;12-115];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[7754-7842;192-192;12-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[8290-8400;205-205;12-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[2431-2517;65-65;12-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[3000-3108;78-78;12-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[3515-3602;90-90;12-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[4085-4194;103-103;12-121];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.CharsetEncoder)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[4601-4695;115-115;12-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.CharsetEncoder,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[5178-5294;128-128;12-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[12379-12404;328-328;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[12200-12225;319-319;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.write(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[10968-11009;276-276;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[11322-11392;288-288;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[10713-10751;266-266;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[11614-11655;298-298;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[11964-12034;310-310;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[1572-1616;45-45;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[1678-1684;50-50;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2450-2476;71-71;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5903-5934;177-177;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5407-5449;162-162;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6404-6453;192-192;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6925-6978;207-207;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[4115-4201;118-119;20-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[4164-4217;110-110;12-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[5185-5282;137-137;12-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[4570-4645;122-122;12-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6968-7089;180-181;12-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6342-6418;165-165;12-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[8532-8664;221-222;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[5700-5777;150-150;12-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.forceMkdir(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[103124-103174;2451-2451;24-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[9105-9154;234-234;18-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.createLock()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[9607-9637;250-250;18-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[10295-10386;270-270;20-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[2787-2846;73-73;12-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[3721-3824;98-98;12-115];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[3203-3284;85-85;12-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[11586-11611;304-304;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[13445-13470;372-372;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.write(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[12217-12258;329-329;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[12570-12640;341-341;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[11963-12001;319-319;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.write(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[12861-12902;351-351;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriter.write(java.lang.String,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[13210-13280;363-363;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[1519-1559;42-42;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[1621-1627;47-47;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[1968-1977;56-56;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[3957-3997;108-108;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6699-6730;182-182;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6091-6152;165-165;17-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7261-7310;199-199;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7843-7896;216-216;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[2162-2196;63-63;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[5192-5229;138-138;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStream.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullOutputStream.java;[2020-2059;63-63;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullOutputStream.java;[1579-1629;44-44;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullOutputStream.java;[1799-1816;53-53;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1150-1188;34-34;12-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullOutputStreamTest.testNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1236-1264;38-38;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[1357-1368;39-39;12-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.append(char)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[1567-1586;49-49;19-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[2290-2319;75-75;19-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[1975-2036;63-63;19-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[3770-3776;137-137;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[3661-3667;131-131;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.write(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[2714-2736;94-94;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[3000-3051;105-105;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[2517-2536;85-85;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.write(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[3225-3247;114-114;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriter.write(java.lang.String,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/NullWriter.java;[3507-3558;125-125;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriterTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1106-1138;29-29;12-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.NullWriterTest.testNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[5118-5159;153-153;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[4459-4501;136-136;20-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[5497-5553;165-165;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[3399-3424;102-102;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1013-1033;27-27;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1201-1223;35-35;24-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest$1.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1272-1312;37-37;25-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1168-1174;34-34;20-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest.testWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1503-1530;46-46;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1681-1722;52-52;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[1573-1603;40-40;12-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.append(char)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[1960-1998;53-53;19-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[7450-7492;242-242;20-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[8109-8150;259-259;20-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[8488-8544;271-271;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3211-3259;93-93;19-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[2620-2700;74-74;19-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[6704-6729;221-221;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[6390-6415;208-208;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.write(char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4216-4257;131-131;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4857-4927;154-154;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3783-3821;115-115;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5331-5372;170-170;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5960-6030;193-193;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1053-1086;28-28;12-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[1699-1719;42-42;12-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[4743-4752;162-162;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[4153-4192;128-128;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testNullString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testWriteString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[1975-2013;51-51;12-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter(java.lang.StringBuilder)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[2342-2389;62-62;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.append(char)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[2656-2679;73-73;19-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[2928-2959;85-85;19-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[3342-3405;99-99;19-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.getBuilder()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[4542-4553;152-152;26-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[3569-3575;108-108;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[3693-3699;116-116;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[4257-4317;141-141;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriter.write(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java;[3873-3897;127-127;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1230-1271;32-32;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2159-2193;59-59;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2401-2443;66-66;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2646-2695;73-73;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1319-1366;36-36;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1911-1954;52-52;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testClose()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2934-2944;80-80;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3270-3303;92-92;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3633-3671;103-103;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3978-4023;112-112;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[4314-4349;121-121;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[4614-4656;130-130;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStream(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[2710-2753;76-76;12-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3039-3074;87-87;20-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStream.handleIOException(java.io.IOException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3980-4036;112-112;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3636-3695;101-101;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1080-1101;30-30;14-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1139-1156;32-32;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream(java.io.OutputStream,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[1430-1495;39-39;12-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[3220-3245;101-101;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2680-2705;84-84;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[1740-1779;50-50;30-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2120-2189;63-63;30-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2454-2490;74-74;30-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1140-1176;32-32;26-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1249-1274;35-35;21-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1357-1388;40-40;26-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1486-1511;45-45;21-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1597-1634;51-51;12-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String,byte[],byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[4065-4145;112-112;18-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1864-1891;59-59;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[2560-2585;75-75;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.TeeOutputStreamTest.testTee()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.getThreshold()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4907-4920;176-176;16-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[6898-6927;249-249;37-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.getByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[5126-5139;187-187;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[6010-6059;219-219;20-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[7241-7277;259-259;29-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4181-4206;141-141;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[6405-6420;232-232;20-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.ThresholdingOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[2850-2886;90-90;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[9410-9448;198-198;12-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset,int,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[6611-6726;139-139;12-127];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[8817-8881;185-185;12-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String,int,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[8233-8351;173-173;12-130];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[7380-7441;157-157;12-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[5606-5728;120-120;12-134];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.CharsetDecoder)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[4745-4813;103-103;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11463-11488;265-265;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.processInput(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11783-11839;277-277;18-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.flushOutput()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[12650-12681;302-302;18-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11089-11114;253-253;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.write(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[10445-10484;231-231;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[9864-9921;211-211;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStream.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[10706-10742;242-242;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[972-993;25-25;14-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testFlush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3883-3912;105-105;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2956-3006;76-76;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1923-2013;50-50;18-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2691-2743;68-68;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1453-1545;39-39;18-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3485-3533;92-92;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3350-3400;88-88;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3751-3799;100-100;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3616-3666;96-96;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3223-3269;84-84;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3092-3140;80-80;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2831-2876;72-72;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2562-2609;64-64;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[4282-4322;115-115;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[2764-2824;83-83;12-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[3224-3314;96-96;12-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[2302-2370;70-70;12-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[1955-1993;59-59;12-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[3660-3679;114-114;19-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.getEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[3499-3511;105-105;19-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[3887-3912;124-124;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.detectEncoding(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[4694-4787;153-154;18-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[4307-4332;139-139;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriter.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[7115-7187;211-211;17-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[1071-1089;28-28;14-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[1649-1706;41-41;27-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2002-2118;50-51;25-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2536-2622;62-63;25-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2703-2819;67-68;25-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3669-3708;93-93;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4923-4961;133-133;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4811-4849;129-129;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testEmpty()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3328-3357;82-82;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4692-4731;125-125;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4460-4498;117-117;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4576-4614;121-121;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3154-3189;77-77;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4228-4267;109-109;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4116-4153;105-105;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4344-4383;113-113;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4006-4042;101-101;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[2372-2404;72-72;22-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[6088-6158;170-170;20-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(char[],java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[7031-7101;196-196;20-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[4412-4488;125-126;18-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[7704-7757;214-214;20-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[8090-8137;225-225;20-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[3086-3161;92-92;20-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[8472-8525;236-237;20-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java;[1205-1251;34-34;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnCloseInputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java;[1358-1383;40-40;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1400-1512;39-39;12-124];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1958-1983;56-56;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1704-1729;47-47;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[2153-2157;63-63;17-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[2847-2905;76-76;12-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.getBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[4056-4065;121-121;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.hashCode()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[5063-5072;160-160;16-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMark.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[5378-5387;174-174;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1418-1457;36-36;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1560-1576;41-41;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1953-1978;48-48;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testEquals()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[3574-3585;81-81;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testErrors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[4664-4675;102-102;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testGet()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[2725-2733;64-64;17-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[3169-3182;74-74;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testHashCode()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[4300-4313;94-94;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[2454-2465;57-57;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ByteOrderMarkTestCase.testToString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[5619-5632;130-130;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.Charsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/Charsets.java;[2585-2592;56-56;14-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[1110-1125;31-31;14-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testIso8859_1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[1997-2011;48-48;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testRequiredCharsets()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[1159-1180;34-34;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testToCharset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[2124-2138;53-53;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testUsAscii()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[2632-2644;62-62;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testUtf16()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[2819-2829;68-68;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testUtf16Be()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[3000-3012;74-74;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testUtf16Le()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[3187-3199;80-80;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CharsetsTestCase.testUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[3374-3383;86-86;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[5457-5467;123-123;12-22];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[8184-8299;193-196;23-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[9050-9154;218-221;23-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(byte[],java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[5930-6011;135-136;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[6685-6760;154-155;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[10077-10186;246-249;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[7405-7544;171-175;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[10934-11078;265-269;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[11858-11968;289-292;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[12873-13018;312-316;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[13937-14047;339-342;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[15013-15158;364-368;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[15905-15984;387-388;24-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[1976-2011;54-54;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2235-2258;63-63;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2299-2325;67-67;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3607-3663;101-101;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5461-5519;142-142;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.CopyUtilsTest.testCtor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2510-2519;74-74;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase$ReaderThread(java.lang.String,java.io.InputStream,org.apache.commons.io.input.DemuxInputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[5527-5658;161-163;9-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase$ReaderThread.getData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[5788-5796;170-170;23-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase$ReaderThread.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[5897-5901;176-176;21-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase$WriterThread(java.lang.String,java.lang.String,java.io.OutputStream,org.apache.commons.io.output.DemuxOutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[6725-6900;207-210;9-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase$WriterThread.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[7086-7090;219-219;21-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[1364-1376;37-37;14-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2414-2448;62-62;20-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2160-2195;53-53;20-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.doJoin()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2974-3006;82-83;18-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.doStart()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2642-2675;70-71;18-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.startReader(java.lang.String,java.lang.String,org.apache.commons.io.input.DemuxInputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[3753-3918;106-109;18-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String,java.lang.String,org.apache.commons.io.output.DemuxOutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[3304-3470;94-97;18-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.testInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DemuxTestCase.testOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[24751-24799;599-599;16-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker$CancelException(java.lang.String,java.io.File,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[25252-25322;612-612;16-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker$CancelException.getDepth()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[25830-25839;632-632;20-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker$CancelException.getFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[25604-25612;623-623;21-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[9829-9845;265-265;15-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[10509-10570;281-281;15-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[11472-11563;300-300;15-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[20267-20368;488-488;23-124];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[17815-17926;434-435;23-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.filterDirectoryContents(java.io.File,int,java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[21599-21699;519-519;22-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[16081-16178;393-393;26-123];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[18651-18793;453-454;20-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[23304-23408;561-561;20-124];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[20909-21015;503-503;20-126];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[23752-23808;573-573;20-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[22149-22240;533-533;20-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[22713-22815;547-547;20-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.handleStart(java.io.File,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[19305-19390;469-469;20-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13000-13078;329-329;26-104];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17215-17288;447-447;9-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17480-17529;454-454;30-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[18535-18680;480-481;24-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17792-17899;462-462;24-131];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[18196-18290;471-471;24-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[16501-16566;426-426;19-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15067-15127;386-386;19-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder.handleDirectory(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[16701-16786;432-432;27-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15199-15295;390-390;19-115];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15420-15450;395-395;30-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15833-15921;407-407;24-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[16081-16156;413-413;24-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[21281-21347;553-553;19-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[21459-21489;558-558;32-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[21867-21944;570-570;24-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[19201-19286;498-498;9-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleIsCancelled(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[20545-20646;533-533;27-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[19478-19527;505-505;30-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[20763-20908;539-540;24-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[19773-19880;513-513;24-131];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[20186-20280;523-523;24-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[1623-1645;46-46;14-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[9832-9878;246-246;24-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10180-10220;259-259;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10582-10617;273-273;33-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[9242-9332;231-231;18-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[9503-9596;237-237;18-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testCancel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10890-10901;285-285;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[3556-3567;82-82;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4096-4116;95-95;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4419-4439;105-105;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4807-4827;116-116;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5332-5352;129-129;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5806-5828;141-141;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6330-6352;153-153;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6868-6890;165-165;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7383-7405;177-177;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testFilterString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[14417-14434;371-371;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8882-8912;219-219;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7901-7920;189-189;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8214-8240;199-199;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[12572-12594;327-327;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[16631-16704;429-429;9-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[16890-16939;436-436;24-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17921-18060;462-463;24-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17190-17291;444-444;24-125];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17588-17676;453-453;24-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[15929-15994;408-408;19-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14525-14585;368-368;19-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder.handleDirectory(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[16129-16208;414-414;27-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14657-14753;372-372;19-115];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14872-14902;377-377;24-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[15273-15355;389-389;24-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[15515-15584;395-395;24-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[18569-18654;480-480;9-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleIsCancelled(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[19889-19984;515-515;27-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[18840-18889;487-487;24-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[20101-20240;521-522;24-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[19129-19230;495-495;24-125];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[19536-19624;505-505;24-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3410-3456;73-73;12-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[9602-9642;239-239;18-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10003-10037;253-253;18-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10464-10499;268-268;33-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[9299-9383;230-230;18-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3521-3544;78-78;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3611-3637;83-83;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10762-10773;279-279;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3807-3818;92-92;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4331-4351;104-104;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4638-4658;113-113;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5010-5030;123-123;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5519-5539;135-135;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5977-5999;146-146;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[6485-6507;157-157;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7007-7029;168-168;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7500-7522;179-179;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8945-8975;218-218;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7996-8015;190-190;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8293-8319;199-199;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[12435-12457;320-320;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[1750-1762;46-46;12-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[10760-10813;274-274;26-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[8492-8543;220-220;24-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.swapDouble(double)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[3674-3703;106-106;26-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.swapLong(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[2759-2784;80-80;24-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedFloat(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[9851-9903;252-252;25-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedInteger(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[6319-6373;170-170;23-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.swapFloat(float)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[3381-3408;97-97;25-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.swapInteger(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[2341-2368;67-67;23-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[18025-18080;479-480;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[5202-5262;144-144;23-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[6931-6993;185-185;24-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[14087-14164;367-368;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.readSwappedShort(byte[],int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[4696-4748;131-131;25-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.swapShort(short)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[2027-2054;57-57;25-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[10295-10369;263-263;24-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[7609-7679;202-202;24-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream,double)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[17203-17294;454-455;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[14892-14979;391-392;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[],int,float)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[9390-9462;241-241;24-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[5688-5760;156-156;24-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream,float)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[16295-16384;428-429;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[12743-12832;330-331;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedShort(byte[],int,short)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[4187-4259;119-119;24-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream,short)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[11191-11280;285-286;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1144-1177;31-31;12-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testCtor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1225-1234;35-35;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testEOFException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1329-1365;40-40;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[9529-9570;225-225;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8379-8419;197-197;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5538-5580;131-131;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6984-7023;164-164;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4312-4352;102-102;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6571-6621;156-156;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5161-5209;123-123;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSwapDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3197-3212;81-81;17-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSwapFloat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2906-2920;74-74;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSwapInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2013-2029;57-57;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSwapLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2557-2570;67-67;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSwapShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1658-1672;50-50;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSymmetry()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11077-11096;262-262;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11852-11889;283-283;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[10019-10061;235-235;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8828-8869;207-207;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5909-5952;139-139;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[7388-7428;172-172;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4657-4698;110-110;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[1727-1737;39-39;14-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.getTrackCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[5122-5136;117-117;23-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[6383-6397;153-153;16-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.getInstance()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[7073-7085;157-157;39-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.exitWhenFinished()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[6629-6646;145-145;37-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[8014-8031;189-189;30-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.track(java.io.File,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[2509-2551;57-57;24-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[3146-3188;76-76;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[3199-3282;73-73;24-107];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[3736-3819;90-90;17-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.track(java.lang.String,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[3901-3945;88-88;24-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[4455-4499;106-106;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaner.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[4612-4697;104-104;24-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[5064-5149;120-120;17-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleanerTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleanerTestCase.java;[1260-1297;33-33;12-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1483-1528;41-41;12-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleanerTestCase.newInstance()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleanerTestCase.java;[1184-1196;29-29;35-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker$Reaper()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[8461-8468;205-205;9-16];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker$Reaper.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[8796-8800;216-216;21-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker$Tracker.delete()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[11119-11126;278-278;24-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker$Tracker.getPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[10832-10840;268-268;23-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker$Tracker(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[10406-10537;257-257;9-140];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[2712-2749;71-71;20-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[1888-1906;44-44;14-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.getDeleteFailures()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[6609-6627;163-163;25-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[5646-5736;134-134;31-121];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[10470-10500;292-292;20-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1334-1346;34-34;35-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[10161-10195;282-282;18-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1708-1731;48-48;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1901-1927;55-55;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[10773-10810;300-300;18-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6347-6401;185-185;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6802-6864;198-198;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[5521-5558;158-158;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[5090-5114;135-135;9-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[2081-2117;56-56;15-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[5630-5681;151-151;27-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[4434-4485;114-114;23-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[4775-4784;125-125;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[3439-3488;92-92;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1179-1223;32-32;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1288-1311;37-37;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1378-1404;42-42;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[3524-3557;102-102;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1535-1569;47-47;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[4159-4191;120-120;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[2544-2585;77-77;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileDeleteStrategyTestCase.testToString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[4469-4482;130-130;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileExistsException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileExistsException.java;[1256-1276;38-38;12-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileExistsException(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileExistsException.java;[1638-1673;56-56;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileExistsException(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileExistsException.java;[1435-1475;47-47;12-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[3803-3819;110-110;12-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.openProcess(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[22175-22231;536-536;13-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitor.start(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[1998-2022;54-54;26-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[2969-2993;83-83;24-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[5226-5272;142-142;24-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[10794-10894;259-259;10-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceKb()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[8930-8961;216-216;24-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceKb(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[9590-9639;234-234;24-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[6777-6825;171-171;24-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[8311-8379;200-200;24-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[12082-12149;288-288;10-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[15803-15912;380-380;10-119];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[18106-18177;436-436;10-81];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.normalize(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[9240-9300;242-242;26-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[13522-13586;324-324;10-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21212-21270;492-492;16-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21340-21416;495-495;16-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21740-21748;505-505;24-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.exitValue()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[22375-22385;523-523;28-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.waitFor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[22227-22263;519-519;28-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getErrorStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21813-21828;507-507;36-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21944-21959;511-511;36-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[22103-22119;515-515;37-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.destroy()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[22498-22506;527-527;29-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.openProcess(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21573-21606;501-501;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1365-1406;39-39;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4013-4066;106-106;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[3600-3652;94-94;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4419-4468;118-118;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5367-5383;142-142;41-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$2.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5436-5545;144-144;28-137];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5275-5323;141-141;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4914-4930;131-131;41-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase$1.freeSpaceWindows(java.lang.String,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4983-5056;133-133;28-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4819-4870;130-130;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11904-11959;283-283;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16579-16638;374-374;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[17333-17395;395-395;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[18237-18299;418-418;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[19160-19222;441-441;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[20083-20145;464-464;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15600-15658;356-356;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16089-16149;365-365;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13335-13402;316-316;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[14449-14518;336-336;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13884-13951;326-326;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15014-15083;346-346;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[12821-12886;307-307;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10647-10718;250-250;17-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[6899-6957;173-173;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10334-10396;241-241;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10973-11041;259-259;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11309-11381;268-268;17-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[7741-7804;190-190;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5848-5918;153-153;17-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[8596-8655;207-207;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[9465-9520;224-224;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1532-1573;44-44;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[2817-2827;81-81;12-22];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[28259-28326;725-725;27-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream,java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[100816-100899;2558-2559;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[30217-30319;782-782;27-129];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[103226-103320;2634-2635;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[70034-70109;1640-1640;27-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[20850-20956;529-530;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[112039-112088;2692-2692;28-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.util.Date)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[113041-113085;2715-2715;27-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[114870-114919;2759-2759;28-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[116664-116714;2801-2801;28-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.util.Date)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[115873-115917;2782-2782;27-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[127705-127749;3062-3062;27-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.isSystemWindows()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[4877-4893;139-139;20-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.waitFor(java.io.File,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[72633-72675;1715-1715;27-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75662-75716;1801-1801;26-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[8421-8471;285-285;35-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getFile(java.io.File,java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[5356-5407;186-186;24-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getFile(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[5970-5999;207-207;24-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getTempDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[6838-6855;240-240;24-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getTempDirectoryPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[6560-6581;229-229;26-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getUserDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[7359-7376;262-262;24-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.getUserDirectoryPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[7096-7117;251-251;26-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[32505-32525;837-837;24-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[33638-33664;862-862;19-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[11332-11405;346-346;36-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[16389-16450;457-457;26-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[35936-35960;914-914;26-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.byteCountToDisplaySize(java.math.BigInteger)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[12936-12980;383-383;26-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[14784-14822;420-420;26-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75213-75264;1788-1788;26-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[73668-73743;1747-1747;26-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[74608-74682;1772-1772;26-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[39054-39129;1050-1050;26-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.toSuffixes(java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[25505-25541;659-659;29-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfAsBigInteger(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[106928-106962;2551-2551;30-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109791-109831;2634-2634;31-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfBig0(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[110480-110511;2655-2655;31-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109581-109629;2628-2628;30-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.checkDirectory(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[110969-111004;2669-2669;25-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.toURLs(java.io.File[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[36963-37007;942-942;25-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[26265-26360;678-679;36-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19975-20054;538-538;25-104];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[20603-20657;553-553;33-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[21048-21100;563-563;33-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[17040-17181;471-472;25-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,java.lang.String[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[27409-27507;704-705;34-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[23770-23877;622-623;34-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[24958-25059;647-647;34-135];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readLines(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[78069-78113;1861-1861;32-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[76428-76496;1821-1821;32-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[47185-47261;1266-1266;32-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[118511-118579;2846-2846;28-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[117518-117566;2823-2823;24-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[45182-45253;1114-1114;24-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOf(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[105764-105786;2518-2518;24-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108234-108271;2586-2586;25-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.sizeOf0(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108965-108982;2610-2610;25-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.lineIterator(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[80265-80312;1919-1919;32-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[79402-79472;1896-1896;32-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[53612-53690;1419-1419;32-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[101583-101643;2410-2410;25-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[100514-100566;2377-2377;24-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[51443-51513;1243-1243;24-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[52859-52973;1273-1274;24-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[57493-57632;1373-1374;24-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[55133-55240;1322-1323;24-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[59688-59863;1417-1418;25-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[49477-49558;1203-1203;24-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[41711-41778;1038-1038;24-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[43217-43328;1068-1069;24-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[46442-46543;1138-1138;25-126];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[38377-38454;974-974;24-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[39934-40043;1004-1004;24-133];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[65404-65493;1522-1522;24-113];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[66729-66807;1547-1547;24-102];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[62601-62674;1473-1473;24-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File,int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[63979-64116;1497-1498;24-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[101026-101087;2392-2392;25-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[13212-13254;392-392;24-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.forceMkdirParent(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[104484-104535;2487-2487;24-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[119559-119629;2873-2873;24-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[121481-121588;2916-2916;24-131];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[122863-122930;2950-2950;24-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[124669-124775;2993-2993;24-130];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.moveToDirectory(java.io.File,java.io.File,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[126269-126367;3028-3028;24-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[85372-85437;2036-2036;24-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[87814-87925;2094-2094;24-135];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[86055-86142;2052-2052;24-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[87185-87273;2079-2079;24-112];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[88738-88848;2113-2113;24-134];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[82367-82484;1968-1968;24-141];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[89328-89402;2128-2128;24-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[89865-89961;2142-2142;24-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[91259-91385;2176-2176;24-150];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[90503-90607;2158-2158;24-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[92433-92528;2202-2202;24-119];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[96704-96858;2290-2291;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[93367-93484;2220-2220;24-141];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[95677-95805;2270-2271;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[78875-79017;2035-2036;24-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[93996-94068;2234-2234;24-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[94696-94790;2250-2250;24-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[97830-97927;2315-2315;24-121];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[98647-98774;2332-2333;24-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[84074-84145;2006-2006;24-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[84777-84870;2022-2022;24-117];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[81724-81818;1953-1953;24-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[83470-83586;1993-1993;24-140];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[81011-81106;1937-1937;24-119];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1286-1335;34-34;12-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File,int,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[3961-4061;128-129;21-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1384-1406;38-38;18-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1570-1593;46-46;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1723-1749;54-54;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1925-1957;60-60;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2408-2443;79-79;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2113-2149;68-68;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[3303-3349;109-109;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2743-2781;93-93;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1218-1266;33-33;12-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1331-1354;38-38;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[8243-8304;228-228;18-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1420-1446;43-43;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[2678-2723;81-81;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[3985-4033;115-115;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1513-1558;47-47;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[7419-7482;206-206;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6328-6370;174-174;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6891-6934;190-190;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[5577-5636;153-153;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[1608-1660;44-44;12-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[1725-1748;49-49;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[2531-2557;74-74;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[2634-2671;79-79;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3063-3113;88-88;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3421-3466;96-96;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3639-3690;102-102;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4004-4061;111-111;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4373-4418;119-119;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5093-5133;141-141;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5515-5558;153-153;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4782-4814;131-131;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5883-5928;161-161;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1270-1314;36-36;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1569-1592;45-45;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1815-1841;53-53;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[2171-2187;65-65;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[4431-4533;117-117;20-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[2998-3027;85-85;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[5729-5751;145-145;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[5306-5328;133-133;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[6180-6211;157-157;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1248-1292;33-33;12-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1341-1363;37-37;18-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[2811-2856;88-88;32-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[3099-3142;96-96;32-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1527-1550;45-45;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[2653-2679;83-83;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[3360-3405;104-104;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[4488-4530;128-128;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105699-105719;2592-2592;9-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105773-105822;2595-2595;20-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleDirectoryStart(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[106010-106119;2602-2602;24-133];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[106323-106417;2610-2610;24-118];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ShorterFile(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[104724-104751;2564-2564;16-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$ShorterFile.length()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[104832-104839;2568-2568;21-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[2780-2815;86-86;12-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41527-41568;1082-1082;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.createCircularSymLink(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30459-30515;787-787;18-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52517-52634;1313-1313;18-135];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[7336-7403;211-211;10-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3117-3140;97-97;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3497-3523;108-108;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[10596-10633;303-303;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[12813-12844;336-336;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksum()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[85113-85143;2077-2077;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[84397-84432;2060-2060;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86993-87029;2128-2128;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86743-86784;2119-2119;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86244-86288;2106-2106;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86001-86041;2097-2097;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32437-32455;846-846;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testContentEquals()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20671-20706;524-524;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[22810-22854;579-579;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[53804-53845;1334-1334;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[47864-47912;1221-1221;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52250-52293;1306-1306;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[40414-40445;1059-1059;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[56048-56084;1395-1395;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42185-42216;1097-1097;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[57181-57217;1421-1421;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[43322-43380;1125-1125;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41080-41124;1074-1074;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42850-42882;1112-1112;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[26264-26299;659-659;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27056-27102;682-682;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[16093-16107;396-396;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17111-17137;419-419;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[16593-16614;406-406;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17015-17037;415-415;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDeleteDirectoryWithNonDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88184-88237;2154-2154;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88629-88669;2171-2171;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89182-89223;2184-2184;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88436-88461;2163-2163;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89508-89537;2193-2193;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testFileUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58370-58401;1453-1453;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[54902-54941;1367-1367;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55265-55304;1375-1375;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55628-55667;1383-1383;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58028-58064;1442-1442;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceMkdir()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27909-27941;707-707;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[28656-28694;730-730;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3683-3695;113-113;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[4309-4328;128-128;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5386-5407;155-155;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5228-5253;150-150;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5737-5758;165-165;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5584-5609;160-160;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIO276()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[104114-104141;2552-2552;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIO300()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[103598-103625;2537-2537;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIncorrectOutputSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105004-105045;2574-2574;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIterateFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[63416-63450;1578-1578;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[64736-64779;1614-1614;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testListFiles()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[60900-60931;1509-1509;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[62413-62454;1551-1551;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[98912-98958;2434-2434;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[100107-100160;2459-2459;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$3(java.io.File,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96248-96284;2366-2366;30-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$3.renameTo(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96437-96463;2371-2371;28-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[97325-97367;2394-2394;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[95161-95203;2341-2341;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93263-93304;2296-2296;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93798-93846;2307-2307;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$1(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90294-90328;2214-2214;30-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$1.renameTo(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90540-90563;2220-2220;28-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90142-90183;2212-2212;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$2(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90970-91004;2232-2232;30-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$2.delete()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91373-91380;2244-2244;28-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase$2.renameTo(java.io.File)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91216-91239;2238-2238;28-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90811-90859;2230-2230;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91803-91840;2258-2258;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89822-89859;2204-2204;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[101493-101530;2491-2491;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[102639-102683;2514-2514;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66679-66720;1666-1666;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[65822-65879;1644-1644;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66247-66297;1655-1655;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testReadLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67179-67210;1681-1681;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testSizeOf()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32875-32903;855-855;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[33824-33864;889-889;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[29580-29617;755-755;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30972-31021;801-801;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[14631-14660;361-361;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[14863-14892;367-367;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFile3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15119-15148;373-373;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFile4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15317-15346;378-378;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFile5()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15580-15609;385-385;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15826-15858;390-390;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFiles1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17279-17309;425-425;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFiles2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17778-17808;437-437;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFiles3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18210-18240;449-449;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFiles3a()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18394-18425;456-456;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToFiles4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18600-18630;463-463;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToURLs1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18960-18989;476-476;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testToURLs3a()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20444-20474;515-515;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testTouch()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[59454-59483;1484-1484;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69128-69170;1729-1729;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[82540-82634;2024-2024;17-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81986-82082;2012-2012;17-113];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69411-69473;1736-1736;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83701-83814;2047-2047;17-130];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83043-83159;2035-2035;17-133];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68543-68583;1715-1715;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68835-68875;1722-1722;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[75749-75841;1874-1874;17-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74998-75092;1858-1858;17-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[71371-71422;1780-1780;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77187-77276;1905-1905;17-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[76445-76536;1889-1889;17-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69839-69876;1745-1745;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70379-70432;1758-1758;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70633-70684;1765-1765;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74304-74393;1842-1842;17-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[73556-73647;1826-1826;17-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72857-72946;1811-1811;17-106];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72103-72194;1795-1795;17-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67630-67670;1694-1694;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67934-67974;1701-1701;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68238-68278;1708-1708;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78442-78545;1932-1932;17-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77874-77979;1920-1920;17-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79496-79587;1955-1955;17-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78955-79048;1943-1943;17-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[80522-80613;1978-1978;17-108];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79982-80075;1966-1966;17-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81524-81603;2001-2001;17-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81011-81092;1989-1989;17-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6008-6053;171-171;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6416-6475;183-183;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6859-6907;197-197;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8265-8311;241-241;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8698-8758;254-254;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8015-8073;232-232;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8141-8195;236-236;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9147-9196;268-268;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9526-9587;280-280;17-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsWaitForTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1280-1322;33-33;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsWaitForTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1436-1459;39-39;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1592-1618;45-45;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1778-1790;50-50;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[4618-4632;129-129;12-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[40787-40840;1059-1059;27-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[43565-43681;1122-1124;27-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.normalize(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[7180-7211;195-195;26-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[42153-42216;1090-1090;27-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[42873-42944;1107-1107;27-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[41437-41498;1074-1074;27-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[44948-45005;1155-1155;27-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[28446-28484;720-720;23-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[45876-45936;1177-1177;27-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[46941-47011;1204-1204;27-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.isSeparator(char)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[5225-5250;150-150;28-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[53866-53897;1377-1377;21-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkIndexOf(java.lang.String,int,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[7697-7772;215-215;16-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String,int,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[8665-8746;239-239;20-101];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[49752-49825;1269-1269;27-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[24790-24827;631-631;23-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[27427-27469;697-697;23-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.concat(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[19188-19248;483-483;26-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35809-35876;915-915;27-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[30258-30289;759-759;26-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[32916-32971;833-833;27-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[13886-13970;349-349;27-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[38148-38181;983-983;26-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[39923-39960;1035-1035;26-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getName(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[37245-37274;958-958;26-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[34398-34431;874-874;26-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35486-35533;904-904;26-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getPath(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[31560-31589;795-795;26-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[32599-32642;822-822;26-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[11349-11394;289-289;26-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[13366-13440;336-336;26-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[22537-22573;581-581;26-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[22124-22161;568-568;26-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[21697-21731;555-555;26-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1520-1559;43-43;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1910-1933;55-55;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[2342-2368;67-67;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testConcat()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[27556-27567;394-394;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEquals()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[50026-50037;778-778;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[51094-51115;799-799;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[52463-52496;824-824;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[51699-51728;810-810;17-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[50484-50503;788-788;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[53222-53245;845-845;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[47419-47435;735-735;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[47948-47965;745-745;17-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[41945-41961;640-640;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[43905-43935;674-674;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[46334-46371;711-711;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[46980-46992;726-726;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetPath()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[37667-37679;568-568;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[39609-39635;604-604;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[35605-35619;531-531;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[32127-32147;470-470;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[34903-34924;519-519;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[34553-34578;512-512;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[53710-53726;853-853;17-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[55464-55485;885-885;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[58032-58058;923-923;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testNormalize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[2528-2559;72-72;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[14113-14158;233-233;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[26942-26994;382-382;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[13561-13599;221-221;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[48889-48909;761-761;17-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[30951-30974;451-451;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[29908-29929;433-433;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[30411-30435;442-442;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[1062-1109;28-28;12-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(java.lang.Object[],java.lang.Object[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[8102-8156;131-131;18-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String,java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[8319-8395;138-138;18-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[11146-11169;216-216;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[1304-1314;36-36;17-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[8574-8585;143-143;17-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[4399-4422;84-84;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[2806-2824;61-61;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[7030-7048;118-118;17-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[10357-10369;192-192;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDump()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[1292-1300;38-38;12-20];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDump.dump(java.lang.StringBuilder,byte)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[5772-5823;156-156;34-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDump.dump(java.lang.StringBuilder,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[5270-5321;141-141;34-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[2787-3001;72-75;24-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDumpTest(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1098-1127;31-31;12-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDumpTest.toAscii(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[9363-9382;235-235;18-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDumpTest.toHex(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1176-1193;35-35;18-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.HexDumpTest.testDump()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1332-1364;36-36;12-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[16056-16101;360-360;20-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1429-1452;41-41;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1497-1523;46-46;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkCompare_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[4135-4175;110-110;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[3214-3263;88-88;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[9305-9346;225-225;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[8221-8271;200-200;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkEquals_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[6009-6048;151-151;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[4948-4996;126-126;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[12567-12607;289-289;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[9853-9902;237-237;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[15452-15498;348-348;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[13161-13216;301-301;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[7659-7702;188-188;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[6549-6601;163-163;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_forName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1628-1658;50-50;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.forName(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[3042-3067;80-80;26-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_getName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2400-2430;70-70;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.getName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[4112-4120;119-119;19-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2892-2930;82-82;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_serialization()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2138-2174;64-64;17-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCaseTestCase.test_toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2644-2675;76-76;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.toString()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[9079-9088;250-250;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCause(java.lang.String,java.lang.Throwable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOExceptionWithCause.java;[1744-1808;49-49;12-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCause(java.lang.Throwable)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOExceptionWithCause.java;[2306-2348;63-63;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCauseTestCase()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1040-1067;29-29;14-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1219-1250;34-34;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable,java.lang.Throwable,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1844-1939;49-49;10-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1580-1605;43-43;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[6761-6769;176-176;12-20];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.contentEquals(java.io.Reader,java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[102092-102165;2598-2599;27-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[18664-18700;562-562;34-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[121731-121801;3071-3071;26-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[119980-120089;3029-3029;24-133];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[28425-28495;769-769;26-96];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[27549-27620;749-749;26-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[29703-29752;808-808;26-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[30415-30488;826-826;26-99];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[31558-31630;852-852;26-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[98420-98519;2504-2504;24-123];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[32250-32299;869-869;26-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.net.URI)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[32814-32858;886-886;26-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.net.URL)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[33311-33355;902-902;26-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toByteArray(java.net.URLConnection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[33957-34015;923-923;26-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.close(java.net.URLConnection)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[7015-7045;188-188;24-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[34959-35010;949-949;26-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[35684-35771;967-968;26-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[36840-36914;994-994;26-100];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[89282-89379;2284-2284;24-121];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[37460-37509;1010-1010;26-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[91691-91754;2335-2335;23-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[92555-92623;2358-2358;24-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.read(java.io.InputStream,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[116451-116519;2944-2944;23-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.read(java.io.InputStream,byte[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[115362-115466;2916-2916;23-127];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.read(java.io.Reader,char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[114635-114698;2898-2898;23-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.read(java.io.Reader,char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[113536-113635;2870-2870;23-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[117123-117203;2961-2961;23-103];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[24432-24468;687-687;39-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[25391-25437;706-706;39-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[22544-22582;650-650;40-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[23524-23572;669-669;40-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[19964-19990;592-592;34-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.Reader,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[20622-20658;607-607;34-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[19352-19398;578-578;34-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[21224-21250;621-621;34-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.buffer(java.io.Writer,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[21882-21918;636-636;34-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[17004-17068;521-521;31-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[18041-18115;547-547;31-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[54233-54271;1434-1434;31-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[54694-54756;1447-1447;31-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[55546-55626;1467-1467;31-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[56595-56651;1495-1495;31-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[56152-56184;1482-1482;31-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[57458-57532;1515-1515;31-105];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[44755-44801;1209-1209;26-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(byte[],java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[45497-45566;1227-1227;26-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[38339-38390;1032-1032;26-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40161-40247;1075-1076;26-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URI)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[41286-41327;1108-1108;26-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[41744-41809;1123-1123;26-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URI,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[42422-42486;1141-1141;26-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[43365-43430;1171-1171;26-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URL)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[42908-42949;1156-1156;26-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.toString(java.net.URL,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[44162-44226;1194-1194;26-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readLines(java.io.InputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[46416-46468;1248-1248;32-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[48372-48447;1291-1291;32-107];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readLines(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[49039-49086;1308-1308;32-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[82137-82233;2115-2115;24-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[83772-83884;2155-2156;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[85267-85401;2190-2191;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[86678-86834;2220-2221;24-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skipFully(java.io.InputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[110455-110526;2797-2797;24-95];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[93328-93418;2377-2377;24-114];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[94490-94613;2406-2407;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[95577-95722;2430-2431;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skipFully(java.io.Reader,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[112663-112729;2848-2848;24-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skip(java.io.InputStream,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[104959-105025;2675-2675;24-90];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skip(java.io.Reader,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[108406-108467;2753-2753;24-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skip(java.nio.channels.ReadableByteChannel,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[106586-106660;2712-2712;24-98];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[51933-52012;1382-1382;32-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[2415-2479;67-67;12-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.lineIterator(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[50538-50570;1348-1348;32-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.net.ServerSocket)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[15934-15970;490-490;24-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.net.Socket)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[14127-14157;424-424;24-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[15009-15045;457-457;24-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[88409-88489;2263-2264;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[90562-90658;2311-2311;24-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[97381-97462;2476-2477;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[99966-100064;2538-2538;24-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[120906-120979;3050-3050;24-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[119136-119204;3009-3009;24-92];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[118205-118309;2988-2988;24-128];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[122499-122584;3090-3090;24-109];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.skipFully(java.nio.channels.ReadableByteChannel,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[111316-111395;2818-2818;24-103];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[59967-60030;1580-1580;24-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[60691-60778;1598-1598;24-111];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[61814-61900;1624-1624;24-110];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[64211-64292;1687-1688;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[65001-65094;1707-1707;24-117];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[66187-66291;1734-1735;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(char[],java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[62460-62523;1640-1640;24-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[67637-67724;1771-1772;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[68377-68476;1789-1789;24-123];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[69484-69582;1814-1814;24-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[66843-66912;1750-1750;24-93];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[70116-70179;1829-1829;24-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[70874-70955;1850-1851;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[72702-72806;1893-1894;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[74216-74303;1933-1934;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[75352-75450;1959-1959;24-122];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[73433-73514;1911-1912;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeChunked(byte[],java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[58919-59007;1551-1552;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeChunked(char[],java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[63178-63248;1658-1658;24-94];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[76420-76539;1981-1982;24-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[77311-77448;1999-2000;24-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.Writer)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[79662-79769;2051-2052;24-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2154-2195;57-57;12-53];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2419-2442;66-66;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2483-2509;70-70;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[3342-3408;90-90;17-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5789-5846;143-143;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5151-5210;124-124;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5435-5495;132-132;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9071-9133;217-217;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9540-9603;227-227;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7302-7355;178-178;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7833-7887;189-189;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[13662-13725;315-315;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14123-14187;325-325;17-81];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[11814-11868;276-276;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12318-12373;286-286;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[17307-17353;395-395;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16347-16395;371-371;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16858-16907;382-382;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3081-3114;83-83;12-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3232-3283;88-88;18-69];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3427-3433;93-93;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4193-4202;117-117;17-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$6()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46658-46670;1272-1272;30-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$6.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46719-46743;1274-1274;24-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46599-46625;1271-1271;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$7()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47032-47044;1284-1284;30-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$7.read()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47093-47117;1286-1286;24-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46959-46999;1283-1283;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45794-45813;1244-1244;17-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$8()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47452-47465;1297-1297;31-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$8.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47515-47545;1299-1299;25-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47391-47418;1296-1296;17-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$9()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47799-47812;1307-1307;31-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$9.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47862-47892;1309-1309;25-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47724-47765;1306-1306;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48178-48185;1318-1318;25-32/48637-48644;1332-1332;24-31/49133-49140;1347-1347;25-32/49718-49725;1366-1366;24-31/4574-4584;128-128;41-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1.read(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48234-48287;1320-1320;24-77/48693-48746;1334-1334;24-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48377-48402;1324-1324;25-50/48836-48861;1338-1338;25-50/49458-49483;1358-1358;25-50/50043-50068;1377-1377;25-50/4612-4637;129-129;25-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48129-48150;1317-1317;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48575-48610;1331-1331;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1.flush()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49380-49405;1355-1355;25-50/49965-49990;1374-1374;25-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1.write(char[],int,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49273-49327;1352-1352;25-79/49858-49912;1371-1371;25-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$1.write(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49190-49220;1349-1349;25-55/49775-49805;1368-1368;25-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49084-49105;1346-1346;17-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49656-49691;1365-1365;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_AllCloseableIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4489-4530;127-127;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$2()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4863-4873;137-137;34-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$2.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4901-4926;138-138;25-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_CloseableIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4788-4826;136-136;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Selector()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5020-5046;144-144;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$3()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5354-5370;155-155;39-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1158-1172;30-30;14-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$3.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5420-5445;157-157;25-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5275-5312;154-154;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5578-5608;164-164;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorTwice()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5715-5746;169-169;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocket()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6019-6068;180-180;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$4()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6293-6306;186-186;34-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$4.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6356-6381;188-188;25-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocketIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6196-6256;185-185;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Socket()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6475-6499;194-194;17-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$5()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6687-6694;200-200;34-41];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase$5.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6757-6782;202-202;38-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SocketIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6615-6650;199-199;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testConstants()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6876-6907;208-208;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[9751-9795;260-260;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[7505-7564;223-223;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[8885-8934;244-244;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[13458-13507;372-372;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[14329-14377;398-398;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15146-15190;423-423;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15960-16002;448-448;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[16774-16823;473-473;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[17338-17383;491-491;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[18220-18264;517-517;17-61];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19048-19088;542-542;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19873-19911;567-567;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[20698-20743;592-592;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22134-22187;630-630;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_Offset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23324-23374;665-665;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22946-23006;654-654;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_ReadableByteChannel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23769-23820;674-674;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[24857-24895;700-700;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[25644-25689;723-723;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[21280-21326;610-610;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29185-29228;817-817;17-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29895-29946;839-839;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[30811-30849;862-862;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27902-27939;783-783;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[28271-28309;794-794;17-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[28647-28693;805-805;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33199-33268;928-928;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[32628-32683;914-914;17-72];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33790-33835;942-942;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_NegativeSize()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[34281-34339;955-955;17-75];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[34860-34910;970-970;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[35422-35479;983-983;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeLong()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[35960-36014;998-998;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[36560-36614;1013-1013;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37038-37080;1026-1026;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_String()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37615-37655;1037-1037;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URI()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38066-38103;1050-1050;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URL()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38285-38322;1056-1056;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38512-38559;1062-1062;17-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38957-39002;1074-1074;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39448-39505;1087-1087;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39960-40000;1100-1100;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[40818-40866;1121-1121;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42032-42074;1146-1146;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42780-42820;1162-1162;17-57];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_InputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[43324-43366;1175-1175;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_Reader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[43762-43799;1187-1187;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URI()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44191-44225;1199-1199;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URI(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44443-44498;1206-1206;18-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44725-44771;1213-1213;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44836-44886;1217-1217;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URL()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45024-45058;1222-1222;17-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URL(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45284-45339;1229-1229;18-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetName()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45574-45620;1236-1236;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45685-45735;1240-1240;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[1578-1620;43-43;12-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[1844-1867;52-52;17-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[1908-1934;56-56;17-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26002-26067;641-641;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23728-23784;586-586;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[29347-29397;720-720;17-67];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3092-3154;87-87;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6099-6164;158-158;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4571-4627;122-122;17-73];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19362-19433;480-480;17-88];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17963-18025;445-445;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21586-21651;532-532;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9498-9572;239-239;17-91];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8062-8127;204-204;17-82];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11773-11841;291-291;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14469-14537;359-359;17-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13107-13166;324-324;17-76];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16639-16701;411-411;17-79];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.hasNext()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[3205-3213;87-87;20-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.isValidLine(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[4181-4210;117-117;23-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[5273-5279;153-153;17-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.next()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[4460-4465;127-127;19-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.nextLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[4721-4730;137-137;19-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[5841-5881;174-174;24-64];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIterator.remove()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[5499-5506;164-164;17-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1530-1568;43-43;12-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2296-2367;67-67;26-97];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.createStringLines(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3232-3269;94-94;26-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2822-2916;82-82;26-120];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1617-1682;47-47;18-83];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.setUp()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3499-3522;104-104;20-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.tearDown()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3727-3753;115-115;20-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testConstructor()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3925-3958;122-122;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase$2(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13148-13167;394-394;43-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase$2.isValidLine(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13223-13252;396-396;31-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12599-12644;382-382;17-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12170-12211;370-370;17-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5722-5759;187-187;17-54];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testMissingFile()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4597-4630;152-152;17-50];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6343-6392;205-205;17-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6694-6740;214-214;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7101-7147;225-225;17-63];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testNextOnly()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase$1(java.io.Reader)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8297-8332;256-256;35-70];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase$1.readLine()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8384-8412;258-258;27-55];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testNextWithException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8220-8259;255-255;17-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testOneLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4271-4301;137-137;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testThreeLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4487-4519;147-147;17-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testTwoLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4379-4409;142-142;17-47];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.LineIteratorTestCase.testZeroLines()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4162-4193;132-132;17-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.isOpen()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1227-1234;33-33;20-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.select()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1736-1762;63-63;16-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.select(long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1634-1678;58-58;16-60];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.selectNow()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1547-1576;53-53;16-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.wakeup()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1825-1832;68-68;21-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.provider()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1309-1318;38-38;29-38];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.keys()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1393-1398;43-43;30-35];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.selectedKeys()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1473-1486;48-48;30-43];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.SelectorAdapter.close()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/SelectorAdapter.java;[1894-1919;73-73;17-42];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOException.getCause()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[4524-4533;132-132;24-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOException.getTag()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[4245-4252;121-121;25-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOExceptionTest()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java;[1020-1040;28-28;14-34];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java;[1078-1100;30-30;17-39];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitor(java.lang.Thread,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[3245-3298;95-95;13-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitor.start(java.lang.Thread,long)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[2447-2492;67-67;26-71];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitor.run()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[3539-3543;106-106;17-21];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitorTestCase(java.lang.String)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[982-1021;27-27;12-51];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1502-1530;48-48;17-45];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1834-1848;61-61;17-31];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.ThreadMonitorTestCase.testTimeout()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1106-1118;34-34;17-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase(java.lang.String,boolean)">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[3537-3586;98-98;13-62];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.io.IOCase.readResolve()">
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[3862-3874;109-109;20-32];</data>
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[1798-1842;54-54;12-56];</data>
    </edge>
    <edge id="e2" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[2220-2246;67-67;20-46];</data>
    </edge>
    <edge id="e3" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[2220-2246;67-67;20-46];</data>
    </edge>
    <edge id="e4" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()" target="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3325-3339;105-105;17-31];</data>
    </edge>
    <edge id="e5" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()" target="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3174-3192;98-98;17-35];</data>
    </edge>
    <edge id="e6" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()" target="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[3733-3746;119-119;17-30];</data>
    </edge>
    <edge id="e7" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()" target="org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[4174-4191;133-133;17-34];</data>
    </edge>
    <edge id="e8" source="org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ComparatorAbstractTestCase.java;[4322-4335;140-140;17-30];</data>
    </edge>
    <edge id="e9" source="org.apache.commons.io.comparator.CompositeFileComparator(java.lang.Iterable)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[2923-2989;72-72;12-78];</data>
    </edge>
    <edge id="e10" source="org.apache.commons.io.comparator.CompositeFileComparator(java.util.Comparator[])" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[2296-2355;57-57;12-71];</data>
    </edge>
    <edge id="e11" source="org.apache.commons.io.comparator.CompositeFileComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java;[4177-4186;109-109;19-28];</data>
    </edge>
    <edge id="e12" source="org.apache.commons.io.comparator.CompositeFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1215-1260;34-34;12-57];</data>
    </edge>
    <edge id="e13" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43];</data>
    </edge>
    <edge id="e14" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.CompositeFileComparator(java.util.Comparator[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43];</data>
    </edge>
    <edge id="e15" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43];</data>
    </edge>
    <edge id="e16" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43];</data>
    </edge>
    <edge id="e17" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[1374-1397;40-40;20-43/1374-1397;40-40;20-43/1374-1397;40-40;20-43/1374-1397;40-40;20-43];</data>
    </edge>
    <edge id="e18" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull()" target="org.apache.commons.io.comparator.CompositeFileComparator(java.util.Comparator[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[3206-3231;85-85;17-42];</data>
    </edge>
    <edge id="e19" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()" target="org.apache.commons.io.comparator.CompositeFileComparator(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[2207-2231;61-61;17-41];</data>
    </edge>
    <edge id="e20" source="org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull()" target="org.apache.commons.io.comparator.CompositeFileComparator(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java;[2782-2810;75-75;17-45];</data>
    </edge>
    <edge id="e21" source="org.apache.commons.io.comparator.DefaultFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java;[1761-1781;47-47;14-34];</data>
    </edge>
    <edge id="e22" source="org.apache.commons.io.comparator.DefaultFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java;[1131-1174;31-31;12-55];</data>
    </edge>
    <edge id="e23" source="org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DefaultFileComparatorTest.java;[1288-1311;37-37;20-43];</data>
    </edge>
    <edge id="e24" source="org.apache.commons.io.comparator.DirectoryFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java;[1758-1780;46-46;14-36];</data>
    </edge>
    <edge id="e25" source="org.apache.commons.io.comparator.DirectoryFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java;[2536-2578;64-64;16-58/2536-2578;64-64;16-58];</data>
    </edge>
    <edge id="e26" source="org.apache.commons.io.comparator.DirectoryFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1135-1180;31-31;12-57];</data>
    </edge>
    <edge id="e27" source="org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/DirectoryFileComparatorTest.java;[1294-1317;37-37;20-43];</data>
    </edge>
    <edge id="e28" source="org.apache.commons.io.comparator.ExtensionFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[3839-3863;84-84;12-36];</data>
    </edge>
    <edge id="e29" source="org.apache.commons.io.comparator.ExtensionFileComparator(org.apache.commons.io.IOCase)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[4136-4188;93-93;12-64];</data>
    </edge>
    <edge id="e30" source="org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[4734-4776;108-108;16-58/4734-4776;108-108;16-58];</data>
    </edge>
    <edge id="e31" source="org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[4734-4776;108-108;16-58];</data>
    </edge>
    <edge id="e32" source="org.apache.commons.io.comparator.ExtensionFileComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java;[5174-5183;120-120;19-28];</data>
    </edge>
    <edge id="e33" source="org.apache.commons.io.comparator.ExtensionFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1164-1209;32-32;12-57];</data>
    </edge>
    <edge id="e34" source="org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1323-1346;38-38;20-43];</data>
    </edge>
    <edge id="e35" source="org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()" target="org.apache.commons.io.comparator.ExtensionFileComparator(org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/ExtensionFileComparatorTest.java;[1750-1770;49-49;17-37];</data>
    </edge>
    <edge id="e36" source="org.apache.commons.io.comparator.LastModifiedFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java;[1817-1842;48-48;14-39];</data>
    </edge>
    <edge id="e37" source="org.apache.commons.io.comparator.LastModifiedFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1141-1189;31-31;12-60];</data>
    </edge>
    <edge id="e38" source="org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1303-1326;37-37;20-43];</data>
    </edge>
    <edge id="e39" source="org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1303-1326;37-37;20-43];</data>
    </edge>
    <edge id="e40" source="org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java;[1303-1326;37-37;20-43/1303-1326;37-37;20-43/1303-1326;37-37;20-43];</data>
    </edge>
    <edge id="e41" source="org.apache.commons.io.comparator.NameFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[3524-3543;80-80;12-31];</data>
    </edge>
    <edge id="e42" source="org.apache.commons.io.comparator.NameFileComparator(org.apache.commons.io.IOCase)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[3812-3859;89-89;12-59];</data>
    </edge>
    <edge id="e43" source="org.apache.commons.io.comparator.NameFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[4382-4424;103-103;16-58];</data>
    </edge>
    <edge id="e44" source="org.apache.commons.io.comparator.NameFileComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java;[4686-4695;113-113;19-28];</data>
    </edge>
    <edge id="e45" source="org.apache.commons.io.comparator.NameFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1154-1194;32-32;12-52];</data>
    </edge>
    <edge id="e46" source="org.apache.commons.io.comparator.NameFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1308-1331;38-38;20-43];</data>
    </edge>
    <edge id="e47" source="org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()" target="org.apache.commons.io.comparator.NameFileComparator(org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/NameFileComparatorTest.java;[1735-1755;49-49;17-37];</data>
    </edge>
    <edge id="e48" source="org.apache.commons.io.comparator.PathFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[3523-3542;80-80;12-31];</data>
    </edge>
    <edge id="e49" source="org.apache.commons.io.comparator.PathFileComparator(org.apache.commons.io.IOCase)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[3811-3858;89-89;12-59];</data>
    </edge>
    <edge id="e50" source="org.apache.commons.io.comparator.PathFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[4384-4426;104-104;16-58];</data>
    </edge>
    <edge id="e51" source="org.apache.commons.io.comparator.PathFileComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java;[4688-4697;114-114;19-28];</data>
    </edge>
    <edge id="e52" source="org.apache.commons.io.comparator.PathFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1154-1194;32-32;12-52];</data>
    </edge>
    <edge id="e53" source="org.apache.commons.io.comparator.PathFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1308-1331;38-38;20-43];</data>
    </edge>
    <edge id="e54" source="org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()" target="org.apache.commons.io.comparator.PathFileComparator(org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/PathFileComparatorTest.java;[1735-1755;49-49;17-37];</data>
    </edge>
    <edge id="e55" source="org.apache.commons.io.comparator.ReverseComparator(java.util.Comparator)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java;[1484-1533;40-40;12-61];</data>
    </edge>
    <edge id="e56" source="org.apache.commons.io.comparator.ReverseComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java;[2367-2376;65-65;19-28];</data>
    </edge>
    <edge id="e57" source="org.apache.commons.io.comparator.SizeFileComparator()" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[3184-3203;80-80;12-31];</data>
    </edge>
    <edge id="e58" source="org.apache.commons.io.comparator.SizeFileComparator(boolean)" target="org.apache.commons.io.comparator.AbstractFileComparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[3834-3887;95-95;12-65];</data>
    </edge>
    <edge id="e59" source="org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[4354-4396;110-110;16-58/4354-4396;110-110;16-58];</data>
    </edge>
    <edge id="e60" source="org.apache.commons.io.comparator.SizeFileComparator.toString()" target="org.apache.commons.io.comparator.AbstractFileComparator.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java;[5215-5224;139-139;19-28];</data>
    </edge>
    <edge id="e61" source="org.apache.commons.io.comparator.SizeFileComparatorTest(java.lang.String)" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1242-1282;36-36;12-52];</data>
    </edge>
    <edge id="e62" source="org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()" target="org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1396-1419;42-42;20-43];</data>
    </edge>
    <edge id="e63" source="org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1396-1419;42-42;20-43];</data>
    </edge>
    <edge id="e64" source="org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java;[1396-1419;42-42;20-43/1396-1419;42-42;20-43/1396-1419;42-42;20-43];</data>
    </edge>
    <edge id="e65" source="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[1492-1514;39-39;20-42];</data>
    </edge>
    <edge id="e66" source="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AbstractFileFilter.java;[1857-1897;50-50;20-60];</data>
    </edge>
    <edge id="e67" source="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3945-3985;112-112;12-52];</data>
    </edge>
    <edge id="e68" source="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File,boolean)" target="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[4480-4547;126-126;12-79];</data>
    </edge>
    <edge id="e69" source="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3108-3143;89-89;12-47];</data>
    </edge>
    <edge id="e70" source="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date,boolean)" target="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[3507-3569;101-101;12-74];</data>
    </edge>
    <edge id="e71" source="org.apache.commons.io.filefilter.AgeFileFilter(long)" target="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[2390-2421;66-66;12-43];</data>
    </edge>
    <edge id="e72" source="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[2772-2830;78-78;12-70];</data>
    </edge>
    <edge id="e73" source="org.apache.commons.io.filefilter.AgeFileFilter.accept(java.io.File)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[5157-5179;144-144;20-42];</data>
    </edge>
    <edge id="e74" source="org.apache.commons.io.filefilter.AgeFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java;[5454-5463;155-155;19-28];</data>
    </edge>
    <edge id="e75" source="org.apache.commons.io.filefilter.AndFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[1830-1844;51-51;12-26];</data>
    </edge>
    <edge id="e76" source="org.apache.commons.io.filefilter.AndFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[2153-2203;62-62;12-62];</data>
    </edge>
    <edge id="e77" source="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[2706-2774;77-77;12-80];</data>
    </edge>
    <edge id="e78" source="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[2706-2774;77-77;12-80/2706-2774;77-77;12-80];</data>
    </edge>
    <edge id="e79" source="org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[3791-3813;119-119;20-42];</data>
    </edge>
    <edge id="e80" source="org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[4151-4192;135-135;20-61];</data>
    </edge>
    <edge id="e81" source="org.apache.commons.io.filefilter.AndFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/AndFileFilter.java;[4618-4627;153-153;19-28];</data>
    </edge>
    <edge id="e82" source="org.apache.commons.io.filefilter.AndFileFilterTestCase(java.lang.String)" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1419-1458;33-33;10-49];</data>
    </edge>
    <edge id="e83" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter()" target="org.apache.commons.io.filefilter.AndFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[2048-2073;58-58;35-60];</data>
    </edge>
    <edge id="e84" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(java.util.List)" target="org.apache.commons.io.filefilter.AndFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1627-1679;44-44;26-78];</data>
    </edge>
    <edge id="e85" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(java.util.List)" target="org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1627-1679;44-44;26-78];</data>
    </edge>
    <edge id="e86" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(java.util.List)" target="org.apache.commons.io.filefilter.AndFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1894-1954;53-53;26-86];</data>
    </edge>
    <edge id="e87" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1510-1533;38-38;15-38];</data>
    </edge>
    <edge id="e88" source="org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp()" target="org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java;[1510-1533;38-38;15-38];</data>
    </edge>
    <edge id="e89" source="org.apache.commons.io.filefilter.CanReadFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java;[2696-2714;80-80;15-33];</data>
    </edge>
    <edge id="e90" source="org.apache.commons.io.filefilter.CanWriteFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java;[2282-2301;68-68;15-34];</data>
    </edge>
    <edge id="e91" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase(java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1313-1368;34-34;12-67];</data>
    </edge>
    <edge id="e92" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40];</data>
    </edge>
    <edge id="e93" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40];</data>
    </edge>
    <edge id="e94" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40];</data>
    </edge>
    <edge id="e95" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40/1430-1453;39-39;17-40/1430-1453;39-39;17-40];</data>
    </edge>
    <edge id="e96" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[1430-1453;39-39;17-40/1430-1453;39-39;17-40/1430-1453;39-39;17-40];</data>
    </edge>
    <edge id="e97" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[2166-2174;52-52;17-25];</data>
    </edge>
    <edge id="e98" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[2166-2174;52-52;17-25/2166-2174;52-52;17-25/2166-2174;52-52;17-25/2166-2174;52-52;17-25];</data>
    </edge>
    <edge id="e99" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[2166-2174;52-52;17-25/2166-2174;52-52;17-25/2166-2174;52-52;17-25/2166-2174;52-52;17-25];</data>
    </edge>
    <edge id="e100" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[2166-2174;52-52;17-25];</data>
    </edge>
    <edge id="e101" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e102" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e103" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e104" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e105" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e106" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e107" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58/5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e108" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58/5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e109" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e110" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[],boolean[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58/5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e111" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[],boolean[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58/5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e112" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[5939-5980;124-124;17-58];</data>
    </edge>
    <edge id="e113" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e114" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e115" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e116" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e117" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e118" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e119" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66/4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e120" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66/4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e121" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e122" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[],boolean[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66/4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e123" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[],boolean[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66/4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e124" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[4197-4246;91-91;17-66];</data>
    </edge>
    <edge id="e125" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3811-3842;84-84;17-48];</data>
    </edge>
    <edge id="e126" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3811-3842;84-84;17-48];</data>
    </edge>
    <edge id="e127" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3811-3842;84-84;17-48];</data>
    </edge>
    <edge id="e128" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3115-3126;70-70;17-28];</data>
    </edge>
    <edge id="e129" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3115-3126;70-70;17-28/3115-3126;70-70;17-28/3115-3126;70-70;17-28/3115-3126;70-70;17-28];</data>
    </edge>
    <edge id="e130" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()" target="org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3115-3126;70-70;17-28];</data>
    </edge>
    <edge id="e131" source="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()" target="org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java;[3115-3126;70-70;17-28/3115-3126;70-70;17-28];</data>
    </edge>
    <edge id="e132" source="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FileFilter)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2108-2150;59-59;12-54];</data>
    </edge>
    <edge id="e133" source="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FilenameFilter)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[1703-1749;46-46;12-58];</data>
    </edge>
    <edge id="e134" source="org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2516-2538;74-74;20-42];</data>
    </edge>
    <edge id="e135" source="org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[2900-2940;90-90;20-60];</data>
    </edge>
    <edge id="e136" source="org.apache.commons.io.filefilter.DelegateFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java;[3265-3274;104-104;19-28];</data>
    </edge>
    <edge id="e137" source="org.apache.commons.io.filefilter.DirectoryFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java;[2110-2130;60-60;15-35];</data>
    </edge>
    <edge id="e138" source="org.apache.commons.io.filefilter.EmptyFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java;[2234-2250;67-67;15-31];</data>
    </edge>
    <edge id="e139" source="org.apache.commons.io.filefilter.FileFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFileFilter.java;[1741-1756;49-49;15-30];</data>
    </edge>
    <edge id="e140" source="org.apache.commons.io.filefilter.FileFilterTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1632-1668;49-49;12-48];</data>
    </edge>
    <edge id="e141" source="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1922-2021;63-63;17-116/1922-2021;63-63;17-116];</data>
    </edge>
    <edge id="e142" source="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1922-2021;63-63;17-116];</data>
    </edge>
    <edge id="e143" source="org.apache.commons.io.filefilter.FileFilterTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1730-1736;54-54;17-23];</data>
    </edge>
    <edge id="e144" source="org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1814-1840;59-59;17-43];</data>
    </edge>
    <edge id="e145" source="org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[1814-1840;59-59;17-43];</data>
    </edge>
    <edge id="e146" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e147" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e148" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e149" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e150" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e151" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e152" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e153" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e154" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48/31007-31038;733-733;17-48];</data>
    </edge>
    <edge id="e155" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e156" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42/17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e157" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.AndFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42/17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e158" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.AndFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e159" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e160" source="org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()" target="org.apache.commons.io.filefilter.AndFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17714-17739;432-432;17-42];</data>
    </edge>
    <edge id="e161" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35930-35959;842-842;17-46];</data>
    </edge>
    <edge id="e162" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35930-35959;842-842;17-46];</data>
    </edge>
    <edge id="e163" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35930-35959;842-842;17-46/35930-35959;842-842;17-46/35930-35959;842-842;17-46];</data>
    </edge>
    <edge id="e164" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36404-36434;852-852;17-47/36404-36434;852-852;17-47/36404-36434;852-852;17-47];</data>
    </edge>
    <edge id="e165" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36404-36434;852-852;17-47];</data>
    </edge>
    <edge id="e166" source="org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36404-36434;852-852;17-47/36404-36434;852-852;17-47/36404-36434;852-852;17-47/36404-36434;852-852;17-47];</data>
    </edge>
    <edge id="e167" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()" target="org.apache.commons.io.filefilter.OrFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28070-28110;653-653;17-57];</data>
    </edge>
    <edge id="e168" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()" target="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28070-28110;653-653;17-57/28070-28110;653-653;17-57];</data>
    </edge>
    <edge id="e169" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28070-28110;653-653;17-57/28070-28110;653-653;17-57];</data>
    </edge>
    <edge id="e170" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()" target="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FilenameFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28070-28110;653-653;17-57/28070-28110;653-653;17-57];</data>
    </edge>
    <edge id="e171" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()" target="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53773-53788;1316-1316;20-35];</data>
    </edge>
    <edge id="e172" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation()" target="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FilenameFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53773-53788;1316-1316;20-35];</data>
    </edge>
    <edge id="e173" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e174" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.WildcardFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e175" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e176" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e177" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e178" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21949-21989;518-518;17-57/21949-21989;518-518;17-57/21949-21989;518-518;17-57];</data>
    </edge>
    <edge id="e179" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()" target="org.apache.commons.io.filefilter.DirectoryFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[6978-7009;181-181;17-48];</data>
    </edge>
    <edge id="e180" source="org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[6978-7009;181-181;17-48/6978-7009;181-181;17-48/6978-7009;181-181;17-48/6978-7009;181-181;17-48/6978-7009;181-181;17-48/6978-7009;181-181;17-48];</data>
    </edge>
    <edge id="e181" source="org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36979-37006;863-863;17-44];</data>
    </edge>
    <edge id="e182" source="org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44/36979-37006;863-863;17-44];</data>
    </edge>
    <edge id="e183" source="org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36979-37006;863-863;17-44/36979-37006;863-863;17-44];</data>
    </edge>
    <edge id="e184" source="org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[36979-37006;863-863;17-44];</data>
    </edge>
    <edge id="e185" source="org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage()" target="org.apache.commons.io.filefilter.FileFilterUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53115-53138;1297-1297;20-43];</data>
    </edge>
    <edge id="e186" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()" target="org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16902-16929;412-412;17-44];</data>
    </edge>
    <edge id="e187" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16902-16929;412-412;17-44/16902-16929;412-412;17-44/16902-16929;412-412;17-44];</data>
    </edge>
    <edge id="e188" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[20666-20707;498-498;17-58/20666-20707;498-498;17-58/20666-20707;498-498;17-58/20666-20707;498-498;17-58];</data>
    </edge>
    <edge id="e189" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and()" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[20666-20707;498-498;17-58/20666-20707;498-498;17-58/20666-20707;498-498;17-58/20666-20707;498-498;17-58];</data>
    </edge>
    <edge id="e190" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21289-21329;507-507;17-57/21289-21329;507-507;17-57/21289-21329;507-507;17-57/21289-21329;507-507;17-57];</data>
    </edge>
    <edge id="e191" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or()" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[21289-21329;507-507;17-57/21289-21329;507-507;17-57/21289-21329;507-507;17-57/21289-21329;507-507;17-57];</data>
    </edge>
    <edge id="e192" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[7661-7688;198-198;17-44/7661-7688;198-198;17-44/7661-7688;198-198;17-44/7661-7688;198-198;17-44/7661-7688;198-198;17-44/7661-7688;198-198;17-44];</data>
    </edge>
    <edge id="e193" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[46732-46765;1125-1125;17-50/46732-46765;1125-1125;17-50];</data>
    </edge>
    <edge id="e194" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[46732-46765;1125-1125;17-50];</data>
    </edge>
    <edge id="e195" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[46732-46765;1125-1125;17-50];</data>
    </edge>
    <edge id="e196" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47926-47973;1159-1159;17-64/47926-47973;1159-1159;17-64];</data>
    </edge>
    <edge id="e197" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47926-47973;1159-1159;17-64/47926-47973;1159-1159;17-64/47926-47973;1159-1159;17-64];</data>
    </edge>
    <edge id="e198" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47926-47973;1159-1159;17-64];</data>
    </edge>
    <edge id="e199" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47287-47329;1141-1141;17-59/47287-47329;1141-1141;17-59];</data>
    </edge>
    <edge id="e200" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47287-47329;1141-1141;17-59];</data>
    </edge>
    <edge id="e201" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[47287-47329;1141-1141;17-59];</data>
    </edge>
    <edge id="e202" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[48895-48927;1185-1185;17-49/48895-48927;1185-1185;17-49];</data>
    </edge>
    <edge id="e203" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[48895-48927;1185-1185;17-49];</data>
    </edge>
    <edge id="e204" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[48895-48927;1185-1185;17-49];</data>
    </edge>
    <edge id="e205" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[50154-50183;1219-1219;17-46/50154-50183;1219-1219;17-46/50154-50183;1219-1219;17-46];</data>
    </edge>
    <edge id="e206" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[50154-50183;1219-1219;17-46];</data>
    </edge>
    <edge id="e207" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[49532-49574;1202-1202;17-59/49532-49574;1202-1202;17-59];</data>
    </edge>
    <edge id="e208" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[49532-49574;1202-1202;17-59];</data>
    </edge>
    <edge id="e209" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[49532-49574;1202-1202;17-59];</data>
    </edge>
    <edge id="e210" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51087-51118;1243-1243;17-48/51087-51118;1243-1243;17-48];</data>
    </edge>
    <edge id="e211" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51087-51118;1243-1243;17-48];</data>
    </edge>
    <edge id="e212" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51087-51118;1243-1243;17-48];</data>
    </edge>
    <edge id="e213" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[52347-52375;1277-1277;16-44/52347-52375;1277-1277;16-44/52347-52375;1277-1277;16-44];</data>
    </edge>
    <edge id="e214" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[52347-52375;1277-1277;16-44];</data>
    </edge>
    <edge id="e215" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51734-51775;1260-1260;17-58/51734-51775;1260-1260;17-58];</data>
    </edge>
    <edge id="e216" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51734-51775;1260-1260;17-58];</data>
    </edge>
    <edge id="e217" source="org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()" target="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[51734-51775;1260-1260;17-58];</data>
    </edge>
    <edge id="e218" source="org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35444-35472;832-832;17-45/35444-35472;832-832;17-45/35444-35472;832-832;17-45/35444-35472;832-832;17-45];</data>
    </edge>
    <edge id="e219" source="org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[35444-35472;832-832;17-45/35444-35472;832-832;17-45];</data>
    </edge>
    <edge id="e220" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e221" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e222" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e223" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e224" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e225" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e226" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e227" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65/39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e228" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()" target="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39995-40043;950-950;17-65];</data>
    </edge>
    <edge id="e229" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71/41503-41557;986-986;17-71/41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e230" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e231" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e232" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e233" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e234" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e235" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71/41503-41557;986-986;17-71/41503-41557;986-986;17-71/41503-41557;986-986;17-71/41503-41557;986-986;17-71/41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e236" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()" target="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[],long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[41503-41557;986-986;17-71];</data>
    </edge>
    <edge id="e237" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e238" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e239" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e240" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e241" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e242" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e243" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66/42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e244" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()" target="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[42810-42859;1018-1018;17-66];</data>
    </edge>
    <edge id="e245" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e246" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e247" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e248" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e249" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e250" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e251" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72/44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e252" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()" target="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[44226-44281;1051-1051;17-72];</data>
    </edge>
    <edge id="e253" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[45451-45487;1082-1082;17-53/45451-45487;1082-1082;17-53/45451-45487;1082-1082;17-53];</data>
    </edge>
    <edge id="e254" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation()" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[45451-45487;1082-1082;17-53/45451-45487;1082-1082;17-53/45451-45487;1082-1082;17-53];</data>
    </edge>
    <edge id="e255" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51/28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e256" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e257" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e258" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e259" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e260" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[28941-28975;679-679;17-51/28941-28975;679-679;17-51/28941-28975;679-679;17-51];</data>
    </edge>
    <edge id="e261" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56/38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e262" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e263" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56/38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e264" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56/38110-38149;890-890;17-56/38110-38149;890-890;17-56/38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e265" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56/38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e266" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[38110-38149;890-890;17-56/38110-38149;890-890;17-56];</data>
    </edge>
    <edge id="e267" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51/39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e268" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e269" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51/39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e270" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51/39032-39066;919-919;17-51/39032-39066;919-919;17-51/39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e271" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51/39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e272" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[39032-39066;919-919;17-51/39032-39066;919-919;17-51];</data>
    </edge>
    <edge id="e273" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51/29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e274" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e275" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e276" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e277" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e278" source="org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[29967-30001;706-706;17-51/29967-30001;706-706;17-51/29967-30001;706-706;17-51];</data>
    </edge>
    <edge id="e279" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e280" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e281" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49/12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e282" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.NameFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e283" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e284" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[12602-12634;316-316;17-49];</data>
    </edge>
    <edge id="e285" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[15342-15386;371-371;17-61];</data>
    </edge>
    <edge id="e286" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[15342-15386;371-371;17-61];</data>
    </edge>
    <edge id="e287" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[15902-15951;386-386;17-66];</data>
    </edge>
    <edge id="e288" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()" target="org.apache.commons.io.filefilter.NameFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16227-16275;395-395;17-65];</data>
    </edge>
    <edge id="e289" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNot()" target="org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17261-17286;420-420;17-42];</data>
    </edge>
    <edge id="e290" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNot()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17261-17286;420-420;17-42];</data>
    </edge>
    <edge id="e291" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNot()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17261-17286;420-420;17-42/17261-17286;420-420;17-42/17261-17286;420-420;17-42];</data>
    </edge>
    <edge id="e292" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNot()" target="org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[17261-17286;420-420;17-42];</data>
    </edge>
    <edge id="e293" source="org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters()" target="org.apache.commons.io.filefilter.FileFilterUtils.toList(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[53247-53263;1301-1301;20-36/53247-53263;1301-1301;20-36];</data>
    </edge>
    <edge id="e294" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e295" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e296" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e297" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e298" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e299" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e300" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e301" source="org.apache.commons.io.filefilter.FileFilterTestCase.testOr()" target="org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[19009-19033;462-462;17-41/19009-19033;462-462;17-41];</data>
    </edge>
    <edge id="e302" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45/8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e303" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e304" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e305" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45/8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e306" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45/8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e307" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[8247-8275;213-213;17-45/8247-8275;213-213;17-45];</data>
    </edge>
    <edge id="e308" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60/10230-10273;263-263;17-60];</data>
    </edge>
    <edge id="e309" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60/10230-10273;263-263;17-60];</data>
    </edge>
    <edge id="e310" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60/10230-10273;263-263;17-60];</data>
    </edge>
    <edge id="e311" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60/10230-10273;263-263;17-60];</data>
    </edge>
    <edge id="e312" source="org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()" target="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[10230-10273;263-263;17-60/10230-10273;263-263;17-60];</data>
    </edge>
    <edge id="e313" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e314" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e315" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e316" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e317" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e318" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()" target="org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49/33544-33576;791-791;17-49];</data>
    </edge>
    <edge id="e319" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e320" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e321" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e322" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e323" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e324" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e325" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[2879-2907;82-82;17-45/2879-2907;82-82;17-45];</data>
    </edge>
    <edge id="e326" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60/4846-4889;130-130;17-60];</data>
    </edge>
    <edge id="e327" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60/4846-4889;130-130;17-60];</data>
    </edge>
    <edge id="e328" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60/4846-4889;130-130;17-60];</data>
    </edge>
    <edge id="e329" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60/4846-4889;130-130;17-60];</data>
    </edge>
    <edge id="e330" source="org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()" target="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[4846-4889;130-130;17-60/4846-4889;130-130;17-60];</data>
    </edge>
    <edge id="e331" source="org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16551-16577;404-404;17-43];</data>
    </edge>
    <edge id="e332" source="org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[16551-16577;404-404;17-43/16551-16577;404-404;17-43/16551-16577;404-404;17-43];</data>
    </edge>
    <edge id="e333" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e334" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e335" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e336" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e337" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e338" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e339" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e340" source="org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java;[24488-24518;579-579;17-47/24488-24518;579-579;17-47/24488-24518;579-579;17-47];</data>
    </edge>
    <edge id="e341" source="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,T)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[9893-9988;268-269;51-62];</data>
    </edge>
    <edge id="e342" source="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[2585-2638;76-76;26-79];</data>
    </edge>
    <edge id="e343" source="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)" target="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[4187-4247;121-121;26-86];</data>
    </edge>
    <edge id="e344" source="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[6490-6547;180-180;30-87];</data>
    </edge>
    <edge id="e345" source="org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[5375-5439;151-151;30-94];</data>
    </edge>
    <edge id="e346" source="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[7621-7677;211-211;29-85];</data>
    </edge>
    <edge id="e347" source="org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)" target="org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[8770-8833;242-242;29-92];</data>
    </edge>
    <edge id="e348" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[20397-20437;582-582;32-72];</data>
    </edge>
    <edge id="e349" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File,boolean)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[20937-21004;596-596;32-99];</data>
    </edge>
    <edge id="e350" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[19428-19463;555-555;32-67];</data>
    </edge>
    <edge id="e351" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date,boolean)" target="org.apache.commons.io.filefilter.AgeFileFilter(java.util.Date,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[19867-19929;568-568;32-94];</data>
    </edge>
    <edge id="e352" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long)" target="org.apache.commons.io.filefilter.AgeFileFilter(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18563-18594;529-529;32-63];</data>
    </edge>
    <edge id="e353" source="org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long,boolean)" target="org.apache.commons.io.filefilter.AgeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18990-19048;542-542;32-90];</data>
    </edge>
    <edge id="e354" source="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])" target="org.apache.commons.io.filefilter.AndFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15078-15111;420-420;32-65];</data>
    </edge>
    <edge id="e355" source="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])" target="org.apache.commons.io.filefilter.FileFilterUtils.toList(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15078-15111;420-420;32-65];</data>
    </edge>
    <edge id="e356" source="org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[14047-14115;390-390;32-100];</data>
    </edge>
    <edge id="e357" source="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FileFilter)" target="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[17690-17726;503-503;32-68];</data>
    </edge>
    <edge id="e358" source="org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FilenameFilter)" target="org.apache.commons.io.filefilter.DelegateFileFilter(java.io.FilenameFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[18077-18117;515-515;32-72];</data>
    </edge>
    <edge id="e359" source="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[])" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[24836-24882;697-697;32-78];</data>
    </edge>
    <edge id="e360" source="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[],long)" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[25695-25760;718-718;32-97];</data>
    </edge>
    <edge id="e361" source="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[23296-23342;657-657;32-78];</data>
    </edge>
    <edge id="e362" source="org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String,long)" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[24143-24208;678-678;32-97];</data>
    </edge>
    <edge id="e363" source="org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[26673-26711;740-740;32-70];</data>
    </edge>
    <edge id="e364" source="org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[27802-27845;774-774;32-75];</data>
    </edge>
    <edge id="e365" source="org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[28334-28372;789-789;32-70];</data>
    </edge>
    <edge id="e366" source="org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[27220-27258;757-757;32-70];</data>
    </edge>
    <edge id="e367" source="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12416-12448;341-341;32-64];</data>
    </edge>
    <edge id="e368" source="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12845-12907;354-354;32-94];</data>
    </edge>
    <edge id="e369" source="org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[16692-16731;469-469;32-71];</data>
    </edge>
    <edge id="e370" source="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])" target="org.apache.commons.io.filefilter.OrFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15560-15592;435-435;32-64];</data>
    </edge>
    <edge id="e371" source="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])" target="org.apache.commons.io.filefilter.FileFilterUtils.toList(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[15560-15592;435-435;32-64];</data>
    </edge>
    <edge id="e372" source="org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[14558-14625;405-405;32-99];</data>
    </edge>
    <edge id="e373" source="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[10741-10777;293-293;32-68];</data>
    </edge>
    <edge id="e374" source="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[11195-11261;306-306;32-98];</data>
    </edge>
    <edge id="e375" source="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long)" target="org.apache.commons.io.filefilter.SizeFileFilter(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[21448-21483;609-609;32-67];</data>
    </edge>
    <edge id="e376" source="org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long,boolean)" target="org.apache.commons.io.filefilter.SizeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[21885-21948;622-622;32-95];</data>
    </edge>
    <edge id="e377" source="org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)" target="org.apache.commons.io.filefilter.SizeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[22411-22488;636-636;32-109/22411-22488;636-636;32-109];</data>
    </edge>
    <edge id="e378" source="org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)" target="org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[22411-22488;636-636;32-109];</data>
    </edge>
    <edge id="e379" source="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[11587-11623;317-317;32-68];</data>
    </edge>
    <edge id="e380" source="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java;[12039-12105;330-330;32-98];</data>
    </edge>
    <edge id="e381" source="org.apache.commons.io.filefilter.HiddenFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/HiddenFileFilter.java;[2154-2171;64-64;15-32];</data>
    </edge>
    <edge id="e382" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter()" target="org.apache.commons.io.filefilter.FalseFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5123-5143;127-127;11-31];</data>
    </edge>
    <edge id="e383" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5323-5345;133-133;24-46];</data>
    </edge>
    <edge id="e384" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5323-5345;133-133;24-46];</data>
    </edge>
    <edge id="e385" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5470-5510;139-139;24-64];</data>
    </edge>
    <edge id="e386" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5470-5510;139-139;24-64];</data>
    </edge>
    <edge id="e387" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5803-5809;152-152;21-27];</data>
    </edge>
    <edge id="e388" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter()" target="org.apache.commons.io.filefilter.TrueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4378-4397;97-97;11-30];</data>
    </edge>
    <edge id="e389" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4575-4597;103-103;24-46];</data>
    </edge>
    <edge id="e390" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4575-4597;103-103;24-46];</data>
    </edge>
    <edge id="e391" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4722-4762;109-109;24-64];</data>
    </edge>
    <edge id="e392" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4722-4762;109-109;24-64];</data>
    </edge>
    <edge id="e393" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[5055-5061;122-122;21-27];</data>
    </edge>
    <edge id="e394" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[],boolean[])" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[3295-3405;69-69;24-134];</data>
    </edge>
    <edge id="e395" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1085-1222;29-30;24-28];</data>
    </edge>
    <edge id="e396" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1451-1592;36-37;24-28];</data>
    </edge>
    <edge id="e397" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1922-2055;44-45;24-28/1922-2055;44-45;24-28];</data>
    </edge>
    <edge id="e398" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[1922-2055;44-45;24-28];</data>
    </edge>
    <edge id="e399" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(int,org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[],boolean[])" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[2974-3082;63-63;24-132];</data>
    </edge>
    <edge id="e400" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter[])" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[3914-3969;81-81;24-79];</data>
    </edge>
    <edge id="e401" source="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter[])" target="org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java;[4154-4207;89-89;24-77];</data>
    </edge>
    <edge id="e402" source="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[])" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[3786-3832;113-113;12-58];</data>
    </edge>
    <edge id="e403" source="org.apache.commons.io.filefilter.MagicNumberFileFilter(byte[],long)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[6970-7035;201-201;12-77];</data>
    </edge>
    <edge id="e404" source="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[4559-4605;138-138;12-58];</data>
    </edge>
    <edge id="e405" source="org.apache.commons.io.filefilter.MagicNumberFileFilter(java.lang.String,long)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[5439-5504;162-162;12-77];</data>
    </edge>
    <edge id="e406" source="org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[8137-8159;234-234;20-42];</data>
    </edge>
    <edge id="e407" source="org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java;[9214-9223;263-263;19-28];</data>
    </edge>
    <edge id="e408" source="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[2066-2098;58-58;12-44];</data>
    </edge>
    <edge id="e409" source="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[2443-2505;69-69;12-74];</data>
    </edge>
    <edge id="e410" source="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[3146-3181;86-86;12-47];</data>
    </edge>
    <edge id="e411" source="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[],org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[3559-3624;97-97;12-77];</data>
    </edge>
    <edge id="e412" source="org.apache.commons.io.filefilter.NameFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.NameFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[4271-4310;113-113;12-51];</data>
    </edge>
    <edge id="e413" source="org.apache.commons.io.filefilter.NameFileFilter(java.util.List,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[4755-4824;125-125;12-81];</data>
    </edge>
    <edge id="e414" source="org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File)" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[5377-5399;141-141;20-42];</data>
    </edge>
    <edge id="e415" source="org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[5864-5904;159-159;20-60];</data>
    </edge>
    <edge id="e416" source="org.apache.commons.io.filefilter.NameFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java;[6245-6254;174-174;19-28];</data>
    </edge>
    <edge id="e417" source="org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[1547-1586;41-41;12-51];</data>
    </edge>
    <edge id="e418" source="org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[1978-2000;55-55;20-42];</data>
    </edge>
    <edge id="e419" source="org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[2320-2361;67-67;20-61];</data>
    </edge>
    <edge id="e420" source="org.apache.commons.io.filefilter.NotFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java;[2568-2577;77-77;19-28];</data>
    </edge>
    <edge id="e421" source="org.apache.commons.io.filefilter.OrFileFilter()" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[1820-1833;49-49;12-25];</data>
    </edge>
    <edge id="e422" source="org.apache.commons.io.filefilter.OrFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[2133-2182;60-60;12-61];</data>
    </edge>
    <edge id="e423" source="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[2685-2752;75-75;12-79];</data>
    </edge>
    <edge id="e424" source="org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[2685-2752;75-75;12-79/2685-2752;75-75;12-79];</data>
    </edge>
    <edge id="e425" source="org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[3769-3791;117-117;20-42];</data>
    </edge>
    <edge id="e426" source="org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[4050-4091;130-130;20-61];</data>
    </edge>
    <edge id="e427" source="org.apache.commons.io.filefilter.OrFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/OrFileFilter.java;[4438-4447;145-145;19-28];</data>
    </edge>
    <edge id="e428" source="org.apache.commons.io.filefilter.OrFileFilterTestCase(java.lang.String)" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1416-1454;33-33;10-48];</data>
    </edge>
    <edge id="e429" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter()" target="org.apache.commons.io.filefilter.OrFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[2041-2066;58-58;35-60];</data>
    </edge>
    <edge id="e430" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(java.util.List)" target="org.apache.commons.io.filefilter.OrFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1623-1675;44-44;26-78];</data>
    </edge>
    <edge id="e431" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(java.util.List)" target="org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1623-1675;44-44;26-78];</data>
    </edge>
    <edge id="e432" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(java.util.List)" target="org.apache.commons.io.filefilter.OrFileFilter(java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1888-1948;53-53;26-86];</data>
    </edge>
    <edge id="e433" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp()" target="org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1506-1529;38-38;15-38];</data>
    </edge>
    <edge id="e434" source="org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp()" target="org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java;[1506-1529;38-38;15-38];</data>
    </edge>
    <edge id="e435" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[2096-2132;60-60;12-48];</data>
    </edge>
    <edge id="e436" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[2545-2611;73-73;12-78];</data>
    </edge>
    <edge id="e437" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[])" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[3261-3301;90-90;12-52];</data>
    </edge>
    <edge id="e438" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[3732-3802;103-103;12-82];</data>
    </edge>
    <edge id="e439" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[4468-4512;119-119;12-56];</data>
    </edge>
    <edge id="e440" source="org.apache.commons.io.filefilter.PrefixFileFilter(java.util.List,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[5010-5084;133-133;12-86];</data>
    </edge>
    <edge id="e441" source="org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File)" target="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[5613-5635;148-148;20-42];</data>
    </edge>
    <edge id="e442" source="org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[6139-6180;166-166;20-61];</data>
    </edge>
    <edge id="e443" source="org.apache.commons.io.filefilter.PrefixFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java;[6530-6539;181-181;19-28];</data>
    </edge>
    <edge id="e444" source="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[1943-1979;57-57;12-48];</data>
    </edge>
    <edge id="e445" source="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,int)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[3189-3242;90-90;12-65];</data>
    </edge>
    <edge id="e446" source="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[2486-2552;72-72;12-78];</data>
    </edge>
    <edge id="e447" source="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.IOCase.isCaseSensitive()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[2486-2552;72-72;12-78];</data>
    </edge>
    <edge id="e448" source="org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/RegexFileFilter.java;[3650-3687;103-103;12-49];</data>
    </edge>
    <edge id="e449" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1159-1200;31-31;12-53];</data>
    </edge>
    <edge id="e450" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1454-1553;45-45;17-116/1454-1553;45-45;17-116];</data>
    </edge>
    <edge id="e451" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" target="org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1454-1553;45-45;17-116];</data>
    </edge>
    <edge id="e452" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1262-1268;36-36;17-23];</data>
    </edge>
    <edge id="e453" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1346-1372;41-41;17-43];</data>
    </edge>
    <edge id="e454" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[1346-1372;41-41;17-43];</data>
    </edge>
    <edge id="e455" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()" target="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44];</data>
    </edge>
    <edge id="e456" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()" target="org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44/2369-2396;63-63;17-44];</data>
    </edge>
    <edge id="e457" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()" target="org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44/2369-2396;63-63;17-44];</data>
    </edge>
    <edge id="e458" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()" target="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44/2369-2396;63-63;17-44];</data>
    </edge>
    <edge id="e459" source="org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()" target="org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java;[2369-2396;63-63;17-44/2369-2396;63-63;17-44];</data>
    </edge>
    <edge id="e460" source="org.apache.commons.io.filefilter.SizeFileFilter(long)" target="org.apache.commons.io.filefilter.SizeFileFilter(long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[2165-2195;58-58;12-42];</data>
    </edge>
    <edge id="e461" source="org.apache.commons.io.filefilter.SizeFileFilter(long,boolean)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[2600-2658;71-71;12-70];</data>
    </edge>
    <edge id="e462" source="org.apache.commons.io.filefilter.SizeFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java;[3622-3631;103-103;19-28];</data>
    </edge>
    <edge id="e463" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[2166-2202;61-61;12-48];</data>
    </edge>
    <edge id="e464" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[2618-2684;74-74;12-78];</data>
    </edge>
    <edge id="e465" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[])" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[3326-3366;91-91;12-52];</data>
    </edge>
    <edge id="e466" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[],org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[3795-3865;104-104;12-82];</data>
    </edge>
    <edge id="e467" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[4531-4575;120-120;12-56];</data>
    </edge>
    <edge id="e468" source="org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[5073-5147;134-134;12-86];</data>
    </edge>
    <edge id="e469" source="org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File)" target="org.apache.commons.io.IOCase.checkEndsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[5672-5694;149-149;20-42];</data>
    </edge>
    <edge id="e470" source="org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.IOCase.checkEndsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[6192-6233;167-167;20-61];</data>
    </edge>
    <edge id="e471" source="org.apache.commons.io.filefilter.SuffixFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java;[6586-6595;182-182;19-28];</data>
    </edge>
    <edge id="e472" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[2452-2492;65-65;12-52];</data>
    </edge>
    <edge id="e473" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[2877-2947;76-76;12-82];</data>
    </edge>
    <edge id="e474" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[])" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[],org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[3478-3521;91-91;12-55];</data>
    </edge>
    <edge id="e475" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String[],org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[3939-4012;103-103;12-85];</data>
    </edge>
    <edge id="e476" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List)" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[4696-4743;119-119;12-59];</data>
    </edge>
    <edge id="e477" source="org.apache.commons.io.filefilter.WildcardFileFilter(java.util.List,org.apache.commons.io.IOCase)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[5217-5294;131-131;12-89];</data>
    </edge>
    <edge id="e478" source="org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[6430-6452;164-164;20-42];</data>
    </edge>
    <edge id="e479" source="org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[5948-5988;148-148;20-60];</data>
    </edge>
    <edge id="e480" source="org.apache.commons.io.filefilter.WildcardFileFilter.toString()" target="org.apache.commons.io.filefilter.AbstractFileFilter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java;[6866-6875;180-180;19-28];</data>
    </edge>
    <edge id="e481" source="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[2467-2503;65-65;12-48];</data>
    </edge>
    <edge id="e482" source="org.apache.commons.io.filefilter.WildcardFilter(java.lang.String[])" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[2930-2969;78-78;12-51];</data>
    </edge>
    <edge id="e483" source="org.apache.commons.io.filefilter.WildcardFilter(java.util.List)" target="org.apache.commons.io.filefilter.AbstractFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[3550-3593;93-93;12-55];</data>
    </edge>
    <edge id="e484" source="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[4710-4732;130-130;20-42];</data>
    </edge>
    <edge id="e485" source="org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File,java.lang.String)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java;[4144-4184;109-109;20-60];</data>
    </edge>
    <edge id="e486" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.File)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[4730-4780;131-131;12-62];</data>
    </edge>
    <edge id="e487" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[5236-5291;146-146;12-67];</data>
    </edge>
    <edge id="e488" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[6416-6532;177-178;12-36];</data>
    </edge>
    <edge id="e489" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[6416-6532;177-178;12-36];</data>
    </edge>
    <edge id="e490" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[10214-10311;273-274;12-30];</data>
    </edge>
    <edge id="e491" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14124-14270;361-362;12-79];</data>
    </edge>
    <edge id="e492" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[11976-12164;312-314;12-36];</data>
    </edge>
    <edge id="e493" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[11976-12164;312-314;12-36];</data>
    </edge>
    <edge id="e494" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URL)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URLConnection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[7539-7587;208-208;12-60];</data>
    </edge>
    <edge id="e495" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URLConnection)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[8410-8469;230-230;12-71/8410-8469;230-230;12-71];</data>
    </edge>
    <edge id="e496" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URLConnection)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[8410-8469;230-230;12-71/8410-8469;230-230;12-71/8410-8469;230-230;12-71];</data>
    </edge>
    <edge id="e497" source="org.apache.commons.io.input.compatibility.XmlStreamReader(java.net.URLConnection)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[8410-8469;230-230;12-71];</data>
    </edge>
    <edge id="e498" source="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[20526-20743;509-511;12-53];</data>
    </edge>
    <edge id="e499" source="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[20526-20743;509-511;12-53];</data>
    </edge>
    <edge id="e500" source="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[20526-20743;509-511;12-53];</data>
    </edge>
    <edge id="e501" source="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[20526-20743;509-511;12-53/20526-20743;509-511;12-53/20526-20743;509-511;12-53/20526-20743;509-511;12-53/20526-20743;509-511;12-53];</data>
    </edge>
    <edge id="e502" source="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[17413-17553;447-448;12-73/17413-17553;447-448;12-73/17413-17553;447-448;12-73/17413-17553;447-448;12-73/17413-17553;447-448;12-73/17413-17553;447-448;12-73/17413-17553;447-448;12-73];</data>
    </edge>
    <edge id="e503" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e504" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e505" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e506" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e507" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e508" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e509" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[16438-16555;427-428;18-53];</data>
    </edge>
    <edge id="e510" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59];</data>
    </edge>
    <edge id="e511" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59/14348-14449;366-367;18-59];</data>
    </edge>
    <edge id="e512" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59];</data>
    </edge>
    <edge id="e513" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59];</data>
    </edge>
    <edge id="e514" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.compatibility.XmlStreamReaderException)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[14348-14449;366-367;18-59];</data>
    </edge>
    <edge id="e515" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
    </edge>
    <edge id="e516" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
    </edge>
    <edge id="e517" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
    </edge>
    <edge id="e518" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
    </edge>
    <edge id="e519" source="org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java;[15965-16028;417-418;18-30];</data>
    </edge>
    <edge id="e520" source="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java;[2053-2196;51-52;12-80];</data>
    </edge>
    <edge id="e521" source="org.apache.commons.io.input.compatibility.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" target="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java;[2816-3000;70-71;12-101];</data>
    </edge>
    <edge id="e522" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest$MockXmlStreamReader(java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[2342-2409;51-51;9-76];</data>
    </edge>
    <edge id="e523" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1094-1134;27-27;14-54];</data>
    </edge>
    <edge id="e524" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest$MockXmlStreamReader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
    </edge>
    <edge id="e525" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
    </edge>
    <edge id="e526" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
    </edge>
    <edge id="e527" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
    </edge>
    <edge id="e528" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1618-1820;38-39;22-104];</data>
    </edge>
    <edge id="e529" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest$MockXmlStreamReader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1211-1359;30-31;22-60];</data>
    </edge>
    <edge id="e530" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1211-1359;30-31;22-60];</data>
    </edge>
    <edge id="e531" source="org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.compatibility.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java;[1211-1359;30-31;22-60];</data>
    </edge>
    <edge id="e532" source="org.apache.commons.io.input.AutoCloseInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[1948-1989;46-46;12-53];</data>
    </edge>
    <edge id="e533" source="org.apache.commons.io.input.AutoCloseInputStream.afterRead(int)" target="org.apache.commons.io.input.AutoCloseInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[2970-3010;77-77;20-60];</data>
    </edge>
    <edge id="e534" source="org.apache.commons.io.input.AutoCloseInputStream.close()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[2593-2618;64-64;17-42];</data>
    </edge>
    <edge id="e535" source="org.apache.commons.io.input.AutoCloseInputStream.finalize()" target="org.apache.commons.io.input.AutoCloseInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/AutoCloseInputStream.java;[3347-3373;90-90;20-46];</data>
    </edge>
    <edge id="e536" source="org.apache.commons.io.input.AutoCloseInputStreamTest.setUp()" target="org.apache.commons.io.input.AutoCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1211-1217;37-37;20-26];</data>
    </edge>
    <edge id="e537" source="org.apache.commons.io.input.AutoCloseInputStreamTest.setUp()" target="org.apache.commons.io.input.AutoCloseInputStreamTest$1(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java;[1211-1217;37-37;20-26];</data>
    </edge>
    <edge id="e538" source="org.apache.commons.io.input.BOMInputStream$1.compare(org.apache.commons.io.ByteOrderMark,org.apache.commons.io.ByteOrderMark)" target="org.apache.commons.io.ByteOrderMark.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[4706-4764;141-141;20-78/4706-4764;141-141;20-78];</data>
    </edge>
    <edge id="e539" source="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[3574-3615;108-108;12-53];</data>
    </edge>
    <edge id="e540" source="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[3991-4055;120-120;12-76];</data>
    </edge>
    <edge id="e541" source="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[5428-5521;164-164;12-105];</data>
    </edge>
    <edge id="e542" source="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[4369-4439;132-132;12-82];</data>
    </edge>
    <edge id="e543" source="org.apache.commons.io.input.BOMInputStream.hasBOM()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[6238-6264;183-183;20-46];</data>
    </edge>
    <edge id="e544" source="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[6779-6828;198-198;20-69];</data>
    </edge>
    <edge id="e545" source="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)" target="org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[6779-6828;198-198;20-69];</data>
    </edge>
    <edge id="e546" source="org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)" target="org.apache.commons.io.ByteOrderMark.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9743-9774;289-289;21-52];</data>
    </edge>
    <edge id="e547" source="org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)" target="org.apache.commons.io.ByteOrderMark.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9743-9774;289-289;21-52];</data>
    </edge>
    <edge id="e548" source="org.apache.commons.io.input.BOMInputStream.read()" target="org.apache.commons.io.input.BOMInputStream.readFirstBytes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[10589-10613;314-314;16-40];</data>
    </edge>
    <edge id="e549" source="org.apache.commons.io.input.BOMInputStream.read(byte[])" target="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[12074-12114;358-358;16-56];</data>
    </edge>
    <edge id="e550" source="org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.BOMInputStream.readFirstBytes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[11208-11266;333-333;16-74];</data>
    </edge>
    <edge id="e551" source="org.apache.commons.io.input.BOMInputStream.readFirstBytes()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9107-9141;263-263;17-51];</data>
    </edge>
    <edge id="e552" source="org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[8522-8559;249-249;19-56];</data>
    </edge>
    <edge id="e553" source="org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()" target="org.apache.commons.io.ByteOrderMark.getCharsetName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[8522-8559;249-249;19-56];</data>
    </edge>
    <edge id="e554" source="org.apache.commons.io.input.BOMInputStream.skip(long)" target="org.apache.commons.io.input.BOMInputStream.readFirstBytes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[13202-13232;401-401;17-47];</data>
    </edge>
    <edge id="e555" source="org.apache.commons.io.input.BOMInputStream.find()" target="org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[9384-9389;273-273;27-32];</data>
    </edge>
    <edge id="e556" source="org.apache.commons.io.input.BOMInputStream.getBOM()" target="org.apache.commons.io.ByteOrderMark.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[7267-7293;212-212;26-52/7267-7293;212-212;26-52/7267-7293;212-212;26-52];</data>
    </edge>
    <edge id="e557" source="org.apache.commons.io.input.BOMInputStream.getBOM()" target="org.apache.commons.io.input.BOMInputStream.find()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BOMInputStream.java;[7267-7293;212-212;26-52];</data>
    </edge>
    <edge id="e558" source="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80];</data>
    </edge>
    <edge id="e559" source="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)" target="org.apache.commons.io.input.BOMInputStream.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80];</data>
    </edge>
    <edge id="e560" source="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)" target="org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80/6165-6227;174-174;18-80];</data>
    </edge>
    <edge id="e561" source="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)" target="org.apache.commons.io.input.BOMInputStream.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80];</data>
    </edge>
    <edge id="e562" source="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6165-6227;174-174;18-80];</data>
    </edge>
    <edge id="e563" source="org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)" target="org.apache.commons.io.input.BOMInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6674-6735;187-187;18-79];</data>
    </edge>
    <edge id="e564" source="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6949-6987;196-196;17-55];</data>
    </edge>
    <edge id="e565" source="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[6949-6987;196-196;17-55];</data>
    </edge>
    <edge id="e566" source="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7233-7274;204-204;17-58];</data>
    </edge>
    <edge id="e567" source="org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7233-7274;204-204;17-58];</data>
    </edge>
    <edge id="e568" source="org.apache.commons.io.input.BOMInputStreamTest.testClose()" target="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7554-7581;213-213;17-44];</data>
    </edge>
    <edge id="e569" source="org.apache.commons.io.input.BOMInputStreamTest.testClose()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7554-7581;213-213;17-44];</data>
    </edge>
    <edge id="e570" source="org.apache.commons.io.input.BOMInputStreamTest.testClose()" target="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7554-7581;213-213;17-44];</data>
    </edge>
    <edge id="e571" source="org.apache.commons.io.input.BOMInputStreamTest.testClose()" target="org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7554-7581;213-213;17-44];</data>
    </edge>
    <edge id="e572" source="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7822-7862;223-223;17-57];</data>
    </edge>
    <edge id="e573" source="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[7822-7862;223-223;17-57];</data>
    </edge>
    <edge id="e574" source="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8130-8173;232-232;17-60];</data>
    </edge>
    <edge id="e575" source="org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8130-8173;232-232;17-60];</data>
    </edge>
    <edge id="e576" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e577" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e578" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e579" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e580" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e581" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58/8442-8483;241-241;17-58/8442-8483;241-241;17-58/8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e582" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[8442-8483;241-241;17-58];</data>
    </edge>
    <edge id="e583" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e584" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e585" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e586" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e587" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e588" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65/9017-9065;255-255;17-65/9017-9065;255-255;17-65/9017-9065;255-255;17-65/9017-9065;255-255;17-65/9017-9065;255-255;17-65/9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e589" source="org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9017-9065;255-255;17-65];</data>
    </edge>
    <edge id="e590" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9722-9762;272-272;17-57];</data>
    </edge>
    <edge id="e591" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9722-9762;272-272;17-57];</data>
    </edge>
    <edge id="e592" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[9722-9762;272-272;17-57];</data>
    </edge>
    <edge id="e593" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10050-10093;281-281;17-60];</data>
    </edge>
    <edge id="e594" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10050-10093;281-281;17-60];</data>
    </edge>
    <edge id="e595" source="org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10050-10093;281-281;17-60];</data>
    </edge>
    <edge id="e596" source="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10382-10429;290-290;17-64];</data>
    </edge>
    <edge id="e597" source="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10382-10429;290-290;17-64];</data>
    </edge>
    <edge id="e598" source="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10382-10429;290-290;17-64];</data>
    </edge>
    <edge id="e599" source="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10742-10787;299-299;17-62];</data>
    </edge>
    <edge id="e600" source="org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[10742-10787;299-299;17-62];</data>
    </edge>
    <edge id="e601" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11166-11213;310-310;17-64];</data>
    </edge>
    <edge id="e602" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11166-11213;310-310;17-64];</data>
    </edge>
    <edge id="e603" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11596-11646;326-326;17-67];</data>
    </edge>
    <edge id="e604" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[11596-11646;326-326;17-67];</data>
    </edge>
    <edge id="e605" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12030-12078;342-342;17-65];</data>
    </edge>
    <edge id="e606" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12030-12078;342-342;17-65];</data>
    </edge>
    <edge id="e607" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12442-12493;357-357;17-68];</data>
    </edge>
    <edge id="e608" source="org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12442-12493;357-357;17-68];</data>
    </edge>
    <edge id="e609" source="org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12858-12886;372-372;17-45/12858-12886;372-372;17-45];</data>
    </edge>
    <edge id="e610" source="org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[12858-12886;372-372;17-45/12858-12886;372-372;17-45];</data>
    </edge>
    <edge id="e611" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e612" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e613" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e614" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e615" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e616" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e617" source="org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13506-13537;389-389;17-48];</data>
    </edge>
    <edge id="e618" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e619" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e620" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48/13922-13953;400-400;17-48/13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e621" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e622" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e623" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e624" source="org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[13922-13953;400-400;17-48];</data>
    </edge>
    <edge id="e625" source="org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14424-14462;413-413;17-55];</data>
    </edge>
    <edge id="e626" source="org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14579-14620;418-418;17-58];</data>
    </edge>
    <edge id="e627" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e628" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e629" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57/14739-14779;423-423;17-57/14739-14779;423-423;17-57/14739-14779;423-423;17-57/14739-14779;423-423;17-57/14739-14779;423-423;17-57/14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e630" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e631" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e632" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e633" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[14739-14779;423-423;17-57];</data>
    </edge>
    <edge id="e634" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e635" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e636" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57/15436-15476;440-440;17-57/15436-15476;440-440;17-57/15436-15476;440-440;17-57/15436-15476;440-440;17-57/15436-15476;440-440;17-57/15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e637" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e638" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57/15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e639" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e640" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[15436-15476;440-440;17-57];</data>
    </edge>
    <edge id="e641" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e642" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e643" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57/16461-16501;464-464;17-57/16461-16501;464-464;17-57/16461-16501;464-464;17-57/16461-16501;464-464;17-57/16461-16501;464-464;17-57/16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e644" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e645" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57/16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e646" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e647" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[16461-16501;464-464;17-57];</data>
    </edge>
    <edge id="e648" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e649" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e650" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57/17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e651" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e652" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57/17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e653" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e654" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[17486-17526;488-488;17-57];</data>
    </edge>
    <edge id="e655" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e656" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e657" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57/18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e658" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e659" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57/18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e660" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e661" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[18711-18751;518-518;17-57];</data>
    </edge>
    <edge id="e662" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e663" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e664" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54/19936-19973;548-548;17-54/19936-19973;548-548;17-54/19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e665" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e666" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54/19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e667" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e668" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[19936-19973;548-548;17-54];</data>
    </edge>
    <edge id="e669" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e670" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e671" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58/20832-20873;569-569;17-58/20832-20873;569-569;17-58/20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e672" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e673" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58/20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e674" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e675" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[20832-20873;569-569;17-58];</data>
    </edge>
    <edge id="e676" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e677" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e678" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53/21572-21608;585-585;17-53/21572-21608;585-585;17-53/21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e679" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream.hasBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e680" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e681" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream.getBOM()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e682" source="org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[21572-21608;585-585;17-53];</data>
    </edge>
    <edge id="e683" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22122-22162;599-599;17-57/22122-22162;599-599;17-57];</data>
    </edge>
    <edge id="e684" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22122-22162;599-599;17-57];</data>
    </edge>
    <edge id="e685" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22122-22162;599-599;17-57/22122-22162;599-599;17-57];</data>
    </edge>
    <edge id="e686" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22560-22600;608-608;17-57/22560-22600;608-608;17-57];</data>
    </edge>
    <edge id="e687" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22560-22600;608-608;17-57];</data>
    </edge>
    <edge id="e688" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[22560-22600;608-608;17-57/22560-22600;608-608;17-57];</data>
    </edge>
    <edge id="e689" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23254-23297;621-621;17-60/23254-23297;621-621;17-60];</data>
    </edge>
    <edge id="e690" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23254-23297;621-621;17-60];</data>
    </edge>
    <edge id="e691" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23254-23297;621-621;17-60/23254-23297;621-621;17-60];</data>
    </edge>
    <edge id="e692" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23662-23705;629-629;17-60/23662-23705;629-629;17-60];</data>
    </edge>
    <edge id="e693" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23662-23705;629-629;17-60];</data>
    </edge>
    <edge id="e694" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[23662-23705;629-629;17-60/23662-23705;629-629;17-60];</data>
    </edge>
    <edge id="e695" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60];</data>
    </edge>
    <edge id="e696" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60];</data>
    </edge>
    <edge id="e697" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60/24005-24048;636-636;17-60];</data>
    </edge>
    <edge id="e698" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60];</data>
    </edge>
    <edge id="e699" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be()" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24005-24048;636-636;17-60];</data>
    </edge>
    <edge id="e700" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60];</data>
    </edge>
    <edge id="e701" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60];</data>
    </edge>
    <edge id="e702" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60/24533-24576;645-645;17-60];</data>
    </edge>
    <edge id="e703" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60];</data>
    </edge>
    <edge id="e704" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le()" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[24533-24576;645-645;17-60];</data>
    </edge>
    <edge id="e705" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25061-25101;654-654;17-57/25061-25101;654-654;17-57];</data>
    </edge>
    <edge id="e706" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25061-25101;654-654;17-57];</data>
    </edge>
    <edge id="e707" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25061-25101;654-654;17-57/25061-25101;654-654;17-57];</data>
    </edge>
    <edge id="e708" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25434-25480;662-662;17-63/25434-25480;662-662;17-63];</data>
    </edge>
    <edge id="e709" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25434-25480;662-662;17-63];</data>
    </edge>
    <edge id="e710" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25434-25480;662-662;17-63/25434-25480;662-662;17-63];</data>
    </edge>
    <edge id="e711" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.parseXml(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25811-25857;670-670;17-63/25811-25857;670-670;17-63];</data>
    </edge>
    <edge id="e712" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25811-25857;670-670;17-63];</data>
    </edge>
    <edge id="e713" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25811-25857;670-670;17-63];</data>
    </edge>
    <edge id="e714" source="org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[25811-25857;670-670;17-63];</data>
    </edge>
    <edge id="e715" source="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26188-26221;678-678;17-50];</data>
    </edge>
    <edge id="e716" source="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26188-26221;678-678;17-50];</data>
    </edge>
    <edge id="e717" source="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26485-26521;687-687;17-53];</data>
    </edge>
    <edge id="e718" source="org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26485-26521;687-687;17-53];</data>
    </edge>
    <edge id="e719" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26786-26826;696-696;17-57];</data>
    </edge>
    <edge id="e720" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26786-26826;696-696;17-57];</data>
    </edge>
    <edge id="e721" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[26786-26826;696-696;17-57/26786-26826;696-696;17-57];</data>
    </edge>
    <edge id="e722" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27204-27247;706-706;17-60];</data>
    </edge>
    <edge id="e723" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27204-27247;706-706;17-60];</data>
    </edge>
    <edge id="e724" source="org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27204-27247;706-706;17-60/27204-27247;706-706;17-60];</data>
    </edge>
    <edge id="e725" source="org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()" target="org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27683-27716;717-717;17-50];</data>
    </edge>
    <edge id="e726" source="org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()" target="org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java;[27683-27716;717-717;17-50];</data>
    </edge>
    <edge id="e727" source="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream)" target="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[2712-2751;75-75;12-51];</data>
    </edge>
    <edge id="e728" source="org.apache.commons.io.input.BoundedInputStream.read(byte[])" target="org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedInputStream.java;[3583-3621;104-104;16-54];</data>
    </edge>
    <edge id="e729" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()" target="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[2485-2516;63-63;17-48];</data>
    </edge>
    <edge id="e730" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()" target="org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String,byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48];</data>
    </edge>
    <edge id="e731" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48];</data>
    </edge>
    <edge id="e732" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()" target="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48/2485-2516;63-63;17-48];</data>
    </edge>
    <edge id="e733" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle()" target="org.apache.commons.io.input.BoundedInputStream(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[1245-1277;36-36;17-49/1245-1277;36-36;17-49/1245-1277;36-36;17-49];</data>
    </edge>
    <edge id="e734" source="org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle()" target="org.apache.commons.io.input.BoundedInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java;[1245-1277;36-36;17-49/1245-1277;36-36;17-49/1245-1277;36-36;17-49/1245-1277;36-36;17-49/1245-1277;36-36;17-49/1245-1277;36-36;17-49];</data>
    </edge>
    <edge id="e735" source="org.apache.commons.io.input.BoundedReader.read(char[],int,int)" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BoundedReader.java;[4428-4483;137-137;16-71];</data>
    </edge>
    <edge id="e736" source="org.apache.commons.io.input.BoundedReaderTest.closeTest()" target="org.apache.commons.io.input.BoundedReaderTest$1(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4702-4731;168-168;17-46];</data>
    </edge>
    <edge id="e737" source="org.apache.commons.io.input.BoundedReaderTest.closeTest()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4702-4731;168-168;17-46];</data>
    </edge>
    <edge id="e738" source="org.apache.commons.io.input.BoundedReaderTest.closeTest()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4702-4731;168-168;17-46];</data>
    </edge>
    <edge id="e739" source="org.apache.commons.io.input.BoundedReaderTest.markReset()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46];</data>
    </edge>
    <edge id="e740" source="org.apache.commons.io.input.BoundedReaderTest.markReset()" target="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46];</data>
    </edge>
    <edge id="e741" source="org.apache.commons.io.input.BoundedReaderTest.markReset()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46/2835-2864;91-91;17-46/2835-2864;91-91;17-46/2835-2864;91-91;17-46/2835-2864;91-91;17-46/2835-2864;91-91;17-46/2835-2864;91-91;17-46];</data>
    </edge>
    <edge id="e742" source="org.apache.commons.io.input.BoundedReaderTest.markReset()" target="org.apache.commons.io.input.BoundedReader.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46];</data>
    </edge>
    <edge id="e743" source="org.apache.commons.io.input.BoundedReaderTest.markReset()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2835-2864;91-91;17-46];</data>
    </edge>
    <edge id="e744" source="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57];</data>
    </edge>
    <edge id="e745" source="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()" target="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57/3768-3808;129-129;17-57];</data>
    </edge>
    <edge id="e746" source="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57/3768-3808;129-129;17-57/3768-3808;129-129;17-57/3768-3808;129-129;17-57/3768-3808;129-129;17-57/3768-3808;129-129;17-57];</data>
    </edge>
    <edge id="e747" source="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()" target="org.apache.commons.io.input.BoundedReader.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57];</data>
    </edge>
    <edge id="e748" source="org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3768-3808;129-129;17-57];</data>
    </edge>
    <edge id="e749" source="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54];</data>
    </edge>
    <edge id="e750" source="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()" target="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54];</data>
    </edge>
    <edge id="e751" source="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54/4138-4175;144-144;17-54/4138-4175;144-144;17-54/4138-4175;144-144;17-54/4138-4175;144-144;17-54/4138-4175;144-144;17-54/4138-4175;144-144;17-54];</data>
    </edge>
    <edge id="e752" source="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()" target="org.apache.commons.io.input.BoundedReader.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54];</data>
    </edge>
    <edge id="e753" source="org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4138-4175;144-144;17-54];</data>
    </edge>
    <edge id="e754" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3172-3232;107-107;17-77];</data>
    </edge>
    <edge id="e755" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()" target="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3172-3232;107-107;17-77];</data>
    </edge>
    <edge id="e756" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3172-3232;107-107;17-77/3172-3232;107-107;17-77/3172-3232;107-107;17-77/3172-3232;107-107;17-77];</data>
    </edge>
    <edge id="e757" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3172-3232;107-107;17-77];</data>
    </edge>
    <edge id="e758" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3462-3538;118-118;17-93];</data>
    </edge>
    <edge id="e759" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3462-3538;118-118;17-93/3462-3538;118-118;17-93/3462-3538;118-118;17-93/3462-3538;118-118;17-93];</data>
    </edge>
    <edge id="e760" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()" target="org.apache.commons.io.input.BoundedReader.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3462-3538;118-118;17-93];</data>
    </edge>
    <edge id="e761" source="org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[3462-3538;118-118;17-93];</data>
    </edge>
    <edge id="e762" source="org.apache.commons.io.input.BoundedReaderTest.readMulti()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1825-1854;58-58;17-46];</data>
    </edge>
    <edge id="e763" source="org.apache.commons.io.input.BoundedReaderTest.readMulti()" target="org.apache.commons.io.input.BoundedReader.read(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1825-1854;58-58;17-46];</data>
    </edge>
    <edge id="e764" source="org.apache.commons.io.input.BoundedReaderTest.readMulti()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1825-1854;58-58;17-46];</data>
    </edge>
    <edge id="e765" source="org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2329-2368;75-75;17-56];</data>
    </edge>
    <edge id="e766" source="org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()" target="org.apache.commons.io.input.BoundedReader.read(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2329-2368;75-75;17-56];</data>
    </edge>
    <edge id="e767" source="org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[2329-2368;75-75;17-56];</data>
    </edge>
    <edge id="e768" source="org.apache.commons.io.input.BoundedReaderTest.readTillEnd()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1357-1388;39-39;17-48];</data>
    </edge>
    <edge id="e769" source="org.apache.commons.io.input.BoundedReaderTest.readTillEnd()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1357-1388;39-39;17-48/1357-1388;39-39;17-48/1357-1388;39-39;17-48/1357-1388;39-39;17-48];</data>
    </edge>
    <edge id="e770" source="org.apache.commons.io.input.BoundedReaderTest.readTillEnd()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1357-1388;39-39;17-48];</data>
    </edge>
    <edge id="e771" source="org.apache.commons.io.input.BoundedReaderTest.shortReader()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1596-1627;49-49;17-48];</data>
    </edge>
    <edge id="e772" source="org.apache.commons.io.input.BoundedReaderTest.shortReader()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1596-1627;49-49;17-48/1596-1627;49-49;17-48/1596-1627;49-49;17-48];</data>
    </edge>
    <edge id="e773" source="org.apache.commons.io.input.BoundedReaderTest.shortReader()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[1596-1627;49-49;17-48];</data>
    </edge>
    <edge id="e774" source="org.apache.commons.io.input.BoundedReaderTest.skipTest()" target="org.apache.commons.io.input.BoundedReader(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4482-4510;159-159;17-45];</data>
    </edge>
    <edge id="e775" source="org.apache.commons.io.input.BoundedReaderTest.skipTest()" target="org.apache.commons.io.input.BoundedReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4482-4510;159-159;17-45/4482-4510;159-159;17-45];</data>
    </edge>
    <edge id="e776" source="org.apache.commons.io.input.BoundedReaderTest.skipTest()" target="org.apache.commons.io.input.BoundedReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BoundedReaderTest.java;[4482-4510;159-159;17-45];</data>
    </edge>
    <edge id="e777" source="org.apache.commons.io.input.BrokenInputStream()" target="org.apache.commons.io.input.BrokenInputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java;[1698-1716;50-50;12-30];</data>
    </edge>
    <edge id="e778" source="org.apache.commons.io.input.BrokenInputStreamTest.setUp()" target="org.apache.commons.io.input.BrokenInputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/BrokenInputStreamTest.java;[1149-1155;34-34;20-26];</data>
    </edge>
    <edge id="e779" source="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[4246-4313;110-110;12-79];</data>
    </edge>
    <edge id="e780" source="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[3258-3347;86-86;12-101];</data>
    </edge>
    <edge id="e781" source="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[3771-3839;98-98;12-80];</data>
    </edge>
    <edge id="e782" source="org.apache.commons.io.input.CharSequenceInputStream.read()" target="org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6027-6051;163-163;16-40];</data>
    </edge>
    <edge id="e783" source="org.apache.commons.io.input.CharSequenceInputStream.read(byte[])" target="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6404-6442;177-177;16-54];</data>
    </edge>
    <edge id="e784" source="org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[4851-4907;130-130;16-72];</data>
    </edge>
    <edge id="e785" source="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" target="org.apache.commons.io.input.CharSequenceInputStream.available()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6520-6550;182-182;17-47];</data>
    </edge>
    <edge id="e786" source="org.apache.commons.io.input.CharSequenceInputStream.skip(long)" target="org.apache.commons.io.input.CharSequenceInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[6520-6550;182-182;17-47];</data>
    </edge>
    <edge id="e787" source="org.apache.commons.io.input.CharSequenceInputStream.reset()" target="org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java;[8122-8147;229-229;30-55];</data>
    </edge>
    <edge id="e788" source="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()" target="org.apache.commons.io.Charsets.requiredCharsets()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[1817-1841;51-51;25-49];</data>
    </edge>
    <edge id="e789" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[14405-14436;416-416;17-48];</data>
    </edge>
    <edge id="e790" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[14405-14436;416-416;17-48];</data>
    </edge>
    <edge id="e791" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[14405-14436;416-416;17-48];</data>
    </edge>
    <edge id="e792" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13801-13855;400-400;18-72];</data>
    </edge>
    <edge id="e793" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13801-13855;400-400;18-72/13801-13855;400-400;18-72];</data>
    </edge>
    <edge id="e794" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13276-13330;386-386;18-72];</data>
    </edge>
    <edge id="e795" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[13276-13330;386-386;18-72/13276-13330;386-386;18-72/13276-13330;386-386;18-72];</data>
    </edge>
    <edge id="e796" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[1922-2007;55-55;18-103];</data>
    </edge>
    <edge id="e797" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[3845-3898;92-92;17-70];</data>
    </edge>
    <edge id="e798" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[3845-3898;92-92;17-70];</data>
    </edge>
    <edge id="e799" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4253-4305;102-102;17-69];</data>
    </edge>
    <edge id="e800" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4253-4305;102-102;17-69];</data>
    </edge>
    <edge id="e801" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4467-4508;109-109;17-58];</data>
    </edge>
    <edge id="e802" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.nio.charset.Charset,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[4584-4654;113-113;18-88];</data>
    </edge>
    <edge id="e803" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5154-5222;127-127;17-85];</data>
    </edge>
    <edge id="e804" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5154-5222;127-127;17-85];</data>
    </edge>
    <edge id="e805" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e806" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e807" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream.mark(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e808" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128/5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e809" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e810" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[5575-5685;136-136;18-128];</data>
    </edge>
    <edge id="e811" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6481-6526;163-163;17-62];</data>
    </edge>
    <edge id="e812" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6604-6648;168-168;17-61];</data>
    </edge>
    <edge id="e813" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6725-6769;173-173;17-61];</data>
    </edge>
    <edge id="e814" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6846-6890;178-178;17-61];</data>
    </edge>
    <edge id="e815" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[6967-7011;183-183;17-61];</data>
    </edge>
    <edge id="e816" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7088-7132;188-188;17-61];</data>
    </edge>
    <edge id="e817" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7209-7253;193-193;17-61];</data>
    </edge>
    <edge id="e818" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop(java.lang.String,int)" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7321-7400;197-197;18-97];</data>
    </edge>
    <edge id="e819" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7668-7707;206-206;17-56];</data>
    </edge>
    <edge id="e820" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7782-7820;211-211;17-55];</data>
    </edge>
    <edge id="e821" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7894-7952;216-216;17-75];</data>
    </edge>
    <edge id="e822" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[7894-7952;216-216;17-75];</data>
    </edge>
    <edge id="e823" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8120-8166;223-223;17-63];</data>
    </edge>
    <edge id="e824" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8257-8317;228-228;17-77];</data>
    </edge>
    <edge id="e825" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8257-8317;228-228;17-77];</data>
    </edge>
    <edge id="e826" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8487-8535;235-235;17-65];</data>
    </edge>
    <edge id="e827" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[8705-8755;240-240;18-68];</data>
    </edge>
    <edge id="e828" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9443-9491;261-261;17-65];</data>
    </edge>
    <edge id="e829" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9443-9491;261-261;17-65];</data>
    </edge>
    <edge id="e830" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9637-9676;268-268;17-56];</data>
    </edge>
    <edge id="e831" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9748-9784;273-273;17-53];</data>
    </edge>
    <edge id="e832" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported()" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[9853-9888;278-278;17-52];</data>
    </edge>
    <edge id="e833" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10102-10151;287-287;18-67];</data>
    </edge>
    <edge id="e834" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString()" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10427-10469;298-298;17-59];</data>
    </edge>
    <edge id="e835" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10742-10789;309-309;17-64];</data>
    </edge>
    <edge id="e836" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10742-10789;309-309;17-64];</data>
    </edge>
    <edge id="e837" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[10925-11012;315-315;18-105];</data>
    </edge>
    <edge id="e838" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11617-11672;332-332;17-72];</data>
    </edge>
    <edge id="e839" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11617-11672;332-332;17-72];</data>
    </edge>
    <edge id="e840" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11836-11880;339-339;17-61];</data>
    </edge>
    <edge id="e841" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[11968-12011;344-344;17-60];</data>
    </edge>
    <edge id="e842" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(java.lang.String)" target="org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12159-12204;349-349;18-63];</data>
    </edge>
    <edge id="e843" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12667-12710;364-364;17-60];</data>
    </edge>
    <edge id="e844" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12667-12710;364-364;17-60];</data>
    </edge>
    <edge id="e845" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12851-12885;371-371;17-51];</data>
    </edge>
    <edge id="e846" source="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8()" target="org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java;[12952-12983;376-376;17-48];</data>
    </edge>
    <edge id="e847" source="org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)" target="org.apache.commons.io.input.CharSequenceReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceReader.java;[3035-3094;103-103;16-75];</data>
    </edge>
    <edge id="e848" source="org.apache.commons.io.input.CharSequenceReaderTest.testClose()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1268-1297;36-36;17-46];</data>
    </edge>
    <edge id="e849" source="org.apache.commons.io.input.CharSequenceReaderTest.testClose()" target="org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1268-1297;36-36;17-46/1268-1297;36-36;17-46];</data>
    </edge>
    <edge id="e850" source="org.apache.commons.io.input.CharSequenceReaderTest.testMark()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1694-1722;51-51;17-45];</data>
    </edge>
    <edge id="e851" source="org.apache.commons.io.input.CharSequenceReaderTest.testMark()" target="org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1694-1722;51-51;17-45/1694-1722;51-51;17-45/1694-1722;51-51;17-45/1694-1722;51-51;17-45/1694-1722;51-51;17-45];</data>
    </edge>
    <edge id="e852" source="org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[1490-1525;44-44;17-52];</data>
    </edge>
    <edge id="e853" source="org.apache.commons.io.input.CharSequenceReaderTest.testRead()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2591-2619;80-80;17-45];</data>
    </edge>
    <edge id="e854" source="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2949-2986;91-91;17-54];</data>
    </edge>
    <edge id="e855" source="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()" target="org.apache.commons.io.input.CharSequenceReaderTest.checkArray(char[],char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2949-2986;91-91;17-54/2949-2986;91-91;17-54/2949-2986;91-91;17-54];</data>
    </edge>
    <edge id="e856" source="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[3548-3592;107-107;17-61];</data>
    </edge>
    <edge id="e857" source="org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()" target="org.apache.commons.io.input.CharSequenceReaderTest.checkArray(char[],char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[3548-3592;107-107;17-61/3548-3592;107-107;17-61];</data>
    </edge>
    <edge id="e858" source="org.apache.commons.io.input.CharSequenceReaderTest.testSkip()" target="org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2089-2117;65-65;17-45];</data>
    </edge>
    <edge id="e859" source="org.apache.commons.io.input.CharSequenceReaderTest.testSkip()" target="org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java;[2089-2117;65-65;17-45];</data>
    </edge>
    <edge id="e860" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equals(java.lang.Object)" target="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test.equalObject(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[3756-3775;112-112;24-43];</data>
    </edge>
    <edge id="e861" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[1582-1612;44-44;17-47];</data>
    </edge>
    <edge id="e862" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testLong()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[2184-2210;61-61;17-43];</data>
    </edge>
    <edge id="e863" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1()" target="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test(int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[4383-4412;134-134;17-46];</data>
    </edge>
    <edge id="e864" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[4383-4412;134-134;17-46];</data>
    </edge>
    <edge id="e865" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2()" target="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test(int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5008-5037;152-152;17-46];</data>
    </edge>
    <edge id="e866" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5008-5037;152-152;17-46];</data>
    </edge>
    <edge id="e867" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testPrimitiveLong()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[2783-2818;78-78;17-52];</data>
    </edge>
    <edge id="e868" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5647-5686;170-170;17-56];</data>
    </edge>
    <edge id="e869" source="org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()" target="org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java;[5647-5686;170-170;17-56];</data>
    </edge>
    <edge id="e870" source="org.apache.commons.io.input.CloseShieldInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java;[1500-1543;39-39;12-55];</data>
    </edge>
    <edge id="e871" source="org.apache.commons.io.input.CloseShieldInputStream.close()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CloseShieldInputStream.java;[1799-1805;49-49;17-23];</data>
    </edge>
    <edge id="e872" source="org.apache.commons.io.input.CloseShieldInputStreamTest.setUp()" target="org.apache.commons.io.input.CloseShieldInputStreamTest$1(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1252-1258;39-39;20-26];</data>
    </edge>
    <edge id="e873" source="org.apache.commons.io.input.CloseShieldInputStreamTest.setUp()" target="org.apache.commons.io.input.CloseShieldInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CloseShieldInputStreamTest.java;[1252-1258;39-39;20-26];</data>
    </edge>
    <edge id="e874" source="org.apache.commons.io.input.ClosedInputStreamTest.testRead()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java;[1006-1032;26-26;17-43];</data>
    </edge>
    <edge id="e875" source="org.apache.commons.io.input.ClosedInputStreamTest.testRead()" target="org.apache.commons.io.input.ClosedInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java;[1006-1032;26-26;17-43];</data>
    </edge>
    <edge id="e876" source="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[1519-1559;43-43;12-52];</data>
    </edge>
    <edge id="e877" source="org.apache.commons.io.input.CountingInputStream.getCount()" target="org.apache.commons.io.input.CountingInputStream.getByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[3011-3020;89-89;16-25];</data>
    </edge>
    <edge id="e878" source="org.apache.commons.io.input.CountingInputStream.resetCount()" target="org.apache.commons.io.input.CountingInputStream.resetByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[3691-3702;107-107;16-27];</data>
    </edge>
    <edge id="e879" source="org.apache.commons.io.input.CountingInputStream.skip(long)" target="org.apache.commons.io.input.ProxyInputStream.skip(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/CountingInputStream.java;[2034-2075;59-59;30-71];</data>
    </edge>
    <edge id="e880" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e881" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e882" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47/1350-1380;39-39;17-47/1350-1380;39-39;17-47/1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e883" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e884" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47/1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e885" source="org.apache.commons.io.input.CountingInputStreamTest.testCounting()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[1350-1380;39-39;17-47];</data>
    </edge>
    <edge id="e886" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF1()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5360-5386;156-156;17-43];</data>
    </edge>
    <edge id="e887" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF1()" target="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5360-5386;156-156;17-43/5360-5386;156-156;17-43/5360-5386;156-156;17-43];</data>
    </edge>
    <edge id="e888" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF1()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5360-5386;156-156;17-43/5360-5386;156-156;17-43/5360-5386;156-156;17-43];</data>
    </edge>
    <edge id="e889" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF1()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5360-5386;156-156;17-43];</data>
    </edge>
    <edge id="e890" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF2()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5895-5921;172-172;17-43];</data>
    </edge>
    <edge id="e891" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF2()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5895-5921;172-172;17-43];</data>
    </edge>
    <edge id="e892" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF2()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5895-5921;172-172;17-43];</data>
    </edge>
    <edge id="e893" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF2()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[5895-5921;172-172;17-43];</data>
    </edge>
    <edge id="e894" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF3()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6284-6310;184-184;17-43];</data>
    </edge>
    <edge id="e895" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF3()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6284-6310;184-184;17-43];</data>
    </edge>
    <edge id="e896" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF3()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6284-6310;184-184;17-43];</data>
    </edge>
    <edge id="e897" source="org.apache.commons.io.input.CountingInputStreamTest.testEOF3()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6284-6310;184-184;17-43];</data>
    </edge>
    <edge id="e898" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.NullInputStream(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e899" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e900" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.NullOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e901" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54/2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e902" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e903" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.CountingInputStream.resetCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e904" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.NullInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e905" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.CountingInputStream.getByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e906" source="org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.CountingInputStream.resetByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[2587-2624;76-76;17-54];</data>
    </edge>
    <edge id="e907" source="org.apache.commons.io.input.CountingInputStreamTest.testResetting()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48];</data>
    </edge>
    <edge id="e908" source="org.apache.commons.io.input.CountingInputStreamTest.testResetting()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48/3626-3657;105-105;17-48];</data>
    </edge>
    <edge id="e909" source="org.apache.commons.io.input.CountingInputStreamTest.testResetting()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48];</data>
    </edge>
    <edge id="e910" source="org.apache.commons.io.input.CountingInputStreamTest.testResetting()" target="org.apache.commons.io.input.CountingInputStream.resetCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48];</data>
    </edge>
    <edge id="e911" source="org.apache.commons.io.input.CountingInputStreamTest.testResetting()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[3626-3657;105-105;17-48];</data>
    </edge>
    <edge id="e912" source="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49];</data>
    </edge>
    <edge id="e913" source="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()" target="org.apache.commons.io.input.CountingInputStream.skip(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49];</data>
    </edge>
    <edge id="e914" source="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49/6679-6711;196-196;17-49];</data>
    </edge>
    <edge id="e915" source="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49];</data>
    </edge>
    <edge id="e916" source="org.apache.commons.io.input.CountingInputStreamTest.testSkipping()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[6679-6711;196-196;17-49];</data>
    </edge>
    <edge id="e917" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4214-4247;122-122;17-50];</data>
    </edge>
    <edge id="e918" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()" target="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4214-4247;122-122;17-50];</data>
    </edge>
    <edge id="e919" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4214-4247;122-122;17-50];</data>
    </edge>
    <edge id="e920" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4214-4247;122-122;17-50];</data>
    </edge>
    <edge id="e921" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4560-4593;132-132;17-50];</data>
    </edge>
    <edge id="e922" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4560-4593;132-132;17-50];</data>
    </edge>
    <edge id="e923" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4560-4593;132-132;17-50];</data>
    </edge>
    <edge id="e924" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4560-4593;132-132;17-50];</data>
    </edge>
    <edge id="e925" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()" target="org.apache.commons.io.input.CountingInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4957-4990;144-144;17-50];</data>
    </edge>
    <edge id="e926" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4957-4990;144-144;17-50];</data>
    </edge>
    <edge id="e927" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()" target="org.apache.commons.io.input.CountingInputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4957-4990;144-144;17-50];</data>
    </edge>
    <edge id="e928" source="org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java;[4957-4990;144-144;17-50];</data>
    </edge>
    <edge id="e929" source="org.apache.commons.io.input.NullInputStream(long)" target="org.apache.commons.io.input.NullInputStream(long,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[2869-2900;81-81;12-43];</data>
    </edge>
    <edge id="e930" source="org.apache.commons.io.input.NullInputStream.read()" target="org.apache.commons.io.input.NullInputStream.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[5834-5858;187-187;16-40];</data>
    </edge>
    <edge id="e931" source="org.apache.commons.io.input.NullInputStream.read()" target="org.apache.commons.io.input.NullInputStream.processByte()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[5834-5858;187-187;16-40];</data>
    </edge>
    <edge id="e932" source="org.apache.commons.io.input.NullInputStream.read(byte[])" target="org.apache.commons.io.input.NullInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[6594-6636;210-210;16-58];</data>
    </edge>
    <edge id="e933" source="org.apache.commons.io.input.NullInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.NullInputStream.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[7318-7396;228-228;16-94];</data>
    </edge>
    <edge id="e934" source="org.apache.commons.io.input.NullInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.NullInputStream.processBytes(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[7318-7396;228-228;16-94];</data>
    </edge>
    <edge id="e935" source="org.apache.commons.io.input.NullInputStream.skip(long)" target="org.apache.commons.io.input.NullInputStream.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullInputStream.java;[9225-9273;282-282;17-65];</data>
    </edge>
    <edge id="e936" source="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int)" target="org.apache.commons.io.input.NullInputStream(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[7803-7837;222-222;16-50];</data>
    </edge>
    <edge id="e937" source="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)" target="org.apache.commons.io.input.NullInputStream(long,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[7891-7987;225-225;16-112];</data>
    </edge>
    <edge id="e938" source="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processByte()" target="org.apache.commons.io.input.NullInputStream.getPosition()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[8100-8112;229-229;23-35];</data>
    </edge>
    <edge id="e939" source="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processBytes(byte[],int,int)" target="org.apache.commons.io.input.NullInputStream.getPosition()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[8210-8277;233-233;24-91];</data>
    </edge>
    <edge id="e940" source="org.apache.commons.io.input.NullInputStreamTest.testEOFException()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[3923-3957;115-115;17-51];</data>
    </edge>
    <edge id="e941" source="org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[4395-4429;128-128;17-51];</data>
    </edge>
    <edge id="e942" source="org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[6065-6103;179-179;17-55];</data>
    </edge>
    <edge id="e943" source="org.apache.commons.io.input.NullInputStreamTest.testRead()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[1436-1462;46-46;17-43];</data>
    </edge>
    <edge id="e944" source="org.apache.commons.io.input.NullInputStreamTest.testReadByteArray()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[2479-2514;72-72;17-52];</data>
    </edge>
    <edge id="e945" source="org.apache.commons.io.input.NullInputStreamTest.testSkip()" target="org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullInputStreamTest.java;[6847-6873;199-199;16-42];</data>
    </edge>
    <edge id="e946" source="org.apache.commons.io.input.NullReader(long)" target="org.apache.commons.io.input.NullReader(long,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[2826-2852;81-81;12-38];</data>
    </edge>
    <edge id="e947" source="org.apache.commons.io.input.NullReader.read()" target="org.apache.commons.io.input.NullReader.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[5353-5377;170-170;16-40];</data>
    </edge>
    <edge id="e948" source="org.apache.commons.io.input.NullReader.read()" target="org.apache.commons.io.input.NullReader.processChar()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[5353-5377;170-170;16-40];</data>
    </edge>
    <edge id="e949" source="org.apache.commons.io.input.NullReader.read(char[])" target="org.apache.commons.io.input.NullReader.read(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[6128-6170;193-193;16-58];</data>
    </edge>
    <edge id="e950" source="org.apache.commons.io.input.NullReader.read(char[],int,int)" target="org.apache.commons.io.input.NullReader.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[6877-6955;211-211;16-94];</data>
    </edge>
    <edge id="e951" source="org.apache.commons.io.input.NullReader.read(char[],int,int)" target="org.apache.commons.io.input.NullReader.processChars(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[6877-6955;211-211;16-94];</data>
    </edge>
    <edge id="e952" source="org.apache.commons.io.input.NullReader.skip(long)" target="org.apache.commons.io.input.NullReader.doEndOfFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/NullReader.java;[8799-8847;265-265;17-65];</data>
    </edge>
    <edge id="e953" source="org.apache.commons.io.input.NullReaderTest$TestNullReader(int)" target="org.apache.commons.io.input.NullReader(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7494-7523;219-219;16-45];</data>
    </edge>
    <edge id="e954" source="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)" target="org.apache.commons.io.input.NullReader(long,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7577-7668;222-222;16-107];</data>
    </edge>
    <edge id="e955" source="org.apache.commons.io.input.NullReaderTest$TestNullReader.processChar()" target="org.apache.commons.io.input.NullReader.getPosition()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7781-7793;226-226;23-35];</data>
    </edge>
    <edge id="e956" source="org.apache.commons.io.input.NullReaderTest$TestNullReader.processChars(char[],int,int)" target="org.apache.commons.io.input.NullReader.getPosition()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[7891-7958;230-230;24-91];</data>
    </edge>
    <edge id="e957" source="org.apache.commons.io.input.NullReaderTest.testEOFException()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[3639-3673;112-112;17-51];</data>
    </edge>
    <edge id="e958" source="org.apache.commons.io.input.NullReaderTest.testMarkAndReset()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[4107-4141;125-125;17-51];</data>
    </edge>
    <edge id="e959" source="org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[5777-5815;176-176;17-55];</data>
    </edge>
    <edge id="e960" source="org.apache.commons.io.input.NullReaderTest.testRead()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1411-1437;46-46;17-43];</data>
    </edge>
    <edge id="e961" source="org.apache.commons.io.input.NullReaderTest.testRead()" target="org.apache.commons.io.input.NullReader.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1411-1437;46-46;17-43/1411-1437;46-46;17-43/1411-1437;46-46;17-43];</data>
    </edge>
    <edge id="e962" source="org.apache.commons.io.input.NullReaderTest.testRead()" target="org.apache.commons.io.input.NullReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1411-1437;46-46;17-43];</data>
    </edge>
    <edge id="e963" source="org.apache.commons.io.input.NullReaderTest.testRead()" target="org.apache.commons.io.input.NullReader.getPosition()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[1411-1437;46-46;17-43];</data>
    </edge>
    <edge id="e964" source="org.apache.commons.io.input.NullReaderTest.testReadCharArray()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[2197-2232;69-69;17-52];</data>
    </edge>
    <edge id="e965" source="org.apache.commons.io.input.NullReaderTest.testSkip()" target="org.apache.commons.io.input.NullReaderTest$TestNullReader(int,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/NullReaderTest.java;[6554-6580;196-196;16-42];</data>
    </edge>
    <edge id="e966" source="org.apache.commons.io.input.ProxyInputStream.available()" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[4379-4408;131-131;16-45];</data>
    </edge>
    <edge id="e967" source="org.apache.commons.io.input.ProxyInputStream.read()" target="org.apache.commons.io.input.ProxyInputStream.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2144-2168;57-57;16-40];</data>
    </edge>
    <edge id="e968" source="org.apache.commons.io.input.ProxyInputStream.read()" target="org.apache.commons.io.input.ProxyInputStream.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2144-2168;57-57;16-40];</data>
    </edge>
    <edge id="e969" source="org.apache.commons.io.input.ProxyInputStream.read()" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2144-2168;57-57;16-40];</data>
    </edge>
    <edge id="e970" source="org.apache.commons.io.input.ProxyInputStream.read(byte[])" target="org.apache.commons.io.input.ProxyInputStream.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2709-2749;76-76;16-56];</data>
    </edge>
    <edge id="e971" source="org.apache.commons.io.input.ProxyInputStream.read(byte[])" target="org.apache.commons.io.input.ProxyInputStream.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2709-2749;76-76;16-56];</data>
    </edge>
    <edge id="e972" source="org.apache.commons.io.input.ProxyInputStream.read(byte[])" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[2709-2749;76-76;16-56];</data>
    </edge>
    <edge id="e973" source="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.ProxyInputStream.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3393-3463;97-97;16-86];</data>
    </edge>
    <edge id="e974" source="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.ProxyInputStream.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3393-3463;97-97;16-86];</data>
    </edge>
    <edge id="e975" source="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3393-3463;97-97;16-86];</data>
    </edge>
    <edge id="e976" source="org.apache.commons.io.input.ProxyInputStream.skip(long)" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[3976-4013;116-116;17-54];</data>
    </edge>
    <edge id="e977" source="org.apache.commons.io.input.ProxyInputStream.close()" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[4732-4757;145-145;17-42];</data>
    </edge>
    <edge id="e978" source="org.apache.commons.io.input.ProxyInputStream.reset()" target="org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyInputStream.java;[5282-5307;167-167;30-55];</data>
    </edge>
    <edge id="e979" source="org.apache.commons.io.input.ProxyReader.ready()" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[4909-4934;149-149;20-45];</data>
    </edge>
    <edge id="e980" source="org.apache.commons.io.input.ProxyReader.read()" target="org.apache.commons.io.input.ProxyReader.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[1974-1998;55-55;16-40];</data>
    </edge>
    <edge id="e981" source="org.apache.commons.io.input.ProxyReader.read()" target="org.apache.commons.io.input.ProxyReader.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[1974-1998;55-55;16-40];</data>
    </edge>
    <edge id="e982" source="org.apache.commons.io.input.ProxyReader.read()" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[1974-1998;55-55;16-40];</data>
    </edge>
    <edge id="e983" source="org.apache.commons.io.input.ProxyReader.read(char[])" target="org.apache.commons.io.input.ProxyReader.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[2548-2588;74-74;16-56];</data>
    </edge>
    <edge id="e984" source="org.apache.commons.io.input.ProxyReader.read(char[])" target="org.apache.commons.io.input.ProxyReader.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[2548-2588;74-74;16-56];</data>
    </edge>
    <edge id="e985" source="org.apache.commons.io.input.ProxyReader.read(char[])" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[2548-2588;74-74;16-56];</data>
    </edge>
    <edge id="e986" source="org.apache.commons.io.input.ProxyReader.read(char[],int,int)" target="org.apache.commons.io.input.ProxyReader.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3241-3310;95-95;16-85];</data>
    </edge>
    <edge id="e987" source="org.apache.commons.io.input.ProxyReader.read(char[],int,int)" target="org.apache.commons.io.input.ProxyReader.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3241-3310;95-95;16-85];</data>
    </edge>
    <edge id="e988" source="org.apache.commons.io.input.ProxyReader.read(char[],int,int)" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3241-3310;95-95;16-85];</data>
    </edge>
    <edge id="e989" source="org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)" target="org.apache.commons.io.input.ProxyReader.beforeRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3887-3934;115-115;16-63];</data>
    </edge>
    <edge id="e990" source="org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)" target="org.apache.commons.io.input.ProxyReader.afterRead(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3887-3934;115-115;16-63];</data>
    </edge>
    <edge id="e991" source="org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[3887-3934;115-115;16-63];</data>
    </edge>
    <edge id="e992" source="org.apache.commons.io.input.ProxyReader.skip(long)" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[4497-4534;134-134;17-54];</data>
    </edge>
    <edge id="e993" source="org.apache.commons.io.input.ProxyReader.close()" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5255-5280;163-163;17-42];</data>
    </edge>
    <edge id="e994" source="org.apache.commons.io.input.ProxyReader.mark(int)" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5618-5655;177-177;30-67];</data>
    </edge>
    <edge id="e995" source="org.apache.commons.io.input.ProxyReader.reset()" target="org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ProxyReader.java;[5958-5983;190-190;30-55];</data>
    </edge>
    <edge id="e996" source="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader(int)" target="org.apache.commons.io.input.NullReader(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2304-2334;75-75;9-39];</data>
    </edge>
    <edge id="e997" source="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read(char[])" target="org.apache.commons.io.input.NullReader.read(char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2409-2451;79-79;20-62];</data>
    </edge>
    <edge id="e998" source="org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl(java.io.Reader)" target="org.apache.commons.io.input.ProxyReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[2108-2142;68-68;9-43];</data>
    </edge>
    <edge id="e999" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()" target="org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
    </edge>
    <edge id="e1000" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()" target="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
    </edge>
    <edge id="e1001" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()" target="org.apache.commons.io.input.ProxyReader.read(char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
    </edge>
    <edge id="e1002" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()" target="org.apache.commons.io.input.ProxyReader.read(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
    </edge>
    <edge id="e1003" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()" target="org.apache.commons.io.input.ProxyReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1216-1251;36-36;17-52];</data>
    </edge>
    <edge id="e1004" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()" target="org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1692-1728;54-54;17-53];</data>
    </edge>
    <edge id="e1005" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()" target="org.apache.commons.io.input.ProxyReaderTest$CustomNullReader(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1692-1728;54-54;17-53];</data>
    </edge>
    <edge id="e1006" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()" target="org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1692-1728;54-54;17-53];</data>
    </edge>
    <edge id="e1007" source="org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()" target="org.apache.commons.io.input.ProxyReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ProxyReaderTest.java;[1692-1728;54-54;17-53];</data>
    </edge>
    <edge id="e1008" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[7793-7830;185-185;12-49];</data>
    </edge>
    <edge id="e1009" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[7337-7400;173-173;12-75];</data>
    </edge>
    <edge id="e1010" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String,int)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[6928-7013;162-162;12-97];</data>
    </edge>
    <edge id="e1011" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[6537-6597;151-151;12-72];</data>
    </edge>
    <edge id="e1012" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset,int)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.CharsetEncoder,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[5994-6076;136-136;12-94];</data>
    </edge>
    <edge id="e1013" source="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.CharsetEncoder)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.CharsetEncoder,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[5008-5075;108-108;12-79];</data>
    </edge>
    <edge id="e1014" source="org.apache.commons.io.input.ReaderInputStream.read()" target="org.apache.commons.io.input.ReaderInputStream.fillBuffer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[10971-10995;276-276;16-40];</data>
    </edge>
    <edge id="e1015" source="org.apache.commons.io.input.ReaderInputStream.read(byte[])" target="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[10644-10682;264-264;16-54];</data>
    </edge>
    <edge id="e1016" source="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.ReaderInputStream.fillBuffer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReaderInputStream.java;[9335-9391;226-226;16-72];</data>
    </edge>
    <edge id="e1017" source="org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4956-5007;138-138;17-68];</data>
    </edge>
    <edge id="e1018" source="org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()" target="org.apache.commons.io.input.ReaderInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4956-5007;138-138;17-68];</data>
    </edge>
    <edge id="e1019" source="org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()" target="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4956-5007;138-138;17-68];</data>
    </edge>
    <edge id="e1020" source="org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead()" target="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3603-3652;99-99;17-66];</data>
    </edge>
    <edge id="e1021" source="org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead()" target="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3322-3373;89-89;17-68];</data>
    </edge>
    <edge id="e1022" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3923-3953;110-110;17-47];</data>
    </edge>
    <edge id="e1023" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()" target="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3923-3953;110-110;17-47/3923-3953;110-110;17-47/3923-3953;110-110;17-47];</data>
    </edge>
    <edge id="e1024" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()" target="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3923-3953;110-110;17-47];</data>
    </edge>
    <edge id="e1025" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4426-4467;123-123;17-58];</data>
    </edge>
    <edge id="e1026" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()" target="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4426-4467;123-123;17-58/4426-4467;123-123;17-58/4426-4467;123-123;17-58/4426-4467;123-123;17-58];</data>
    </edge>
    <edge id="e1027" source="org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString()" target="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[4426-4467;123-123;17-58];</data>
    </edge>
    <edge id="e1028" source="org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead()" target="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3747-3794;104-104;17-64];</data>
    </edge>
    <edge id="e1029" source="org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead()" target="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3470-3514;94-94;17-61];</data>
    </edge>
    <edge id="e1030" source="org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead()" target="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[3185-3231;84-84;17-63];</data>
    </edge>
    <edge id="e1031" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[2120-2209;57-57;18-107];</data>
    </edge>
    <edge id="e1032" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[2120-2209;57-57;18-107];</data>
    </edge>
    <edge id="e1033" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[2120-2209;57-57;18-107];</data>
    </edge>
    <edge id="e1034" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[1578-1669;44-44;18-109];</data>
    </edge>
    <edge id="e1035" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[1578-1669;44-44;18-109/1578-1669;44-44;18-109];</data>
    </edge>
    <edge id="e1036" source="org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReaderInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java;[1578-1669;44-44;18-109];</data>
    </edge>
    <edge id="e1037" source="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.createLeftOver()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[10316-10344;268-268;24-52/10316-10344;268-268;24-52];</data>
    </edge>
    <edge id="e1038" source="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[10316-10344;268-268;24-52];</data>
    </edge>
    <edge id="e1039" source="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart(long,int,byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[9342-9370;243-243;26-54];</data>
    </edge>
    <edge id="e1040" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File)" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[2181-2239;64-64;12-70];</data>
    </edge>
    <edge id="e1041" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6397-6499;158-158;12-114];</data>
    </edge>
    <edge id="e1042" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6397-6499;158-158;12-114];</data>
    </edge>
    <edge id="e1043" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart(long,int,byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[3291-3394;96-96;12-115];</data>
    </edge>
    <edge id="e1044" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[3291-3394;96-96;12-115];</data>
    </edge>
    <edge id="e1045" source="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[2611-2692;78-78;12-93];</data>
    </edge>
    <edge id="e1046" source="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6793-6821;168-168;19-47/6793-6821;168-168;19-47];</data>
    </edge>
    <edge id="e1047" source="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" target="org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6793-6821;168-168;19-47];</data>
    </edge>
    <edge id="e1048" source="org.apache.commons.io.input.ReversedLinesFileReader.readLine()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java;[6793-6821;168-168;19-47];</data>
    </edge>
    <edge id="e1049" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[9410-9480;190-190;17-87];</data>
    </edge>
    <edge id="e1050" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8636-8741;174-174;18-123];</data>
    </edge>
    <edge id="e1051" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8636-8741;174-174;18-123];</data>
    </edge>
    <edge id="e1052" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[2909-2921;68-68;17-29];</data>
    </edge>
    <edge id="e1053" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4590-4643;104-104;17-70];</data>
    </edge>
    <edge id="e1054" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4590-4643;104-104;17-70];</data>
    </edge>
    <edge id="e1055" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6288-6366;133-133;17-95];</data>
    </edge>
    <edge id="e1056" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6288-6366;133-133;17-95/6288-6366;133-133;17-95];</data>
    </edge>
    <edge id="e1057" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6288-6366;133-133;17-95/6288-6366;133-133;17-95];</data>
    </edge>
    <edge id="e1058" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3086-3145;77-77;17-76];</data>
    </edge>
    <edge id="e1059" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3086-3145;77-77;17-76];</data>
    </edge>
    <edge id="e1060" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7297-7407;150-150;17-127];</data>
    </edge>
    <edge id="e1061" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7297-7407;150-150;17-127/7297-7407;150-150;17-127];</data>
    </edge>
    <edge id="e1062" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7297-7407;150-150;17-127/7297-7407;150-150;17-127];</data>
    </edge>
    <edge id="e1063" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5709-5765;125-125;17-73];</data>
    </edge>
    <edge id="e1064" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5709-5765;125-125;17-73/5709-5765;125-125;17-73];</data>
    </edge>
    <edge id="e1065" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5709-5765;125-125;17-73/5709-5765;125-125;17-73];</data>
    </edge>
    <edge id="e1066" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4947-5002;111-111;17-72];</data>
    </edge>
    <edge id="e1067" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4947-5002;111-111;17-72];</data>
    </edge>
    <edge id="e1068" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5328-5383;118-118;17-72];</data>
    </edge>
    <edge id="e1069" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[5328-5383;118-118;17-72];</data>
    </edge>
    <edge id="e1070" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4228-4280;97-97;17-69];</data>
    </edge>
    <edge id="e1071" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[4228-4280;97-97;17-69];</data>
    </edge>
    <edge id="e1072" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3850-3910;90-90;17-77];</data>
    </edge>
    <edge id="e1073" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3850-3910;90-90;17-77];</data>
    </edge>
    <edge id="e1074" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3465-3530;84-84;17-82];</data>
    </edge>
    <edge id="e1075" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[3465-3530;84-84;17-82];</data>
    </edge>
    <edge id="e1076" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6867-6974;143-143;17-124];</data>
    </edge>
    <edge id="e1077" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[6867-6974;143-143;17-124];</data>
    </edge>
    <edge id="e1078" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8333-8400;169-169;17-84];</data>
    </edge>
    <edge id="e1079" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[8333-8400;169-169;17-84];</data>
    </edge>
    <edge id="e1080" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7987-8055;163-163;17-85];</data>
    </edge>
    <edge id="e1081" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java;[7987-8055;163-163;17-85];</data>
    </edge>
    <edge id="e1082" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[4024-4036;101-101;17-29];</data>
    </edge>
    <edge id="e1083" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[3104-3179;78-78;17-92];</data>
    </edge>
    <edge id="e1084" source="org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java;[3104-3179;78-78;17-92];</data>
    </edge>
    <edge id="e1085" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1274-1286;35-35;17-29];</data>
    </edge>
    <edge id="e1086" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1451-1529;44-44;17-95];</data>
    </edge>
    <edge id="e1087" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1451-1529;44-44;17-95/1451-1529;44-44;17-95];</data>
    </edge>
    <edge id="e1088" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()" target="org.apache.commons.io.input.ReversedLinesFileReader.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[1451-1529;44-44;17-95/1451-1529;44-44;17-95];</data>
    </edge>
    <edge id="e1089" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2409-2476;60-60;17-84];</data>
    </edge>
    <edge id="e1090" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2409-2476;60-60;17-84];</data>
    </edge>
    <edge id="e1091" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()" target="org.apache.commons.io.input.ReversedLinesFileReader(java.io.File,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2077-2145;54-54;17-85];</data>
    </edge>
    <edge id="e1092" source="org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()" target="org.apache.commons.io.input.ReversedLinesFileReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java;[2077-2145;54-54;17-85];</data>
    </edge>
    <edge id="e1093" source="org.apache.commons.io.input.SwappedDataInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[1530-1578;46-46;12-60];</data>
    </edge>
    <edge id="e1094" source="org.apache.commons.io.input.SwappedDataInputStream.readBoolean()" target="org.apache.commons.io.input.SwappedDataInputStream.readByte()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[1886-1939;57-58;20-40];</data>
    </edge>
    <edge id="e1095" source="org.apache.commons.io.input.SwappedDataInputStream.readChar()" target="org.apache.commons.io.input.SwappedDataInputStream.readShort()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[2618-2668;81-82;17-40];</data>
    </edge>
    <edge id="e1096" source="org.apache.commons.io.input.SwappedDataInputStream.readDouble()" target="org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[2973-3025;93-94;19-40];</data>
    </edge>
    <edge id="e1097" source="org.apache.commons.io.input.SwappedDataInputStream.readFloat()" target="org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[3346-3397;105-106;18-40];</data>
    </edge>
    <edge id="e1098" source="org.apache.commons.io.input.SwappedDataInputStream.readInt()" target="org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[4983-5032;159-160;16-40];</data>
    </edge>
    <edge id="e1099" source="org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[6896-6955;220-221;16-40];</data>
    </edge>
    <edge id="e1100" source="org.apache.commons.io.input.SwappedDataInputStream.readLong()" target="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[5786-5836;184-185;17-40];</data>
    </edge>
    <edge id="e1101" source="org.apache.commons.io.input.SwappedDataInputStream.readShort()" target="org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[6155-6206;196-197;18-40];</data>
    </edge>
    <edge id="e1102" source="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[])" target="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[3755-3825;118-119;17-40];</data>
    </edge>
    <edge id="e1103" source="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[],int,int)" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java;[4263-4369;134-135;17-40];</data>
    </edge>
    <edge id="e1104" source="org.apache.commons.io.input.SwappedDataInputStreamTest.setUp()" target="org.apache.commons.io.input.SwappedDataInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1402-1408;43-43;17-23];</data>
    </edge>
    <edge id="e1105" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()" target="org.apache.commons.io.input.SwappedDataInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1827-1862;63-63;17-52];</data>
    </edge>
    <edge id="e1106" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()" target="org.apache.commons.io.input.SwappedDataInputStream.readBoolean()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1827-1862;63-63;17-52/1827-1862;63-63;17-52/1827-1862;63-63;17-52];</data>
    </edge>
    <edge id="e1107" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[1827-1862;63-63;17-52];</data>
    </edge>
    <edge id="e1108" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()" target="org.apache.commons.io.input.SwappedDataInputStream.readByte()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2313-2345;77-77;17-49];</data>
    </edge>
    <edge id="e1109" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()" target="org.apache.commons.io.input.SwappedDataInputStream.readChar()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2424-2456;81-81;17-49];</data>
    </edge>
    <edge id="e1110" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()" target="org.apache.commons.io.input.SwappedDataInputStream.readDouble()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2544-2578;85-85;17-51];</data>
    </edge>
    <edge id="e1111" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()" target="org.apache.commons.io.input.SwappedDataInputStream.readFloat()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2702-2735;89-89;17-50];</data>
    </edge>
    <edge id="e1112" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()" target="org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[2846-2879;93-93;17-50];</data>
    </edge>
    <edge id="e1113" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()" target="org.apache.commons.io.input.SwappedDataInputStream.readInt()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3082-3113;101-101;17-48];</data>
    </edge>
    <edge id="e1114" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()" target="org.apache.commons.io.input.SwappedDataInputStream.readLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3197-3229;105-105;17-49];</data>
    </edge>
    <edge id="e1115" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()" target="org.apache.commons.io.input.SwappedDataInputStream.readLong()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3427-3459;113-113;17-49];</data>
    </edge>
    <edge id="e1116" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()" target="org.apache.commons.io.input.SwappedDataInputStream.readShort()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3553-3586;117-117;17-50];</data>
    </edge>
    <edge id="e1117" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()" target="org.apache.commons.io.input.SwappedDataInputStream.readUTF()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3942-3973;129-129;17-48];</data>
    </edge>
    <edge id="e1118" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()" target="org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3676-3716;121-121;17-57];</data>
    </edge>
    <edge id="e1119" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()" target="org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[3803-3844;125-125;17-58];</data>
    </edge>
    <edge id="e1120" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()" target="org.apache.commons.io.input.SwappedDataInputStream.skipBytes(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[4169-4202;137-137;17-50];</data>
    </edge>
    <edge id="e1121" source="org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()" target="org.apache.commons.io.input.SwappedDataInputStream.readInt()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java;[4169-4202;137-137;17-50];</data>
    </edge>
    <edge id="e1122" source="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[2699-2740;76-76;12-53];</data>
    </edge>
    <edge id="e1123" source="org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)" target="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3026-3061;87-87;20-55];</data>
    </edge>
    <edge id="e1124" source="org.apache.commons.io.input.TaggedInputStream.handleIOException(java.io.IOException)" target="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3968-4024;112-112;20-76];</data>
    </edge>
    <edge id="e1125" source="org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)" target="org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TaggedInputStream.java;[3623-3682;101-101;17-76];</data>
    </edge>
    <edge id="e1126" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1127" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.BrokenInputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1128" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.ProxyInputStream.available()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1129" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34/2356-2373;64-64;17-34/2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1130" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34/2356-2373;64-64;17-34/2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1131" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1132" source="org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[2356-2373;64-64;17-34];</data>
    </edge>
    <edge id="e1133" source="org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream()" target="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1172-1188;33-33;17-33];</data>
    </edge>
    <edge id="e1134" source="org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1172-1188;33-33;17-33];</data>
    </edge>
    <edge id="e1135" source="org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream()" target="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[1655-1672;46-46;17-34];</data>
    </edge>
    <edge id="e1136" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1137" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.input.TaggedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1138" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53/3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1139" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53/3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1140" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53/3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1141" source="org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java;[3924-3960;112-112;17-53];</data>
    </edge>
    <edge id="e1142" source="org.apache.commons.io.input.Tailer(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)" target="org.apache.commons.io.input.TailerListener.init(org.apache.commons.io.input.Tailer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[9059-9229;249-250;12-32];</data>
    </edge>
    <edge id="e1143" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener)" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[5320-5373;177-177;12-65];</data>
    </edge>
    <edge id="e1144" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long)" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[5721-5798;187-187;12-89];</data>
    </edge>
    <edge id="e1145" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[6267-6363;198-198;12-108];</data>
    </edge>
    <edge id="e1146" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean)" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[6926-7044;210-210;12-130];</data>
    </edge>
    <edge id="e1147" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)" target="org.apache.commons.io.input.Tailer(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[8257-8394;235-235;12-149];</data>
    </edge>
    <edge id="e1148" source="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[7558-7673;222-222;12-127];</data>
    </edge>
    <edge id="e1149" source="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" target="org.apache.commons.io.input.Tailer.getRun()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[19260-19318;503-503;18-76];</data>
    </edge>
    <edge id="e1150" source="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" target="org.apache.commons.io.input.TailerListener.handle(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[19260-19318;503-503;18-76/19260-19318;503-503;18-76];</data>
    </edge>
    <edge id="e1151" source="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[19260-19318;503-503;18-76];</data>
    </edge>
    <edge id="e1152" source="org.apache.commons.io.input.Tailer.create(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)" target="org.apache.commons.io.input.Tailer(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[11578-11750;306-307;26-31];</data>
    </edge>
    <edge id="e1153" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener)" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14160-14213;362-362;26-79];</data>
    </edge>
    <edge id="e1154" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long)" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[13715-13792;350-350;26-103];</data>
    </edge>
    <edge id="e1155" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[12445-12541;324-324;26-122];</data>
    </edge>
    <edge id="e1156" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean)" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[13148-13266;338-338;26-144];</data>
    </edge>
    <edge id="e1157" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)" target="org.apache.commons.io.input.Tailer.create(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[10727-10876;289-290;26-30];</data>
    </edge>
    <edge id="e1158" source="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[9996-10111;274-274;26-141];</data>
    </edge>
    <edge id="e1159" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.Tailer.getRun()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21/14903-14907;397-397;17-21/14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1160" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.TailerListener.fileNotFound()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21/14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1161" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1162" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.TailerListener.fileRotated()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1163" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21/14903-14907;397-397;17-21/14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1164" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.TailerListener.handle(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1165" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21/14903-14907;397-397;17-21/14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1166" source="org.apache.commons.io.input.Tailer.run()" target="org.apache.commons.io.input.Tailer.stop(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[14903-14907;397-397;17-21/14903-14907;397-397;17-21];</data>
    </edge>
    <edge id="e1167" source="org.apache.commons.io.input.Tailer.stop(java.lang.Exception)" target="org.apache.commons.io.input.TailerListener.handle(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[18820-18842;484-484;18-40];</data>
    </edge>
    <edge id="e1168" source="org.apache.commons.io.input.Tailer.stop(java.lang.Exception)" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/Tailer.java;[18820-18842;484-484;18-40];</data>
    </edge>
    <edge id="e1169" source="org.apache.commons.io.input.TailerTest(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1766-1794;51-51;12-40];</data>
    </edge>
    <edge id="e1170" source="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[10108-10178;266-267;20-26];</data>
    </edge>
    <edge id="e1171" source="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[10108-10178;266-267;20-26];</data>
    </edge>
    <edge id="e1172" source="org.apache.commons.io.input.TailerTest.tearDown()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1859-1885;56-56;20-46];</data>
    </edge>
    <edge id="e1173" source="org.apache.commons.io.input.TailerTest.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1859-1885;56-56;20-46];</data>
    </edge>
    <edge id="e1174" source="org.apache.commons.io.input.TailerTest.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[1859-1885;56-56;20-46];</data>
    </edge>
    <edge id="e1175" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1176" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1177" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.TailerTest.writeString(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1178" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1179" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1180" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50/3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1181" source="org.apache.commons.io.input.TailerTest.testBufferBreak()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3102-3135;94-94;17-50];</data>
    </edge>
    <edge id="e1182" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1183" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1184" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1185" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1186" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.TailerTest.writeString(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1187" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1188" source="org.apache.commons.io.input.TailerTest.testIO335()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[14759-14786;377-377;17-44];</data>
    </edge>
    <edge id="e1189" source="org.apache.commons.io.input.TailerTest.testInterrupt()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[12613-12644;336-336;17-48];</data>
    </edge>
    <edge id="e1190" source="org.apache.commons.io.input.TailerTest.testInterrupt()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[12613-12644;336-336;17-48];</data>
    </edge>
    <edge id="e1191" source="org.apache.commons.io.input.TailerTest.testInterrupt()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[12613-12644;336-336;17-48];</data>
    </edge>
    <edge id="e1192" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1193" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1194" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1195" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1196" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1197" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47/2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1198" source="org.apache.commons.io.input.TailerTest.testLongFile()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[2094-2124;65-65;17-47];</data>
    </edge>
    <edge id="e1199" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1200" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1201" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1202" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.input.Tailer(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1203" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1204" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1205" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1206" source="org.apache.commons.io.input.TailerTest.testMultiByteBreak()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[3832-3868;116-116;17-53];</data>
    </edge>
    <edge id="e1207" source="org.apache.commons.io.input.TailerTest.testStopWithNoFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11658-11694;316-316;17-53];</data>
    </edge>
    <edge id="e1208" source="org.apache.commons.io.input.TailerTest.testStopWithNoFile()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11658-11694;316-316;17-53];</data>
    </edge>
    <edge id="e1209" source="org.apache.commons.io.input.TailerTest.testStopWithNoFile()" target="org.apache.commons.io.input.Tailer.create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11658-11694;316-316;17-53];</data>
    </edge>
    <edge id="e1210" source="org.apache.commons.io.input.TailerTest.testStopWithNoFile()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11658-11694;316-316;17-53];</data>
    </edge>
    <edge id="e1211" source="org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[13813-13862;358-358;17-66];</data>
    </edge>
    <edge id="e1212" source="org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[13813-13862;358-358;17-66];</data>
    </edge>
    <edge id="e1213" source="org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[13813-13862;358-358;17-66];</data>
    </edge>
    <edge id="e1214" source="org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[13813-13862;358-358;17-66];</data>
    </edge>
    <edge id="e1215" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1216" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45/7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1217" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1218" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1219" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.TailerTest.write(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45/7265-7293;198-198;17-45/7265-7293;198-198;17-45/7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1220" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45/7265-7293;198-198;17-45/7265-7293;198-198;17-45/7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1221" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45/7265-7293;198-198;17-45/7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1222" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1223" source="org.apache.commons.io.input.TailerTest.testTailer()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[7265-7293;198-198;17-45];</data>
    </edge>
    <edge id="e1224" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1225" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.TailerTest.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1226" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.TailerTest$TestTailerListener()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1227" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.Tailer(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1228" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.TailerTest.writeString(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48/6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1229" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48/6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1230" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.TailerTest$TestTailerListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1231" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.input.Tailer.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1232" source="org.apache.commons.io.input.TailerTest.testTailerEof()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[6122-6153;164-164;17-48];</data>
    </edge>
    <edge id="e1233" source="org.apache.commons.io.input.TailerTest.write(java.io.File,java.lang.String[])" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[10892-10953;291-291;18-79];</data>
    </edge>
    <edge id="e1234" source="org.apache.commons.io.input.TailerTest.writeString(java.io.File,java.lang.String[])" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java;[11290-11360;304-304;18-88];</data>
    </edge>
    <edge id="e1235" source="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream)" target="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[2323-2388;61-61;12-77];</data>
    </edge>
    <edge id="e1236" source="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream,boolean)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[2984-3089;76-77;12-90];</data>
    </edge>
    <edge id="e1237" source="org.apache.commons.io.input.TeeInputStream.read()" target="org.apache.commons.io.input.ProxyInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[3997-4021;109-109;16-40];</data>
    </edge>
    <edge id="e1238" source="org.apache.commons.io.input.TeeInputStream.read(byte[])" target="org.apache.commons.io.input.ProxyInputStream.read(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[5142-5182;145-145;16-56];</data>
    </edge>
    <edge id="e1239" source="org.apache.commons.io.input.TeeInputStream.read(byte[],int,int)" target="org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[4588-4657;128-128;16-85];</data>
    </edge>
    <edge id="e1240" source="org.apache.commons.io.input.TeeInputStream.close()" target="org.apache.commons.io.input.ProxyInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/TeeInputStream.java;[3505-3530;91-91;17-42];</data>
    </edge>
    <edge id="e1241" source="org.apache.commons.io.input.TeeInputStreamTest.setUp()" target="org.apache.commons.io.input.TeeInputStream(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java;[1240-1263;37-37;20-43];</data>
    </edge>
    <edge id="e1242" source="org.apache.commons.io.input.UnixLineEndingInputStream.read()" target="org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[2077-2101;66-66;16-40/2077-2101;66-66;16-40];</data>
    </edge>
    <edge id="e1243" source="org.apache.commons.io.input.UnixLineEndingInputStream.read()" target="org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[2077-2101;66-66;16-40];</data>
    </edge>
    <edge id="e1244" source="org.apache.commons.io.input.UnixLineEndingInputStream.read()" target="org.apache.commons.io.input.UnixLineEndingInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java;[2077-2101;66-66;16-40];</data>
    </edge>
    <edge id="e1245" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[2144-2185;75-75;20-61];</data>
    </edge>
    <edge id="e1246" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)" target="org.apache.commons.io.input.UnixLineEndingInputStream(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[2254-2311;79-79;20-77];</data>
    </edge>
    <edge id="e1247" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)" target="org.apache.commons.io.input.UnixLineEndingInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[2254-2311;79-79;20-77];</data>
    </edge>
    <edge id="e1248" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crAtEnd()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1848-1873;64-64;17-42];</data>
    </edge>
    <edge id="e1249" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyEnsureAtEof()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1568-1611;50-51;17-24];</data>
    </edge>
    <edge id="e1250" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyNotAtEof()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1707-1747;57-58;17-24];</data>
    </edge>
    <edge id="e1251" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.inTheMiddleOfTheLine()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1169-1207;35-35;17-55];</data>
    </edge>
    <edge id="e1252" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.multipleBlankLines()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1303-1339;40-40;17-53];</data>
    </edge>
    <edge id="e1253" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1962-1994;70-70;17-49/1962-1994;70-70;17-49];</data>
    </edge>
    <edge id="e1254" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1049-1079;30-30;17-47];</data>
    </edge>
    <edge id="e1255" source="org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd()" target="org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java;[1441-1472;45-45;17-48];</data>
    </edge>
    <edge id="e1256" source="org.apache.commons.io.input.WindowsLineEndingInputStream.read()" target="org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[2110-2134;65-65;16-40/2110-2134;65-65;16-40];</data>
    </edge>
    <edge id="e1257" source="org.apache.commons.io.input.WindowsLineEndingInputStream.read()" target="org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java;[2110-2134;65-65;16-40];</data>
    </edge>
    <edge id="e1258" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[2076-2117;65-65;20-61];</data>
    </edge>
    <edge id="e1259" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)" target="org.apache.commons.io.input.WindowsLineEndingInputStream(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[2186-2243;69-69;20-77];</data>
    </edge>
    <edge id="e1260" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)" target="org.apache.commons.io.input.WindowsLineEndingInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[2186-2243;69-69;20-77];</data>
    </edge>
    <edge id="e1261" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.inTheMiddleOfTheLine()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1173-1211;33-33;17-55];</data>
    </edge>
    <edge id="e1262" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1586-1618;48-48;17-49];</data>
    </edge>
    <edge id="e1263" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.malformed()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1764-1791;55-55;17-44];</data>
    </edge>
    <edge id="e1264" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.multipleBlankLines()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1311-1347;38-38;17-53];</data>
    </edge>
    <edge id="e1265" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1890-1922;60-60;17-49/1890-1922;60-60;17-49];</data>
    </edge>
    <edge id="e1266" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1051-1081;28-28;17-47];</data>
    </edge>
    <edge id="e1267" source="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd()" target="org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java;[1455-1486;43-43;17-48];</data>
    </edge>
    <edge id="e1268" source="org.apache.commons.io.input.XmlStreamReader(java.io.File)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[5183-5233;137-137;12-62];</data>
    </edge>
    <edge id="e1269" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[5689-5744;152-152;12-67];</data>
    </edge>
    <edge id="e1270" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[6869-6947;183-183;12-90];</data>
    </edge>
    <edge id="e1271" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean,java.lang.String)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[8132-8240;215-215;12-120/8132-8240;215-215;12-120];</data>
    </edge>
    <edge id="e1272" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[8132-8240;215-215;12-120];</data>
    </edge>
    <edge id="e1273" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[11832-11929;295-296;12-30];</data>
    </edge>
    <edge id="e1274" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[15678-15798;376-377;12-53];</data>
    </edge>
    <edge id="e1275" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[13587-13737;334-335;12-83/13587-13737;334-335;12-83];</data>
    </edge>
    <edge id="e1276" source="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[13587-13737;334-335;12-83];</data>
    </edge>
    <edge id="e1277" source="org.apache.commons.io.input.XmlStreamReader(java.net.URL)" target="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[9313-9361;240-240;12-60];</data>
    </edge>
    <edge id="e1278" source="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" target="org.apache.commons.io.input.BOMInputStream(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[10241-10330;263-263;12-101/10241-10330;263-263;12-101];</data>
    </edge>
    <edge id="e1279" source="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[10241-10330;263-263;12-101];</data>
    </edge>
    <edge id="e1280" source="org.apache.commons.io.input.XmlStreamReader(java.net.URLConnection,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[10241-10330;263-263;12-101];</data>
    </edge>
    <edge id="e1281" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1282" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1283" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1284" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1285" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53/23755-23939;579-581;12-53/23755-23939;579-581;12-53/23755-23939;579-581;12-53/23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1286" source="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[23755-23939;579-581;12-53];</data>
    </edge>
    <edge id="e1287" source="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[20455-20573;507-508;12-51/20455-20573;507-508;12-51/20455-20573;507-508;12-51/20455-20573;507-508;12-51/20455-20573;507-508;12-51/20455-20573;507-508;12-51/20455-20573;507-508;12-51];</data>
    </edge>
    <edge id="e1288" source="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[18247-18394;450-451;20-53/18247-18394;450-451;20-53];</data>
    </edge>
    <edge id="e1289" source="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[18247-18394;450-451;20-53];</data>
    </edge>
    <edge id="e1290" source="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[18247-18394;450-451;20-53];</data>
    </edge>
    <edge id="e1291" source="org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" target="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[18247-18394;450-451;20-53];</data>
    </edge>
    <edge id="e1292" source="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59];</data>
    </edge>
    <edge id="e1293" source="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59];</data>
    </edge>
    <edge id="e1294" source="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59];</data>
    </edge>
    <edge id="e1295" source="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59/19262-19363;476-477;20-59];</data>
    </edge>
    <edge id="e1296" source="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[19262-19363;476-477;20-59];</data>
    </edge>
    <edge id="e1297" source="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" target="org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[17196-17312;423-424;20-30/17196-17312;423-424;20-30];</data>
    </edge>
    <edge id="e1298" source="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" target="org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[17196-17312;423-424;20-30];</data>
    </edge>
    <edge id="e1299" source="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" target="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[17196-17312;423-424;20-30];</data>
    </edge>
    <edge id="e1300" source="org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" target="org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java;[17196-17312;423-424;20-30];</data>
    </edge>
    <edge id="e1301" source="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReaderException.java;[2144-2265;59-60;12-58];</data>
    </edge>
    <edge id="e1302" source="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[21184-21318;430-431;27-78];</data>
    </edge>
    <edge id="e1303" source="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14848-15030;300-302;17-28];</data>
    </edge>
    <edge id="e1304" source="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14848-15030;300-302;17-28];</data>
    </edge>
    <edge id="e1305" source="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14848-15030;300-302;17-28/14848-15030;300-302;17-28];</data>
    </edge>
    <edge id="e1306" source="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14848-15030;300-302;17-28];</data>
    </edge>
    <edge id="e1307" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[16811-16941;337-338;20-52];</data>
    </edge>
    <edge id="e1308" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[16811-16941;337-338;20-52];</data>
    </edge>
    <edge id="e1309" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[17475-17628;351-352;20-75];</data>
    </edge>
    <edge id="e1310" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[17475-17628;351-352;20-75];</data>
    </edge>
    <edge id="e1311" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[17475-17628;351-352;20-75];</data>
    </edge>
    <edge id="e1312" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[17475-17628;351-352;20-75];</data>
    </edge>
    <edge id="e1313" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[15931-16059;320-321;17-52];</data>
    </edge>
    <edge id="e1314" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[15931-16059;320-321;17-52];</data>
    </edge>
    <edge id="e1315" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[15931-16059;320-321;17-52/15931-16059;320-321;17-52];</data>
    </edge>
    <edge id="e1316" source="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[15931-16059;320-321;17-52];</data>
    </edge>
    <edge id="e1317" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4642-4757;133-134;20-52];</data>
    </edge>
    <edge id="e1318" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4642-4757;133-134;20-52];</data>
    </edge>
    <edge id="e1319" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4642-4757;133-134;20-52];</data>
    </edge>
    <edge id="e1320" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4642-4757;133-134;20-52];</data>
    </edge>
    <edge id="e1321" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4076-4131;120-120;20-75];</data>
    </edge>
    <edge id="e1322" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4076-4131;120-120;20-75];</data>
    </edge>
    <edge id="e1323" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4076-4131;120-120;20-75/4076-4131;120-120;20-75];</data>
    </edge>
    <edge id="e1324" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[4076-4131;120-120;20-75];</data>
    </edge>
    <edge id="e1325" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[2772-2831;70-70;20-79];</data>
    </edge>
    <edge id="e1326" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[2772-2831;70-70;20-79];</data>
    </edge>
    <edge id="e1327" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77];</data>
    </edge>
    <edge id="e1328" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77];</data>
    </edge>
    <edge id="e1329" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77];</data>
    </edge>
    <edge id="e1330" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77];</data>
    </edge>
    <edge id="e1331" source="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77/1688-1745;43-43;20-77];</data>
    </edge>
    <edge id="e1332" source="org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[18257-18299;368-368;17-59];</data>
    </edge>
    <edge id="e1333" source="org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[18257-18299;368-368;17-59];</data>
    </edge>
    <edge id="e1334" source="org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[18257-18299;368-368;17-59];</data>
    </edge>
    <edge id="e1335" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttp()" target="org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43];</data>
    </edge>
    <edge id="e1336" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttp()" target="org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43];</data>
    </edge>
    <edge id="e1337" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttp()" target="org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43];</data>
    </edge>
    <edge id="e1338" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttp()" target="org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43/7022-7048;191-191;17-43];</data>
    </edge>
    <edge id="e1339" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()" target="org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14361-14394;291-291;17-50];</data>
    </edge>
    <edge id="e1340" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14361-14394;291-291;17-50];</data>
    </edge>
    <edge id="e1341" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14361-14394;291-291;17-50];</data>
    </edge>
    <edge id="e1342" source="org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[14361-14394;291-291;17-50];</data>
    </edge>
    <edge id="e1343" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6257-6290;168-168;17-50/6257-6290;168-168;17-50/6257-6290;168-168;17-50];</data>
    </edge>
    <edge id="e1344" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6257-6290;168-168;17-50/6257-6290;168-168;17-50/6257-6290;168-168;17-50];</data>
    </edge>
    <edge id="e1345" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6641-6674;179-179;17-50/6641-6674;179-179;17-50/6641-6674;179-179;17-50];</data>
    </edge>
    <edge id="e1346" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[6641-6674;179-179;17-50/6641-6674;179-179;17-50/6641-6674;179-179;17-50];</data>
    </edge>
    <edge id="e1347" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[5433-5465;152-152;17-49];</data>
    </edge>
    <edge id="e1348" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49/5433-5465;152-152;17-49];</data>
    </edge>
    <edge id="e1349" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()" target="org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[13875-13907;281-281;17-49];</data>
    </edge>
    <edge id="e1350" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[13875-13907;281-281;17-49];</data>
    </edge>
    <edge id="e1351" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()" target="org.apache.commons.io.input.XmlStreamReader.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[13875-13907;281-281;17-49];</data>
    </edge>
    <edge id="e1352" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[13875-13907;281-281;17-49];</data>
    </edge>
    <edge id="e1353" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomCp1047()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3972-4008;116-116;17-53];</data>
    </edge>
    <edge id="e1354" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomIso8859_1()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3854-3893;111-111;17-56];</data>
    </edge>
    <edge id="e1355" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUsAscii()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3176-3213;81-81;17-54];</data>
    </edge>
    <edge id="e1356" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16BE()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3398-3435;91-91;17-54];</data>
    </edge>
    <edge id="e1357" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16LE()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3512-3549;96-96;17-54];</data>
    </edge>
    <edge id="e1358" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32BE()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3626-3663;101-101;17-54];</data>
    </edge>
    <edge id="e1359" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3740-3777;106-106;17-54];</data>
    </edge>
    <edge id="e1360" source="org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8()" target="org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java;[3290-3324;86-86;17-51];</data>
    </edge>
    <edge id="e1361" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader(java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader(java.io.InputStream,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[19557-19624;328-328;9-76];</data>
    </edge>
    <edge id="e1362" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[17605-17807;298-299;22-104];</data>
    </edge>
    <edge id="e1363" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[17605-17807;298-299;22-104];</data>
    </edge>
    <edge id="e1364" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[17605-17807;298-299;22-104];</data>
    </edge>
    <edge id="e1365" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11342-11490;216-217;22-60];</data>
    </edge>
    <edge id="e1366" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11342-11490;216-217;22-60];</data>
    </edge>
    <edge id="e1367" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11342-11490;216-217;22-60];</data>
    </edge>
    <edge id="e1368" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[4897-4950;104-104;18-71];</data>
    </edge>
    <edge id="e1369" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3310-3386;69-69;18-94];</data>
    </edge>
    <edge id="e1370" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3992-4064;83-83;18-90];</data>
    </edge>
    <edge id="e1371" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[16596-16817;284-285;18-128];</data>
    </edge>
    <edge id="e1372" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1373" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1374" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1375" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1376" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1377" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1378" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1379" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[18070-18270;306-307;18-109];</data>
    </edge>
    <edge id="e1380" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[10567-10734;204-205;18-128];</data>
    </edge>
    <edge id="e1381" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1382" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1383" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1384" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1385" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1386" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[11726-11872;224-225;18-109];</data>
    </edge>
    <edge id="e1387" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(boolean,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5557-5611;122-122;18-72];</data>
    </edge>
    <edge id="e1388" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28/4231-4242;88-88;17-28];</data>
    </edge>
    <edge id="e1389" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62];</data>
    </edge>
    <edge id="e1390" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62/12822-12867;243-243;17-62];</data>
    </edge>
    <edge id="e1391" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67];</data>
    </edge>
    <edge id="e1392" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67/15134-15184;268-268;17-67];</data>
    </edge>
    <edge id="e1393" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75];</data>
    </edge>
    <edge id="e1394" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75/8624-8682;175-175;17-75];</data>
    </edge>
    <edge id="e1395" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75];</data>
    </edge>
    <edge id="e1396" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75/9600-9658;190-190;17-75];</data>
    </edge>
    <edge id="e1397" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5736-5785;127-127;17-66];</data>
    </edge>
    <edge id="e1398" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66/5736-5785;127-127;17-66];</data>
    </edge>
    <edge id="e1399" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[6954-7006;145-145;17-69/6954-7006;145-145;17-69/6954-7006;145-145;17-69];</data>
    </edge>
    <edge id="e1400" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[7752-7871;161-161;18-137/7752-7871;161-161;18-137/7752-7871;161-161;18-137/7752-7871;161-161;18-137];</data>
    </edge>
    <edge id="e1401" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[7752-7871;161-161;18-137/7752-7871;161-161;18-137/7752-7871;161-161;18-137/7752-7871;161-161;18-137];</data>
    </edge>
    <edge id="e1402" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[7364-7421;154-154;17-74/7364-7421;154-154;17-74/7364-7421;154-154;17-74];</data>
    </edge>
    <edge id="e1403" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41/2176-2200;51-51;17-41];</data>
    </edge>
    <edge id="e1404" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[3561-3581;74-74;17-37/3561-3581;74-74;17-37/3561-3581;74-74;17-37/3561-3581;74-74;17-37/3561-3581;74-74;17-37/3561-3581;74-74;17-37];</data>
    </edge>
    <edge id="e1405" source="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml()" target="org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java;[5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29/5074-5086;109-109;17-29];</data>
    </edge>
    <edge id="e1406" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[5807-5822;150-150;20-35/5807-5822;150-150;20-35];</data>
    </edge>
    <edge id="e1407" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[5807-5822;150-150;20-35/5807-5822;150-150;20-35];</data>
    </edge>
    <edge id="e1408" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1409" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1410" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1411" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1412" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1413" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[4102-4510;122-128;20-61/4102-4510;122-128;20-61];</data>
    </edge>
    <edge id="e1414" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[3491-3531;107-107;20-60];</data>
    </edge>
    <edge id="e1415" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[2853-2912;86-86;20-79];</data>
    </edge>
    <edge id="e1416" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[2853-2912;86-86;20-79/2853-2912;86-86;20-79];</data>
    </edge>
    <edge id="e1417" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationListenerAdaptor()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[2853-2912;86-86;20-79];</data>
    </edge>
    <edge id="e1418" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationObserver.initialize()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[2853-2912;86-86;20-79];</data>
    </edge>
    <edge id="e1419" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1420" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1421" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1422" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43/1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1423" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1424" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1425" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[1863-1886;59-59;20-43];</data>
    </edge>
    <edge id="e1426" source="org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/AbstractMonitorTestCase.java;[3273-3299;98-98;20-46];</data>
    </edge>
    <edge id="e1427" source="org.apache.commons.io.monitor.CollectionFileListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)" target="org.apache.commons.io.monitor.CollectionFileListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/CollectionFileListener.java;[2134-2179;53-53;17-62];</data>
    </edge>
    <edge id="e1428" source="org.apache.commons.io.monitor.FileAlterationMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitor(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[1655-1677;42-42;12-34];</data>
    </edge>
    <edge id="e1429" source="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])" target="org.apache.commons.io.monitor.FileAlterationMonitor(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[2276-2360;63-63;12-96];</data>
    </edge>
    <edge id="e1430" source="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])" target="org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[2276-2360;63-63;12-96];</data>
    </edge>
    <edge id="e1431" source="org.apache.commons.io.monitor.FileAlterationMonitor.run()" target="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[5480-5484;179-179;17-21];</data>
    </edge>
    <edge id="e1432" source="org.apache.commons.io.monitor.FileAlterationMonitor.start()" target="org.apache.commons.io.monitor.FileAlterationObserver.initialize()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[3960-3983;128-128;30-53];</data>
    </edge>
    <edge id="e1433" source="org.apache.commons.io.monitor.FileAlterationMonitor.stop()" target="org.apache.commons.io.monitor.FileAlterationMonitor.stop(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[4562-4584;149-149;30-52];</data>
    </edge>
    <edge id="e1434" source="org.apache.commons.io.monitor.FileAlterationMonitor.stop(long)" target="org.apache.commons.io.monitor.FileAlterationObserver.destroy()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationMonitor.java;[4974-5019;161-161;30-75];</data>
    </edge>
    <edge id="e1435" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase(java.lang.String)" target="org.apache.commons.io.monitor.AbstractMonitorTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1198-1245;34-34;12-59];</data>
    </edge>
    <edge id="e1436" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String,java.io.File,java.util.Collection)" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[5819-5894;173-173;18-93];</data>
    </edge>
    <edge id="e1437" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp()" target="org.apache.commons.io.monitor.CollectionFileListener(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1348-1371;40-40;20-43];</data>
    </edge>
    <edge id="e1438" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1348-1371;40-40;20-43];</data>
    </edge>
    <edge id="e1439" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40/1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1440" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1441" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40/1763-1786;56-56;17-40/1763-1786;56-56;17-40/1763-1786;56-56;17-40/1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1442" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40/1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1443" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40/1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1444" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()" target="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1763-1786;56-56;17-40];</data>
    </edge>
    <edge id="e1445" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor()" target="org.apache.commons.io.monitor.FileAlterationMonitor()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1524-1547;48-48;17-40];</data>
    </edge>
    <edge id="e1446" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor()" target="org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[1524-1547;48-48;17-40];</data>
    </edge>
    <edge id="e1447" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.CollectionFileListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29/3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1448" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1449" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1450" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitor.start()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1451" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1452" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1453" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String,java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1454" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1455" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1456" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1457" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()" target="org.apache.commons.io.monitor.FileAlterationMonitor.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[3154-3166;91-91;17-29/3154-3166;91-91;17-29];</data>
    </edge>
    <edge id="e1458" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.CollectionFileListener.clear()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35/4733-4751;140-140;17-35/4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1459" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitor(long,org.apache.commons.io.monitor.FileAlterationObserver[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1460" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(java.util.concurrent.ThreadFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1461" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1462" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitor.start()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1463" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35/4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1464" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1465" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String,java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35/4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1466" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1467" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1468" source="org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()" target="org.apache.commons.io.monitor.FileAlterationMonitor.stop()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java;[4733-4751;140-140;17-35];</data>
    </edge>
    <edge id="e1469" source="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[6698-6741;166-166;12-55];</data>
    </edge>
    <edge id="e1470" source="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[7009-7081;176-176;12-84];</data>
    </edge>
    <edge id="e1471" source="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)" target="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[7491-7593;188-188;12-114];</data>
    </edge>
    <edge id="e1472" source="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)" target="org.apache.commons.io.monitor.FileEntry(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[7491-7593;188-188;12-114];</data>
    </edge>
    <edge id="e1473" source="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[5537-5586;135-135;12-61];</data>
    </edge>
    <edge id="e1474" source="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String,java.io.FileFilter)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[5866-5944;145-145;12-90];</data>
    </edge>
    <edge id="e1475" source="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[6370-6478;157-157;12-120];</data>
    </edge>
    <edge id="e1476" source="org.apache.commons.io.monitor.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[8029-8136;200-200;15-122];</data>
    </edge>
    <edge id="e1477" source="org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[8983-8996;223-223;17-30];</data>
    </edge>
    <edge id="e1478" source="org.apache.commons.io.monitor.FileAlterationObserver.toString()" target="org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[16100-16109;449-449;19-28];</data>
    </edge>
    <edge id="e1479" source="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
    </edge>
    <edge id="e1480" source="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
    </edge>
    <edge id="e1481" source="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
    </edge>
    <edge id="e1482" source="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
    </edge>
    <edge id="e1483" source="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileEntry.setChildren(org.apache.commons.io.monitor.FileEntry[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13125-13180;358-358;23-78];</data>
    </edge>
    <edge id="e1484" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileAlterationListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1485" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1486" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32/10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1487" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileEntry.getChildren()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32/10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1488" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1489" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileEntry.isExists()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1490" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()" target="org.apache.commons.io.monitor.FileAlterationListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10791-10806;295-295;17-32];</data>
    </edge>
    <edge id="e1491" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103/11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1492" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103/11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1493" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103/11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1494" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1495" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103/11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1496" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileEntry.getChildren()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103/11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1497" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1498" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1499" source="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])" target="org.apache.commons.io.monitor.FileEntry.setChildren(org.apache.commons.io.monitor.FileEntry[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[11779-11864;325-325;18-103];</data>
    </edge>
    <edge id="e1500" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileEntry.isDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1501" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1502" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48/13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1503" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1504" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileEntry.getChildren()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1505" source="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[13764-13794;375-375;18-48];</data>
    </edge>
    <edge id="e1506" source="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileEntry.isDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14943-14973;412-412;18-48];</data>
    </edge>
    <edge id="e1507" source="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14943-14973;412-412;18-48];</data>
    </edge>
    <edge id="e1508" source="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14943-14973;412-412;18-48/14943-14973;412-412;18-48];</data>
    </edge>
    <edge id="e1509" source="org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)" target="org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14943-14973;412-412;18-48];</data>
    </edge>
    <edge id="e1510" source="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14423-14469;395-395;18-64];</data>
    </edge>
    <edge id="e1511" source="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileEntry.isDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14423-14469;395-395;18-64];</data>
    </edge>
    <edge id="e1512" source="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14423-14469;395-395;18-64];</data>
    </edge>
    <edge id="e1513" source="org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" target="org.apache.commons.io.monitor.FileAlterationListener.onFileChange(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[14423-14469;395-395;18-64];</data>
    </edge>
    <edge id="e1514" source="org.apache.commons.io.monitor.FileAlterationObserver.initialize()" target="org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45];</data>
    </edge>
    <edge id="e1515" source="org.apache.commons.io.monitor.FileAlterationObserver.initialize()" target="org.apache.commons.io.monitor.FileEntry.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45/10105-10133;274-274;17-45];</data>
    </edge>
    <edge id="e1516" source="org.apache.commons.io.monitor.FileAlterationObserver.initialize()" target="org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45];</data>
    </edge>
    <edge id="e1517" source="org.apache.commons.io.monitor.FileAlterationObserver.initialize()" target="org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45];</data>
    </edge>
    <edge id="e1518" source="org.apache.commons.io.monitor.FileAlterationObserver.initialize()" target="org.apache.commons.io.monitor.FileEntry.setChildren(org.apache.commons.io.monitor.FileEntry[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java;[10105-10133;274-274;17-45];</data>
    </edge>
    <edge id="e1519" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase(java.lang.String)" target="org.apache.commons.io.monitor.AbstractMonitorTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1316-1364;37-37;12-60];</data>
    </edge>
    <edge id="e1520" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()" target="org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[18203-18235;397-397;20-52];</data>
    </edge>
    <edge id="e1521" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp()" target="org.apache.commons.io.monitor.CollectionFileListener(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1468-1491;43-43;20-43];</data>
    </edge>
    <edge id="e1522" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1468-1491;43-43;20-43];</data>
    </edge>
    <edge id="e1523" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()" target="org.apache.commons.io.monitor.FileAlterationObserver(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40];</data>
    </edge>
    <edge id="e1524" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()" target="org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40/1644-1667;51-51;17-40];</data>
    </edge>
    <edge id="e1525" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()" target="org.apache.commons.io.monitor.FileAlterationObserver.getListeners()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40/1644-1667;51-51;17-40/1644-1667;51-51;17-40/1644-1667;51-51;17-40];</data>
    </edge>
    <edge id="e1526" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()" target="org.apache.commons.io.monitor.FileAlterationObserver.removeListener(org.apache.commons.io.monitor.FileAlterationListener)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40/1644-1667;51-51;17-40];</data>
    </edge>
    <edge id="e1527" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()" target="org.apache.commons.io.monitor.FileAlterationListenerAdaptor()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[1644-1667;51-51;17-40];</data>
    </edge>
    <edge id="e1528" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1529" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1530" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1531" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1532" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1533" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1534" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1535" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1536" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1537" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31/3287-3301;93-93;17-31];</data>
    </edge>
    <edge id="e1538" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()" target="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32];</data>
    </edge>
    <edge id="e1539" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32/6467-6482;155-155;17-32];</data>
    </edge>
    <edge id="e1540" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32];</data>
    </edge>
    <edge id="e1541" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32];</data>
    </edge>
    <edge id="e1542" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32/6467-6482;155-155;17-32];</data>
    </edge>
    <edge id="e1543" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1544" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1545" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1546" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1547" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1548" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1549" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[12302-12317;276-276;17-32/12302-12317;276-276;17-32/12302-12317;276-276;17-32];</data>
    </edge>
    <edge id="e1550" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1551" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1552" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1553" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1554" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1555" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[9516-9531;217-217;17-32/9516-9531;217-217;17-32/9516-9531;217-217;17-32];</data>
    </edge>
    <edge id="e1556" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1557" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1558" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1559" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1560" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1561" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String,int,int,int,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1562" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1563" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1564" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1565" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()" target="org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[15321-15343;339-339;17-39/15321-15343;339-339;17-39/15321-15343;339-339;17-39];</data>
    </edge>
    <edge id="e1566" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[2636-2649;75-75;17-30];</data>
    </edge>
    <edge id="e1567" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()" target="org.apache.commons.io.monitor.FileAlterationObserver.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[2636-2649;75-75;17-30/2636-2649;75-75;17-30];</data>
    </edge>
    <edge id="e1568" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()" target="org.apache.commons.io.monitor.FileAlterationObserver(java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[2636-2649;75-75;17-30];</data>
    </edge>
    <edge id="e1569" source="org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()" target="org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java;[2636-2649;75-75;17-30];</data>
    </edge>
    <edge id="e1570" source="org.apache.commons.io.monitor.FileEntry(java.io.File)" target="org.apache.commons.io.monitor.FileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[2483-2508;63-63;12-37];</data>
    </edge>
    <edge id="e1571" source="org.apache.commons.io.monitor.FileEntry.getLevel()" target="org.apache.commons.io.monitor.FileEntry.getLevel()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[4985-4994;145-145;16-25];</data>
    </edge>
    <edge id="e1572" source="org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)" target="org.apache.commons.io.monitor.FileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java;[4661-4693;127-127;22-54];</data>
    </edge>
    <edge id="e1573" source="org.apache.commons.io.output.AppendableOutputStreamTest.setUp()" target="org.apache.commons.io.output.AppendableOutputStream(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1213-1236;34-34;17-40];</data>
    </edge>
    <edge id="e1574" source="org.apache.commons.io.output.AppendableOutputStreamTest.testWriteInt()" target="org.apache.commons.io.output.AppendableOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1568-1598;48-48;17-47];</data>
    </edge>
    <edge id="e1575" source="org.apache.commons.io.output.AppendableOutputStreamTest.testWriteInt()" target="org.apache.commons.io.output.AppendableOutputStream.getAppendable()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1568-1598;48-48;17-47];</data>
    </edge>
    <edge id="e1576" source="org.apache.commons.io.output.AppendableOutputStreamTest.testWriteStringBuilder()" target="org.apache.commons.io.output.AppendableOutputStream.getAppendable()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java;[1351-1391;39-39;17-57];</data>
    </edge>
    <edge id="e1577" source="org.apache.commons.io.output.BrokenOutputStream()" target="org.apache.commons.io.output.BrokenOutputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/BrokenOutputStream.java;[1670-1689;50-50;12-31];</data>
    </edge>
    <edge id="e1578" source="org.apache.commons.io.output.BrokenOutputStreamTest.setUp()" target="org.apache.commons.io.output.BrokenOutputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/BrokenOutputStreamTest.java;[1154-1160;34-34;20-26];</data>
    </edge>
    <edge id="e1579" source="org.apache.commons.io.output.ByteArrayOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[3295-3317;79-79;12-34];</data>
    </edge>
    <edge id="e1580" source="org.apache.commons.io.output.ByteArrayOutputStream(int)" target="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[3589-3625;90-90;12-48];</data>
    </edge>
    <edge id="e1581" source="org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[6951-6996;192-192;29-74];</data>
    </edge>
    <edge id="e1582" source="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[10215-10291;290-291;31-30];</data>
    </edge>
    <edge id="e1583" source="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[11237-11323;317-318;31-30];</data>
    </edge>
    <edge id="e1584" source="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[11237-11323;317-318;31-30];</data>
    </edge>
    <edge id="e1585" source="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[11237-11323;317-318;31-30];</data>
    </edge>
    <edge id="e1586" source="org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()" target="org.apache.commons.io.input.ClosedInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[12049-12063;336-336;37-51];</data>
    </edge>
    <edge id="e1587" source="org.apache.commons.io.output.ByteArrayOutputStream.toString()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[13820-13829;389-389;19-28];</data>
    </edge>
    <edge id="e1588" source="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[14352-14413;403-403;19-80];</data>
    </edge>
    <edge id="e1589" source="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.nio.charset.Charset)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[14792-14822;416-416;19-49];</data>
    </edge>
    <edge id="e1590" source="org.apache.commons.io.output.ByteArrayOutputStream.reset()" target="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[8272-8278;233-233;30-36];</data>
    </edge>
    <edge id="e1591" source="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[5105-5155;139-139;17-67];</data>
    </edge>
    <edge id="e1592" source="org.apache.commons.io.output.ByteArrayOutputStream.write(int)" target="org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java;[6187-6204;171-171;30-47];</data>
    </edge>
    <edge id="e1593" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1427-1560;45-47;17-32];</data>
    </edge>
    <edge id="e1594" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1427-1560;45-47;17-32];</data>
    </edge>
    <edge id="e1595" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int[])" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[1948-2090;62-64;17-41];</data>
    </edge>
    <edge id="e1596" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2527-2585;81-81;18-76];</data>
    </edge>
    <edge id="e1597" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2844-2962;90-92;18-57];</data>
    </edge>
    <edge id="e1598" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2844-2962;90-92;18-57];</data>
    </edge>
    <edge id="e1599" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream)" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[2844-2962;90-92;18-57];</data>
    </edge>
    <edge id="e1600" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1601" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1602" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1603" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1604" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1605" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1606" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1607" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1608" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1609" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45/5400-5428;164-164;17-45];</data>
    </edge>
    <edge id="e1610" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1611" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54/3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1612" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54/3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1613" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1614" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54/3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1615" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54/3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1616" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[3207-3244;99-99;17-54];</data>
    </edge>
    <edge id="e1617" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1618" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63/4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1619" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStream.toInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63/4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1620" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStream.reset()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1621" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream,java.io.ByteArrayOutputStream,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1622" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63/4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1623" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63/4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1624" source="org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset()" target="org.apache.commons.io.output.ByteArrayOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java;[4228-4274;130-130;17-63];</data>
    </edge>
    <edge id="e1625" source="org.apache.commons.io.output.ChunkedOutputStream(java.io.OutputStream)" target="org.apache.commons.io.output.ChunkedOutputStream(java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java;[2096-2141;62-62;12-57];</data>
    </edge>
    <edge id="e1626" source="org.apache.commons.io.output.ChunkedWriter(java.io.Writer)" target="org.apache.commons.io.output.ChunkedWriter(java.io.Writer,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ChunkedWriter.java;[2051-2084;61-61;12-45];</data>
    </edge>
    <edge id="e1627" source="org.apache.commons.io.output.CloseShieldOutputStream(java.io.OutputStream)" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java;[1514-1560;39-39;12-58];</data>
    </edge>
    <edge id="e1628" source="org.apache.commons.io.output.CloseShieldOutputStream.close()" target="org.apache.commons.io.output.ClosedOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CloseShieldOutputStream.java;[1820-1826;49-49;17-23];</data>
    </edge>
    <edge id="e1629" source="org.apache.commons.io.output.CloseShieldOutputStreamTest$1()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1237-1259;37-37;24-46];</data>
    </edge>
    <edge id="e1630" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()" target="org.apache.commons.io.output.CloseShieldOutputStreamTest$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1204-1210;36-36;20-26];</data>
    </edge>
    <edge id="e1631" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1204-1210;36-36;20-26];</data>
    </edge>
    <edge id="e1632" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()" target="org.apache.commons.io.output.CloseShieldOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1204-1210;36-36;20-26];</data>
    </edge>
    <edge id="e1633" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()" target="org.apache.commons.io.output.ByteArrayOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1480-1509;47-47;17-46];</data>
    </edge>
    <edge id="e1634" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1480-1509;47-47;17-46];</data>
    </edge>
    <edge id="e1635" source="org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CloseShieldOutputStreamTest.java;[1480-1509;47-47;17-46];</data>
    </edge>
    <edge id="e1636" source="org.apache.commons.io.output.ClosedOutputStreamTest.testRead()" target="org.apache.commons.io.output.ClosedOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java;[1100-1109;31-31;17-26];</data>
    </edge>
    <edge id="e1637" source="org.apache.commons.io.output.ClosedOutputStreamTest.testRead()" target="org.apache.commons.io.output.ClosedOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ClosedOutputStreamTest.java;[1100-1109;31-31;17-26];</data>
    </edge>
    <edge id="e1638" source="org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream)" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[1455-1500;40-40;12-57];</data>
    </edge>
    <edge id="e1639" source="org.apache.commons.io.output.CountingOutputStream.getCount()" target="org.apache.commons.io.output.CountingOutputStream.getByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[2407-2416;68-68;16-25];</data>
    </edge>
    <edge id="e1640" source="org.apache.commons.io.output.CountingOutputStream.resetCount()" target="org.apache.commons.io.output.CountingOutputStream.resetByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java;[3087-3098;86-86;16-27];</data>
    </edge>
    <edge id="e1641" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1642" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.ProxyOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49/1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1643" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49/1321-1353;40-40;17-49/1321-1353;40-40;17-49/1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1644" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.CountingOutputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49/1321-1353;40-40;17-49/1321-1353;40-40;17-49/1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1645" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.ProxyOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1646" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1647" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.CountingOutputStream.resetCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1648" source="org.apache.commons.io.output.CountingOutputStreamTest.testCounting()" target="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[1321-1353;40-40;17-49];</data>
    </edge>
    <edge id="e1649" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.NullInputStream(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1650" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.NullOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1651" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1652" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54/2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1653" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.CountingOutputStream.getCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1654" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.CountingOutputStream.resetCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1655" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.input.NullInputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1656" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.CountingOutputStream.getByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1657" source="org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()" target="org.apache.commons.io.output.CountingOutputStream.resetByteCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java;[2849-2886;80-80;17-54];</data>
    </edge>
    <edge id="e1658" source="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[3149-3216;99-99;12-79];</data>
    </edge>
    <edge id="e1659" source="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File,java.lang.String,java.lang.String,java.io.File)" target="org.apache.commons.io.output.ThresholdingOutputStream(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[4569-4700;134-134;13-144];</data>
    </edge>
    <edge id="e1660" source="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File,java.lang.String,java.lang.String,java.io.File)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[4569-4700;134-134;13-144];</data>
    </edge>
    <edge id="e1661" source="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[3750-3858;116-116;12-120];</data>
    </edge>
    <edge id="e1662" source="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()" target="org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[6505-6516;195-195;20-31];</data>
    </edge>
    <edge id="e1663" source="org.apache.commons.io.output.DeferredFileOutputStream.getData()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[6923-6931;209-209;19-27];</data>
    </edge>
    <edge id="e1664" source="org.apache.commons.io.output.DeferredFileOutputStream.close()" target="org.apache.commons.io.output.ThresholdingOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[7942-7967;245-245;17-42];</data>
    </edge>
    <edge id="e1665" source="org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()" target="org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[5829-5865;173-173;20-56];</data>
    </edge>
    <edge id="e1666" source="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[8308-8357;259-259;17-66];</data>
    </edge>
    <edge id="e1667" source="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[8308-8357;259-259;17-66];</data>
    </edge>
    <edge id="e1668" source="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[8308-8357;259-259;17-66];</data>
    </edge>
    <edge id="e1669" source="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java;[8308-8357;259-259;17-66];</data>
    </edge>
    <edge id="e1670" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1671" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1672" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1673" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1674" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1675" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[3468-3487;106-106;17-36];</data>
    </edge>
    <edge id="e1676" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
    </edge>
    <edge id="e1677" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
    </edge>
    <edge id="e1678" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
    </edge>
    <edge id="e1679" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
    </edge>
    <edge id="e1680" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[2691-2707;83-83;17-33];</data>
    </edge>
    <edge id="e1681" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
    </edge>
    <edge id="e1682" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
    </edge>
    <edge id="e1683" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
    </edge>
    <edge id="e1684" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
    </edge>
    <edge id="e1685" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[1878-1897;59-59;17-36];</data>
    </edge>
    <edge id="e1686" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1687" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44/8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1688" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1689" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1690" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1691" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1692" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[8514-8541;263-263;17-44];</data>
    </edge>
    <edge id="e1693" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1694" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStream.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54/9753-9790;296-296;17-54/9753-9790;296-296;17-54/9753-9790;296-296;17-54/9753-9790;296-296;17-54/9753-9790;296-296;17-54/9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1695" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1696" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1697" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1698" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1699" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()" target="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[9753-9790;296-296;17-54];</data>
    </edge>
    <edge id="e1700" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44];</data>
    </edge>
    <edge id="e1701" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44/7736-7763;240-240;17-44];</data>
    </edge>
    <edge id="e1702" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44];</data>
    </edge>
    <edge id="e1703" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44];</data>
    </edge>
    <edge id="e1704" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[7736-7763;240-240;17-44];</data>
    </edge>
    <edge id="e1705" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.lang.String,java.lang.String,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[10930-10948;328-328;17-35];</data>
    </edge>
    <edge id="e1706" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1707" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38/4429-4450;136-136;17-38/4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1708" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1709" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1710" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.DeferredFileOutputStream.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1711" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()" target="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[4429-4450;136-136;17-38];</data>
    </edge>
    <edge id="e1712" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1713" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1714" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1715" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1716" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34/6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1717" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1718" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1719" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()" target="org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[6566-6583;205-205;17-34];</data>
    </edge>
    <edge id="e1720" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1721" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.DeferredFileOutputStream(int,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1722" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1723" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1724" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34/5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1725" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.DeferredFileOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1726" source="org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java;[5445-5462;170-170;17-34];</data>
    </edge>
    <edge id="e1727" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[5680-5760;140-140;12-92];</data>
    </edge>
    <edge id="e1728" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[6208-6310;153-153;12-114];</data>
    </edge>
    <edge id="e1729" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[6716-6797;166-166;12-93];</data>
    </edge>
    <edge id="e1730" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[7245-7348;179-179;12-115];</data>
    </edge>
    <edge id="e1731" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[7754-7842;192-192;12-100];</data>
    </edge>
    <edge id="e1732" source="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[8290-8400;205-205;12-122];</data>
    </edge>
    <edge id="e1733" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[2431-2517;65-65;12-98];</data>
    </edge>
    <edge id="e1734" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[3000-3108;78-78;12-120];</data>
    </edge>
    <edge id="e1735" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.Charset)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[3515-3602;90-90;12-99];</data>
    </edge>
    <edge id="e1736" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[4085-4194;103-103;12-121];</data>
    </edge>
    <edge id="e1737" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.CharsetEncoder)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[4601-4695;115-115;12-106];</data>
    </edge>
    <edge id="e1738" source="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.nio.charset.CharsetEncoder,boolean)" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.nio.charset.CharsetEncoder,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[5178-5294;128-128;12-128];</data>
    </edge>
    <edge id="e1739" source="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[9040-9130;222-222;28-118/9040-9130;222-222;28-118];</data>
    </edge>
    <edge id="e1740" source="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[9040-9130;222-222;28-118/9040-9130;222-222;28-118];</data>
    </edge>
    <edge id="e1741" source="org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File,java.lang.Object,boolean)" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java;[9040-9130;222-222;28-118/9040-9130;222-222;28-118];</data>
    </edge>
    <edge id="e1742" source="org.apache.commons.io.output.FileWriterWithEncodingTest(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[1572-1616;45-45;12-56];</data>
    </edge>
    <edge id="e1743" source="org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[1678-1684;50-50;17-23/1678-1684;50-50;17-23/1678-1684;50-50;17-23];</data>
    </edge>
    <edge id="e1744" source="org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[1678-1684;50-50;17-23];</data>
    </edge>
    <edge id="e1745" source="org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2450-2476;71-71;17-43];</data>
    </edge>
    <edge id="e1746" source="org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2450-2476;71-71;17-43];</data>
    </edge>
    <edge id="e1747" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5903-5934;177-177;17-48];</data>
    </edge>
    <edge id="e1748" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5903-5934;177-177;17-48];</data>
    </edge>
    <edge id="e1749" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5903-5934;177-177;17-48];</data>
    </edge>
    <edge id="e1750" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5407-5449;162-162;17-59];</data>
    </edge>
    <edge id="e1751" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[5407-5449;162-162;17-59];</data>
    </edge>
    <edge id="e1752" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6404-6453;192-192;17-66];</data>
    </edge>
    <edge id="e1753" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6404-6453;192-192;17-66];</data>
    </edge>
    <edge id="e1754" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6925-6978;207-207;17-70];</data>
    </edge>
    <edge id="e1755" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[6925-6978;207-207;17-70];</data>
    </edge>
    <edge id="e1756" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56/3399-3438;102-102;17-56];</data>
    </edge>
    <edge id="e1757" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56/3399-3438;102-102;17-56];</data>
    </edge>
    <edge id="e1758" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56/3399-3438;102-102;17-56];</data>
    </edge>
    <edge id="e1759" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56/3399-3438;102-102;17-56];</data>
    </edge>
    <edge id="e1760" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[3399-3438;102-102;17-56/3399-3438;102-102;17-56/3399-3438;102-102;17-56/3399-3438;102-102;17-56];</data>
    </edge>
    <edge id="e1761" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51];</data>
    </edge>
    <edge id="e1762" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51];</data>
    </edge>
    <edge id="e1763" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()" target="org.apache.commons.io.output.FileWriterWithEncoding.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51];</data>
    </edge>
    <edge id="e1764" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51];</data>
    </edge>
    <edge id="e1765" source="org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java;[2696-2730;78-78;17-51/2696-2730;78-78;17-51];</data>
    </edge>
    <edge id="e1766" source="org.apache.commons.io.output.LockableFileWriter(java.io.File)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[4164-4217;110-110;12-65];</data>
    </edge>
    <edge id="e1767" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[4570-4645;122-122;12-87];</data>
    </edge>
    <edge id="e1768" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[5185-5282;137-137;12-109];</data>
    </edge>
    <edge id="e1769" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6342-6418;165-165;12-88];</data>
    </edge>
    <edge id="e1770" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[8532-8664;221-222;12-52];</data>
    </edge>
    <edge id="e1771" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[8532-8664;221-222;12-52];</data>
    </edge>
    <edge id="e1772" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[5700-5777;150-150;12-89];</data>
    </edge>
    <edge id="e1773" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)" target="org.apache.commons.io.FileUtils.forceMkdir(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6968-7089;180-181;12-46/6968-7089;180-181;12-46];</data>
    </edge>
    <edge id="e1774" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6968-7089;180-181;12-46];</data>
    </edge>
    <edge id="e1775" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter.createLock()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6968-7089;180-181;12-46];</data>
    </edge>
    <edge id="e1776" source="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[6968-7089;180-181;12-46];</data>
    </edge>
    <edge id="e1777" source="org.apache.commons.io.output.LockableFileWriter(java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[2787-2846;73-73;12-71];</data>
    </edge>
    <edge id="e1778" source="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean)" target="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[3203-3284;85-85;12-93];</data>
    </edge>
    <edge id="e1779" source="org.apache.commons.io.output.LockableFileWriter(java.lang.String,boolean,java.lang.String)" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[3721-3824;98-98;12-115];</data>
    </edge>
    <edge id="e1780" source="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[10295-10386;270-270;20-111];</data>
    </edge>
    <edge id="e1781" source="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[10295-10386;270-270;20-111/10295-10386;270-270;20-111];</data>
    </edge>
    <edge id="e1782" source="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[10295-10386;270-270;20-111/10295-10386;270-270;20-111];</data>
    </edge>
    <edge id="e1783" source="org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/LockableFileWriter.java;[10295-10386;270-270;20-111/10295-10386;270-270;20-111/10295-10386;270-270;20-111/10295-10386;270-270;20-111];</data>
    </edge>
    <edge id="e1784" source="org.apache.commons.io.output.LockableFileWriterTest(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[1519-1559;42-42;12-52];</data>
    </edge>
    <edge id="e1785" source="org.apache.commons.io.output.LockableFileWriterTest.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[1621-1627;47-47;17-23/1621-1627;47-47;17-23];</data>
    </edge>
    <edge id="e1786" source="org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[3957-3997;108-108;17-57];</data>
    </edge>
    <edge id="e1787" source="org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[3957-3997;108-108;17-57];</data>
    </edge>
    <edge id="e1788" source="org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[3957-3997;108-108;17-57/3957-3997;108-108;17-57];</data>
    </edge>
    <edge id="e1789" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6699-6730;182-182;17-48];</data>
    </edge>
    <edge id="e1790" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6699-6730;182-182;17-48];</data>
    </edge>
    <edge id="e1791" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6699-6730;182-182;17-48];</data>
    </edge>
    <edge id="e1792" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6091-6152;165-165;17-78];</data>
    </edge>
    <edge id="e1793" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[6091-6152;165-165;17-78];</data>
    </edge>
    <edge id="e1794" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7261-7310;199-199;17-66];</data>
    </edge>
    <edge id="e1795" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7261-7310;199-199;17-66];</data>
    </edge>
    <edge id="e1796" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()" target="org.apache.commons.io.output.LockableFileWriter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7843-7896;216-216;17-70];</data>
    </edge>
    <edge id="e1797" source="org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[7843-7896;216-216;17-70];</data>
    </edge>
    <edge id="e1798" source="org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[2162-2196;63-63;17-51/2162-2196;63-63;17-51/2162-2196;63-63;17-51];</data>
    </edge>
    <edge id="e1799" source="org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[2162-2196;63-63;17-51/2162-2196;63-63;17-51/2162-2196;63-63;17-51];</data>
    </edge>
    <edge id="e1800" source="org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()" target="org.apache.commons.io.output.LockableFileWriter(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[5192-5229;138-138;17-54/5192-5229;138-138;17-54];</data>
    </edge>
    <edge id="e1801" source="org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java;[5192-5229;138-138;17-54/5192-5229;138-138;17-54];</data>
    </edge>
    <edge id="e1802" source="org.apache.commons.io.output.NullOutputStreamTest.testNull()" target="org.apache.commons.io.output.NullOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1236-1264;38-38;17-45];</data>
    </edge>
    <edge id="e1803" source="org.apache.commons.io.output.NullOutputStreamTest.testNull()" target="org.apache.commons.io.output.NullOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1236-1264;38-38;17-45/1236-1264;38-38;17-45];</data>
    </edge>
    <edge id="e1804" source="org.apache.commons.io.output.NullOutputStreamTest.testNull()" target="org.apache.commons.io.output.NullOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1236-1264;38-38;17-45];</data>
    </edge>
    <edge id="e1805" source="org.apache.commons.io.output.NullOutputStreamTest.testNull()" target="org.apache.commons.io.output.NullOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java;[1236-1264;38-38;17-45/1236-1264;38-38;17-45/1236-1264;38-38;17-45];</data>
    </edge>
    <edge id="e1806" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1807" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1808" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.write(char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1809" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.write(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1810" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.write(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1811" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.write(java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1812" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1813" source="org.apache.commons.io.output.NullWriterTest.testNull()" target="org.apache.commons.io.output.NullWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/NullWriterTest.java;[1186-1195;33-33;17-26];</data>
    </edge>
    <edge id="e1814" source="org.apache.commons.io.output.ProxyOutputStream.close()" target="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[3713-3738;115-115;17-42];</data>
    </edge>
    <edge id="e1815" source="org.apache.commons.io.output.ProxyOutputStream.flush()" target="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[3399-3424;102-102;17-42];</data>
    </edge>
    <edge id="e1816" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[])" target="org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2395-2436;68-68;17-58];</data>
    </edge>
    <edge id="e1817" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[])" target="org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2395-2436;68-68;17-58];</data>
    </edge>
    <edge id="e1818" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[])" target="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2395-2436;68-68;17-58];</data>
    </edge>
    <edge id="e1819" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2969-3039;87-87;17-87];</data>
    </edge>
    <edge id="e1820" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2969-3039;87-87;17-87];</data>
    </edge>
    <edge id="e1821" source="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[2969-3039;87-87;17-87];</data>
    </edge>
    <edge id="e1822" source="org.apache.commons.io.output.ProxyOutputStream.write(int)" target="org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[1967-2005;52-52;17-55];</data>
    </edge>
    <edge id="e1823" source="org.apache.commons.io.output.ProxyOutputStream.write(int)" target="org.apache.commons.io.output.ProxyOutputStream.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[1967-2005;52-52;17-55];</data>
    </edge>
    <edge id="e1824" source="org.apache.commons.io.output.ProxyOutputStream.write(int)" target="org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyOutputStream.java;[1967-2005;52-52;17-55];</data>
    </edge>
    <edge id="e1825" source="org.apache.commons.io.output.ProxyOutputStreamTest$1()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1201-1223;35-35;24-46];</data>
    </edge>
    <edge id="e1826" source="org.apache.commons.io.output.ProxyOutputStreamTest.setUp()" target="org.apache.commons.io.output.ProxyOutputStreamTest$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1168-1174;34-34;20-26];</data>
    </edge>
    <edge id="e1827" source="org.apache.commons.io.output.ProxyOutputStreamTest.setUp()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1168-1174;34-34;20-26];</data>
    </edge>
    <edge id="e1828" source="org.apache.commons.io.output.ProxyOutputStreamTest.setUp()" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1168-1174;34-34;20-26];</data>
    </edge>
    <edge id="e1829" source="org.apache.commons.io.output.ProxyOutputStreamTest.testWrite()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1503-1530;46-46;17-44];</data>
    </edge>
    <edge id="e1830" source="org.apache.commons.io.output.ProxyOutputStreamTest.testWrite()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyOutputStreamTest.java;[1503-1530;46-46;17-44];</data>
    </edge>
    <edge id="e1831" source="org.apache.commons.io.output.ProxyWriter.append(char)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[1960-1998;53-53;19-57];</data>
    </edge>
    <edge id="e1832" source="org.apache.commons.io.output.ProxyWriter.append(char)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[1960-1998;53-53;19-57];</data>
    </edge>
    <edge id="e1833" source="org.apache.commons.io.output.ProxyWriter.append(char)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[1960-1998;53-53;19-57];</data>
    </edge>
    <edge id="e1834" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3211-3259;93-93;19-67];</data>
    </edge>
    <edge id="e1835" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3211-3259;93-93;19-67];</data>
    </edge>
    <edge id="e1836" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3211-3259;93-93;19-67];</data>
    </edge>
    <edge id="e1837" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence,int,int)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[2620-2700;74-74;19-99];</data>
    </edge>
    <edge id="e1838" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence,int,int)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[2620-2700;74-74;19-99];</data>
    </edge>
    <edge id="e1839" source="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence,int,int)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[2620-2700;74-74;19-99];</data>
    </edge>
    <edge id="e1840" source="org.apache.commons.io.output.ProxyWriter.close()" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[6704-6729;221-221;17-42];</data>
    </edge>
    <edge id="e1841" source="org.apache.commons.io.output.ProxyWriter.flush()" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[6390-6415;208-208;17-42];</data>
    </edge>
    <edge id="e1842" source="org.apache.commons.io.output.ProxyWriter.write(char[])" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4216-4257;131-131;17-58];</data>
    </edge>
    <edge id="e1843" source="org.apache.commons.io.output.ProxyWriter.write(char[])" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4216-4257;131-131;17-58];</data>
    </edge>
    <edge id="e1844" source="org.apache.commons.io.output.ProxyWriter.write(char[])" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4216-4257;131-131;17-58];</data>
    </edge>
    <edge id="e1845" source="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4857-4927;154-154;17-87];</data>
    </edge>
    <edge id="e1846" source="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4857-4927;154-154;17-87];</data>
    </edge>
    <edge id="e1847" source="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[4857-4927;154-154;17-87];</data>
    </edge>
    <edge id="e1848" source="org.apache.commons.io.output.ProxyWriter.write(int)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3783-3821;115-115;17-55];</data>
    </edge>
    <edge id="e1849" source="org.apache.commons.io.output.ProxyWriter.write(int)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3783-3821;115-115;17-55];</data>
    </edge>
    <edge id="e1850" source="org.apache.commons.io.output.ProxyWriter.write(int)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[3783-3821;115-115;17-55];</data>
    </edge>
    <edge id="e1851" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5331-5372;170-170;17-58];</data>
    </edge>
    <edge id="e1852" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5331-5372;170-170;17-58];</data>
    </edge>
    <edge id="e1853" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5331-5372;170-170;17-58];</data>
    </edge>
    <edge id="e1854" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)" target="org.apache.commons.io.output.ProxyWriter.beforeWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5960-6030;193-193;17-87];</data>
    </edge>
    <edge id="e1855" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)" target="org.apache.commons.io.output.ProxyWriter.afterWrite(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5960-6030;193-193;17-87];</data>
    </edge>
    <edge id="e1856" source="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)" target="org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ProxyWriter.java;[5960-6030;193-193;17-87];</data>
    </edge>
    <edge id="e1857" source="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
    </edge>
    <edge id="e1858" source="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
    </edge>
    <edge id="e1859" source="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
    </edge>
    <edge id="e1860" source="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
    </edge>
    <edge id="e1861" source="org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1134-1174;32-32;17-57];</data>
    </edge>
    <edge id="e1862" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
    </edge>
    <edge id="e1863" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()" target="org.apache.commons.io.output.NullWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
    </edge>
    <edge id="e1864" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()" target="org.apache.commons.io.output.ProxyWriter.write(char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
    </edge>
    <edge id="e1865" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()" target="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
    </edge>
    <edge id="e1866" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3686-3721;110-110;17-52];</data>
    </edge>
    <edge id="e1867" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[4153-4192;128-128;17-56];</data>
    </edge>
    <edge id="e1868" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()" target="org.apache.commons.io.output.NullWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[4153-4192;128-128;17-56];</data>
    </edge>
    <edge id="e1869" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()" target="org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[4153-4192;128-128;17-56];</data>
    </edge>
    <edge id="e1870" source="org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[4153-4192;128-128;17-56];</data>
    </edge>
    <edge id="e1871" source="org.apache.commons.io.output.ProxyWriterTest.testNullString()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
    </edge>
    <edge id="e1872" source="org.apache.commons.io.output.ProxyWriterTest.testNullString()" target="org.apache.commons.io.output.NullWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
    </edge>
    <edge id="e1873" source="org.apache.commons.io.output.ProxyWriterTest.testNullString()" target="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
    </edge>
    <edge id="e1874" source="org.apache.commons.io.output.ProxyWriterTest.testNullString()" target="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
    </edge>
    <edge id="e1875" source="org.apache.commons.io.output.ProxyWriterTest.testNullString()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[3222-3254;92-92;17-49];</data>
    </edge>
    <edge id="e1876" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
    </edge>
    <edge id="e1877" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
    </edge>
    <edge id="e1878" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.ProxyWriter.write(char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
    </edge>
    <edge id="e1879" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
    </edge>
    <edge id="e1880" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2362-2398;68-68;17-53];</data>
    </edge>
    <edge id="e1881" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
    </edge>
    <edge id="e1882" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
    </edge>
    <edge id="e1883" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()" target="org.apache.commons.io.output.ProxyWriter.write(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
    </edge>
    <edge id="e1884" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
    </edge>
    <edge id="e1885" source="org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[2786-2829;80-80;17-60];</data>
    </edge>
    <edge id="e1886" source="org.apache.commons.io.output.ProxyWriterTest.testWriteString()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
    </edge>
    <edge id="e1887" source="org.apache.commons.io.output.ProxyWriterTest.testWriteString()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
    </edge>
    <edge id="e1888" source="org.apache.commons.io.output.ProxyWriterTest.testWriteString()" target="org.apache.commons.io.output.ProxyWriter.write(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
    </edge>
    <edge id="e1889" source="org.apache.commons.io.output.ProxyWriterTest.testWriteString()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
    </edge>
    <edge id="e1890" source="org.apache.commons.io.output.ProxyWriterTest.testWriteString()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1550-1583;44-44;17-50];</data>
    </edge>
    <edge id="e1891" source="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
    </edge>
    <edge id="e1892" source="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()" target="org.apache.commons.io.output.ProxyWriter(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
    </edge>
    <edge id="e1893" source="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()" target="org.apache.commons.io.output.ProxyWriter.write(java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
    </edge>
    <edge id="e1894" source="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
    </edge>
    <edge id="e1895" source="org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()" target="org.apache.commons.io.output.ProxyWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java;[1950-1990;56-56;17-57];</data>
    </edge>
    <edge id="e1896" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2159-2193;59-59;17-51];</data>
    </edge>
    <edge id="e1897" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2401-2443;66-66;17-59];</data>
    </edge>
    <edge id="e1898" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2646-2695;73-73;17-66];</data>
    </edge>
    <edge id="e1899" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()" target="org.apache.commons.io.output.StringBuilderWriter(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1319-1366;36-36;17-64];</data>
    </edge>
    <edge id="e1900" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()" target="org.apache.commons.io.output.StringBuilderWriter(java.lang.StringBuilder)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1911-1954;52-52;17-60];</data>
    </edge>
    <edge id="e1901" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()" target="org.apache.commons.io.output.StringBuilderWriter(java.lang.StringBuilder)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
    </edge>
    <edge id="e1902" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()" target="org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
    </edge>
    <edge id="e1903" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
    </edge>
    <edge id="e1904" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()" target="org.apache.commons.io.output.StringBuilderWriter.getBuilder()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
    </edge>
    <edge id="e1905" source="org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()" target="org.apache.commons.io.output.StringBuilderWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[1555-1588;43-43;17-50];</data>
    </edge>
    <edge id="e1906" source="org.apache.commons.io.output.StringBuilderWriterTest.testClose()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[2934-2944;80-80;17-27];</data>
    </edge>
    <edge id="e1907" source="org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3270-3303;92-92;17-50];</data>
    </edge>
    <edge id="e1908" source="org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3633-3671;103-103;17-55];</data>
    </edge>
    <edge id="e1909" source="org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[3978-4023;112-112;17-62];</data>
    </edge>
    <edge id="e1910" source="org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[4314-4349;121-121;17-52];</data>
    </edge>
    <edge id="e1911" source="org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java;[4614-4656;130-130;17-59];</data>
    </edge>
    <edge id="e1912" source="org.apache.commons.io.output.TaggedOutputStream(java.io.OutputStream)" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[2710-2753;76-76;12-55];</data>
    </edge>
    <edge id="e1913" source="org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)" target="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3039-3074;87-87;20-55];</data>
    </edge>
    <edge id="e1914" source="org.apache.commons.io.output.TaggedOutputStream.handleIOException(java.io.IOException)" target="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3980-4036;112-112;20-76];</data>
    </edge>
    <edge id="e1915" source="org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)" target="org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TaggedOutputStream.java;[3636-3695;101-101;17-76];</data>
    </edge>
    <edge id="e1916" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.TaggedOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1917" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.BrokenOutputStream(java.io.IOException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1918" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.ProxyOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1919" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34/1844-1861;50-50;17-34/1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1920" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34/1844-1861;50-50;17-34/1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1921" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.ProxyOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1922" source="org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()" target="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1844-1861;50-50;17-34];</data>
    </edge>
    <edge id="e1923" source="org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1139-1156;32-32;17-34];</data>
    </edge>
    <edge id="e1924" source="org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()" target="org.apache.commons.io.output.TaggedOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1139-1156;32-32;17-34];</data>
    </edge>
    <edge id="e1925" source="org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1139-1156;32-32;17-34];</data>
    </edge>
    <edge id="e1926" source="org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[1139-1156;32-32;17-34/1139-1156;32-32;17-34/1139-1156;32-32;17-34];</data>
    </edge>
    <edge id="e1927" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.output.ClosedOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1928" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.output.TaggedOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1929" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53/3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1930" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53/3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1931" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53/3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1932" source="org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()" target="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java;[3412-3448;98-98;17-53];</data>
    </edge>
    <edge id="e1933" source="org.apache.commons.io.output.TeeOutputStream(java.io.OutputStream,java.io.OutputStream)" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[1430-1495;39-39;12-77];</data>
    </edge>
    <edge id="e1934" source="org.apache.commons.io.output.TeeOutputStream.close()" target="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[3220-3245;101-101;17-42];</data>
    </edge>
    <edge id="e1935" source="org.apache.commons.io.output.TeeOutputStream.flush()" target="org.apache.commons.io.output.ProxyOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2680-2705;84-84;17-42];</data>
    </edge>
    <edge id="e1936" source="org.apache.commons.io.output.TeeOutputStream.write(byte[])" target="org.apache.commons.io.output.ProxyOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[1740-1779;50-50;30-69];</data>
    </edge>
    <edge id="e1937" source="org.apache.commons.io.output.TeeOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2120-2189;63-63;30-99];</data>
    </edge>
    <edge id="e1938" source="org.apache.commons.io.output.TeeOutputStream.write(int)" target="org.apache.commons.io.output.ProxyOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/TeeOutputStream.java;[2454-2490;74-74;30-66];</data>
    </edge>
    <edge id="e1939" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()" target="org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1864-1891;59-59;17-44];</data>
    </edge>
    <edge id="e1940" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()" target="org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1864-1891;59-59;17-44];</data>
    </edge>
    <edge id="e1941" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()" target="org.apache.commons.io.output.TeeOutputStream(java.io.OutputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1864-1891;59-59;17-44];</data>
    </edge>
    <edge id="e1942" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()" target="org.apache.commons.io.output.TeeOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[1864-1891;59-59;17-44];</data>
    </edge>
    <edge id="e1943" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()" target="org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[2560-2585;75-75;17-42];</data>
    </edge>
    <edge id="e1944" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()" target="org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[2560-2585;75-75;17-42];</data>
    </edge>
    <edge id="e1945" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()" target="org.apache.commons.io.output.TeeOutputStream(java.io.OutputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[2560-2585;75-75;17-42];</data>
    </edge>
    <edge id="e1946" source="org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()" target="org.apache.commons.io.output.TeeOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[2560-2585;75-75;17-42];</data>
    </edge>
    <edge id="e1947" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream(java.io.OutputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1948" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1949" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String,byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44/3072-3099;87-87;17-44/3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1950" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1951" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1952" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1953" source="org.apache.commons.io.output.TeeOutputStreamTest.testTee()" target="org.apache.commons.io.output.TeeOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java;[3072-3099;87-87;17-44];</data>
    </edge>
    <edge id="e1954" source="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)" target="org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[6010-6059;219-219;20-69];</data>
    </edge>
    <edge id="e1955" source="org.apache.commons.io.output.ThresholdingOutputStream.close()" target="org.apache.commons.io.output.ThresholdingOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4457-4482;154-154;17-42];</data>
    </edge>
    <edge id="e1956" source="org.apache.commons.io.output.ThresholdingOutputStream.close()" target="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4457-4482;154-154;17-42];</data>
    </edge>
    <edge id="e1957" source="org.apache.commons.io.output.ThresholdingOutputStream.flush()" target="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[4181-4206;141-141;17-42];</data>
    </edge>
    <edge id="e1958" source="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])" target="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3240-3279;107-107;17-56];</data>
    </edge>
    <edge id="e1959" source="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[])" target="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3240-3279;107-107;17-56];</data>
    </edge>
    <edge id="e1960" source="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3803-3872;126-126;17-86];</data>
    </edge>
    <edge id="e1961" source="org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[3803-3872;126-126;17-86];</data>
    </edge>
    <edge id="e1962" source="org.apache.commons.io.output.ThresholdingOutputStream.write(int)" target="org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[2850-2886;90-90;17-53];</data>
    </edge>
    <edge id="e1963" source="org.apache.commons.io.output.ThresholdingOutputStream.write(int)" target="org.apache.commons.io.output.ThresholdingOutputStream.getStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/ThresholdingOutputStream.java;[2850-2886;90-90;17-53];</data>
    </edge>
    <edge id="e1964" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[9410-9448;198-198;12-50];</data>
    </edge>
    <edge id="e1965" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[8817-8881;185-185;12-76];</data>
    </edge>
    <edge id="e1966" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String,int,boolean)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[8233-8351;173-173;12-130];</data>
    </edge>
    <edge id="e1967" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[7380-7441;157-157;12-73];</data>
    </edge>
    <edge id="e1968" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.Charset,int,boolean)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[6611-6726;139-139;12-127];</data>
    </edge>
    <edge id="e1969" source="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.CharsetDecoder)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[4745-4813;103-103;12-80];</data>
    </edge>
    <edge id="e1970" source="org.apache.commons.io.output.WriterOutputStream.close()" target="org.apache.commons.io.output.WriterOutputStream.processInput(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11463-11488;265-265;17-42];</data>
    </edge>
    <edge id="e1971" source="org.apache.commons.io.output.WriterOutputStream.close()" target="org.apache.commons.io.output.WriterOutputStream.flushOutput()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11463-11488;265-265;17-42];</data>
    </edge>
    <edge id="e1972" source="org.apache.commons.io.output.WriterOutputStream.flush()" target="org.apache.commons.io.output.WriterOutputStream.flushOutput()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11089-11114;253-253;17-42];</data>
    </edge>
    <edge id="e1973" source="org.apache.commons.io.output.WriterOutputStream.processInput(boolean)" target="org.apache.commons.io.output.WriterOutputStream.flushOutput()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[11783-11839;277-277;18-74];</data>
    </edge>
    <edge id="e1974" source="org.apache.commons.io.output.WriterOutputStream.write(byte[])" target="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[10445-10484;231-231;17-56];</data>
    </edge>
    <edge id="e1975" source="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.WriterOutputStream.processInput(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[9864-9921;211-211;17-74];</data>
    </edge>
    <edge id="e1976" source="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)" target="org.apache.commons.io.output.WriterOutputStream.flushOutput()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[9864-9921;211-211;17-74];</data>
    </edge>
    <edge id="e1977" source="org.apache.commons.io.output.WriterOutputStream.write(int)" target="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/WriterOutputStream.java;[10706-10742;242-242;17-53];</data>
    </edge>
    <edge id="e1978" source="org.apache.commons.io.output.WriterOutputStreamTest.testFlush()" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3883-3912;105-105;17-46];</data>
    </edge>
    <edge id="e1979" source="org.apache.commons.io.output.WriterOutputStreamTest.testFlush()" target="org.apache.commons.io.output.WriterOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3883-3912;105-105;17-46];</data>
    </edge>
    <edge id="e1980" source="org.apache.commons.io.output.WriterOutputStreamTest.testFlush()" target="org.apache.commons.io.output.WriterOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3883-3912;105-105;17-46];</data>
    </edge>
    <edge id="e1981" source="org.apache.commons.io.output.WriterOutputStreamTest.testFlush()" target="org.apache.commons.io.output.WriterOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3883-3912;105-105;17-46];</data>
    </edge>
    <edge id="e1982" source="org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2956-3006;76-76;17-67];</data>
    </edge>
    <edge id="e1983" source="org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2691-2743;68-68;17-69];</data>
    </edge>
    <edge id="e1984" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3485-3533;92-92;17-65];</data>
    </edge>
    <edge id="e1985" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3350-3400;88-88;17-67];</data>
    </edge>
    <edge id="e1986" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3751-3799;100-100;17-65];</data>
    </edge>
    <edge id="e1987" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3616-3666;96-96;17-67];</data>
    </edge>
    <edge id="e1988" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3223-3269;84-84;17-63];</data>
    </edge>
    <edge id="e1989" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[3092-3140;80-80;17-65];</data>
    </edge>
    <edge id="e1990" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2831-2876;72-72;17-62];</data>
    </edge>
    <edge id="e1991" source="org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite()" target="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[2562-2609;64-64;17-64];</data>
    </edge>
    <edge id="e1992" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1923-2013;50-50;18-108];</data>
    </edge>
    <edge id="e1993" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1923-2013;50-50;18-108];</data>
    </edge>
    <edge id="e1994" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1923-2013;50-50;18-108];</data>
    </edge>
    <edge id="e1995" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1453-1545;39-39;18-110];</data>
    </edge>
    <edge id="e1996" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1453-1545;39-39;18-110];</data>
    </edge>
    <edge id="e1997" source="org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.WriterOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[1453-1545;39-39;18-110];</data>
    </edge>
    <edge id="e1998" source="org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()" target="org.apache.commons.io.output.WriterOutputStream(java.io.Writer,java.lang.String,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[4282-4322;115-115;17-57];</data>
    </edge>
    <edge id="e1999" source="org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()" target="org.apache.commons.io.output.WriterOutputStream.write(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[4282-4322;115-115;17-57];</data>
    </edge>
    <edge id="e2000" source="org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()" target="org.apache.commons.io.output.WriterOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java;[4282-4322;115-115;17-57];</data>
    </edge>
    <edge id="e2001" source="org.apache.commons.io.output.XmlStreamWriter(java.io.File)" target="org.apache.commons.io.output.XmlStreamWriter(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[2764-2824;83-83;12-72];</data>
    </edge>
    <edge id="e2002" source="org.apache.commons.io.output.XmlStreamWriter(java.io.File,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[3224-3314;96-96;12-102];</data>
    </edge>
    <edge id="e2003" source="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream)" target="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[1955-1993;59-59;12-50];</data>
    </edge>
    <edge id="e2004" source="org.apache.commons.io.output.XmlStreamWriter.write(char[],int,int)" target="org.apache.commons.io.output.XmlStreamWriter.detectEncoding(char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java;[7115-7187;211-211;17-89];</data>
    </edge>
    <edge id="e2005" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2002-2118;50-51;25-30];</data>
    </edge>
    <edge id="e2006" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2002-2118;50-51;25-30];</data>
    </edge>
    <edge id="e2007" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriter.getEncoding()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2002-2118;50-51;25-30];</data>
    </edge>
    <edge id="e2008" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2536-2622;62-63;25-30];</data>
    </edge>
    <edge id="e2009" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2703-2819;67-68;25-30];</data>
    </edge>
    <edge id="e2010" source="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String,java.lang.String)" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[2703-2819;67-68;25-30];</data>
    </edge>
    <edge id="e2011" source="org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3669-3708;93-93;17-56/3669-3708;93-93;17-56/3669-3708;93-93;17-56/3669-3708;93-93;17-56/3669-3708;93-93;17-56];</data>
    </edge>
    <edge id="e2012" source="org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4923-4961;133-133;17-55];</data>
    </edge>
    <edge id="e2013" source="org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4811-4849;129-129;17-55];</data>
    </edge>
    <edge id="e2014" source="org.apache.commons.io.output.XmlStreamWriterTest.testEmpty()" target="org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3328-3357;82-82;17-46];</data>
    </edge>
    <edge id="e2015" source="org.apache.commons.io.output.XmlStreamWriterTest.testEmpty()" target="org.apache.commons.io.output.XmlStreamWriter.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3328-3357;82-82;17-46/3328-3357;82-82;17-46/3328-3357;82-82;17-46];</data>
    </edge>
    <edge id="e2016" source="org.apache.commons.io.output.XmlStreamWriterTest.testEmpty()" target="org.apache.commons.io.output.XmlStreamWriter.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3328-3357;82-82;17-46];</data>
    </edge>
    <edge id="e2017" source="org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4692-4731;125-125;17-56];</data>
    </edge>
    <edge id="e2018" source="org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4460-4498;117-117;17-55];</data>
    </edge>
    <edge id="e2019" source="org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4576-4614;121-121;17-55];</data>
    </edge>
    <edge id="e2020" source="org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[3154-3189;77-77;17-52];</data>
    </edge>
    <edge id="e2021" source="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4228-4267;109-109;17-56];</data>
    </edge>
    <edge id="e2022" source="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4116-4153;105-105;17-54];</data>
    </edge>
    <edge id="e2023" source="org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4344-4383;113-113;17-56];</data>
    </edge>
    <edge id="e2024" source="org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding()" target="org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java;[4006-4042;101-101;17-53];</data>
    </edge>
    <edge id="e2025" source="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(long)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[2372-2404;72-72;22-54];</data>
    </edge>
    <edge id="e2026" source="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(long)" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[2372-2404;72-72;22-54];</data>
    </edge>
    <edge id="e2027" source="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(long)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[2372-2404;72-72;22-54];</data>
    </edge>
    <edge id="e2028" source="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[3690-3738;106-106;20-68];</data>
    </edge>
    <edge id="e2029" source="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[3690-3738;106-106;20-68];</data>
    </edge>
    <edge id="e2030" source="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[4115-4201;118-119;20-32];</data>
    </edge>
    <edge id="e2031" source="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)" target="org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[1837-1911;57-58;20-30];</data>
    </edge>
    <edge id="e2032" source="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[1837-1911;57-58;20-30];</data>
    </edge>
    <edge id="e2033" source="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/FileBasedTestCase.java;[3086-3161;92-92;20-95];</data>
    </edge>
    <edge id="e2034" source="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)" target="org.apache.commons.io.input.ProxyInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnCloseInputStream.java;[1205-1251;34-34;12-58];</data>
    </edge>
    <edge id="e2035" source="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)" target="org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1400-1512;39-39;12-124];</data>
    </edge>
    <edge id="e2036" source="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close()" target="org.apache.commons.io.output.ProxyOutputStream.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1958-1983;56-56;17-42];</data>
    </edge>
    <edge id="e2037" source="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()" target="org.apache.commons.io.output.ProxyOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/testtools/YellOnFlushAndCloseOutputStream.java;[1704-1729;47-47;17-42];</data>
    </edge>
    <edge id="e2038" source="org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)" target="org.apache.commons.io.ByteOrderMark.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[4471-4494;137-137;20-43];</data>
    </edge>
    <edge id="e2039" source="org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)" target="org.apache.commons.io.ByteOrderMark.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ByteOrderMark.java;[4471-4494;137-137;20-43];</data>
    </edge>
    <edge id="e2040" source="org.apache.commons.io.ByteOrderMarkTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1418-1457;36-36;12-51];</data>
    </edge>
    <edge id="e2041" source="org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName()" target="org.apache.commons.io.ByteOrderMark.getCharsetName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1560-1576;41-41;17-33/1560-1576;41-41;17-33/1560-1576;41-41;17-33];</data>
    </edge>
    <edge id="e2042" source="org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames()" target="org.apache.commons.io.ByteOrderMark.getCharsetName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[1953-1978;48-48;17-42/1953-1978;48-48;17-42/1953-1978;48-48;17-42/1953-1978;48-48;17-42/1953-1978;48-48;17-42];</data>
    </edge>
    <edge id="e2043" source="org.apache.commons.io.ByteOrderMarkTestCase.testEquals()" target="org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28];</data>
    </edge>
    <edge id="e2044" source="org.apache.commons.io.ByteOrderMarkTestCase.testEquals()" target="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28/3574-3585;81-81;17-28];</data>
    </edge>
    <edge id="e2045" source="org.apache.commons.io.ByteOrderMarkTestCase.testErrors()" target="org.apache.commons.io.ByteOrderMark(java.lang.String,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[4664-4675;102-102;17-28/4664-4675;102-102;17-28/4664-4675;102-102;17-28/4664-4675;102-102;17-28];</data>
    </edge>
    <edge id="e2046" source="org.apache.commons.io.ByteOrderMarkTestCase.testGet()" target="org.apache.commons.io.ByteOrderMark.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[2725-2733;64-64;17-25/2725-2733;64-64;17-25/2725-2733;64-64;17-25/2725-2733;64-64;17-25/2725-2733;64-64;17-25/2725-2733;64-64;17-25];</data>
    </edge>
    <edge id="e2047" source="org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes()" target="org.apache.commons.io.ByteOrderMark.getBytes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[3169-3182;74-74;17-30/3169-3182;74-74;17-30/3169-3182;74-74;17-30];</data>
    </edge>
    <edge id="e2048" source="org.apache.commons.io.ByteOrderMarkTestCase.testHashCode()" target="org.apache.commons.io.ByteOrderMark.hashCode()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[4300-4313;94-94;17-30/4300-4313;94-94;17-30/4300-4313;94-94;17-30];</data>
    </edge>
    <edge id="e2049" source="org.apache.commons.io.ByteOrderMarkTestCase.testLength()" target="org.apache.commons.io.ByteOrderMark.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[2454-2465;57-57;17-28/2454-2465;57-57;17-28/2454-2465;57-57;17-28];</data>
    </edge>
    <edge id="e2050" source="org.apache.commons.io.ByteOrderMarkTestCase.testToString()" target="org.apache.commons.io.ByteOrderMark.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ByteOrderMarkTestCase.java;[5619-5632;130-130;17-30/5619-5632;130-130;17-30/5619-5632;130-130;17-30];</data>
    </edge>
    <edge id="e2051" source="org.apache.commons.io.CharsetsTestCase.testRequiredCharsets()" target="org.apache.commons.io.Charsets.requiredCharsets()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[1159-1180;34-34;17-38];</data>
    </edge>
    <edge id="e2052" source="org.apache.commons.io.CharsetsTestCase.testToCharset()" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[2124-2138;53-53;17-31];</data>
    </edge>
    <edge id="e2053" source="org.apache.commons.io.CharsetsTestCase.testToCharset()" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CharsetsTestCase.java;[2124-2138;53-53;17-31/2124-2138;53-53;17-31/2124-2138;53-53;17-31];</data>
    </edge>
    <edge id="e2054" source="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer)" target="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[6685-6760;154-155;24-30];</data>
    </edge>
    <edge id="e2055" source="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer,java.lang.String)" target="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[7405-7544;171-175;24-34];</data>
    </edge>
    <edge id="e2056" source="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[10077-10186;246-249;24-34];</data>
    </edge>
    <edge id="e2057" source="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[10934-11078;265-269;24-34];</data>
    </edge>
    <edge id="e2058" source="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.OutputStream)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[11858-11968;289-292;24-34];</data>
    </edge>
    <edge id="e2059" source="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[12873-13018;312-316;24-34];</data>
    </edge>
    <edge id="e2060" source="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[13937-14047;339-342;24-34];</data>
    </edge>
    <edge id="e2061" source="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/CopyUtils.java;[15013-15158;364-368;24-34];</data>
    </edge>
    <edge id="e2062" source="org.apache.commons.io.CopyUtilsTest(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[1976-2011;54-54;12-47];</data>
    </edge>
    <edge id="e2063" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
    </edge>
    <edge id="e2064" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
    </edge>
    <edge id="e2065" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()" target="org.apache.commons.io.CopyUtils.copy(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
    </edge>
    <edge id="e2066" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
    </edge>
    <edge id="e2067" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2649-2699;79-79;17-67];</data>
    </edge>
    <edge id="e2068" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
    </edge>
    <edge id="e2069" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
    </edge>
    <edge id="e2070" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()" target="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
    </edge>
    <edge id="e2071" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
    </edge>
    <edge id="e2072" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3078-3122;89-89;17-61];</data>
    </edge>
    <edge id="e2073" source="org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding()" target="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[3607-3663;101-101;17-73];</data>
    </edge>
    <edge id="e2074" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2075" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2076" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2077" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2078" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2079" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4030-4082;110-110;17-69];</data>
    </edge>
    <edge id="e2080" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2081" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2082" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2083" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2084" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2085" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[4761-4807;126-126;17-63];</data>
    </edge>
    <edge id="e2086" source="org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding()" target="org.apache.commons.io.CopyUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5461-5519;142-142;17-75];</data>
    </edge>
    <edge id="e2087" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2088" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2089" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2090" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2091" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2092" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[5912-5959;151-151;17-64];</data>
    </edge>
    <edge id="e2093" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2094" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2095" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2096" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.CopyUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2097" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2098" source="org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[6892-6933;172-172;17-58];</data>
    </edge>
    <edge id="e2099" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
    </edge>
    <edge id="e2100" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
    </edge>
    <edge id="e2101" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()" target="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
    </edge>
    <edge id="e2102" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
    </edge>
    <edge id="e2103" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[7752-7799;191-191;17-64];</data>
    </edge>
    <edge id="e2104" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
    </edge>
    <edge id="e2105" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
    </edge>
    <edge id="e2106" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()" target="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
    </edge>
    <edge id="e2107" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
    </edge>
    <edge id="e2108" source="org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[8566-8607;209-209;17-58];</data>
    </edge>
    <edge id="e2109" source="org.apache.commons.io.CopyUtilsTest.testCtor()" target="org.apache.commons.io.CopyUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/CopyUtilsTest.java;[2510-2519;74-74;17-26];</data>
    </edge>
    <edge id="e2110" source="org.apache.commons.io.DemuxTestCase$ReaderThread.run()" target="org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[5897-5901;176-176;21-25];</data>
    </edge>
    <edge id="e2111" source="org.apache.commons.io.DemuxTestCase$ReaderThread.run()" target="org.apache.commons.io.input.DemuxInputStream.read()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[5897-5901;176-176;21-25/5897-5901;176-176;21-25];</data>
    </edge>
    <edge id="e2112" source="org.apache.commons.io.DemuxTestCase$WriterThread.run()" target="org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[7086-7090;219-219;21-25];</data>
    </edge>
    <edge id="e2113" source="org.apache.commons.io.DemuxTestCase$WriterThread.run()" target="org.apache.commons.io.output.DemuxOutputStream.write(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[7086-7090;219-219;21-25];</data>
    </edge>
    <edge id="e2114" source="org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)" target="org.apache.commons.io.DemuxTestCase$ReaderThread.getData()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2414-2448;62-62;20-54];</data>
    </edge>
    <edge id="e2115" source="org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)" target="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[2160-2195;53-53;20-55];</data>
    </edge>
    <edge id="e2116" source="org.apache.commons.io.DemuxTestCase.startReader(java.lang.String,java.lang.String,org.apache.commons.io.input.DemuxInputStream)" target="org.apache.commons.io.DemuxTestCase$ReaderThread(java.lang.String,java.io.InputStream,org.apache.commons.io.input.DemuxInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[3753-3918;106-109;18-24];</data>
    </edge>
    <edge id="e2117" source="org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String,java.lang.String,org.apache.commons.io.output.DemuxOutputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[3304-3470;94-97;18-24];</data>
    </edge>
    <edge id="e2118" source="org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String,java.lang.String,org.apache.commons.io.output.DemuxOutputStream)" target="org.apache.commons.io.DemuxTestCase$WriterThread(java.lang.String,java.lang.String,java.io.OutputStream,org.apache.commons.io.output.DemuxOutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[3304-3470;94-97;18-24];</data>
    </edge>
    <edge id="e2119" source="org.apache.commons.io.DemuxTestCase.testInputStream()" target="org.apache.commons.io.input.DemuxInputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24];</data>
    </edge>
    <edge id="e2120" source="org.apache.commons.io.DemuxTestCase.testInputStream()" target="org.apache.commons.io.DemuxTestCase.startReader(java.lang.String,java.lang.String,org.apache.commons.io.input.DemuxInputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24/4748-4789;136-137;17-24/4748-4789;136-137;17-24/4748-4789;136-137;17-24];</data>
    </edge>
    <edge id="e2121" source="org.apache.commons.io.DemuxTestCase.testInputStream()" target="org.apache.commons.io.DemuxTestCase.doStart()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24];</data>
    </edge>
    <edge id="e2122" source="org.apache.commons.io.DemuxTestCase.testInputStream()" target="org.apache.commons.io.DemuxTestCase.doJoin()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24];</data>
    </edge>
    <edge id="e2123" source="org.apache.commons.io.DemuxTestCase.testInputStream()" target="org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4748-4789;136-137;17-24/4748-4789;136-137;17-24/4748-4789;136-137;17-24/4748-4789;136-137;17-24];</data>
    </edge>
    <edge id="e2124" source="org.apache.commons.io.DemuxTestCase.testOutputStream()" target="org.apache.commons.io.output.DemuxOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24];</data>
    </edge>
    <edge id="e2125" source="org.apache.commons.io.DemuxTestCase.testOutputStream()" target="org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String,java.lang.String,org.apache.commons.io.output.DemuxOutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24/4164-4206;117-118;17-24/4164-4206;117-118;17-24/4164-4206;117-118;17-24];</data>
    </edge>
    <edge id="e2126" source="org.apache.commons.io.DemuxTestCase.testOutputStream()" target="org.apache.commons.io.DemuxTestCase.doStart()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24];</data>
    </edge>
    <edge id="e2127" source="org.apache.commons.io.DemuxTestCase.testOutputStream()" target="org.apache.commons.io.DemuxTestCase.doJoin()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24];</data>
    </edge>
    <edge id="e2128" source="org.apache.commons.io.DemuxTestCase.testOutputStream()" target="org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DemuxTestCase.java;[4164-4206;117-118;17-24/4164-4206;117-118;17-24/4164-4206;117-118;17-24/4164-4206;117-118;17-24];</data>
    </edge>
    <edge id="e2129" source="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.lang.String,java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[24751-24799;599-599;16-64];</data>
    </edge>
    <edge id="e2130" source="org.apache.commons.io.DirectoryWalker()" target="org.apache.commons.io.DirectoryWalker(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[9829-9845;265-265;15-31];</data>
    </edge>
    <edge id="e2131" source="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" target="org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[11472-11563;300-300;15-106];</data>
    </edge>
    <edge id="e2132" source="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" target="org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[11472-11563;300-300;15-106];</data>
    </edge>
    <edge id="e2133" source="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[11472-11563;300-300;15-106];</data>
    </edge>
    <edge id="e2134" source="org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[16081-16178;393-393;26-123];</data>
    </edge>
    <edge id="e2135" source="org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[16081-16178;393-393;26-123];</data>
    </edge>
    <edge id="e2136" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108/13823-13913;350-350;18-108/13823-13913;350-350;18-108/13823-13913;350-350;18-108/13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2137" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2138" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2139" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.filterDirectoryContents(java.io.File,int,java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2140" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2141" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2142" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleFile(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2143" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13823-13913;350-350;18-108];</data>
    </edge>
    <edge id="e2144" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleStart(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13000-13078;329-329;26-104];</data>
    </edge>
    <edge id="e2145" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13000-13078;329-329;26-104];</data>
    </edge>
    <edge id="e2146" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13000-13078;329-329;26-104];</data>
    </edge>
    <edge id="e2147" source="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/DirectoryWalker.java;[13000-13078;329-329;26-104];</data>
    </edge>
    <edge id="e2148" source="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker(java.lang.String,boolean)" target="org.apache.commons.io.DirectoryWalker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17215-17288;447-447;9-82];</data>
    </edge>
    <edge id="e2149" source="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17480-17529;454-454;30-79];</data>
    </edge>
    <edge id="e2150" source="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" target="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[18535-18680;480-481;24-71];</data>
    </edge>
    <edge id="e2151" source="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[17792-17899;462-462;24-131];</data>
    </edge>
    <edge id="e2152" source="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleFile(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[18196-18290;471-471;24-118];</data>
    </edge>
    <edge id="e2153" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder(java.io.FileFilter,int)" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[16501-16566;426-426;19-84];</data>
    </edge>
    <edge id="e2154" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)" target="org.apache.commons.io.DirectoryWalker(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15067-15127;386-386;19-79];</data>
    </edge>
    <edge id="e2155" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" target="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15199-15295;390-390;19-115];</data>
    </edge>
    <edge id="e2156" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[15420-15450;395-395;30-60];</data>
    </edge>
    <edge id="e2157" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString(java.io.FileFilter,int)" target="org.apache.commons.io.DirectoryWalker(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[21281-21347;553-553;19-85];</data>
    </edge>
    <edge id="e2158" source="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[21459-21489;558-558;32-62];</data>
    </edge>
    <edge id="e2159" source="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker(java.lang.String,boolean)" target="org.apache.commons.io.DirectoryWalker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[19201-19286;498-498;9-94];</data>
    </edge>
    <edge id="e2160" source="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[19478-19527;505-505;30-79];</data>
    </edge>
    <edge id="e2161" source="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" target="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[20763-20908;539-540;24-71];</data>
    </edge>
    <edge id="e2162" source="org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(java.io.File[])" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10582-10617;273-273;33-68];</data>
    </edge>
    <edge id="e2163" source="org.apache.commons.io.DirectoryWalkerTestCase.testCancel()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10890-10901;285-285;17-28/10890-10901;285-285;17-28/10890-10901;285-285;17-28];</data>
    </edge>
    <edge id="e2164" source="org.apache.commons.io.DirectoryWalkerTestCase.testCancel()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10890-10901;285-285;17-28/10890-10901;285-285;17-28/10890-10901;285-285;17-28];</data>
    </edge>
    <edge id="e2165" source="org.apache.commons.io.DirectoryWalkerTestCase.testCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10890-10901;285-285;17-28/10890-10901;285-285;17-28];</data>
    </edge>
    <edge id="e2166" source="org.apache.commons.io.DirectoryWalkerTestCase.testCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getDepth()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[10890-10901;285-285;17-28/10890-10901;285-285;17-28];</data>
    </edge>
    <edge id="e2167" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[3556-3567;82-82;17-28];</data>
    </edge>
    <edge id="e2168" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[3556-3567;82-82;17-28];</data>
    </edge>
    <edge id="e2169" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[3556-3567;82-82;17-28/3556-3567;82-82;17-28/3556-3567;82-82;17-28];</data>
    </edge>
    <edge id="e2170" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4096-4116;95-95;17-37];</data>
    </edge>
    <edge id="e2171" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4096-4116;95-95;17-37];</data>
    </edge>
    <edge id="e2172" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4419-4439;105-105;17-37];</data>
    </edge>
    <edge id="e2173" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4419-4439;105-105;17-37];</data>
    </edge>
    <edge id="e2174" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4807-4827;116-116;17-37];</data>
    </edge>
    <edge id="e2175" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[4807-4827;116-116;17-37];</data>
    </edge>
    <edge id="e2176" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5332-5352;129-129;17-37];</data>
    </edge>
    <edge id="e2177" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5332-5352;129-129;17-37];</data>
    </edge>
    <edge id="e2178" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5332-5352;129-129;17-37/5332-5352;129-129;17-37];</data>
    </edge>
    <edge id="e2179" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5806-5828;141-141;17-39];</data>
    </edge>
    <edge id="e2180" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5806-5828;141-141;17-39];</data>
    </edge>
    <edge id="e2181" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[5806-5828;141-141;17-39/5806-5828;141-141;17-39];</data>
    </edge>
    <edge id="e2182" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6330-6352;153-153;17-39];</data>
    </edge>
    <edge id="e2183" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6330-6352;153-153;17-39];</data>
    </edge>
    <edge id="e2184" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6330-6352;153-153;17-39/6330-6352;153-153;17-39];</data>
    </edge>
    <edge id="e2185" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6868-6890;165-165;17-39];</data>
    </edge>
    <edge id="e2186" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6868-6890;165-165;17-39];</data>
    </edge>
    <edge id="e2187" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6868-6890;165-165;17-39];</data>
    </edge>
    <edge id="e2188" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[6868-6890;165-165;17-39];</data>
    </edge>
    <edge id="e2189" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7383-7405;177-177;17-39];</data>
    </edge>
    <edge id="e2190" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7383-7405;177-177;17-39];</data>
    </edge>
    <edge id="e2191" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7383-7405;177-177;17-39];</data>
    </edge>
    <edge id="e2192" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7383-7405;177-177;17-39];</data>
    </edge>
    <edge id="e2193" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterString()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[14417-14434;371-371;17-34];</data>
    </edge>
    <edge id="e2194" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterString()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[14417-14434;371-371;17-34];</data>
    </edge>
    <edge id="e2195" source="org.apache.commons.io.DirectoryWalkerTestCase.testFilterString()" target="org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[14417-14434;371-371;17-34/14417-14434;371-371;17-34];</data>
    </edge>
    <edge id="e2196" source="org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8882-8912;219-219;17-47];</data>
    </edge>
    <edge id="e2197" source="org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8882-8912;219-219;17-47];</data>
    </edge>
    <edge id="e2198" source="org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7901-7920;189-189;17-36];</data>
    </edge>
    <edge id="e2199" source="org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[7901-7920;189-189;17-36];</data>
    </edge>
    <edge id="e2200" source="org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8214-8240;199-199;17-43/8214-8240;199-199;17-43];</data>
    </edge>
    <edge id="e2201" source="org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[8214-8240;199-199;17-43/8214-8240;199-199;17-43];</data>
    </edge>
    <edge id="e2202" source="org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[12572-12594;327-327;17-39/12572-12594;327-327;17-39/12572-12594;327-327;17-39];</data>
    </edge>
    <edge id="e2203" source="org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[12572-12594;327-327;17-39/12572-12594;327-327;17-39/12572-12594;327-327;17-39];</data>
    </edge>
    <edge id="e2204" source="org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getDepth()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[12572-12594;327-327;17-39/12572-12594;327-327;17-39];</data>
    </edge>
    <edge id="e2205" source="org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCase.java;[12572-12594;327-327;17-39];</data>
    </edge>
    <edge id="e2206" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker(java.lang.String,boolean)" target="org.apache.commons.io.DirectoryWalker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[16631-16704;429-429;9-82];</data>
    </edge>
    <edge id="e2207" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[16890-16939;436-436;24-73];</data>
    </edge>
    <edge id="e2208" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" target="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17921-18060;462-463;24-71];</data>
    </edge>
    <edge id="e2209" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleDirectoryEnd(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17190-17291;444-444;24-125];</data>
    </edge>
    <edge id="e2210" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleFile(java.io.File,int,java.util.Collection)" target="org.apache.commons.io.DirectoryWalker$CancelException(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[17588-17676;453-453;24-112];</data>
    </edge>
    <edge id="e2211" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder(java.io.FileFilter,int)" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[15929-15994;408-408;19-84];</data>
    </edge>
    <edge id="e2212" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)" target="org.apache.commons.io.DirectoryWalker(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14525-14585;368-368;19-79];</data>
    </edge>
    <edge id="e2213" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" target="org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14657-14753;372-372;19-115];</data>
    </edge>
    <edge id="e2214" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[14872-14902;377-377;24-54];</data>
    </edge>
    <edge id="e2215" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker(java.lang.String,boolean)" target="org.apache.commons.io.DirectoryWalker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[18569-18654;480-480;9-94];</data>
    </edge>
    <edge id="e2216" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[18840-18889;487-487;24-73];</data>
    </edge>
    <edge id="e2217" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" target="org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[20101-20240;521-522;24-71];</data>
    </edge>
    <edge id="e2218" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(java.io.File[])" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10464-10499;268-268;33-68];</data>
    </edge>
    <edge id="e2219" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10762-10773;279-279;17-28/10762-10773;279-279;17-28/10762-10773;279-279;17-28];</data>
    </edge>
    <edge id="e2220" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10762-10773;279-279;17-28/10762-10773;279-279;17-28/10762-10773;279-279;17-28];</data>
    </edge>
    <edge id="e2221" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10762-10773;279-279;17-28/10762-10773;279-279;17-28];</data>
    </edge>
    <edge id="e2222" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getDepth()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[10762-10773;279-279;17-28/10762-10773;279-279;17-28];</data>
    </edge>
    <edge id="e2223" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3807-3818;92-92;17-28];</data>
    </edge>
    <edge id="e2224" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3807-3818;92-92;17-28];</data>
    </edge>
    <edge id="e2225" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[3807-3818;92-92;17-28/3807-3818;92-92;17-28/3807-3818;92-92;17-28];</data>
    </edge>
    <edge id="e2226" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4331-4351;104-104;17-37];</data>
    </edge>
    <edge id="e2227" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4331-4351;104-104;17-37];</data>
    </edge>
    <edge id="e2228" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4638-4658;113-113;17-37];</data>
    </edge>
    <edge id="e2229" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[4638-4658;113-113;17-37];</data>
    </edge>
    <edge id="e2230" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5010-5030;123-123;17-37];</data>
    </edge>
    <edge id="e2231" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5010-5030;123-123;17-37];</data>
    </edge>
    <edge id="e2232" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5519-5539;135-135;17-37];</data>
    </edge>
    <edge id="e2233" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5519-5539;135-135;17-37];</data>
    </edge>
    <edge id="e2234" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5519-5539;135-135;17-37/5519-5539;135-135;17-37];</data>
    </edge>
    <edge id="e2235" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5977-5999;146-146;17-39];</data>
    </edge>
    <edge id="e2236" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5977-5999;146-146;17-39];</data>
    </edge>
    <edge id="e2237" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[5977-5999;146-146;17-39/5977-5999;146-146;17-39];</data>
    </edge>
    <edge id="e2238" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[6485-6507;157-157;17-39];</data>
    </edge>
    <edge id="e2239" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[6485-6507;157-157;17-39];</data>
    </edge>
    <edge id="e2240" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[6485-6507;157-157;17-39/6485-6507;157-157;17-39];</data>
    </edge>
    <edge id="e2241" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7007-7029;168-168;17-39];</data>
    </edge>
    <edge id="e2242" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7007-7029;168-168;17-39];</data>
    </edge>
    <edge id="e2243" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7007-7029;168-168;17-39];</data>
    </edge>
    <edge id="e2244" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7007-7029;168-168;17-39];</data>
    </edge>
    <edge id="e2245" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7500-7522;179-179;17-39];</data>
    </edge>
    <edge id="e2246" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7500-7522;179-179;17-39];</data>
    </edge>
    <edge id="e2247" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7500-7522;179-179;17-39];</data>
    </edge>
    <edge id="e2248" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7500-7522;179-179;17-39];</data>
    </edge>
    <edge id="e2249" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8945-8975;218-218;17-47];</data>
    </edge>
    <edge id="e2250" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8945-8975;218-218;17-47];</data>
    </edge>
    <edge id="e2251" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7996-8015;190-190;17-36];</data>
    </edge>
    <edge id="e2252" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[7996-8015;190-190;17-36];</data>
    </edge>
    <edge id="e2253" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder(java.io.FileFilter,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8293-8319;199-199;17-43/8293-8319;199-199;17-43];</data>
    </edge>
    <edge id="e2254" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[8293-8319;199-199;17-43/8293-8319;199-199;17-43];</data>
    </edge>
    <edge id="e2255" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[12435-12457;320-320;17-39/12435-12457;320-320;17-39/12435-12457;320-320;17-39];</data>
    </edge>
    <edge id="e2256" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[12435-12457;320-320;17-39/12435-12457;320-320;17-39/12435-12457;320-320;17-39];</data>
    </edge>
    <edge id="e2257" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getDepth()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[12435-12457;320-320;17-39/12435-12457;320-320;17-39];</data>
    </edge>
    <edge id="e2258" source="org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()" target="org.apache.commons.io.DirectoryWalker$CancelException.getFile()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java;[12435-12457;320-320;17-39];</data>
    </edge>
    <edge id="e2259" source="org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)" target="org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[10760-10813;274-274;26-79];</data>
    </edge>
    <edge id="e2260" source="org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[17672-17740;467-468;26-26];</data>
    </edge>
    <edge id="e2261" source="org.apache.commons.io.EndianUtils.swapDouble(double)" target="org.apache.commons.io.EndianUtils.swapLong(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[3674-3703;106-106;26-55];</data>
    </edge>
    <edge id="e2262" source="org.apache.commons.io.EndianUtils.readSwappedFloat(byte[],int)" target="org.apache.commons.io.EndianUtils.readSwappedInteger(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[9851-9903;252-252;25-77];</data>
    </edge>
    <edge id="e2263" source="org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[16760-16827;441-442;25-26];</data>
    </edge>
    <edge id="e2264" source="org.apache.commons.io.EndianUtils.swapFloat(float)" target="org.apache.commons.io.EndianUtils.swapInteger(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[3381-3408;97-97;25-52];</data>
    </edge>
    <edge id="e2265" source="org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[13364-13433;346-347;23-26/13364-13433;346-347;23-26/13364-13433;346-347;23-26/13364-13433;346-347;23-26];</data>
    </edge>
    <edge id="e2266" source="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[12190-12265;313-314;23-26/12190-12265;313-314;23-26];</data>
    </edge>
    <edge id="e2267" source="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[15745-15811;411-412;24-26];</data>
    </edge>
    <edge id="e2268" source="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[15745-15811;411-412;24-26];</data>
    </edge>
    <edge id="e2269" source="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[14087-14164;367-368;24-26/14087-14164;367-368;24-26/14087-14164;367-368;24-26/14087-14164;367-368;24-26];</data>
    </edge>
    <edge id="e2270" source="org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)" target="org.apache.commons.io.EndianUtils.read(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[11700-11767;299-300;25-26/11700-11767;299-300;25-26];</data>
    </edge>
    <edge id="e2271" source="org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)" target="org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[10295-10369;263-263;24-98];</data>
    </edge>
    <edge id="e2272" source="org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream,double)" target="org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[17203-17294;454-455;24-26];</data>
    </edge>
    <edge id="e2273" source="org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[],int,float)" target="org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[9390-9462;241-241;24-96];</data>
    </edge>
    <edge id="e2274" source="org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream,float)" target="org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/EndianUtils.java;[16295-16384;428-429;24-26];</data>
    </edge>
    <edge id="e2275" source="org.apache.commons.io.EndianUtilsTest.testCtor()" target="org.apache.commons.io.EndianUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1225-1234;35-35;17-26];</data>
    </edge>
    <edge id="e2276" source="org.apache.commons.io.EndianUtilsTest.testEOFException()" target="org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1329-1365;40-40;17-53];</data>
    </edge>
    <edge id="e2277" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble()" target="org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[9529-9570;225-225;17-58];</data>
    </edge>
    <edge id="e2278" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble()" target="org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[9529-9570;225-225;17-58];</data>
    </edge>
    <edge id="e2279" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat()" target="org.apache.commons.io.EndianUtils.readSwappedFloat(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8379-8419;197-197;17-57];</data>
    </edge>
    <edge id="e2280" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat()" target="org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8379-8419;197-197;17-57];</data>
    </edge>
    <edge id="e2281" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger()" target="org.apache.commons.io.EndianUtils.readSwappedInteger(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5538-5580;131-131;17-59];</data>
    </edge>
    <edge id="e2282" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger()" target="org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5538-5580;131-131;17-59];</data>
    </edge>
    <edge id="e2283" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedLong()" target="org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6984-7023;164-164;17-56];</data>
    </edge>
    <edge id="e2284" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedLong()" target="org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6984-7023;164-164;17-56];</data>
    </edge>
    <edge id="e2285" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedShort()" target="org.apache.commons.io.EndianUtils.readSwappedShort(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4312-4352;102-102;17-57];</data>
    </edge>
    <edge id="e2286" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedShort()" target="org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4312-4352;102-102;17-57];</data>
    </edge>
    <edge id="e2287" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6571-6621;156-156;17-67];</data>
    </edge>
    <edge id="e2288" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[6571-6621;156-156;17-67];</data>
    </edge>
    <edge id="e2289" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5161-5209;123-123;17-65];</data>
    </edge>
    <edge id="e2290" source="org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5161-5209;123-123;17-65];</data>
    </edge>
    <edge id="e2291" source="org.apache.commons.io.EndianUtilsTest.testSwapDouble()" target="org.apache.commons.io.EndianUtils.swapDouble(double)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3197-3212;81-81;17-32/3197-3212;81-81;17-32];</data>
    </edge>
    <edge id="e2292" source="org.apache.commons.io.EndianUtilsTest.testSwapFloat()" target="org.apache.commons.io.EndianUtils.swapFloat(float)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2906-2920;74-74;17-31/2906-2920;74-74;17-31];</data>
    </edge>
    <edge id="e2293" source="org.apache.commons.io.EndianUtilsTest.testSwapInteger()" target="org.apache.commons.io.EndianUtils.swapInteger(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2013-2029;57-57;17-33/2013-2029;57-57;17-33/2013-2029;57-57;17-33/2013-2029;57-57;17-33/2013-2029;57-57;17-33/2013-2029;57-57;17-33/2013-2029;57-57;17-33];</data>
    </edge>
    <edge id="e2294" source="org.apache.commons.io.EndianUtilsTest.testSwapLong()" target="org.apache.commons.io.EndianUtils.swapLong(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[2557-2570;67-67;17-30/2557-2570;67-67;17-30/2557-2570;67-67;17-30/2557-2570;67-67;17-30];</data>
    </edge>
    <edge id="e2295" source="org.apache.commons.io.EndianUtilsTest.testSwapShort()" target="org.apache.commons.io.EndianUtils.swapShort(short)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[1658-1672;50-50;17-31/1658-1672;50-50;17-31/1658-1672;50-50;17-31/1658-1672;50-50;17-31];</data>
    </edge>
    <edge id="e2296" source="org.apache.commons.io.EndianUtilsTest.testSymmetry()" target="org.apache.commons.io.EndianUtils.swapShort(short)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30/3639-3652;92-92;17-30];</data>
    </edge>
    <edge id="e2297" source="org.apache.commons.io.EndianUtilsTest.testSymmetry()" target="org.apache.commons.io.EndianUtils.swapInteger(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30/3639-3652;92-92;17-30];</data>
    </edge>
    <edge id="e2298" source="org.apache.commons.io.EndianUtilsTest.testSymmetry()" target="org.apache.commons.io.EndianUtils.swapLong(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30/3639-3652;92-92;17-30];</data>
    </edge>
    <edge id="e2299" source="org.apache.commons.io.EndianUtilsTest.testSymmetry()" target="org.apache.commons.io.EndianUtils.swapFloat(float)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30/3639-3652;92-92;17-30];</data>
    </edge>
    <edge id="e2300" source="org.apache.commons.io.EndianUtilsTest.testSymmetry()" target="org.apache.commons.io.EndianUtils.swapDouble(double)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[3639-3652;92-92;17-30/3639-3652;92-92;17-30];</data>
    </edge>
    <edge id="e2301" source="org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()" target="org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11077-11096;262-262;17-36];</data>
    </edge>
    <edge id="e2302" source="org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()" target="org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11077-11096;262-262;17-36];</data>
    </edge>
    <edge id="e2303" source="org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()" target="org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11077-11096;262-262;17-36];</data>
    </edge>
    <edge id="e2304" source="org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()" target="org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11077-11096;262-262;17-36];</data>
    </edge>
    <edge id="e2305" source="org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(byte[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11852-11889;283-283;17-54];</data>
    </edge>
    <edge id="e2306" source="org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun()" target="org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[11852-11889;283-283;17-54];</data>
    </edge>
    <edge id="e2307" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble()" target="org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[10019-10061;235-235;17-59];</data>
    </edge>
    <edge id="e2308" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble()" target="org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream,double)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[10019-10061;235-235;17-59];</data>
    </edge>
    <edge id="e2309" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat()" target="org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[],int,float)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8828-8869;207-207;17-58];</data>
    </edge>
    <edge id="e2310" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat()" target="org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream,float)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[8828-8869;207-207;17-58];</data>
    </edge>
    <edge id="e2311" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger()" target="org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5909-5952;139-139;17-60];</data>
    </edge>
    <edge id="e2312" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger()" target="org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[5909-5952;139-139;17-60];</data>
    </edge>
    <edge id="e2313" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong()" target="org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[7388-7428;172-172;17-57];</data>
    </edge>
    <edge id="e2314" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong()" target="org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[7388-7428;172-172;17-57];</data>
    </edge>
    <edge id="e2315" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort()" target="org.apache.commons.io.EndianUtils.writeSwappedShort(byte[],int,short)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4657-4698;110-110;17-58];</data>
    </edge>
    <edge id="e2316" source="org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort()" target="org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream,short)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/EndianUtilsTest.java;[4657-4698;110-110;17-58];</data>
    </edge>
    <edge id="e2317" source="org.apache.commons.io.FileCleaner.getTrackCount()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[5122-5136;117-117;23-37];</data>
    </edge>
    <edge id="e2318" source="org.apache.commons.io.FileCleaner.exitWhenFinished()" target="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[6629-6646;145-145;37-54];</data>
    </edge>
    <edge id="e2319" source="org.apache.commons.io.FileCleaner.track(java.io.File,java.lang.Object)" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[2509-2551;57-57;24-66];</data>
    </edge>
    <edge id="e2320" source="org.apache.commons.io.FileCleaner.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[3199-3282;73-73;24-107];</data>
    </edge>
    <edge id="e2321" source="org.apache.commons.io.FileCleaner.track(java.lang.String,java.lang.Object)" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[3901-3945;88-88;24-68];</data>
    </edge>
    <edge id="e2322" source="org.apache.commons.io.FileCleaner.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaner.java;[4612-4697;104-104;24-109];</data>
    </edge>
    <edge id="e2323" source="org.apache.commons.io.FileCleanerTestCase(java.lang.String)" target="org.apache.commons.io.FileCleaningTrackerTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleanerTestCase.java;[1260-1297;33-33;12-49];</data>
    </edge>
    <edge id="e2324" source="org.apache.commons.io.FileCleanerTestCase.newInstance()" target="org.apache.commons.io.FileCleaner.getInstance()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleanerTestCase.java;[1184-1196;29-29;35-47];</data>
    </edge>
    <edge id="e2325" source="org.apache.commons.io.FileCleaningTracker$Reaper.run()" target="org.apache.commons.io.FileCleaningTracker$Tracker.delete()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[8796-8800;216-216;21-25];</data>
    </edge>
    <edge id="e2326" source="org.apache.commons.io.FileCleaningTracker$Reaper.run()" target="org.apache.commons.io.FileCleaningTracker$Tracker.getPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[8796-8800;216-216;21-25];</data>
    </edge>
    <edge id="e2327" source="org.apache.commons.io.FileCleaningTracker$Tracker.delete()" target="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[11119-11126;278-278;24-31];</data>
    </edge>
    <edge id="e2328" source="org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker$Reaper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[5646-5736;134-134;31-121];</data>
    </edge>
    <edge id="e2329" source="org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker$Tracker(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[5646-5736;134-134;31-121];</data>
    </edge>
    <edge id="e2330" source="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object)" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[3146-3188;76-76;17-59];</data>
    </edge>
    <edge id="e2331" source="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[3736-3819;90-90;17-100];</data>
    </edge>
    <edge id="e2332" source="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[4455-4499;106-106;17-61];</data>
    </edge>
    <edge id="e2333" source="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" target="org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileCleaningTracker.java;[5064-5149;120-120;17-102];</data>
    </edge>
    <edge id="e2334" source="org.apache.commons.io.FileCleaningTrackerTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1483-1528;41-41;12-57];</data>
    </edge>
    <edge id="e2335" source="org.apache.commons.io.FileCleaningTrackerTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1483-1528;41-41;12-57];</data>
    </edge>
    <edge id="e2336" source="org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()" target="org.apache.commons.io.FileCleaningTracker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1334-1346;34-34;35-47];</data>
    </edge>
    <edge id="e2337" source="org.apache.commons.io.FileCleaningTrackerTestCase.setUp()" target="org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1708-1731;48-48;20-43];</data>
    </edge>
    <edge id="e2338" source="org.apache.commons.io.FileCleaningTrackerTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1708-1731;48-48;20-43];</data>
    </edge>
    <edge id="e2339" source="org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1901-1927;55-55;20-46];</data>
    </edge>
    <edge id="e2340" source="org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[1901-1927;55-55;20-46];</data>
    </edge>
    <edge id="e2341" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59];</data>
    </edge>
    <edge id="e2342" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59/3405-3447;100-100;17-59];</data>
    </edge>
    <edge id="e2343" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59/3405-3447;100-100;17-59/3405-3447;100-100;17-59];</data>
    </edge>
    <edge id="e2344" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59];</data>
    </edge>
    <edge id="e2345" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[3405-3447;100-100;17-59];</data>
    </edge>
    <edge id="e2346" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2347" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73/4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2348" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73/4761-4817;138-138;17-73/4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2349" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2350" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2351" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2352" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()" target="org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4761-4817;138-138;17-73/4761-4817;138-138;17-73];</data>
    </edge>
    <edge id="e2353" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72];</data>
    </edge>
    <edge id="e2354" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72/4063-4118;119-119;17-72];</data>
    </edge>
    <edge id="e2355" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72/4063-4118;119-119;17-72/4063-4118;119-119;17-72];</data>
    </edge>
    <edge id="e2356" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72];</data>
    </edge>
    <edge id="e2357" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[4063-4118;119-119;17-72];</data>
    </edge>
    <edge id="e2358" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67/7435-7485;216-216;17-67/7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2359" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2360" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2361" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2362" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2363" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()" target="org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[7435-7485;216-216;17-67];</data>
    </edge>
    <edge id="e2364" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67/8856-8906;247-247;17-67/8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2365" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2366" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2367" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2368" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2369" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()" target="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[8856-8906;247-247;17-67];</data>
    </edge>
    <edge id="e2370" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()" target="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6347-6401;185-185;17-71];</data>
    </edge>
    <edge id="e2371" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6347-6401;185-185;17-71];</data>
    </edge>
    <edge id="e2372" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6347-6401;185-185;17-71];</data>
    </edge>
    <edge id="e2373" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()" target="org.apache.commons.io.FileCleaningTracker.exitWhenFinished()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6802-6864;198-198;17-79];</data>
    </edge>
    <edge id="e2374" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[6802-6864;198-198;17-79];</data>
    </edge>
    <edge id="e2375" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54/2731-2768;78-78;17-54/2731-2768;78-78;17-54];</data>
    </edge>
    <edge id="e2376" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54];</data>
    </edge>
    <edge id="e2377" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()" target="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54];</data>
    </edge>
    <edge id="e2378" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()" target="org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54];</data>
    </edge>
    <edge id="e2379" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()" target="org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[2731-2768;78-78;17-54];</data>
    </edge>
    <edge id="e2380" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[5521-5558;158-158;17-54];</data>
    </edge>
    <edge id="e2381" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()" target="org.apache.commons.io.FileCleaningTracker.track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[5521-5558;158-158;17-54];</data>
    </edge>
    <edge id="e2382" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[5521-5558;158-158;17-54];</data>
    </edge>
    <edge id="e2383" source="org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()" target="org.apache.commons.io.FileCleaningTracker.track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[5521-5558;158-158;17-54];</data>
    </edge>
    <edge id="e2384" source="org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()" target="org.apache.commons.io.FileCleaningTracker.getTrackCount()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileCleaningTrackerTestCase.java;[10773-10810;300-300;18-55/10773-10810;300-300;18-55/10773-10810;300-300;18-55];</data>
    </edge>
    <edge id="e2385" source="org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy()" target="org.apache.commons.io.FileDeleteStrategy(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[5090-5114;135-135;9-33];</data>
    </edge>
    <edge id="e2386" source="org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete(java.io.File)" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[5630-5681;151-151;27-78];</data>
    </edge>
    <edge id="e2387" source="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)" target="org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[2712-2749;71-71;20-57];</data>
    </edge>
    <edge id="e2388" source="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)" target="org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileDeleteStrategy.java;[3439-3488;92-92;17-66];</data>
    </edge>
    <edge id="e2389" source="org.apache.commons.io.FileDeleteStrategyTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1179-1223;32-32;12-56];</data>
    </edge>
    <edge id="e2390" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[3524-3557;102-102;17-50];</data>
    </edge>
    <edge id="e2391" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[3524-3557;102-102;17-50];</data>
    </edge>
    <edge id="e2392" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()" target="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[3524-3557;102-102;17-50/3524-3557;102-102;17-50];</data>
    </edge>
    <edge id="e2393" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1535-1569;47-47;17-51];</data>
    </edge>
    <edge id="e2394" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1535-1569;47-47;17-51];</data>
    </edge>
    <edge id="e2395" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()" target="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[1535-1569;47-47;17-51/1535-1569;47-47;17-51/1535-1569;47-47;17-51/1535-1569;47-47;17-51];</data>
    </edge>
    <edge id="e2396" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()" target="org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[4159-4191;120-120;17-49];</data>
    </edge>
    <edge id="e2397" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()" target="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[4159-4191;120-120;17-49];</data>
    </edge>
    <edge id="e2398" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[2544-2585;77-77;17-58];</data>
    </edge>
    <edge id="e2399" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[2544-2585;77-77;17-58];</data>
    </edge>
    <edge id="e2400" source="org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()" target="org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[2544-2585;77-77;17-58/2544-2585;77-77;17-58/2544-2585;77-77;17-58/2544-2585;77-77;17-58];</data>
    </edge>
    <edge id="e2401" source="org.apache.commons.io.FileDeleteStrategyTestCase.testToString()" target="org.apache.commons.io.FileDeleteStrategy.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileDeleteStrategyTestCase.java;[4469-4482;130-130;17-30/4469-4482;130-130;17-30];</data>
    </edge>
    <edge id="e2402" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.ThreadMonitor.start(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2403" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.FileSystemUtils.openProcess(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2404" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2405" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112/19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2406" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2407" source="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[19284-19378;464-464;18-112];</data>
    </edge>
    <edge id="e2408" source="org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[5226-5272;142-142;24-70];</data>
    </edge>
    <edge id="e2409" source="org.apache.commons.io.FileSystemUtils.freeSpaceKb()" target="org.apache.commons.io.FileSystemUtils.freeSpaceKb(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[8930-8961;216-216;24-55];</data>
    </edge>
    <edge id="e2410" source="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)" target="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[6777-6825;171-171;24-72];</data>
    </edge>
    <edge id="e2411" source="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String,long)" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[8311-8379;200-200;24-92];</data>
    </edge>
    <edge id="e2412" source="org.apache.commons.io.FileSystemUtils.freeSpaceKb(long)" target="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[9590-9639;234-234;24-73];</data>
    </edge>
    <edge id="e2413" source="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[10794-10894;259-259;10-110/10794-10894;259-259;10-110];</data>
    </edge>
    <edge id="e2414" source="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[10794-10894;259-259;10-110/10794-10894;259-259;10-110];</data>
    </edge>
    <edge id="e2415" source="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" target="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[15803-15912;380-380;10-119];</data>
    </edge>
    <edge id="e2416" source="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)" target="org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[15803-15912;380-380;10-119];</data>
    </edge>
    <edge id="e2417" source="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" target="org.apache.commons.io.FilenameUtils.normalize(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[12082-12149;288-288;10-77];</data>
    </edge>
    <edge id="e2418" source="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" target="org.apache.commons.io.FileSystemUtils.performCommand(java.lang.String[],int,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[12082-12149;288-288;10-77];</data>
    </edge>
    <edge id="e2419" source="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)" target="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[12082-12149;288-288;10-77];</data>
    </edge>
    <edge id="e2420" source="org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String,java.lang.String)" target="org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileSystemUtils.java;[13522-13586;324-324;10-74];</data>
    </edge>
    <edge id="e2421" source="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21212-21270;492-492;16-74];</data>
    </edge>
    <edge id="e2422" source="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21340-21416;495-495;16-92];</data>
    </edge>
    <edge id="e2423" source="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.openProcess(java.lang.String[])" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[21573-21606;501-501;17-50];</data>
    </edge>
    <edge id="e2424" source="org.apache.commons.io.FileSystemUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1365-1406;39-39;12-53];</data>
    </edge>
    <edge id="e2425" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4013-4066;106-106;17-70];</data>
    </edge>
    <edge id="e2426" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4013-4066;106-106;17-70/4013-4066;106-106;17-70];</data>
    </edge>
    <edge id="e2427" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[3600-3652;94-94;17-69];</data>
    </edge>
    <edge id="e2428" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[3600-3652;94-94;17-69/3600-3652;94-94;17-69];</data>
    </edge>
    <edge id="e2429" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4419-4468;118-118;17-66];</data>
    </edge>
    <edge id="e2430" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4419-4468;118-118;17-66/4419-4468;118-118;17-66];</data>
    </edge>
    <edge id="e2431" source="org.apache.commons.io.FileSystemUtilsTestCase$2()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5367-5383;142-142;41-57];</data>
    </edge>
    <edge id="e2432" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()" target="org.apache.commons.io.FileSystemUtilsTestCase$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5275-5323;141-141;17-65];</data>
    </edge>
    <edge id="e2433" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5275-5323;141-141;17-65];</data>
    </edge>
    <edge id="e2434" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5275-5323;141-141;17-65/5275-5323;141-141;17-65];</data>
    </edge>
    <edge id="e2435" source="org.apache.commons.io.FileSystemUtilsTestCase$1()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4914-4930;131-131;41-57];</data>
    </edge>
    <edge id="e2436" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4819-4870;130-130;17-68];</data>
    </edge>
    <edge id="e2437" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()" target="org.apache.commons.io.FileSystemUtils()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4819-4870;130-130;17-68];</data>
    </edge>
    <edge id="e2438" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()" target="org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String,int,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[4819-4870;130-130;17-68/4819-4870;130-130;17-68];</data>
    </edge>
    <edge id="e2439" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11904-11959;283-283;17-72];</data>
    </edge>
    <edge id="e2440" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11904-11959;283-283;17-72/11904-11959;283-283;17-72/11904-11959;283-283;17-72/11904-11959;283-283;17-72];</data>
    </edge>
    <edge id="e2441" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16579-16638;374-374;17-76];</data>
    </edge>
    <edge id="e2442" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16579-16638;374-374;17-76/16579-16638;374-374;17-76/16579-16638;374-374;17-76/16579-16638;374-374;17-76];</data>
    </edge>
    <edge id="e2443" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[17333-17395;395-395;17-79];</data>
    </edge>
    <edge id="e2444" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[17333-17395;395-395;17-79/17333-17395;395-395;17-79/17333-17395;395-395;17-79/17333-17395;395-395;17-79];</data>
    </edge>
    <edge id="e2445" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[18237-18299;418-418;17-79];</data>
    </edge>
    <edge id="e2446" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[18237-18299;418-418;17-79/18237-18299;418-418;17-79/18237-18299;418-418;17-79/18237-18299;418-418;17-79];</data>
    </edge>
    <edge id="e2447" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[19160-19222;441-441;17-79];</data>
    </edge>
    <edge id="e2448" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[19160-19222;441-441;17-79/19160-19222;441-441;17-79/19160-19222;441-441;17-79/19160-19222;441-441;17-79];</data>
    </edge>
    <edge id="e2449" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[20083-20145;464-464;17-79];</data>
    </edge>
    <edge id="e2450" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[20083-20145;464-464;17-79/20083-20145;464-464;17-79/20083-20145;464-464;17-79/20083-20145;464-464;17-79];</data>
    </edge>
    <edge id="e2451" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15600-15658;356-356;17-75];</data>
    </edge>
    <edge id="e2452" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15600-15658;356-356;17-75];</data>
    </edge>
    <edge id="e2453" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16089-16149;365-365;17-77];</data>
    </edge>
    <edge id="e2454" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[16089-16149;365-365;17-77];</data>
    </edge>
    <edge id="e2455" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13335-13402;316-316;17-84];</data>
    </edge>
    <edge id="e2456" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13335-13402;316-316;17-84];</data>
    </edge>
    <edge id="e2457" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[14449-14518;336-336;17-86];</data>
    </edge>
    <edge id="e2458" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[14449-14518;336-336;17-86];</data>
    </edge>
    <edge id="e2459" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13884-13951;326-326;17-84];</data>
    </edge>
    <edge id="e2460" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[13884-13951;326-326;17-84];</data>
    </edge>
    <edge id="e2461" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15014-15083;346-346;17-86];</data>
    </edge>
    <edge id="e2462" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[15014-15083;346-346;17-86];</data>
    </edge>
    <edge id="e2463" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[12821-12886;307-307;17-82];</data>
    </edge>
    <edge id="e2464" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()" target="org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String,boolean,boolean,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[12821-12886;307-307;17-82];</data>
    </edge>
    <edge id="e2465" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10647-10718;250-250;17-88];</data>
    </edge>
    <edge id="e2466" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10647-10718;250-250;17-88];</data>
    </edge>
    <edge id="e2467" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[6899-6957;173-173;17-75];</data>
    </edge>
    <edge id="e2468" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[6899-6957;173-173;17-75];</data>
    </edge>
    <edge id="e2469" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10334-10396;241-241;17-79];</data>
    </edge>
    <edge id="e2470" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10334-10396;241-241;17-79];</data>
    </edge>
    <edge id="e2471" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10973-11041;259-259;17-85];</data>
    </edge>
    <edge id="e2472" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[10973-11041;259-259;17-85];</data>
    </edge>
    <edge id="e2473" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11309-11381;268-268;17-89];</data>
    </edge>
    <edge id="e2474" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[11309-11381;268-268;17-89];</data>
    </edge>
    <edge id="e2475" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[7741-7804;190-190;17-80];</data>
    </edge>
    <edge id="e2476" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[7741-7804;190-190;17-80];</data>
    </edge>
    <edge id="e2477" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5848-5918;153-153;17-87];</data>
    </edge>
    <edge id="e2478" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[5848-5918;153-153;17-87];</data>
    </edge>
    <edge id="e2479" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[8596-8655;207-207;17-76];</data>
    </edge>
    <edge id="e2480" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[8596-8655;207-207;17-76];</data>
    </edge>
    <edge id="e2481" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted()" target="org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils(int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[9465-9520;224-224;17-72];</data>
    </edge>
    <edge id="e2482" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted()" target="org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[9465-9520;224-224;17-72];</data>
    </edge>
    <edge id="e2483" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1532-1573;44-44;17-58];</data>
    </edge>
    <edge id="e2484" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()" target="org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1532-1573;44-44;17-58/1532-1573;44-44;17-58];</data>
    </edge>
    <edge id="e2485" source="org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()" target="org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java;[1532-1573;44-44;17-58/1532-1573;44-44;17-58];</data>
    </edge>
    <edge id="e2486" source="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" target="org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[28259-28326;725-725;27-94];</data>
    </edge>
    <edge id="e2487" source="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[28259-28326;725-725;27-94/28259-28326;725-725;27-94];</data>
    </edge>
    <edge id="e2488" source="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" target="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[30217-30319;782-782;27-129];</data>
    </edge>
    <edge id="e2489" source="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[30217-30319;782-782;27-129/30217-30319;782-782;27-129];</data>
    </edge>
    <edge id="e2490" source="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[68486-68515;1596-1596;27-56];</data>
    </edge>
    <edge id="e2491" source="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)" target="org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[70034-70109;1640-1640;27-102];</data>
    </edge>
    <edge id="e2492" source="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[112039-112088;2692-2692;28-77];</data>
    </edge>
    <edge id="e2493" source="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.util.Date)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[113041-113085;2715-2715;27-71];</data>
    </edge>
    <edge id="e2494" source="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[114870-114919;2759-2759;28-77];</data>
    </edge>
    <edge id="e2495" source="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.util.Date)" target="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[115873-115917;2782-2782;27-71];</data>
    </edge>
    <edge id="e2496" source="org.apache.commons.io.FileUtils.isSymlink(java.io.File)" target="org.apache.commons.io.FilenameUtils.isSystemWindows()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[127705-127749;3062-3062;27-71];</data>
    </edge>
    <edge id="e2497" source="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75662-75716;1801-1801;26-80];</data>
    </edge>
    <edge id="e2498" source="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75662-75716;1801-1801;26-80];</data>
    </edge>
    <edge id="e2499" source="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75662-75716;1801-1801;26-80];</data>
    </edge>
    <edge id="e2500" source="org.apache.commons.io.FileUtils.getTempDirectory()" target="org.apache.commons.io.FileUtils.getTempDirectoryPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[6838-6855;240-240;24-41];</data>
    </edge>
    <edge id="e2501" source="org.apache.commons.io.FileUtils.getUserDirectory()" target="org.apache.commons.io.FileUtils.getUserDirectoryPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[7359-7376;262-262;24-41];</data>
    </edge>
    <edge id="e2502" source="org.apache.commons.io.FileUtils.toFile(java.net.URL)" target="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[32505-32525;837-837;24-44];</data>
    </edge>
    <edge id="e2503" source="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[10061-10112;320-320;36-87];</data>
    </edge>
    <edge id="e2504" source="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[35936-35960;914-914;26-50];</data>
    </edge>
    <edge id="e2505" source="org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)" target="org.apache.commons.io.FileUtils.byteCountToDisplaySize(java.math.BigInteger)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[14784-14822;420-420;26-64];</data>
    </edge>
    <edge id="e2506" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File)" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[75213-75264;1788-1788;26-77];</data>
    </edge>
    <edge id="e2507" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[74608-74682;1772-1772;26-100];</data>
    </edge>
    <edge id="e2508" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[74608-74682;1772-1772;26-100];</data>
    </edge>
    <edge id="e2509" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[73668-73743;1747-1747;26-101];</data>
    </edge>
    <edge id="e2510" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[73668-73743;1747-1747;26-101];</data>
    </edge>
    <edge id="e2511" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[73668-73743;1747-1747;26-101];</data>
    </edge>
    <edge id="e2512" source="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[73668-73743;1747-1747;26-101];</data>
    </edge>
    <edge id="e2513" source="org.apache.commons.io.FileUtils.sizeOfAsBigInteger(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[106928-106962;2551-2551;30-64];</data>
    </edge>
    <edge id="e2514" source="org.apache.commons.io.FileUtils.sizeOfBig0(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[110480-110511;2655-2655;31-62];</data>
    </edge>
    <edge id="e2515" source="org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(java.io.File)" target="org.apache.commons.io.FileUtils.checkDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109581-109629;2628-2628;30-78];</data>
    </edge>
    <edge id="e2516" source="org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109581-109629;2628-2628;30-78];</data>
    </edge>
    <edge id="e2517" source="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109791-109831;2634-2634;31-71];</data>
    </edge>
    <edge id="e2518" source="org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfBig0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[109791-109831;2634-2634;31-71];</data>
    </edge>
    <edge id="e2519" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)" target="org.apache.commons.io.FileUtils.toSuffixes(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[26265-26360;678-679;36-85];</data>
    </edge>
    <edge id="e2520" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)" target="org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[26265-26360;678-679;36-85];</data>
    </edge>
    <edge id="e2521" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[26265-26360;678-679;36-85];</data>
    </edge>
    <edge id="e2522" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
    </edge>
    <edge id="e2523" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
    </edge>
    <edge id="e2524" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
    </edge>
    <edge id="e2525" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
    </edge>
    <edge id="e2526" source="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[19034-19138;514-515;36-94];</data>
    </edge>
    <edge id="e2527" source="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
    </edge>
    <edge id="e2528" source="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
    </edge>
    <edge id="e2529" source="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
    </edge>
    <edge id="e2530" source="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
    </edge>
    <edge id="e2531" source="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.or(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[22204-22315;587-588;36-94];</data>
    </edge>
    <edge id="e2532" source="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,java.lang.String[],boolean)" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[27409-27507;704-705;34-85];</data>
    </edge>
    <edge id="e2533" source="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[23770-23877;622-623;34-94];</data>
    </edge>
    <edge id="e2534" source="org.apache.commons.io.FileUtils.iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[24958-25059;647-647;34-135];</data>
    </edge>
    <edge id="e2535" source="org.apache.commons.io.FileUtils.readLines(java.io.File)" target="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[78069-78113;1861-1861;32-76];</data>
    </edge>
    <edge id="e2536" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)" target="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[77425-77492;1846-1846;32-99];</data>
    </edge>
    <edge id="e2537" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[77425-77492;1846-1846;32-99];</data>
    </edge>
    <edge id="e2538" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[76428-76496;1821-1821;32-100];</data>
    </edge>
    <edge id="e2539" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[76428-76496;1821-1821;32-100];</data>
    </edge>
    <edge id="e2540" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[76428-76496;1821-1821;32-100];</data>
    </edge>
    <edge id="e2541" source="org.apache.commons.io.FileUtils.readLines(java.io.File,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[76428-76496;1821-1821;32-100];</data>
    </edge>
    <edge id="e2542" source="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[118511-118579;2846-2846;28-96];</data>
    </edge>
    <edge id="e2543" source="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)" target="org.apache.commons.io.output.NullOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[118511-118579;2846-2846;28-96];</data>
    </edge>
    <edge id="e2544" source="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[118511-118579;2846-2846;28-96];</data>
    </edge>
    <edge id="e2545" source="org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[117518-117566;2823-2823;24-72];</data>
    </edge>
    <edge id="e2546" source="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[45182-45253;1114-1114;24-95];</data>
    </edge>
    <edge id="e2547" source="org.apache.commons.io.FileUtils.sizeOf(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[105764-105786;2518-2518;24-46];</data>
    </edge>
    <edge id="e2548" source="org.apache.commons.io.FileUtils.sizeOf0(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108965-108982;2610-2610;25-42];</data>
    </edge>
    <edge id="e2549" source="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)" target="org.apache.commons.io.FileUtils.checkDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108018-108054;2580-2580;24-60];</data>
    </edge>
    <edge id="e2550" source="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108018-108054;2580-2580;24-60];</data>
    </edge>
    <edge id="e2551" source="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108234-108271;2586-2586;25-62];</data>
    </edge>
    <edge id="e2552" source="org.apache.commons.io.FileUtils.sizeOfDirectory0(java.io.File)" target="org.apache.commons.io.FileUtils.sizeOf0(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[108234-108271;2586-2586;25-62];</data>
    </edge>
    <edge id="e2553" source="org.apache.commons.io.FileUtils.lineIterator(java.io.File)" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[80265-80312;1919-1919;32-79];</data>
    </edge>
    <edge id="e2554" source="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[79402-79472;1896-1896;32-102];</data>
    </edge>
    <edge id="e2555" source="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)" target="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[79402-79472;1896-1896;32-102];</data>
    </edge>
    <edge id="e2556" source="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[79402-79472;1896-1896;32-102/79402-79472;1896-1896;32-102];</data>
    </edge>
    <edge id="e2557" source="org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[21048-21100;563-563;33-85];</data>
    </edge>
    <edge id="e2558" source="org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.and(org.apache.commons.io.filefilter.IOFileFilter[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[20603-20657;553-553;33-87];</data>
    </edge>
    <edge id="e2559" source="org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" target="org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[20603-20657;553-553;33-87];</data>
    </edge>
    <edge id="e2560" source="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[71149-71203;1673-1673;24-78];</data>
    </edge>
    <edge id="e2561" source="org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)" target="org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[101583-101643;2410-2410;25-85];</data>
    </edge>
    <edge id="e2562" source="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[51443-51513;1243-1243;24-94];</data>
    </edge>
    <edge id="e2563" source="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[52859-52973;1273-1274;24-62];</data>
    </edge>
    <edge id="e2564" source="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter)" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[55133-55240;1322-1323;24-55];</data>
    </edge>
    <edge id="e2565" source="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" target="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[57493-57632;1373-1374;24-87];</data>
    </edge>
    <edge id="e2566" source="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[49477-49558;1203-1203;24-105];</data>
    </edge>
    <edge id="e2567" source="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[41711-41778;1038-1038;24-91];</data>
    </edge>
    <edge id="e2568" source="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[43217-43328;1068-1069;24-62];</data>
    </edge>
    <edge id="e2569" source="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[38377-38454;974-974;24-101];</data>
    </edge>
    <edge id="e2570" source="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[39934-40043;1004-1004;24-133];</data>
    </edge>
    <edge id="e2571" source="org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream,java.io.File)" target="org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[65404-65493;1522-1522;24-113];</data>
    </edge>
    <edge id="e2572" source="org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream,java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[65404-65493;1522-1522;24-113];</data>
    </edge>
    <edge id="e2573" source="org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream,java.io.File)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[66729-66807;1547-1547;24-102];</data>
    </edge>
    <edge id="e2574" source="org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream,java.io.File)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[66729-66807;1547-1547;24-102];</data>
    </edge>
    <edge id="e2575" source="org.apache.commons.io.FileUtils.copyToFile(java.io.InputStream,java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[66729-66807;1547-1547;24-102];</data>
    </edge>
    <edge id="e2576" source="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File)" target="org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[62601-62674;1473-1473;24-97];</data>
    </edge>
    <edge id="e2577" source="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File,int,int)" target="org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[63979-64116;1497-1498;24-82];</data>
    </edge>
    <edge id="e2578" source="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[67472-67527;1565-1565;24-79];</data>
    </edge>
    <edge id="e2579" source="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[67472-67527;1565-1565;24-79];</data>
    </edge>
    <edge id="e2580" source="org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[101026-101087;2392-2392;25-86];</data>
    </edge>
    <edge id="e2581" source="org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)" target="org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[101026-101087;2392-2392;25-86];</data>
    </edge>
    <edge id="e2582" source="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" target="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[59688-59863;1417-1418;25-96];</data>
    </edge>
    <edge id="e2583" source="org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" target="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[59688-59863;1417-1418;25-96];</data>
    </edge>
    <edge id="e2584" source="org.apache.commons.io.FileUtils.doCopyFile(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[46442-46543;1138-1138;25-126];</data>
    </edge>
    <edge id="e2585" source="org.apache.commons.io.FileUtils.forceDelete(java.io.File)" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[99618-99664;2353-2353;24-70];</data>
    </edge>
    <edge id="e2586" source="org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)" target="org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[100514-100566;2377-2377;24-76];</data>
    </edge>
    <edge id="e2587" source="org.apache.commons.io.FileUtils.forceMkdirParent(java.io.File)" target="org.apache.commons.io.FileUtils.forceMkdir(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[104484-104535;2487-2487;24-75];</data>
    </edge>
    <edge id="e2588" source="org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)" target="org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[17040-17181;471-472;25-75];</data>
    </edge>
    <edge id="e2589" source="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileExistsException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[119559-119629;2873-2873;24-94];</data>
    </edge>
    <edge id="e2590" source="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[119559-119629;2873-2873;24-94];</data>
    </edge>
    <edge id="e2591" source="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[119559-119629;2873-2873;24-94];</data>
    </edge>
    <edge id="e2592" source="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[121481-121588;2916-2916;24-131];</data>
    </edge>
    <edge id="e2593" source="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)" target="org.apache.commons.io.FileExistsException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[122863-122930;2950-2950;24-91];</data>
    </edge>
    <edge id="e2594" source="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[122863-122930;2950-2950;24-91];</data>
    </edge>
    <edge id="e2595" source="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[122863-122930;2950-2950;24-91];</data>
    </edge>
    <edge id="e2596" source="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[124669-124775;2993-2993;24-130];</data>
    </edge>
    <edge id="e2597" source="org.apache.commons.io.FileUtils.moveToDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[126269-126367;3028-3028;24-122];</data>
    </edge>
    <edge id="e2598" source="org.apache.commons.io.FileUtils.moveToDirectory(java.io.File,java.io.File,boolean)" target="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[126269-126367;3028-3028;24-122];</data>
    </edge>
    <edge id="e2599" source="org.apache.commons.io.FileUtils.touch(java.io.File)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[15563-15603;437-437;24-64];</data>
    </edge>
    <edge id="e2600" source="org.apache.commons.io.FileUtils.touch(java.io.File)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[15563-15603;437-437;24-64];</data>
    </edge>
    <edge id="e2601" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence)" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[85372-85437;2036-2036;24-89];</data>
    </edge>
    <edge id="e2602" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,boolean)" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[86055-86142;2052-2052;24-111];</data>
    </edge>
    <edge id="e2603" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String)" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[87185-87273;2079-2079;24-112];</data>
    </edge>
    <edge id="e2604" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[88738-88848;2113-2113;24-134];</data>
    </edge>
    <edge id="e2605" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[88738-88848;2113-2113;24-134];</data>
    </edge>
    <edge id="e2606" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[86580-86669;2065-2065;24-113];</data>
    </edge>
    <edge id="e2607" source="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[87814-87925;2094-2094;24-135];</data>
    </edge>
    <edge id="e2608" source="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[])" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[89328-89402;2128-2128;24-98];</data>
    </edge>
    <edge id="e2609" source="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],boolean)" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[89865-89961;2142-2142;24-120];</data>
    </edge>
    <edge id="e2610" source="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int)" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[90503-90607;2158-2158;24-128];</data>
    </edge>
    <edge id="e2611" source="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[91259-91385;2176-2176;24-150];</data>
    </edge>
    <edge id="e2612" source="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[91259-91385;2176-2176;24-150];</data>
    </edge>
    <edge id="e2613" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[92433-92528;2202-2202;24-119];</data>
    </edge>
    <edge id="e2614" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[93367-93484;2220-2220;24-141];</data>
    </edge>
    <edge id="e2615" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[95677-95805;2270-2271;24-26];</data>
    </edge>
    <edge id="e2616" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[96704-96858;2290-2291;24-30];</data>
    </edge>
    <edge id="e2617" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[96704-96858;2290-2291;24-30];</data>
    </edge>
    <edge id="e2618" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[96704-96858;2290-2291;24-30];</data>
    </edge>
    <edge id="e2619" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[93996-94068;2234-2234;24-96];</data>
    </edge>
    <edge id="e2620" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,boolean)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[94696-94790;2250-2250;24-118];</data>
    </edge>
    <edge id="e2621" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[97830-97927;2315-2315;24-121];</data>
    </edge>
    <edge id="e2622" source="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[98647-98774;2332-2333;24-26];</data>
    </edge>
    <edge id="e2623" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[84074-84145;2006-2006;24-95];</data>
    </edge>
    <edge id="e2624" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,boolean)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[84777-84870;2022-2022;24-117];</data>
    </edge>
    <edge id="e2625" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[81724-81818;1953-1953;24-118];</data>
    </edge>
    <edge id="e2626" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[83470-83586;1993-1993;24-140];</data>
    </edge>
    <edge id="e2627" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[83470-83586;1993-1993;24-140];</data>
    </edge>
    <edge id="e2628" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[81011-81106;1937-1937;24-119];</data>
    </edge>
    <edge id="e2629" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[82367-82484;1968-1968;24-141];</data>
    </edge>
    <edge id="e2630" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[82367-82484;1968-1968;24-141];</data>
    </edge>
    <edge id="e2631" source="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FileUtils.java;[82367-82484;1968-1968;24-141];</data>
    </edge>
    <edge id="e2632" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1286-1335;34-34;12-61];</data>
    </edge>
    <edge id="e2633" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1384-1406;38-38;18-40];</data>
    </edge>
    <edge id="e2634" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()" target="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1723-1749;54-54;20-46];</data>
    </edge>
    <edge id="e2635" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1723-1749;54-54;20-46];</data>
    </edge>
    <edge id="e2636" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[1925-1957;60-60;17-49];</data>
    </edge>
    <edge id="e2637" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2408-2443;79-79;17-52];</data>
    </edge>
    <edge id="e2638" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2408-2443;79-79;17-52];</data>
    </edge>
    <edge id="e2639" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2113-2149;68-68;17-53/2113-2149;68-68;17-53];</data>
    </edge>
    <edge id="e2640" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2113-2149;68-68;17-53];</data>
    </edge>
    <edge id="e2641" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[3303-3349;109-109;17-63];</data>
    </edge>
    <edge id="e2642" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()" target="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[3303-3349;109-109;17-63];</data>
    </edge>
    <edge id="e2643" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[3303-3349;109-109;17-63];</data>
    </edge>
    <edge id="e2644" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()" target="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2743-2781;93-93;17-55];</data>
    </edge>
    <edge id="e2645" source="org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java;[2743-2781;93-93;17-55];</data>
    </edge>
    <edge id="e2646" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1218-1266;33-33;12-60];</data>
    </edge>
    <edge id="e2647" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1420-1446;43-43;20-46];</data>
    </edge>
    <edge id="e2648" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[2678-2723;81-81;17-62/2678-2723;81-81;17-62];</data>
    </edge>
    <edge id="e2649" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[2678-2723;81-81;17-62];</data>
    </edge>
    <edge id="e2650" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[2678-2723;81-81;17-62];</data>
    </edge>
    <edge id="e2651" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[3985-4033;115-115;17-65/3985-4033;115-115;17-65];</data>
    </edge>
    <edge id="e2652" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[3985-4033;115-115;17-65/3985-4033;115-115;17-65];</data>
    </edge>
    <edge id="e2653" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[3985-4033;115-115;17-65];</data>
    </edge>
    <edge id="e2654" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1513-1558;47-47;17-62/1513-1558;47-47;17-62];</data>
    </edge>
    <edge id="e2655" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1513-1558;47-47;17-62];</data>
    </edge>
    <edge id="e2656" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[1513-1558;47-47;17-62];</data>
    </edge>
    <edge id="e2657" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[7419-7482;206-206;17-80/7419-7482;206-206;17-80];</data>
    </edge>
    <edge id="e2658" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[7419-7482;206-206;17-80/7419-7482;206-206;17-80];</data>
    </edge>
    <edge id="e2659" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6328-6370;174-174;17-59];</data>
    </edge>
    <edge id="e2660" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6328-6370;174-174;17-59/6328-6370;174-174;17-59];</data>
    </edge>
    <edge id="e2661" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6891-6934;190-190;17-60];</data>
    </edge>
    <edge id="e2662" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6891-6934;190-190;17-60];</data>
    </edge>
    <edge id="e2663" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()" target="org.apache.commons.io.FileUtils.isSymlink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[6891-6934;190-190;17-60/6891-6934;190-190;17-60];</data>
    </edge>
    <edge id="e2664" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[5577-5636;153-153;17-76];</data>
    </edge>
    <edge id="e2665" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()" target="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[5577-5636;153-153;17-76];</data>
    </edge>
    <edge id="e2666" source="org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()" target="org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsCleanSymlinksTestCase.java;[5577-5636;153-153;17-76];</data>
    </edge>
    <edge id="e2667" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[1608-1660;44-44;12-64];</data>
    </edge>
    <edge id="e2668" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[1725-1748;49-49;20-43/1725-1748;49-49;20-43];</data>
    </edge>
    <edge id="e2669" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[1725-1748;49-49;20-43/1725-1748;49-49;20-43/1725-1748;49-49;20-43];</data>
    </edge>
    <edge id="e2670" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[2531-2557;74-74;20-46];</data>
    </edge>
    <edge id="e2671" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[2634-2671;79-79;17-54/2634-2671;79-79;17-54/2634-2671;79-79;17-54/2634-2671;79-79;17-54];</data>
    </edge>
    <edge id="e2672" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3063-3113;88-88;17-67/3063-3113;88-88;17-67/3063-3113;88-88;17-67/3063-3113;88-88;17-67];</data>
    </edge>
    <edge id="e2673" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3421-3466;96-96;17-62/3421-3466;96-96;17-62];</data>
    </edge>
    <edge id="e2674" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[3639-3690;102-102;17-68/3639-3690;102-102;17-68/3639-3690;102-102;17-68/3639-3690;102-102;17-68];</data>
    </edge>
    <edge id="e2675" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4004-4061;111-111;17-74/4004-4061;111-111;17-74/4004-4061;111-111;17-74/4004-4061;111-111;17-74];</data>
    </edge>
    <edge id="e2676" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4373-4418;119-119;17-62];</data>
    </edge>
    <edge id="e2677" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5093-5133;141-141;17-57/5093-5133;141-141;17-57];</data>
    </edge>
    <edge id="e2678" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5515-5558;153-153;17-60];</data>
    </edge>
    <edge id="e2679" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[4782-4814;131-131;17-49];</data>
    </edge>
    <edge id="e2680" source="org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment()" target="org.apache.commons.io.FileUtils.directoryContains(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java;[5883-5928;161-161;17-62];</data>
    </edge>
    <edge id="e2681" source="org.apache.commons.io.FileUtilsFileNewerTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1270-1314;36-36;12-56];</data>
    </edge>
    <edge id="e2682" source="org.apache.commons.io.FileUtilsFileNewerTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1270-1314;36-36;12-56/1270-1314;36-36;12-56];</data>
    </edge>
    <edge id="e2683" source="org.apache.commons.io.FileUtilsFileNewerTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1569-1592;45-45;20-43];</data>
    </edge>
    <edge id="e2684" source="org.apache.commons.io.FileUtilsFileNewerTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[1569-1592;45-45;20-43/1569-1592;45-45;20-43];</data>
    </edge>
    <edge id="e2685" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer()" target="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[2171-2187;65-65;17-33/2171-2187;65-65;17-33/2171-2187;65-65;17-33];</data>
    </edge>
    <edge id="e2686" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[4431-4533;117-117;20-122];</data>
    </edge>
    <edge id="e2687" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[4431-4533;117-117;20-122];</data>
    </edge>
    <edge id="e2688" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[4431-4533;117-117;20-122];</data>
    </edge>
    <edge id="e2689" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[2998-3027;85-85;17-46];</data>
    </edge>
    <edge id="e2690" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile()" target="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String,java.io.File,long,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[2998-3027;85-85;17-46];</data>
    </edge>
    <edge id="e2691" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[5729-5751;145-145;17-39];</data>
    </edge>
    <edge id="e2692" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[5306-5328;133-133;17-39];</data>
    </edge>
    <edge id="e2693" source="org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsFileNewerTestCase.java;[6180-6211;157-157;17-48];</data>
    </edge>
    <edge id="e2694" source="org.apache.commons.io.FileUtilsListFilesTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1248-1292;33-33;12-56];</data>
    </edge>
    <edge id="e2695" source="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1341-1363;37-37;18-40];</data>
    </edge>
    <edge id="e2696" source="org.apache.commons.io.FileUtilsListFilesTestCase.setUp()" target="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1527-1550;45-45;20-43];</data>
    </edge>
    <edge id="e2697" source="org.apache.commons.io.FileUtilsListFilesTestCase.setUp()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1527-1550;45-45;20-43];</data>
    </edge>
    <edge id="e2698" source="org.apache.commons.io.FileUtilsListFilesTestCase.setUp()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43/1527-1550;45-45;20-43];</data>
    </edge>
    <edge id="e2699" source="org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()" target="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[2653-2679;83-83;20-46];</data>
    </edge>
    <edge id="e2700" source="org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[2653-2679;83-83;20-46];</data>
    </edge>
    <edge id="e2701" source="org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()" target="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[3360-3405;104-104;17-62/3360-3405;104-104;17-62/3360-3405;104-104;17-62];</data>
    </edge>
    <edge id="e2702" source="org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()" target="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[3360-3405;104-104;17-62/3360-3405;104-104;17-62/3360-3405;104-104;17-62];</data>
    </edge>
    <edge id="e2703" source="org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()" target="org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[3360-3405;104-104;17-62/3360-3405;104-104;17-62/3360-3405;104-104;17-62];</data>
    </edge>
    <edge id="e2704" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2705" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2706" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2707" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48/5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2708" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2709" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2710" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48/5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2711" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()" target="org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[5596-5627;152-152;17-48];</data>
    </edge>
    <edge id="e2712" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[4488-4530;128-128;17-59/4488-4530;128-128;17-59/4488-4530;128-128;17-59];</data>
    </edge>
    <edge id="e2713" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()" target="org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[4488-4530;128-128;17-59/4488-4530;128-128;17-59/4488-4530;128-128;17-59];</data>
    </edge>
    <edge id="e2714" source="org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()" target="org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsListFilesTestCase.java;[4488-4530;128-128;17-59/4488-4530;128-128;17-59/4488-4530;128-128;17-59];</data>
    </edge>
    <edge id="e2715" source="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker()" target="org.apache.commons.io.DirectoryWalker()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105699-105719;2592-2592;9-29];</data>
    </edge>
    <edge id="e2716" source="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)" target="org.apache.commons.io.DirectoryWalker.walk(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105773-105822;2595-2595;20-69];</data>
    </edge>
    <edge id="e2717" source="org.apache.commons.io.FileUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[2780-2815;86-86;12-47];</data>
    </edge>
    <edge id="e2718" source="org.apache.commons.io.FileUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[2780-2815;86-86;12-47/2780-2815;86-86;12-47];</data>
    </edge>
    <edge id="e2719" source="org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41527-41568;1082-1082;17-58/41527-41568;1082-1082;17-58];</data>
    </edge>
    <edge id="e2720" source="org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41527-41568;1082-1082;17-58];</data>
    </edge>
    <edge id="e2721" source="org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41527-41568;1082-1082;17-58];</data>
    </edge>
    <edge id="e2722" source="org.apache.commons.io.FileUtilsTestCase.createCircularSymLink(java.io.File)" target="org.apache.commons.io.FilenameUtils.isSystemWindows()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30459-30515;787-787;18-74];</data>
    </edge>
    <edge id="e2723" source="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52517-52634;1313-1313;18-135];</data>
    </edge>
    <edge id="e2724" source="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52517-52634;1313-1313;18-135/52517-52634;1313-1313;18-135/52517-52634;1313-1313;18-135/52517-52634;1313-1313;18-135/52517-52634;1313-1313;18-135/52517-52634;1313-1313;18-135];</data>
    </edge>
    <edge id="e2725" source="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[7336-7403;211-211;10-77];</data>
    </edge>
    <edge id="e2726" source="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[7336-7403;211-211;10-77];</data>
    </edge>
    <edge id="e2727" source="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[7336-7403;211-211;10-77];</data>
    </edge>
    <edge id="e2728" source="org.apache.commons.io.FileUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3117-3140;97-97;20-43/3117-3140;97-97;20-43/3117-3140;97-97;20-43];</data>
    </edge>
    <edge id="e2729" source="org.apache.commons.io.FileUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3117-3140;97-97;20-43/3117-3140;97-97;20-43/3117-3140;97-97;20-43/3117-3140;97-97;20-43];</data>
    </edge>
    <edge id="e2730" source="org.apache.commons.io.FileUtilsTestCase.setUp()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3117-3140;97-97;20-43];</data>
    </edge>
    <edge id="e2731" source="org.apache.commons.io.FileUtilsTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3497-3523;108-108;20-46];</data>
    </edge>
    <edge id="e2732" source="org.apache.commons.io.FileUtilsTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3497-3523;108-108;20-46];</data>
    </edge>
    <edge id="e2733" source="org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger()" target="org.apache.commons.io.FileUtils.byteCountToDisplaySize(java.math.BigInteger)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54/10596-10633;303-303;17-54];</data>
    </edge>
    <edge id="e2734" source="org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger()" target="org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[10596-10633;303-303;17-54];</data>
    </edge>
    <edge id="e2735" source="org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong()" target="org.apache.commons.io.FileUtils.byteCountToDisplaySize(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48/12813-12844;336-336;17-48];</data>
    </edge>
    <edge id="e2736" source="org.apache.commons.io.FileUtilsTestCase.testChecksum()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[85113-85143;2077-2077;17-47];</data>
    </edge>
    <edge id="e2737" source="org.apache.commons.io.FileUtilsTestCase.testChecksum()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[85113-85143;2077-2077;17-47];</data>
    </edge>
    <edge id="e2738" source="org.apache.commons.io.FileUtilsTestCase.testChecksum()" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[85113-85143;2077-2077;17-47];</data>
    </edge>
    <edge id="e2739" source="org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[84397-84432;2060-2060;17-52];</data>
    </edge>
    <edge id="e2740" source="org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[84397-84432;2060-2060;17-52];</data>
    </edge>
    <edge id="e2741" source="org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()" target="org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[84397-84432;2060-2060;17-52];</data>
    </edge>
    <edge id="e2742" source="org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86993-87029;2128-2128;17-53/86993-87029;2128-2128;17-53];</data>
    </edge>
    <edge id="e2743" source="org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86993-87029;2128-2128;17-53/86993-87029;2128-2128;17-53];</data>
    </edge>
    <edge id="e2744" source="org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86993-87029;2128-2128;17-53/86993-87029;2128-2128;17-53];</data>
    </edge>
    <edge id="e2745" source="org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86743-86784;2119-2119;17-58];</data>
    </edge>
    <edge id="e2746" source="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86244-86288;2106-2106;17-61];</data>
    </edge>
    <edge id="e2747" source="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86244-86288;2106-2106;17-61];</data>
    </edge>
    <edge id="e2748" source="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86244-86288;2106-2106;17-61];</data>
    </edge>
    <edge id="e2749" source="org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()" target="org.apache.commons.io.FileUtils.checksum(java.io.File,java.util.zip.Checksum)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[86001-86041;2097-2097;17-57];</data>
    </edge>
    <edge id="e2750" source="org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf()" target="org.apache.commons.io.FileUtils.sizeOf(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32437-32455;846-846;17-35/32437-32455;846-846;17-35];</data>
    </edge>
    <edge id="e2751" source="org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf()" target="org.apache.commons.io.FileUtils.sizeOfAsBigInteger(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32437-32455;846-846;17-35];</data>
    </edge>
    <edge id="e2752" source="org.apache.commons.io.FileUtilsTestCase.testContentEquals()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52];</data>
    </edge>
    <edge id="e2753" source="org.apache.commons.io.FileUtilsTestCase.testContentEquals()" target="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52];</data>
    </edge>
    <edge id="e2754" source="org.apache.commons.io.FileUtilsTestCase.testContentEquals()" target="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20671-20706;524-524;17-52/20671-20706;524-524;17-52/20671-20706;524-524;17-52];</data>
    </edge>
    <edge id="e2755" source="org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61];</data>
    </edge>
    <edge id="e2756" source="org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()" target="org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61];</data>
    </edge>
    <edge id="e2757" source="org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61];</data>
    </edge>
    <edge id="e2758" source="org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()" target="org.apache.commons.io.FileUtils.contentEquals(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61/22810-22854;579-579;17-61];</data>
    </edge>
    <edge id="e2759" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58];</data>
    </edge>
    <edge id="e2760" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58/53804-53845;1334-1334;17-58];</data>
    </edge>
    <edge id="e2761" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60/46978-47021;1204-1204;17-60];</data>
    </edge>
    <edge id="e2762" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()" target="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60];</data>
    </edge>
    <edge id="e2763" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()" target="org.apache.commons.io.filefilter.NameFileFilter(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60];</data>
    </edge>
    <edge id="e2764" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,java.io.FileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60];</data>
    </edge>
    <edge id="e2765" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()" target="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46978-47021;1204-1204;17-60];</data>
    </edge>
    <edge id="e2766" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65];</data>
    </edge>
    <edge id="e2767" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[47864-47912;1221-1221;17-65];</data>
    </edge>
    <edge id="e2768" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65];</data>
    </edge>
    <edge id="e2769" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65/47864-47912;1221-1221;17-65];</data>
    </edge>
    <edge id="e2770" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59];</data>
    </edge>
    <edge id="e2771" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()" target="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59];</data>
    </edge>
    <edge id="e2772" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()" target="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59/50375-50417;1273-1273;17-59/50375-50417;1273-1273;17-59];</data>
    </edge>
    <edge id="e2773" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59/50375-50417;1273-1273;17-59/50375-50417;1273-1273;17-59];</data>
    </edge>
    <edge id="e2774" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[50375-50417;1273-1273;17-59];</data>
    </edge>
    <edge id="e2775" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79/44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2776" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2777" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2778" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79/44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2779" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2780" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[44021-44083;1140-1140;17-79/44021-44083;1140-1140;17-79];</data>
    </edge>
    <edge id="e2781" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66/46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2782" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2783" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2784" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2785" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2786" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[46118-46167;1184-1184;17-66/46118-46167;1184-1184;17-66];</data>
    </edge>
    <edge id="e2787" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64];</data>
    </edge>
    <edge id="e2788" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()" target="org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64];</data>
    </edge>
    <edge id="e2789" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()" target="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64/51369-51416;1291-1291;17-64];</data>
    </edge>
    <edge id="e2790" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64/51369-51416;1291-1291;17-64];</data>
    </edge>
    <edge id="e2791" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[51369-51416;1291-1291;17-64];</data>
    </edge>
    <edge id="e2792" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52250-52293;1306-1306;17-60];</data>
    </edge>
    <edge id="e2793" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()" target="org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52250-52293;1306-1306;17-60];</data>
    </edge>
    <edge id="e2794" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()" target="org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[52250-52293;1306-1306;17-60];</data>
    </edge>
    <edge id="e2795" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69/45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2796" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2797" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2798" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69/45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2799" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.FileUtils.copyDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2800" source="org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[45136-45188;1163-1163;17-69/45136-45188;1163-1163;17-69];</data>
    </edge>
    <edge id="e2801" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile1()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[40414-40445;1059-1059;17-48];</data>
    </edge>
    <edge id="e2802" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile1()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[40414-40445;1059-1059;17-48];</data>
    </edge>
    <edge id="e2803" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[56048-56084;1395-1395;17-53];</data>
    </edge>
    <edge id="e2804" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()" target="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[56048-56084;1395-1395;17-53/56048-56084;1395-1395;17-53];</data>
    </edge>
    <edge id="e2805" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42185-42216;1097-1097;17-48];</data>
    </edge>
    <edge id="e2806" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42185-42216;1097-1097;17-48];</data>
    </edge>
    <edge id="e2807" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[57181-57217;1421-1421;17-53];</data>
    </edge>
    <edge id="e2808" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()" target="org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[57181-57217;1421-1421;17-53];</data>
    </edge>
    <edge id="e2809" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[43322-43380;1125-1125;17-75];</data>
    </edge>
    <edge id="e2810" source="org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[43322-43380;1125-1125;17-75];</data>
    </edge>
    <edge id="e2811" source="org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41080-41124;1074-1074;17-61];</data>
    </edge>
    <edge id="e2812" source="org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()" target="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[41080-41124;1074-1074;17-61];</data>
    </edge>
    <edge id="e2813" source="org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42850-42882;1112-1112;17-49];</data>
    </edge>
    <edge id="e2814" source="org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[42850-42882;1112-1112;17-49/42850-42882;1112-1112;17-49];</data>
    </edge>
    <edge id="e2815" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[26264-26299;659-659;17-52];</data>
    </edge>
    <edge id="e2816" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()" target="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[26264-26299;659-659;17-52];</data>
    </edge>
    <edge id="e2817" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()" target="org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[26264-26299;659-659;17-52];</data>
    </edge>
    <edge id="e2818" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27056-27102;682-682;17-63];</data>
    </edge>
    <edge id="e2819" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()" target="org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27056-27102;682-682;17-63];</data>
    </edge>
    <edge id="e2820" source="org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()" target="org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27056-27102;682-682;17-63];</data>
    </edge>
    <edge id="e2821" source="org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()" target="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[16093-16107;396-396;17-31/16093-16107;396-396;17-31/16093-16107;396-396;17-31/16093-16107;396-396;17-31/16093-16107;396-396;17-31/16093-16107;396-396;17-31];</data>
    </edge>
    <edge id="e2822" source="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()" target="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17111-17137;419-419;17-43];</data>
    </edge>
    <edge id="e2823" source="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()" target="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[16593-16614;406-406;17-38/16593-16614;406-406;17-38/16593-16614;406-406;17-38/16593-16614;406-406;17-38/16593-16614;406-406;17-38/16593-16614;406-406;17-38];</data>
    </edge>
    <edge id="e2824" source="org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()" target="org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17015-17037;415-415;17-39];</data>
    </edge>
    <edge id="e2825" source="org.apache.commons.io.FileUtilsTestCase.testDeleteDirectoryWithNonDirectory()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88184-88237;2154-2154;17-70];</data>
    </edge>
    <edge id="e2826" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88629-88669;2171-2171;17-57];</data>
    </edge>
    <edge id="e2827" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88629-88669;2171-2171;17-57];</data>
    </edge>
    <edge id="e2828" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88629-88669;2171-2171;17-57];</data>
    </edge>
    <edge id="e2829" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89182-89223;2184-2184;17-58];</data>
    </edge>
    <edge id="e2830" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89182-89223;2184-2184;17-58];</data>
    </edge>
    <edge id="e2831" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89182-89223;2184-2184;17-58];</data>
    </edge>
    <edge id="e2832" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[88436-88461;2163-2163;17-42];</data>
    </edge>
    <edge id="e2833" source="org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()" target="org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89508-89537;2193-2193;17-46];</data>
    </edge>
    <edge id="e2834" source="org.apache.commons.io.FileUtilsTestCase.testFileUtils()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58370-58401;1453-1453;17-48/58370-58401;1453-1453;17-48];</data>
    </edge>
    <edge id="e2835" source="org.apache.commons.io.FileUtilsTestCase.testFileUtils()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58370-58401;1453-1453;17-48];</data>
    </edge>
    <edge id="e2836" source="org.apache.commons.io.FileUtilsTestCase.testFileUtils()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58370-58401;1453-1453;17-48/58370-58401;1453-1453;17-48];</data>
    </edge>
    <edge id="e2837" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[54902-54941;1367-1367;17-56];</data>
    </edge>
    <edge id="e2838" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[54902-54941;1367-1367;17-56];</data>
    </edge>
    <edge id="e2839" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55265-55304;1375-1375;17-56];</data>
    </edge>
    <edge id="e2840" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55265-55304;1375-1375;17-56];</data>
    </edge>
    <edge id="e2841" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55628-55667;1383-1383;17-56];</data>
    </edge>
    <edge id="e2842" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[55628-55667;1383-1383;17-56];</data>
    </edge>
    <edge id="e2843" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58028-58064;1442-1442;17-53];</data>
    </edge>
    <edge id="e2844" source="org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()" target="org.apache.commons.io.FileUtils.forceDelete(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[58028-58064;1442-1442;17-53];</data>
    </edge>
    <edge id="e2845" source="org.apache.commons.io.FileUtilsTestCase.testForceMkdir()" target="org.apache.commons.io.FileUtils.forceMkdir(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27909-27941;707-707;17-49/27909-27941;707-707;17-49/27909-27941;707-707;17-49];</data>
    </edge>
    <edge id="e2846" source="org.apache.commons.io.FileUtilsTestCase.testForceMkdir()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[27909-27941;707-707;17-49/27909-27941;707-707;17-49];</data>
    </edge>
    <edge id="e2847" source="org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[28656-28694;730-730;17-55/28656-28694;730-730;17-55];</data>
    </edge>
    <edge id="e2848" source="org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent()" target="org.apache.commons.io.FileUtils.forceMkdirParent(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[28656-28694;730-730;17-55/28656-28694;730-730;17-55];</data>
    </edge>
    <edge id="e2849" source="org.apache.commons.io.FileUtilsTestCase.testGetFile()" target="org.apache.commons.io.FileUtils.getFile(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[3683-3695;113-113;17-29/3683-3695;113-113;17-29/3683-3695;113-113;17-29/3683-3695;113-113;17-29];</data>
    </edge>
    <edge id="e2850" source="org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent()" target="org.apache.commons.io.FileUtils.getFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[4309-4328;128-128;17-36/4309-4328;128-128;17-36/4309-4328;128-128;17-36/4309-4328;128-128;17-36/4309-4328;128-128;17-36];</data>
    </edge>
    <edge id="e2851" source="org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory()" target="org.apache.commons.io.FileUtils.getTempDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5386-5407;155-155;17-38];</data>
    </edge>
    <edge id="e2852" source="org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath()" target="org.apache.commons.io.FileUtils.getTempDirectoryPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5228-5253;150-150;17-42];</data>
    </edge>
    <edge id="e2853" source="org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory()" target="org.apache.commons.io.FileUtils.getUserDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5737-5758;165-165;17-38];</data>
    </edge>
    <edge id="e2854" source="org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath()" target="org.apache.commons.io.FileUtils.getUserDirectoryPath()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[5584-5609;160-160;17-42];</data>
    </edge>
    <edge id="e2855" source="org.apache.commons.io.FileUtilsTestCase.testIO276()" target="org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[104114-104141;2552-2552;17-44];</data>
    </edge>
    <edge id="e2856" source="org.apache.commons.io.FileUtilsTestCase.testIO300()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[103598-103625;2537-2537;17-44];</data>
    </edge>
    <edge id="e2857" source="org.apache.commons.io.FileUtilsTestCase.testIO300()" target="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[103598-103625;2537-2537;17-44];</data>
    </edge>
    <edge id="e2858" source="org.apache.commons.io.FileUtilsTestCase.testIncorrectOutputSize()" target="org.apache.commons.io.FileUtilsTestCase$ShorterFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105004-105045;2574-2574;17-58];</data>
    </edge>
    <edge id="e2859" source="org.apache.commons.io.FileUtilsTestCase.testIncorrectOutputSize()" target="org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[105004-105045;2574-2574;17-58];</data>
    </edge>
    <edge id="e2860" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2861" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2862" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2863" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2864" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileNewer(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2865" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2866" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,java.util.Date)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2867" source="org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()" target="org.apache.commons.io.FileUtils.isFileOlder(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[34915-34953;924-924;17-55/34915-34953;924-924;17-55/34915-34953;924-924;17-55];</data>
    </edge>
    <edge id="e2868" source="org.apache.commons.io.FileUtilsTestCase.testIterateFiles()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[63416-63450;1578-1578;17-51];</data>
    </edge>
    <edge id="e2869" source="org.apache.commons.io.FileUtilsTestCase.testIterateFiles()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[63416-63450;1578-1578;17-51];</data>
    </edge>
    <edge id="e2870" source="org.apache.commons.io.FileUtilsTestCase.testIterateFiles()" target="org.apache.commons.io.FileUtils.iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[63416-63450;1578-1578;17-51];</data>
    </edge>
    <edge id="e2871" source="org.apache.commons.io.FileUtilsTestCase.testIterateFiles()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[63416-63450;1578-1578;17-51/63416-63450;1578-1578;17-51];</data>
    </edge>
    <edge id="e2872" source="org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[64736-64779;1614-1614;17-60];</data>
    </edge>
    <edge id="e2873" source="org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[64736-64779;1614-1614;17-60];</data>
    </edge>
    <edge id="e2874" source="org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()" target="org.apache.commons.io.FileUtils.iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[64736-64779;1614-1614;17-60];</data>
    </edge>
    <edge id="e2875" source="org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[64736-64779;1614-1614;17-60/64736-64779;1614-1614;17-60];</data>
    </edge>
    <edge id="e2876" source="org.apache.commons.io.FileUtilsTestCase.testListFiles()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[60900-60931;1509-1509;17-48];</data>
    </edge>
    <edge id="e2877" source="org.apache.commons.io.FileUtilsTestCase.testListFiles()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[60900-60931;1509-1509;17-48];</data>
    </edge>
    <edge id="e2878" source="org.apache.commons.io.FileUtilsTestCase.testListFiles()" target="org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[60900-60931;1509-1509;17-48];</data>
    </edge>
    <edge id="e2879" source="org.apache.commons.io.FileUtilsTestCase.testListFiles()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[60900-60931;1509-1509;17-48/60900-60931;1509-1509;17-48];</data>
    </edge>
    <edge id="e2880" source="org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[62413-62454;1551-1551;17-58];</data>
    </edge>
    <edge id="e2881" source="org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[62413-62454;1551-1551;17-58];</data>
    </edge>
    <edge id="e2882" source="org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()" target="org.apache.commons.io.FileUtils.listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[62413-62454;1551-1551;17-58];</data>
    </edge>
    <edge id="e2883" source="org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs()" target="org.apache.commons.io.filefilter.WildcardFileFilter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[62413-62454;1551-1551;17-58/62413-62454;1551-1551;17-58];</data>
    </edge>
    <edge id="e2884" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[98912-98958;2434-2434;17-63];</data>
    </edge>
    <edge id="e2885" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[98912-98958;2434-2434;17-63];</data>
    </edge>
    <edge id="e2886" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[98912-98958;2434-2434;17-63];</data>
    </edge>
    <edge id="e2887" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()" target="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[98912-98958;2434-2434;17-63];</data>
    </edge>
    <edge id="e2888" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()" target="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70];</data>
    </edge>
    <edge id="e2889" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70];</data>
    </edge>
    <edge id="e2890" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[100107-100160;2459-2459;17-70/100107-100160;2459-2459;17-70];</data>
    </edge>
    <edge id="e2891" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
    </edge>
    <edge id="e2892" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()" target="org.apache.commons.io.FileUtilsTestCase$3(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
    </edge>
    <edge id="e2893" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
    </edge>
    <edge id="e2894" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
    </edge>
    <edge id="e2895" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()" target="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[96123-96169;2363-2363;17-63];</data>
    </edge>
    <edge id="e2896" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()" target="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59];</data>
    </edge>
    <edge id="e2897" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59/97325-97367;2394-2394;17-59];</data>
    </edge>
    <edge id="e2898" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[97325-97367;2394-2394;17-59];</data>
    </edge>
    <edge id="e2899" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[95161-95203;2341-2341;17-59];</data>
    </edge>
    <edge id="e2900" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[95161-95203;2341-2341;17-59];</data>
    </edge>
    <edge id="e2901" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[95161-95203;2341-2341;17-59];</data>
    </edge>
    <edge id="e2902" source="org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()" target="org.apache.commons.io.FileUtils.moveDirectory(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[95161-95203;2341-2341;17-59];</data>
    </edge>
    <edge id="e2903" source="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93263-93304;2296-2296;17-58];</data>
    </edge>
    <edge id="e2904" source="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()" target="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93263-93304;2296-2296;17-58];</data>
    </edge>
    <edge id="e2905" source="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()" target="org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65];</data>
    </edge>
    <edge id="e2906" source="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65];</data>
    </edge>
    <edge id="e2907" source="org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[93798-93846;2307-2307;17-65/93798-93846;2307-2307;17-65];</data>
    </edge>
    <edge id="e2908" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90142-90183;2212-2212;17-58];</data>
    </edge>
    <edge id="e2909" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()" target="org.apache.commons.io.FileUtilsTestCase$1(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90142-90183;2212-2212;17-58];</data>
    </edge>
    <edge id="e2910" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()" target="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90142-90183;2212-2212;17-58];</data>
    </edge>
    <edge id="e2911" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90811-90859;2230-2230;17-65];</data>
    </edge>
    <edge id="e2912" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()" target="org.apache.commons.io.FileUtilsTestCase$2(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90811-90859;2230-2230;17-65];</data>
    </edge>
    <edge id="e2913" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()" target="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[90811-90859;2230-2230;17-65];</data>
    </edge>
    <edge id="e2914" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()" target="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54];</data>
    </edge>
    <edge id="e2915" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54];</data>
    </edge>
    <edge id="e2916" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[91803-91840;2258-2258;17-54/91803-91840;2258-2258;17-54];</data>
    </edge>
    <edge id="e2917" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89822-89859;2204-2204;17-54];</data>
    </edge>
    <edge id="e2918" source="org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()" target="org.apache.commons.io.FileUtils.moveFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[89822-89859;2204-2204;17-54];</data>
    </edge>
    <edge id="e2919" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[101493-101530;2491-2491;17-54/101493-101530;2491-2491;17-54/101493-101530;2491-2491;17-54];</data>
    </edge>
    <edge id="e2920" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[101493-101530;2491-2491;17-54];</data>
    </edge>
    <edge id="e2921" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()" target="org.apache.commons.io.FileUtils.moveToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[101493-101530;2491-2491;17-54/101493-101530;2491-2491;17-54];</data>
    </edge>
    <edge id="e2922" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()" target="org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[102639-102683;2514-2514;17-61/102639-102683;2514-2514;17-61];</data>
    </edge>
    <edge id="e2923" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[102639-102683;2514-2514;17-61/102639-102683;2514-2514;17-61];</data>
    </edge>
    <edge id="e2924" source="org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()" target="org.apache.commons.io.FileUtils.moveToDirectory(java.io.File,java.io.File,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[102639-102683;2514-2514;17-61];</data>
    </edge>
    <edge id="e2925" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66679-66720;1666-1666;17-58];</data>
    </edge>
    <edge id="e2926" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()" target="org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66679-66720;1666-1666;17-58];</data>
    </edge>
    <edge id="e2927" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[65822-65879;1644-1644;17-74];</data>
    </edge>
    <edge id="e2928" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[65822-65879;1644-1644;17-74];</data>
    </edge>
    <edge id="e2929" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66247-66297;1655-1655;17-67];</data>
    </edge>
    <edge id="e2930" source="org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[66247-66297;1655-1655;17-67];</data>
    </edge>
    <edge id="e2931" source="org.apache.commons.io.FileUtilsTestCase.testReadLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67179-67210;1681-1681;17-48];</data>
    </edge>
    <edge id="e2932" source="org.apache.commons.io.FileUtilsTestCase.testReadLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67179-67210;1681-1681;17-48];</data>
    </edge>
    <edge id="e2933" source="org.apache.commons.io.FileUtilsTestCase.testReadLines()" target="org.apache.commons.io.FileUtils.readLines(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67179-67210;1681-1681;17-48];</data>
    </edge>
    <edge id="e2934" source="org.apache.commons.io.FileUtilsTestCase.testReadLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67179-67210;1681-1681;17-48];</data>
    </edge>
    <edge id="e2935" source="org.apache.commons.io.FileUtilsTestCase.testSizeOf()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32875-32903;855-855;17-45/32875-32903;855-855;17-45];</data>
    </edge>
    <edge id="e2936" source="org.apache.commons.io.FileUtilsTestCase.testSizeOf()" target="org.apache.commons.io.FileUtils.sizeOf(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[32875-32903;855-855;17-45/32875-32903;855-855;17-45/32875-32903;855-855;17-45/32875-32903;855-855;17-45/32875-32903;855-855;17-45];</data>
    </edge>
    <edge id="e2937" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[33824-33864;889-889;17-57/33824-33864;889-889;17-57];</data>
    </edge>
    <edge id="e2938" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger()" target="org.apache.commons.io.FileUtils.sizeOfAsBigInteger(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[33824-33864;889-889;17-57/33824-33864;889-889;17-57/33824-33864;889-889;17-57/33824-33864;889-889;17-57/33824-33864;889-889;17-57];</data>
    </edge>
    <edge id="e2939" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[29580-29617;755-755;17-54];</data>
    </edge>
    <edge id="e2940" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()" target="org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[29580-29617;755-755;17-54/29580-29617;755-755;17-54/29580-29617;755-755;17-54];</data>
    </edge>
    <edge id="e2941" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()" target="org.apache.commons.io.FileUtilsTestCase.createCircularSymLink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[29580-29617;755-755;17-54];</data>
    </edge>
    <edge id="e2942" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30972-31021;801-801;17-66];</data>
    </edge>
    <edge id="e2943" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()" target="org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30972-31021;801-801;17-66/30972-31021;801-801;17-66/30972-31021;801-801;17-66/30972-31021;801-801;17-66];</data>
    </edge>
    <edge id="e2944" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()" target="org.apache.commons.io.FileUtilsTestCase.createCircularSymLink(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30972-31021;801-801;17-66];</data>
    </edge>
    <edge id="e2945" source="org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[30972-31021;801-801;17-66];</data>
    </edge>
    <edge id="e2946" source="org.apache.commons.io.FileUtilsTestCase.testToFile1()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[14631-14660;361-361;17-46];</data>
    </edge>
    <edge id="e2947" source="org.apache.commons.io.FileUtilsTestCase.testToFile2()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[14863-14892;367-367;17-46];</data>
    </edge>
    <edge id="e2948" source="org.apache.commons.io.FileUtilsTestCase.testToFile3()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15119-15148;373-373;17-46/15119-15148;373-373;17-46];</data>
    </edge>
    <edge id="e2949" source="org.apache.commons.io.FileUtilsTestCase.testToFile4()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15317-15346;378-378;17-46];</data>
    </edge>
    <edge id="e2950" source="org.apache.commons.io.FileUtilsTestCase.testToFile5()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15580-15609;385-385;17-46];</data>
    </edge>
    <edge id="e2951" source="org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()" target="org.apache.commons.io.FileUtils.toFile(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[15826-15858;390-390;17-49];</data>
    </edge>
    <edge id="e2952" source="org.apache.commons.io.FileUtilsTestCase.testToFiles1()" target="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17279-17309;425-425;17-47];</data>
    </edge>
    <edge id="e2953" source="org.apache.commons.io.FileUtilsTestCase.testToFiles2()" target="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[17778-17808;437-437;17-47];</data>
    </edge>
    <edge id="e2954" source="org.apache.commons.io.FileUtilsTestCase.testToFiles3()" target="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18210-18240;449-449;17-47];</data>
    </edge>
    <edge id="e2955" source="org.apache.commons.io.FileUtilsTestCase.testToFiles3a()" target="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18394-18425;456-456;17-48];</data>
    </edge>
    <edge id="e2956" source="org.apache.commons.io.FileUtilsTestCase.testToFiles4()" target="org.apache.commons.io.FileUtils.toFiles(java.net.URL[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18600-18630;463-463;17-47];</data>
    </edge>
    <edge id="e2957" source="org.apache.commons.io.FileUtilsTestCase.testToURLs1()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18960-18989;476-476;17-46/18960-18989;476-476;17-46/18960-18989;476-476;17-46];</data>
    </edge>
    <edge id="e2958" source="org.apache.commons.io.FileUtilsTestCase.testToURLs1()" target="org.apache.commons.io.FileUtils.toURLs(java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[18960-18989;476-476;17-46];</data>
    </edge>
    <edge id="e2959" source="org.apache.commons.io.FileUtilsTestCase.testToURLs3a()" target="org.apache.commons.io.FileUtils.toURLs(java.io.File[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[20444-20474;515-515;17-47];</data>
    </edge>
    <edge id="e2960" source="org.apache.commons.io.FileUtilsTestCase.testTouch()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[59454-59483;1484-1484;17-46];</data>
    </edge>
    <edge id="e2961" source="org.apache.commons.io.FileUtilsTestCase.testTouch()" target="org.apache.commons.io.FileUtils.touch(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[59454-59483;1484-1484;17-46/59454-59483;1484-1484;17-46];</data>
    </edge>
    <edge id="e2962" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69128-69170;1729-1729;17-59];</data>
    </edge>
    <edge id="e2963" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69128-69170;1729-1729;17-59];</data>
    </edge>
    <edge id="e2964" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69128-69170;1729-1729;17-59];</data>
    </edge>
    <edge id="e2965" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[82540-82634;2024-2024;17-111];</data>
    </edge>
    <edge id="e2966" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[82540-82634;2024-2024;17-111];</data>
    </edge>
    <edge id="e2967" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[82540-82634;2024-2024;17-111];</data>
    </edge>
    <edge id="e2968" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[82540-82634;2024-2024;17-111];</data>
    </edge>
    <edge id="e2969" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81986-82082;2012-2012;17-113];</data>
    </edge>
    <edge id="e2970" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81986-82082;2012-2012;17-113];</data>
    </edge>
    <edge id="e2971" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81986-82082;2012-2012;17-113];</data>
    </edge>
    <edge id="e2972" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81986-82082;2012-2012;17-113];</data>
    </edge>
    <edge id="e2973" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69411-69473;1736-1736;17-79];</data>
    </edge>
    <edge id="e2974" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69411-69473;1736-1736;17-79];</data>
    </edge>
    <edge id="e2975" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69411-69473;1736-1736;17-79];</data>
    </edge>
    <edge id="e2976" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83701-83814;2047-2047;17-130];</data>
    </edge>
    <edge id="e2977" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83701-83814;2047-2047;17-130];</data>
    </edge>
    <edge id="e2978" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83701-83814;2047-2047;17-130];</data>
    </edge>
    <edge id="e2979" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83701-83814;2047-2047;17-130];</data>
    </edge>
    <edge id="e2980" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83043-83159;2035-2035;17-133];</data>
    </edge>
    <edge id="e2981" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83043-83159;2035-2035;17-133];</data>
    </edge>
    <edge id="e2982" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File,byte[],int,int,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83043-83159;2035-2035;17-133];</data>
    </edge>
    <edge id="e2983" source="org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[83043-83159;2035-2035;17-133];</data>
    </edge>
    <edge id="e2984" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68543-68583;1715-1715;17-57];</data>
    </edge>
    <edge id="e2985" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68543-68583;1715-1715;17-57];</data>
    </edge>
    <edge id="e2986" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68543-68583;1715-1715;17-57];</data>
    </edge>
    <edge id="e2987" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68835-68875;1722-1722;17-57];</data>
    </edge>
    <edge id="e2988" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68835-68875;1722-1722;17-57];</data>
    </edge>
    <edge id="e2989" source="org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68835-68875;1722-1722;17-57];</data>
    </edge>
    <edge id="e2990" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[75749-75841;1874-1874;17-109];</data>
    </edge>
    <edge id="e2991" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[75749-75841;1874-1874;17-109];</data>
    </edge>
    <edge id="e2992" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[75749-75841;1874-1874;17-109];</data>
    </edge>
    <edge id="e2993" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[75749-75841;1874-1874;17-109];</data>
    </edge>
    <edge id="e2994" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74998-75092;1858-1858;17-111];</data>
    </edge>
    <edge id="e2995" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74998-75092;1858-1858;17-111];</data>
    </edge>
    <edge id="e2996" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74998-75092;1858-1858;17-111];</data>
    </edge>
    <edge id="e2997" source="org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74998-75092;1858-1858;17-111];</data>
    </edge>
    <edge id="e2998" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[71371-71422;1780-1780;17-68];</data>
    </edge>
    <edge id="e2999" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[71371-71422;1780-1780;17-68];</data>
    </edge>
    <edge id="e3000" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[71371-71422;1780-1780;17-68];</data>
    </edge>
    <edge id="e3001" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77187-77276;1905-1905;17-106];</data>
    </edge>
    <edge id="e3002" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77187-77276;1905-1905;17-106];</data>
    </edge>
    <edge id="e3003" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77187-77276;1905-1905;17-106];</data>
    </edge>
    <edge id="e3004" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77187-77276;1905-1905;17-106];</data>
    </edge>
    <edge id="e3005" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[76445-76536;1889-1889;17-108];</data>
    </edge>
    <edge id="e3006" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[76445-76536;1889-1889;17-108];</data>
    </edge>
    <edge id="e3007" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[76445-76536;1889-1889;17-108];</data>
    </edge>
    <edge id="e3008" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[76445-76536;1889-1889;17-108];</data>
    </edge>
    <edge id="e3009" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69839-69876;1745-1745;17-54];</data>
    </edge>
    <edge id="e3010" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69839-69876;1745-1745;17-54];</data>
    </edge>
    <edge id="e3011" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[69839-69876;1745-1745;17-54];</data>
    </edge>
    <edge id="e3012" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70379-70432;1758-1758;17-70];</data>
    </edge>
    <edge id="e3013" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70379-70432;1758-1758;17-70];</data>
    </edge>
    <edge id="e3014" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70633-70684;1765-1765;17-68];</data>
    </edge>
    <edge id="e3015" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70633-70684;1765-1765;17-68];</data>
    </edge>
    <edge id="e3016" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[70633-70684;1765-1765;17-68];</data>
    </edge>
    <edge id="e3017" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74304-74393;1842-1842;17-106];</data>
    </edge>
    <edge id="e3018" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74304-74393;1842-1842;17-106];</data>
    </edge>
    <edge id="e3019" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74304-74393;1842-1842;17-106];</data>
    </edge>
    <edge id="e3020" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[74304-74393;1842-1842;17-106];</data>
    </edge>
    <edge id="e3021" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[73556-73647;1826-1826;17-108];</data>
    </edge>
    <edge id="e3022" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[73556-73647;1826-1826;17-108];</data>
    </edge>
    <edge id="e3023" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[73556-73647;1826-1826;17-108];</data>
    </edge>
    <edge id="e3024" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[73556-73647;1826-1826;17-108];</data>
    </edge>
    <edge id="e3025" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72857-72946;1811-1811;17-106];</data>
    </edge>
    <edge id="e3026" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72857-72946;1811-1811;17-106];</data>
    </edge>
    <edge id="e3027" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72857-72946;1811-1811;17-106];</data>
    </edge>
    <edge id="e3028" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72857-72946;1811-1811;17-106];</data>
    </edge>
    <edge id="e3029" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72103-72194;1795-1795;17-108];</data>
    </edge>
    <edge id="e3030" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72103-72194;1795-1795;17-108];</data>
    </edge>
    <edge id="e3031" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72103-72194;1795-1795;17-108];</data>
    </edge>
    <edge id="e3032" source="org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[72103-72194;1795-1795;17-108];</data>
    </edge>
    <edge id="e3033" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67630-67670;1694-1694;17-57];</data>
    </edge>
    <edge id="e3034" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67630-67670;1694-1694;17-57];</data>
    </edge>
    <edge id="e3035" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67630-67670;1694-1694;17-57];</data>
    </edge>
    <edge id="e3036" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67934-67974;1701-1701;17-57];</data>
    </edge>
    <edge id="e3037" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67934-67974;1701-1701;17-57];</data>
    </edge>
    <edge id="e3038" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[67934-67974;1701-1701;17-57];</data>
    </edge>
    <edge id="e3039" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68238-68278;1708-1708;17-57];</data>
    </edge>
    <edge id="e3040" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68238-68278;1708-1708;17-57];</data>
    </edge>
    <edge id="e3041" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[68238-68278;1708-1708;17-57];</data>
    </edge>
    <edge id="e3042" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78442-78545;1932-1932;17-120];</data>
    </edge>
    <edge id="e3043" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78442-78545;1932-1932;17-120];</data>
    </edge>
    <edge id="e3044" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78442-78545;1932-1932;17-120];</data>
    </edge>
    <edge id="e3045" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78442-78545;1932-1932;17-120];</data>
    </edge>
    <edge id="e3046" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77874-77979;1920-1920;17-122];</data>
    </edge>
    <edge id="e3047" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77874-77979;1920-1920;17-122];</data>
    </edge>
    <edge id="e3048" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77874-77979;1920-1920;17-122];</data>
    </edge>
    <edge id="e3049" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[77874-77979;1920-1920;17-122];</data>
    </edge>
    <edge id="e3050" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79496-79587;1955-1955;17-108];</data>
    </edge>
    <edge id="e3051" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79496-79587;1955-1955;17-108];</data>
    </edge>
    <edge id="e3052" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79496-79587;1955-1955;17-108];</data>
    </edge>
    <edge id="e3053" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79496-79587;1955-1955;17-108];</data>
    </edge>
    <edge id="e3054" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78955-79048;1943-1943;17-110];</data>
    </edge>
    <edge id="e3055" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78955-79048;1943-1943;17-110];</data>
    </edge>
    <edge id="e3056" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78955-79048;1943-1943;17-110];</data>
    </edge>
    <edge id="e3057" source="org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[78955-79048;1943-1943;17-110];</data>
    </edge>
    <edge id="e3058" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[80522-80613;1978-1978;17-108];</data>
    </edge>
    <edge id="e3059" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[80522-80613;1978-1978;17-108];</data>
    </edge>
    <edge id="e3060" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[80522-80613;1978-1978;17-108];</data>
    </edge>
    <edge id="e3061" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[80522-80613;1978-1978;17-108];</data>
    </edge>
    <edge id="e3062" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79982-80075;1966-1966;17-110];</data>
    </edge>
    <edge id="e3063" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79982-80075;1966-1966;17-110];</data>
    </edge>
    <edge id="e3064" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79982-80075;1966-1966;17-110];</data>
    </edge>
    <edge id="e3065" source="org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[79982-80075;1966-1966;17-110];</data>
    </edge>
    <edge id="e3066" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81524-81603;2001-2001;17-96];</data>
    </edge>
    <edge id="e3067" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81524-81603;2001-2001;17-96];</data>
    </edge>
    <edge id="e3068" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81524-81603;2001-2001;17-96];</data>
    </edge>
    <edge id="e3069" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81524-81603;2001-2001;17-96];</data>
    </edge>
    <edge id="e3070" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81011-81092;1989-1989;17-98];</data>
    </edge>
    <edge id="e3071" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81011-81092;1989-1989;17-98];</data>
    </edge>
    <edge id="e3072" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.write(java.io.File,java.lang.CharSequence,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81011-81092;1989-1989;17-98];</data>
    </edge>
    <edge id="e3073" source="org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()" target="org.apache.commons.io.FileUtils.readFileToString(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[81011-81092;1989-1989;17-98];</data>
    </edge>
    <edge id="e3074" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6008-6053;171-171;17-62];</data>
    </edge>
    <edge id="e3075" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6008-6053;171-171;17-62];</data>
    </edge>
    <edge id="e3076" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6008-6053;171-171;17-62];</data>
    </edge>
    <edge id="e3077" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6008-6053;171-171;17-62];</data>
    </edge>
    <edge id="e3078" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6416-6475;183-183;17-76];</data>
    </edge>
    <edge id="e3079" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6416-6475;183-183;17-76];</data>
    </edge>
    <edge id="e3080" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6416-6475;183-183;17-76];</data>
    </edge>
    <edge id="e3081" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6859-6907;197-197;17-65];</data>
    </edge>
    <edge id="e3082" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()" target="org.apache.commons.io.FileUtils.openInputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6859-6907;197-197;17-65];</data>
    </edge>
    <edge id="e3083" source="org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[6859-6907;197-197;17-65];</data>
    </edge>
    <edge id="e3084" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8265-8311;241-241;17-63];</data>
    </edge>
    <edge id="e3085" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8265-8311;241-241;17-63];</data>
    </edge>
    <edge id="e3086" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8265-8311;241-241;17-63];</data>
    </edge>
    <edge id="e3087" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8265-8311;241-241;17-63];</data>
    </edge>
    <edge id="e3088" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8698-8758;254-254;17-77];</data>
    </edge>
    <edge id="e3089" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8698-8758;254-254;17-77];</data>
    </edge>
    <edge id="e3090" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8698-8758;254-254;17-77];</data>
    </edge>
    <edge id="e3091" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()" target="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8015-8073;232-232;17-75];</data>
    </edge>
    <edge id="e3092" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()" target="org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[8141-8195;236-236;17-71];</data>
    </edge>
    <edge id="e3093" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9147-9196;268-268;17-66];</data>
    </edge>
    <edge id="e3094" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9147-9196;268-268;17-66];</data>
    </edge>
    <edge id="e3095" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9147-9196;268-268;17-66];</data>
    </edge>
    <edge id="e3096" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9526-9587;280-280;17-78];</data>
    </edge>
    <edge id="e3097" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()" target="org.apache.commons.io.FileUtils.openOutputStream(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9526-9587;280-280;17-78];</data>
    </edge>
    <edge id="e3098" source="org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsTestCase.java;[9526-9587;280-280;17-78];</data>
    </edge>
    <edge id="e3099" source="org.apache.commons.io.FileUtilsWaitForTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1280-1322;33-33;12-54];</data>
    </edge>
    <edge id="e3100" source="org.apache.commons.io.FileUtilsWaitForTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1436-1459;39-39;20-43];</data>
    </edge>
    <edge id="e3101" source="org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1592-1618;45-45;20-46];</data>
    </edge>
    <edge id="e3102" source="org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1592-1618;45-45;20-46];</data>
    </edge>
    <edge id="e3103" source="org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()" target="org.apache.commons.io.FileUtils.waitFor(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java;[1778-1790;50-50;17-29/1778-1790;50-50;17-29];</data>
    </edge>
    <edge id="e3104" source="org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String,java.lang.String)" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[20850-20956;529-530;27-30];</data>
    </edge>
    <edge id="e3105" source="org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String,java.lang.String)" target="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[20850-20956;529-530;27-30];</data>
    </edge>
    <edge id="e3106" source="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[40787-40840;1059-1059;27-80];</data>
    </edge>
    <edge id="e3107" source="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" target="org.apache.commons.io.FilenameUtils.normalize(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[43565-43681;1122-1124;27-61/43565-43681;1122-1124;27-61];</data>
    </edge>
    <edge id="e3108" source="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[43565-43681;1122-1124;27-61];</data>
    </edge>
    <edge id="e3109" source="org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[42153-42216;1090-1090;27-90];</data>
    </edge>
    <edge id="e3110" source="org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[42873-42944;1107-1107;27-98];</data>
    </edge>
    <edge id="e3111" source="org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[41437-41498;1074-1074;27-88];</data>
    </edge>
    <edge id="e3112" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[44948-45005;1155-1155;27-84];</data>
    </edge>
    <edge id="e3113" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[44948-45005;1155-1155;27-84];</data>
    </edge>
    <edge id="e3114" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[45876-45936;1177-1177;27-87];</data>
    </edge>
    <edge id="e3115" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])" target="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[45876-45936;1177-1177;27-87];</data>
    </edge>
    <edge id="e3116" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[46941-47011;1204-1204;27-97];</data>
    </edge>
    <edge id="e3117" source="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)" target="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[46941-47011;1204-1204;27-97];</data>
    </edge>
    <edge id="e3118" source="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[48545-48610;1243-1243;27-92];</data>
    </edge>
    <edge id="e3119" source="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[50601-50690;1287-1287;27-116];</data>
    </edge>
    <edge id="e3120" source="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.IOCase.checkIndexOf(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[50601-50690;1287-1287;27-116/50601-50690;1287-1287;27-116];</data>
    </edge>
    <edge id="e3121" source="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" target="org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[50601-50690;1287-1287;27-116];</data>
    </edge>
    <edge id="e3122" source="org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[49752-49825;1269-1269;27-100];</data>
    </edge>
    <edge id="e3123" source="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)" target="org.apache.commons.io.FilenameUtils.isSeparator(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[24790-24827;631-631;23-60/24790-24827;631-631;23-60/24790-24827;631-631;23-60/24790-24827;631-631;23-60/24790-24827;631-631;23-60];</data>
    </edge>
    <edge id="e3124" source="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)" target="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[28446-28484;720-720;23-61];</data>
    </edge>
    <edge id="e3125" source="org.apache.commons.io.FilenameUtils.concat(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[19188-19248;483-483;26-86];</data>
    </edge>
    <edge id="e3126" source="org.apache.commons.io.FilenameUtils.concat(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.normalize(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[19188-19248;483-483;26-86/19188-19248;483-483;26-86/19188-19248;483-483;26-86/19188-19248;483-483;26-86];</data>
    </edge>
    <edge id="e3127" source="org.apache.commons.io.FilenameUtils.concat(java.lang.String,java.lang.String)" target="org.apache.commons.io.FilenameUtils.isSeparator(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[19188-19248;483-483;26-86];</data>
    </edge>
    <edge id="e3128" source="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35809-35876;915-915;27-94];</data>
    </edge>
    <edge id="e3129" source="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35809-35876;915-915;27-94];</data>
    </edge>
    <edge id="e3130" source="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35809-35876;915-915;27-94];</data>
    </edge>
    <edge id="e3131" source="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[32916-32971;833-833;27-82];</data>
    </edge>
    <edge id="e3132" source="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)" target="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[32916-32971;833-833;27-82];</data>
    </edge>
    <edge id="e3133" source="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[13886-13970;349-349;27-111];</data>
    </edge>
    <edge id="e3134" source="org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)" target="org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[38148-38181;983-983;26-59];</data>
    </edge>
    <edge id="e3135" source="org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)" target="org.apache.commons.io.FilenameUtils.getName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[38148-38181;983-983;26-59];</data>
    </edge>
    <edge id="e3136" source="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[38935-38969;1005-1005;26-60];</data>
    </edge>
    <edge id="e3137" source="org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[34398-34431;874-874;26-59];</data>
    </edge>
    <edge id="e3138" source="org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[35486-35533;904-904;26-73];</data>
    </edge>
    <edge id="e3139" source="org.apache.commons.io.FilenameUtils.getName(java.lang.String)" target="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[37245-37274;958-958;26-55];</data>
    </edge>
    <edge id="e3140" source="org.apache.commons.io.FilenameUtils.getPath(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[31560-31589;795-795;26-55];</data>
    </edge>
    <edge id="e3141" source="org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[32599-32642;822-822;26-69];</data>
    </edge>
    <edge id="e3142" source="org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[30258-30289;759-759;26-57];</data>
    </edge>
    <edge id="e3143" source="org.apache.commons.io.FilenameUtils.normalize(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[7180-7211;195-195;26-57];</data>
    </edge>
    <edge id="e3144" source="org.apache.commons.io.FilenameUtils.normalize(java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[9240-9300;242-242;26-86];</data>
    </edge>
    <edge id="e3145" source="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)" target="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[11349-11394;289-289;26-71];</data>
    </edge>
    <edge id="e3146" source="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String,char,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[13366-13440;336-336;26-100];</data>
    </edge>
    <edge id="e3147" source="org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[39923-39960;1035-1035;26-63];</data>
    </edge>
    <edge id="e3148" source="org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)" target="org.apache.commons.io.FilenameUtils.isSystemWindows()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[22537-22573;581-581;26-62];</data>
    </edge>
    <edge id="e3149" source="org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)" target="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[22537-22573;581-581;26-62];</data>
    </edge>
    <edge id="e3150" source="org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)" target="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/FilenameUtils.java;[22537-22573;581-581;26-62];</data>
    </edge>
    <edge id="e3151" source="org.apache.commons.io.FilenameUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1520-1559;43-43;12-51];</data>
    </edge>
    <edge id="e3152" source="org.apache.commons.io.FilenameUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1520-1559;43-43;12-51/1520-1559;43-43;12-51];</data>
    </edge>
    <edge id="e3153" source="org.apache.commons.io.FilenameUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1910-1933;55-55;20-43/1910-1933;55-55;20-43/1910-1933;55-55;20-43];</data>
    </edge>
    <edge id="e3154" source="org.apache.commons.io.FilenameUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1910-1933;55-55;20-43/1910-1933;55-55;20-43/1910-1933;55-55;20-43/1910-1933;55-55;20-43];</data>
    </edge>
    <edge id="e3155" source="org.apache.commons.io.FilenameUtilsTestCase.setUp()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[1910-1933;55-55;20-43];</data>
    </edge>
    <edge id="e3156" source="org.apache.commons.io.FilenameUtilsTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[2342-2368;67-67;20-46];</data>
    </edge>
    <edge id="e3157" source="org.apache.commons.io.FilenameUtilsTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[2342-2368;67-67;20-46];</data>
    </edge>
    <edge id="e3158" source="org.apache.commons.io.FilenameUtilsTestCase.testConcat()" target="org.apache.commons.io.FilenameUtils.concat(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28/27556-27567;394-394;17-28];</data>
    </edge>
    <edge id="e3159" source="org.apache.commons.io.FilenameUtilsTestCase.testEquals()" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[50026-50037;778-778;17-28/50026-50037;778-778;17-28/50026-50037;778-778;17-28/50026-50037;778-778;17-28/50026-50037;778-778;17-28/50026-50037;778-778;17-28/50026-50037;778-778;17-28];</data>
    </edge>
    <edge id="e3160" source="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()" target="org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38/51094-51115;799-799;17-38];</data>
    </edge>
    <edge id="e3161" source="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()" target="org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[52463-52496;824-824;17-50/52463-52496;824-824;17-50/52463-52496;824-824;17-50];</data>
    </edge>
    <edge id="e3162" source="org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()" target="org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46/51699-51728;810-810;17-46];</data>
    </edge>
    <edge id="e3163" source="org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()" target="org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[50484-50503;788-788;17-36/50484-50503;788-788;17-36/50484-50503;788-788;17-36/50484-50503;788-788;17-36/50484-50503;788-788;17-36/50484-50503;788-788;17-36/50484-50503;788-788;17-36];</data>
    </edge>
    <edge id="e3164" source="org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()" target="org.apache.commons.io.FilenameUtils.equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[53222-53245;845-845;17-40/53222-53245;845-845;17-40/53222-53245;845-845;17-40/53222-53245;845-845;17-40];</data>
    </edge>
    <edge id="e3165" source="org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()" target="org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[47419-47435;735-735;17-33/47419-47435;735-735;17-33/47419-47435;735-735;17-33/47419-47435;735-735;17-33/47419-47435;735-735;17-33/47419-47435;735-735;17-33/47419-47435;735-735;17-33];</data>
    </edge>
    <edge id="e3166" source="org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()" target="org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34/47948-47965;745-745;17-34];</data>
    </edge>
    <edge id="e3167" source="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()" target="org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33/41945-41961;640-640;17-33];</data>
    </edge>
    <edge id="e3168" source="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()" target="org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47/43905-43935;674-674;17-47];</data>
    </edge>
    <edge id="e3169" source="org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248()" target="org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[46334-46371;711-711;17-54/46334-46371;711-711;17-54/46334-46371;711-711;17-54/46334-46371;711-711;17-54/46334-46371;711-711;17-54/46334-46371;711-711;17-54];</data>
    </edge>
    <edge id="e3170" source="org.apache.commons.io.FilenameUtilsTestCase.testGetName()" target="org.apache.commons.io.FilenameUtils.getName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[46980-46992;726-726;17-29/46980-46992;726-726;17-29/46980-46992;726-726;17-29/46980-46992;726-726;17-29/46980-46992;726-726;17-29/46980-46992;726-726;17-29];</data>
    </edge>
    <edge id="e3171" source="org.apache.commons.io.FilenameUtilsTestCase.testGetPath()" target="org.apache.commons.io.FilenameUtils.getPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29/37667-37679;568-568;17-29];</data>
    </edge>
    <edge id="e3172" source="org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()" target="org.apache.commons.io.FilenameUtils.getPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[39609-39635;604-604;17-43/39609-39635;604-604;17-43];</data>
    </edge>
    <edge id="e3173" source="org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()" target="org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43/39609-39635;604-604;17-43];</data>
    </edge>
    <edge id="e3174" source="org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()" target="org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31/35605-35619;531-531;17-31];</data>
    </edge>
    <edge id="e3175" source="org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()" target="org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37/32127-32147;470-470;17-37];</data>
    </edge>
    <edge id="e3176" source="org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()" target="org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38/34903-34924;519-519;17-38];</data>
    </edge>
    <edge id="e3177" source="org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()" target="org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[34553-34578;512-512;17-42/34553-34578;512-512;17-42/34553-34578;512-512;17-42/34553-34578;512-512;17-42];</data>
    </edge>
    <edge id="e3178" source="org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()" target="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33/53710-53726;853-853;17-33];</data>
    </edge>
    <edge id="e3179" source="org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()" target="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38/55464-55485;885-885;17-38];</data>
    </edge>
    <edge id="e3180" source="org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()" target="org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43/58032-58058;923-923;17-43];</data>
    </edge>
    <edge id="e3181" source="org.apache.commons.io.FilenameUtilsTestCase.testNormalize()" target="org.apache.commons.io.FilenameUtils.normalize(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.javadata>
    </edge>
    <edge id="e3182" source="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()" target="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62/14113-14158;233-233;17-62];</data>
    </edge>
    <edge id="e3183" source="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin()" target="org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[26942-26994;382-382;17-69/26942-26994;382-382;17-69/26942-26994;382-382;17-69/26942-26994;382-382;17-69];</data>
    </edge>
    <edge id="e3184" source="org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin()" target="org.apache.commons.io.FilenameUtils.normalize(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[13561-13599;221-221;17-55/13561-13599;221-221;17-55/13561-13599;221-221;17-55/13561-13599;221-221;17-55];</data>
    </edge>
    <edge id="e3185" source="org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()" target="org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37/48889-48909;761-761;17-37];</data>
    </edge>
    <edge id="e3186" source="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()" target="org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40/30951-30974;451-451;17-40];</data>
    </edge>
    <edge id="e3187" source="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()" target="org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[29908-29929;433-433;17-38/29908-29929;433-433;17-38/29908-29929;433-433;17-38/29908-29929;433-433;17-38/29908-29929;433-433;17-38/29908-29929;433-433;17-38];</data>
    </edge>
    <edge id="e3188" source="org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()" target="org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java;[30411-30435;442-442;17-41/30411-30435;442-442;17-41/30411-30435;442-442;17-41/30411-30435;442-442;17-41/30411-30435;442-442;17-41/30411-30435;442-442;17-41];</data>
    </edge>
    <edge id="e3189" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String,java.lang.String,boolean)" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[8319-8395;138-138;18-94];</data>
    </edge>
    <edge id="e3190" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[11146-11169;216-216;17-40];</data>
    </edge>
    <edge id="e3191" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch()" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27/1304-1314;36-36;17-27];</data>
    </edge>
    <edge id="e3192" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()" target="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28/8574-8585;143-143;17-28];</data>
    </edge>
    <edge id="e3193" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified()" target="org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.javadata>
    </edge>
    <edge id="e3194" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem()" target="org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35/2806-2824;61-61;17-35];</data>
    </edge>
    <edge id="e3195" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()" target="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(java.lang.Object[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35];</data>
    </edge>
    <edge id="e3196" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()" target="org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35/7030-7048;118-118;17-35];</data>
    </edge>
    <edge id="e3197" source="org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()" target="org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/FilenameUtilsWildcardTestCase.java;[10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29/10357-10369;192-192;17-29];</data>
    </edge>
    <edge id="e3198" source="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" target="org.apache.commons.io.HexDump.dump(java.lang.StringBuilder,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[2787-3001;72-75;24-36];</data>
    </edge>
    <edge id="e3199" source="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)" target="org.apache.commons.io.HexDump.dump(java.lang.StringBuilder,byte)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/HexDump.java;[2787-3001;72-75;24-36];</data>
    </edge>
    <edge id="e3200" source="org.apache.commons.io.HexDumpTest.testDump()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30];</data>
    </edge>
    <edge id="e3201" source="org.apache.commons.io.HexDumpTest.testDump()" target="org.apache.commons.io.HexDump.dump(byte[],long,java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30];</data>
    </edge>
    <edge id="e3202" source="org.apache.commons.io.HexDumpTest.testDump()" target="org.apache.commons.io.HexDumpTest.toHex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30];</data>
    </edge>
    <edge id="e3203" source="org.apache.commons.io.HexDumpTest.testDump()" target="org.apache.commons.io.HexDumpTest.toAscii(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30];</data>
    </edge>
    <edge id="e3204" source="org.apache.commons.io.HexDumpTest.testDump()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/HexDumpTest.java;[1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30/1442-1482;45-46;17-30];</data>
    </edge>
    <edge id="e3205" source="org.apache.commons.io.IOCaseTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1332-1364;36-36;12-44];</data>
    </edge>
    <edge id="e3206" source="org.apache.commons.io.IOCaseTestCase.test_checkCompare_case()" target="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57/4135-4175;110-110;17-57];</data>
    </edge>
    <edge id="e3207" source="org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality()" target="org.apache.commons.io.IOCase.checkCompareTo(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66/3214-3263;88-88;17-66];</data>
    </edge>
    <edge id="e3208" source="org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case()" target="org.apache.commons.io.IOCase.checkEndsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[9305-9346;225-225;17-58/9305-9346;225-225;17-58/9305-9346;225-225;17-58/9305-9346;225-225;17-58/9305-9346;225-225;17-58/9305-9346;225-225;17-58];</data>
    </edge>
    <edge id="e3209" source="org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality()" target="org.apache.commons.io.IOCase.checkEndsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67/8221-8271;200-200;17-67];</data>
    </edge>
    <edge id="e3210" source="org.apache.commons.io.IOCaseTestCase.test_checkEquals_case()" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[6009-6048;151-151;17-56/6009-6048;151-151;17-56/6009-6048;151-151;17-56/6009-6048;151-151;17-56/6009-6048;151-151;17-56/6009-6048;151-151;17-56];</data>
    </edge>
    <edge id="e3211" source="org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality()" target="org.apache.commons.io.IOCase.checkEquals(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65/4948-4996;126-126;17-65];</data>
    </edge>
    <edge id="e3212" source="org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case()" target="org.apache.commons.io.IOCase.checkIndexOf(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[12567-12607;289-289;17-57/12567-12607;289-289;17-57/12567-12607;289-289;17-57/12567-12607;289-289;17-57/12567-12607;289-289;17-57/12567-12607;289-289;17-57];</data>
    </edge>
    <edge id="e3213" source="org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality()" target="org.apache.commons.io.IOCase.checkIndexOf(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66/9853-9902;237-237;17-66];</data>
    </edge>
    <edge id="e3214" source="org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case()" target="org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[15452-15498;348-348;17-63/15452-15498;348-348;17-63/15452-15498;348-348;17-63/15452-15498;348-348;17-63/15452-15498;348-348;17-63/15452-15498;348-348;17-63];</data>
    </edge>
    <edge id="e3215" source="org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality()" target="org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72/13161-13216;301-301;17-72];</data>
    </edge>
    <edge id="e3216" source="org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case()" target="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[7659-7702;188-188;17-60/7659-7702;188-188;17-60/7659-7702;188-188;17-60/7659-7702;188-188;17-60/7659-7702;188-188;17-60/7659-7702;188-188;17-60];</data>
    </edge>
    <edge id="e3217" source="org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality()" target="org.apache.commons.io.IOCase.checkStartsWith(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69/6549-6601;163-163;17-69];</data>
    </edge>
    <edge id="e3218" source="org.apache.commons.io.IOCaseTestCase.test_forName()" target="org.apache.commons.io.IOCase.forName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[1628-1658;50-50;17-47/1628-1658;50-50;17-47/1628-1658;50-50;17-47/1628-1658;50-50;17-47/1628-1658;50-50;17-47];</data>
    </edge>
    <edge id="e3219" source="org.apache.commons.io.IOCaseTestCase.test_getName()" target="org.apache.commons.io.IOCase.getName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2400-2430;70-70;17-47/2400-2430;70-70;17-47/2400-2430;70-70;17-47];</data>
    </edge>
    <edge id="e3220" source="org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive()" target="org.apache.commons.io.IOCase.isCaseSensitive()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2892-2930;82-82;17-55/2892-2930;82-82;17-55/2892-2930;82-82;17-55];</data>
    </edge>
    <edge id="e3221" source="org.apache.commons.io.IOCaseTestCase.test_serialization()" target="org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2138-2174;64-64;17-53/2138-2174;64-64;17-53/2138-2174;64-64;17-53];</data>
    </edge>
    <edge id="e3222" source="org.apache.commons.io.IOCaseTestCase.test_toString()" target="org.apache.commons.io.IOCase.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOCaseTestCase.java;[2644-2675;76-76;17-48/2644-2675;76-76;17-48/2644-2675;76-76;17-48];</data>
    </edge>
    <edge id="e3223" source="org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable()" target="org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable,java.lang.Throwable,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1219-1250;34-34;17-48];</data>
    </edge>
    <edge id="e3224" source="org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable()" target="org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable,java.lang.Throwable,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOExceptionWithCauseTestCase.java;[1580-1605;43-43;17-42];</data>
    </edge>
    <edge id="e3225" source="org.apache.commons.io.IOUtils.contentEquals(java.io.Reader,java.io.Reader)" target="org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[102092-102165;2598-2599;27-30/102092-102165;2598-2599;27-30];</data>
    </edge>
    <edge id="e3226" source="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" target="org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[103226-103320;2634-2635;27-30/103226-103320;2634-2635;27-30];</data>
    </edge>
    <edge id="e3227" source="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,int)" target="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[121731-121801;3071-3071;26-96];</data>
    </edge>
    <edge id="e3228" source="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[26366-26420;727-727;26-80];</data>
    </edge>
    <edge id="e3229" source="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[26366-26420;727-727;26-80];</data>
    </edge>
    <edge id="e3230" source="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[26366-26420;727-727;26-80];</data>
    </edge>
    <edge id="e3231" source="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,long)" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[27549-27620;749-749;26-97];</data>
    </edge>
    <edge id="e3232" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)" target="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[29703-29752;808-808;26-75];</data>
    </edge>
    <edge id="e3233" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.lang.String)" target="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[31558-31630;852-852;26-98];</data>
    </edge>
    <edge id="e3234" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[31558-31630;852-852;26-98];</data>
    </edge>
    <edge id="e3235" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[30415-30488;826-826;26-99];</data>
    </edge>
    <edge id="e3236" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[30415-30488;826-826;26-99];</data>
    </edge>
    <edge id="e3237" source="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.nio.charset.Charset)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[30415-30488;826-826;26-99];</data>
    </edge>
    <edge id="e3238" source="org.apache.commons.io.IOUtils.toByteArray(java.net.URI)" target="org.apache.commons.io.IOUtils.toByteArray(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[32814-32858;886-886;26-70];</data>
    </edge>
    <edge id="e3239" source="org.apache.commons.io.IOUtils.toByteArray(java.net.URL)" target="org.apache.commons.io.IOUtils.toByteArray(java.net.URLConnection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[33311-33355;902-902;26-70];</data>
    </edge>
    <edge id="e3240" source="org.apache.commons.io.IOUtils.toByteArray(java.net.URL)" target="org.apache.commons.io.IOUtils.close(java.net.URLConnection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[33311-33355;902-902;26-70];</data>
    </edge>
    <edge id="e3241" source="org.apache.commons.io.IOUtils.toByteArray(java.net.URLConnection)" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[33957-34015;923-923;26-84];</data>
    </edge>
    <edge id="e3242" source="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)" target="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[34959-35010;949-949;26-77];</data>
    </edge>
    <edge id="e3243" source="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[36840-36914;994-994;26-100];</data>
    </edge>
    <edge id="e3244" source="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[36840-36914;994-994;26-100];</data>
    </edge>
    <edge id="e3245" source="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[35684-35771;967-968;26-30];</data>
    </edge>
    <edge id="e3246" source="org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[37460-37509;1010-1010;26-75];</data>
    </edge>
    <edge id="e3247" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[81112-81186;2088-2088;23-97];</data>
    </edge>
    <edge id="e3248" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[91691-91754;2335-2335;23-86];</data>
    </edge>
    <edge id="e3249" source="org.apache.commons.io.IOUtils.read(java.io.InputStream,byte[])" target="org.apache.commons.io.IOUtils.read(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[116451-116519;2944-2944;23-91];</data>
    </edge>
    <edge id="e3250" source="org.apache.commons.io.IOUtils.read(java.io.Reader,char[])" target="org.apache.commons.io.IOUtils.read(java.io.Reader,char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[114635-114698;2898-2898;23-86];</data>
    </edge>
    <edge id="e3251" source="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)" target="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[17004-17068;521-521;31-95];</data>
    </edge>
    <edge id="e3252" source="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream,int)" target="org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[18041-18115;547-547;31-105];</data>
    </edge>
    <edge id="e3253" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[54233-54271;1434-1434;31-69];</data>
    </edge>
    <edge id="e3254" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.lang.String)" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[55546-55626;1467-1467;31-111];</data>
    </edge>
    <edge id="e3255" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[55546-55626;1467-1467;31-111];</data>
    </edge>
    <edge id="e3256" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[54694-54756;1447-1447;31-93];</data>
    </edge>
    <edge id="e3257" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.String)" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[56152-56184;1482-1482;31-63];</data>
    </edge>
    <edge id="e3258" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[57458-57532;1515-1515;31-105];</data>
    </edge>
    <edge id="e3259" source="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[56595-56651;1495-1495;31-87];</data>
    </edge>
    <edge id="e3260" source="org.apache.commons.io.IOUtils.toString(byte[],java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[45497-45566;1227-1227;26-95];</data>
    </edge>
    <edge id="e3261" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream)" target="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[38339-38390;1032-1032;26-77];</data>
    </edge>
    <edge id="e3262" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40161-40247;1075-1076;26-30];</data>
    </edge>
    <edge id="e3263" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40161-40247;1075-1076;26-30];</data>
    </edge>
    <edge id="e3264" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[39054-39129;1050-1050;26-101];</data>
    </edge>
    <edge id="e3265" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[39054-39129;1050-1050;26-101];</data>
    </edge>
    <edge id="e3266" source="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[39054-39129;1050-1050;26-101];</data>
    </edge>
    <edge id="e3267" source="org.apache.commons.io.IOUtils.toString(java.io.Reader)" target="org.apache.commons.io.output.StringBuilderWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40757-40803;1091-1091;26-72];</data>
    </edge>
    <edge id="e3268" source="org.apache.commons.io.IOUtils.toString(java.io.Reader)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40757-40803;1091-1091;26-72];</data>
    </edge>
    <edge id="e3269" source="org.apache.commons.io.IOUtils.toString(java.io.Reader)" target="org.apache.commons.io.output.StringBuilderWriter.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[40757-40803;1091-1091;26-72];</data>
    </edge>
    <edge id="e3270" source="org.apache.commons.io.IOUtils.toString(java.net.URI)" target="org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[41286-41327;1108-1108;26-67];</data>
    </edge>
    <edge id="e3271" source="org.apache.commons.io.IOUtils.toString(java.net.URI,java.lang.String)" target="org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[42422-42486;1141-1141;26-90];</data>
    </edge>
    <edge id="e3272" source="org.apache.commons.io.IOUtils.toString(java.net.URI,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[42422-42486;1141-1141;26-90];</data>
    </edge>
    <edge id="e3273" source="org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[41744-41809;1123-1123;26-91];</data>
    </edge>
    <edge id="e3274" source="org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[41744-41809;1123-1123;26-91];</data>
    </edge>
    <edge id="e3275" source="org.apache.commons.io.IOUtils.toString(java.net.URL)" target="org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[42908-42949;1156-1156;26-67];</data>
    </edge>
    <edge id="e3276" source="org.apache.commons.io.IOUtils.toString(java.net.URL,java.lang.String)" target="org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[44162-44226;1194-1194;26-90];</data>
    </edge>
    <edge id="e3277" source="org.apache.commons.io.IOUtils.toString(java.net.URL,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[44162-44226;1194-1194;26-90];</data>
    </edge>
    <edge id="e3278" source="org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[43365-43430;1171-1171;26-91];</data>
    </edge>
    <edge id="e3279" source="org.apache.commons.io.IOUtils.readLines(java.io.InputStream)" target="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[46416-46468;1248-1248;32-84];</data>
    </edge>
    <edge id="e3280" source="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[48372-48447;1291-1291;32-107];</data>
    </edge>
    <edge id="e3281" source="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[48372-48447;1291-1291;32-107];</data>
    </edge>
    <edge id="e3282" source="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[47185-47261;1266-1266;32-108];</data>
    </edge>
    <edge id="e3283" source="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.readLines(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[47185-47261;1266-1266;32-108];</data>
    </edge>
    <edge id="e3284" source="org.apache.commons.io.IOUtils.readLines(java.io.Reader)" target="org.apache.commons.io.IOUtils.toBufferedReader(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[49039-49086;1308-1308;32-79];</data>
    </edge>
    <edge id="e3285" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream,int)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[82137-82233;2115-2115;24-120];</data>
    </edge>
    <edge id="e3286" source="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[82972-83063;2135-2136;24-30];</data>
    </edge>
    <edge id="e3287" source="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[85267-85401;2190-2191;24-30];</data>
    </edge>
    <edge id="e3288" source="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])" target="org.apache.commons.io.IOUtils.skipFully(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[86678-86834;2220-2221;24-95];</data>
    </edge>
    <edge id="e3289" source="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[92555-92623;2358-2358;24-92];</data>
    </edge>
    <edge id="e3290" source="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[94490-94613;2406-2407;24-30];</data>
    </edge>
    <edge id="e3291" source="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long,char[])" target="org.apache.commons.io.IOUtils.skipFully(java.io.Reader,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[95577-95722;2430-2431;24-30];</data>
    </edge>
    <edge id="e3292" source="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[53612-53690;1419-1419;32-110];</data>
    </edge>
    <edge id="e3293" source="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[53612-53690;1419-1419;32-110];</data>
    </edge>
    <edge id="e3294" source="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[51933-52012;1382-1382;32-111];</data>
    </edge>
    <edge id="e3295" source="org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[51933-52012;1382-1382;32-111];</data>
    </edge>
    <edge id="e3296" source="org.apache.commons.io.IOUtils.lineIterator(java.io.Reader)" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[50538-50570;1348-1348;32-64];</data>
    </edge>
    <edge id="e3297" source="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[13212-13254;392-392;24-66];</data>
    </edge>
    <edge id="e3298" source="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[9477-9513;270-270;24-60];</data>
    </edge>
    <edge id="e3299" source="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[10315-10353;298-298;24-62];</data>
    </edge>
    <edge id="e3300" source="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[7884-7915;217-217;24-55];</data>
    </edge>
    <edge id="e3301" source="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[8652-8684;243-243;24-56];</data>
    </edge>
    <edge id="e3302" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[88409-88489;2263-2264;24-30];</data>
    </edge>
    <edge id="e3303" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[90562-90658;2311-2311;24-120];</data>
    </edge>
    <edge id="e3304" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[90562-90658;2311-2311;24-120];</data>
    </edge>
    <edge id="e3305" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[89282-89379;2284-2284;24-121];</data>
    </edge>
    <edge id="e3306" source="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[89282-89379;2284-2284;24-121];</data>
    </edge>
    <edge id="e3307" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[97381-97462;2476-2477;24-30];</data>
    </edge>
    <edge id="e3308" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[99966-100064;2538-2538;24-122];</data>
    </edge>
    <edge id="e3309" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[99966-100064;2538-2538;24-122];</data>
    </edge>
    <edge id="e3310" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[98420-98519;2504-2504;24-123];</data>
    </edge>
    <edge id="e3311" source="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[98420-98519;2504-2504;24-123];</data>
    </edge>
    <edge id="e3312" source="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[])" target="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[120906-120979;3050-3050;24-97];</data>
    </edge>
    <edge id="e3313" source="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)" target="org.apache.commons.io.IOUtils.read(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[119980-120089;3029-3029;24-133];</data>
    </edge>
    <edge id="e3314" source="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[])" target="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[119136-119204;3009-3009;24-92];</data>
    </edge>
    <edge id="e3315" source="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[],int,int)" target="org.apache.commons.io.IOUtils.read(java.io.Reader,char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[118205-118309;2988-2988;24-128];</data>
    </edge>
    <edge id="e3316" source="org.apache.commons.io.IOUtils.readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)" target="org.apache.commons.io.IOUtils.read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[122499-122584;3090-3090;24-109];</data>
    </edge>
    <edge id="e3317" source="org.apache.commons.io.IOUtils.skipFully(java.io.InputStream,long)" target="org.apache.commons.io.IOUtils.skip(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[110455-110526;2797-2797;24-95];</data>
    </edge>
    <edge id="e3318" source="org.apache.commons.io.IOUtils.skipFully(java.io.Reader,long)" target="org.apache.commons.io.IOUtils.skip(java.io.Reader,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[112663-112729;2848-2848;24-90];</data>
    </edge>
    <edge id="e3319" source="org.apache.commons.io.IOUtils.skipFully(java.nio.channels.ReadableByteChannel,long)" target="org.apache.commons.io.IOUtils.skip(java.nio.channels.ReadableByteChannel,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[111316-111395;2818-2818;24-103];</data>
    </edge>
    <edge id="e3320" source="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer)" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[59967-60030;1580-1580;24-87];</data>
    </edge>
    <edge id="e3321" source="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[61814-61900;1624-1624;24-110];</data>
    </edge>
    <edge id="e3322" source="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[61814-61900;1624-1624;24-110];</data>
    </edge>
    <edge id="e3323" source="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[60691-60778;1598-1598;24-111];</data>
    </edge>
    <edge id="e3324" source="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[64211-64292;1687-1688;24-30];</data>
    </edge>
    <edge id="e3325" source="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[66187-66291;1734-1735;24-30];</data>
    </edge>
    <edge id="e3326" source="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[66187-66291;1734-1735;24-30];</data>
    </edge>
    <edge id="e3327" source="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[65001-65094;1707-1707;24-117];</data>
    </edge>
    <edge id="e3328" source="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[67637-67724;1771-1772;24-30];</data>
    </edge>
    <edge id="e3329" source="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[69484-69582;1814-1814;24-122];</data>
    </edge>
    <edge id="e3330" source="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[69484-69582;1814-1814;24-122];</data>
    </edge>
    <edge id="e3331" source="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[68377-68476;1789-1789;24-123];</data>
    </edge>
    <edge id="e3332" source="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.Writer)" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[66843-66912;1750-1750;24-93];</data>
    </edge>
    <edge id="e3333" source="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[70874-70955;1850-1851;24-30];</data>
    </edge>
    <edge id="e3334" source="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[72702-72806;1893-1894;24-30];</data>
    </edge>
    <edge id="e3335" source="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[72702-72806;1893-1894;24-30];</data>
    </edge>
    <edge id="e3336" source="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[71596-71689;1868-1868;24-117];</data>
    </edge>
    <edge id="e3337" source="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[74216-74303;1933-1934;24-30];</data>
    </edge>
    <edge id="e3338" source="org.apache.commons.io.IOUtils.write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[75352-75450;1959-1959;24-122];</data>
    </edge>
    <edge id="e3339" source="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[76420-76539;1981-1982;24-57];</data>
    </edge>
    <edge id="e3340" source="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[78875-79017;2035-2036;24-80];</data>
    </edge>
    <edge id="e3341" source="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)" target="org.apache.commons.io.Charsets.toCharset(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[78875-79017;2035-2036;24-80];</data>
    </edge>
    <edge id="e3342" source="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.nio.charset.Charset)" target="org.apache.commons.io.Charsets.toCharset(java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOUtils.java;[77311-77448;1999-2000;24-30];</data>
    </edge>
    <edge id="e3343" source="org.apache.commons.io.IOUtilsCopyTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2154-2195;57-57;12-53];</data>
    </edge>
    <edge id="e3344" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3345" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3346" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3347" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3348" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3349" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[2683-2735;75-75;17-69];</data>
    </edge>
    <edge id="e3350" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize()" target="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83/3342-3408;90-90;17-83];</data>
    </edge>
    <edge id="e3351" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3352" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3353" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3354" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3355" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3356" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int)" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[4445-4531;109-109;18-104];</data>
    </edge>
    <edge id="e3357" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()" target="org.apache.commons.io.input.NullInputStream(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5789-5846;143-143;17-74];</data>
    </edge>
    <edge id="e3358" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()" target="org.apache.commons.io.output.NullOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5789-5846;143-143;17-74];</data>
    </edge>
    <edge id="e3359" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5789-5846;143-143;17-74];</data>
    </edge>
    <edge id="e3360" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5789-5846;143-143;17-74];</data>
    </edge>
    <edge id="e3361" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5151-5210;124-124;17-76];</data>
    </edge>
    <edge id="e3362" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5151-5210;124-124;17-76];</data>
    </edge>
    <edge id="e3363" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[5435-5495;132-132;17-77];</data>
    </edge>
    <edge id="e3364" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3365" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3366" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3367" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3368" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3369" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3370" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[6452-6498;160-160;17-63];</data>
    </edge>
    <edge id="e3371" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3372" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3373" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3374" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3375" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3376" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[8298-8353;199-199;17-72];</data>
    </edge>
    <edge id="e3377" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3378" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3379" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3380" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3381" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3382" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3383" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9902-9970;236-236;17-85];</data>
    </edge>
    <edge id="e3384" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9071-9133;217-217;17-79];</data>
    </edge>
    <edge id="e3385" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9071-9133;217-217;17-79];</data>
    </edge>
    <edge id="e3386" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9071-9133;217-217;17-79];</data>
    </edge>
    <edge id="e3387" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[9540-9603;227-227;17-80];</data>
    </edge>
    <edge id="e3388" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7302-7355;178-178;17-70];</data>
    </edge>
    <edge id="e3389" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7302-7355;178-178;17-70];</data>
    </edge>
    <edge id="e3390" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7302-7355;178-178;17-70];</data>
    </edge>
    <edge id="e3391" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[7833-7887;189-189;17-71];</data>
    </edge>
    <edge id="e3392" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3393" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3394" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3395" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3396" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3397" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[10834-10881;255-255;17-64];</data>
    </edge>
    <edge id="e3398" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
    </edge>
    <edge id="e3399" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
    </edge>
    <edge id="e3400" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
    </edge>
    <edge id="e3401" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
    </edge>
    <edge id="e3402" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12902-12958;298-298;17-73];</data>
    </edge>
    <edge id="e3403" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3404" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3405" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3406" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3407" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3408" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14605-14674;336-336;17-86];</data>
    </edge>
    <edge id="e3409" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[13662-13725;315-315;17-80];</data>
    </edge>
    <edge id="e3410" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[13662-13725;315-315;17-80];</data>
    </edge>
    <edge id="e3411" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[13662-13725;315-315;17-80];</data>
    </edge>
    <edge id="e3412" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14123-14187;325-325;17-81];</data>
    </edge>
    <edge id="e3413" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[14123-14187;325-325;17-81];</data>
    </edge>
    <edge id="e3414" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[11814-11868;276-276;17-71];</data>
    </edge>
    <edge id="e3415" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[11814-11868;276-276;17-71];</data>
    </edge>
    <edge id="e3416" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[11814-11868;276-276;17-71];</data>
    </edge>
    <edge id="e3417" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12318-12373;286-286;17-72];</data>
    </edge>
    <edge id="e3418" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[12318-12373;286-286;17-72];</data>
    </edge>
    <edge id="e3419" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3420" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3421" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3422" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3423" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3424" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3425" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[15503-15544;354-354;17-58];</data>
    </edge>
    <edge id="e3426" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()" target="org.apache.commons.io.input.NullReader(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[17307-17353;395-395;17-63];</data>
    </edge>
    <edge id="e3427" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()" target="org.apache.commons.io.output.NullWriter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[17307-17353;395-395;17-63];</data>
    </edge>
    <edge id="e3428" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[17307-17353;395-395;17-63];</data>
    </edge>
    <edge id="e3429" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[17307-17353;395-395;17-63];</data>
    </edge>
    <edge id="e3430" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16347-16395;371-371;17-65];</data>
    </edge>
    <edge id="e3431" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16347-16395;371-371;17-65];</data>
    </edge>
    <edge id="e3432" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16347-16395;371-371;17-65];</data>
    </edge>
    <edge id="e3433" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()" target="org.apache.commons.io.testtools.YellOnCloseInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16858-16907;382-382;17-66];</data>
    </edge>
    <edge id="e3434" source="org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()" target="org.apache.commons.io.IOUtils.copy(java.io.Reader,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java;[16858-16907;382-382;17-66];</data>
    </edge>
    <edge id="e3435" source="org.apache.commons.io.IOUtilsTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3081-3114;83-83;12-45];</data>
    </edge>
    <edge id="e3436" source="org.apache.commons.io.IOUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3427-3433;93-93;17-23/3427-3433;93-93;17-23];</data>
    </edge>
    <edge id="e3437" source="org.apache.commons.io.IOUtilsTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[3427-3433;93-93;17-23];</data>
    </edge>
    <edge id="e3438" source="org.apache.commons.io.IOUtilsTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4193-4202;117-117;17-26];</data>
    </edge>
    <edge id="e3439" source="org.apache.commons.io.IOUtilsTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4193-4202;117-117;17-26/4193-4202;117-117;17-26];</data>
    </edge>
    <edge id="e3440" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()" target="org.apache.commons.io.IOUtilsTestCase$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46599-46625;1271-1271;17-43];</data>
    </edge>
    <edge id="e3441" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream()" target="org.apache.commons.io.IOUtils.buffer(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46599-46625;1271-1271;17-43/46599-46625;1271-1271;17-43];</data>
    </edge>
    <edge id="e3442" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize()" target="org.apache.commons.io.IOUtilsTestCase$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46959-46999;1283-1283;17-57];</data>
    </edge>
    <edge id="e3443" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46959-46999;1283-1283;17-57/46959-46999;1283-1283;17-57];</data>
    </edge>
    <edge id="e3444" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[46959-46999;1283-1283;17-57];</data>
    </edge>
    <edge id="e3445" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()" target="org.apache.commons.io.IOUtils.buffer(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45794-45813;1244-1244;17-36];</data>
    </edge>
    <edge id="e3446" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()" target="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45794-45813;1244-1244;17-36];</data>
    </edge>
    <edge id="e3447" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()" target="org.apache.commons.io.IOUtils.buffer(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45794-45813;1244-1244;17-36];</data>
    </edge>
    <edge id="e3448" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull()" target="org.apache.commons.io.IOUtils.buffer(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45794-45813;1244-1244;17-36];</data>
    </edge>
    <edge id="e3449" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()" target="org.apache.commons.io.IOUtilsTestCase$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47391-47418;1296-1296;17-44];</data>
    </edge>
    <edge id="e3450" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream()" target="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47391-47418;1296-1296;17-44/47391-47418;1296-1296;17-44];</data>
    </edge>
    <edge id="e3451" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize()" target="org.apache.commons.io.IOUtilsTestCase$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47724-47765;1306-1306;17-58];</data>
    </edge>
    <edge id="e3452" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47724-47765;1306-1306;17-58/47724-47765;1306-1306;17-58];</data>
    </edge>
    <edge id="e3453" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[47724-47765;1306-1306;17-58];</data>
    </edge>
    <edge id="e3454" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()" target="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48129-48150;1317-1317;17-38];</data>
    </edge>
    <edge id="e3455" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader()" target="org.apache.commons.io.IOUtils.buffer(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48129-48150;1317-1317;17-38/48129-48150;1317-1317;17-38];</data>
    </edge>
    <edge id="e3456" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize()" target="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48575-48610;1331-1331;17-52];</data>
    </edge>
    <edge id="e3457" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.Reader,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48575-48610;1331-1331;17-52/48575-48610;1331-1331;17-52];</data>
    </edge>
    <edge id="e3458" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[48575-48610;1331-1331;17-52];</data>
    </edge>
    <edge id="e3459" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()" target="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49084-49105;1346-1346;17-38];</data>
    </edge>
    <edge id="e3460" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter()" target="org.apache.commons.io.IOUtils.buffer(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49084-49105;1346-1346;17-38/49084-49105;1346-1346;17-38];</data>
    </edge>
    <edge id="e3461" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize()" target="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49656-49691;1365-1365;17-52];</data>
    </edge>
    <edge id="e3462" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.Writer,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49656-49691;1365-1365;17-52/49656-49691;1365-1365;17-52];</data>
    </edge>
    <edge id="e3463" source="org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize()" target="org.apache.commons.io.IOUtils.buffer(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[49656-49691;1365-1365;17-52];</data>
    </edge>
    <edge id="e3464" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_AllCloseableIOException()" target="org.apache.commons.io.IOUtilsTestCase$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4489-4530;127-127;17-58];</data>
    </edge>
    <edge id="e3465" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_AllCloseableIOException()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4489-4530;127-127;17-58];</data>
    </edge>
    <edge id="e3466" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_CloseableIOException()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4788-4826;136-136;17-55];</data>
    </edge>
    <edge id="e3467" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_CloseableIOException()" target="org.apache.commons.io.IOUtilsTestCase$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[4788-4826;136-136;17-55];</data>
    </edge>
    <edge id="e3468" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Selector()" target="org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5020-5046;144-144;17-43];</data>
    </edge>
    <edge id="e3469" source="org.apache.commons.io.IOUtilsTestCase$3()" target="org.apache.commons.io.SelectorAdapter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5354-5370;155-155;39-55];</data>
    </edge>
    <edge id="e3470" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorIOException()" target="org.apache.commons.io.IOUtilsTestCase$3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5275-5312;154-154;17-54];</data>
    </edge>
    <edge id="e3471" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorIOException()" target="org.apache.commons.io.SelectorAdapter()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5275-5312;154-154;17-54];</data>
    </edge>
    <edge id="e3472" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorIOException()" target="org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5275-5312;154-154;17-54];</data>
    </edge>
    <edge id="e3473" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorNull()" target="org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5578-5608;164-164;17-47];</data>
    </edge>
    <edge id="e3474" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorTwice()" target="org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[5715-5746;169-169;17-48/5715-5746;169-169;17-48];</data>
    </edge>
    <edge id="e3475" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocket()" target="org.apache.commons.io.IOUtils.closeQuietly(java.net.ServerSocket)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6019-6068;180-180;17-66/6019-6068;180-180;17-66];</data>
    </edge>
    <edge id="e3476" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocketIOException()" target="org.apache.commons.io.IOUtils.closeQuietly(java.net.ServerSocket)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6196-6256;185-185;17-77];</data>
    </edge>
    <edge id="e3477" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocketIOException()" target="org.apache.commons.io.IOUtilsTestCase$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6196-6256;185-185;17-77];</data>
    </edge>
    <edge id="e3478" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Socket()" target="org.apache.commons.io.IOUtils.closeQuietly(java.net.Socket)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6475-6499;194-194;17-41/6475-6499;194-194;17-41];</data>
    </edge>
    <edge id="e3479" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SocketIOException()" target="org.apache.commons.io.IOUtils.closeQuietly(java.net.Socket)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6615-6650;199-199;17-52];</data>
    </edge>
    <edge id="e3480" source="org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SocketIOException()" target="org.apache.commons.io.IOUtilsTestCase$5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[6615-6650;199-199;17-52];</data>
    </edge>
    <edge id="e3481" source="org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL()" target="org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[9751-9795;260-260;17-61/9751-9795;260-260;17-61/9751-9795;260-260;17-61/9751-9795;260-260;17-61/9751-9795;260-260;17-61/9751-9795;260-260;17-61/9751-9795;260-260;17-61];</data>
    </edge>
    <edge id="e3482" source="org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream()" target="org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[7505-7564;223-223;17-76/7505-7564;223-223;17-76/7505-7564;223-223;17-76/7505-7564;223-223;17-76/7505-7564;223-223;17-76/7505-7564;223-223;17-76/7505-7564;223-223;17-76];</data>
    </edge>
    <edge id="e3483" source="org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader()" target="org.apache.commons.io.IOUtils.contentEquals(java.io.Reader,java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[8885-8934;244-244;17-66/8885-8934;244-244;17-66/8885-8934;244-244;17-66/8885-8934;244-244;17-66/8885-8934;244-244;17-66/8885-8934;244-244;17-66/8885-8934;244-244;17-66];</data>
    </edge>
    <edge id="e3484" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[13458-13507;372-372;17-66];</data>
    </edge>
    <edge id="e3485" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[13458-13507;372-372;17-66];</data>
    </edge>
    <edge id="e3486" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[13458-13507;372-372;17-66];</data>
    </edge>
    <edge id="e3487" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[14329-14377;398-398;17-65];</data>
    </edge>
    <edge id="e3488" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[14329-14377;398-398;17-65];</data>
    </edge>
    <edge id="e3489" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[14329-14377;398-398;17-65];</data>
    </edge>
    <edge id="e3490" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15146-15190;423-423;17-61];</data>
    </edge>
    <edge id="e3491" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15146-15190;423-423;17-61];</data>
    </edge>
    <edge id="e3492" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15146-15190;423-423;17-61];</data>
    </edge>
    <edge id="e3493" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15960-16002;448-448;17-59];</data>
    </edge>
    <edge id="e3494" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15960-16002;448-448;17-59];</data>
    </edge>
    <edge id="e3495" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[15960-16002;448-448;17-59];</data>
    </edge>
    <edge id="e3496" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.Reader,java.io.Writer,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[16774-16823;473-473;17-66];</data>
    </edge>
    <edge id="e3497" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[16774-16823;473-473;17-66];</data>
    </edge>
    <edge id="e3498" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[16774-16823;473-473;17-66];</data>
    </edge>
    <edge id="e3499" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[17338-17383;491-491;17-62];</data>
    </edge>
    <edge id="e3500" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[17338-17383;491-491;17-62];</data>
    </edge>
    <edge id="e3501" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[17338-17383;491-491;17-62];</data>
    </edge>
    <edge id="e3502" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[18220-18264;517-517;17-61];</data>
    </edge>
    <edge id="e3503" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[18220-18264;517-517;17-61];</data>
    </edge>
    <edge id="e3504" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[18220-18264;517-517;17-61];</data>
    </edge>
    <edge id="e3505" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19048-19088;542-542;17-57];</data>
    </edge>
    <edge id="e3506" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19048-19088;542-542;17-57];</data>
    </edge>
    <edge id="e3507" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19048-19088;542-542;17-57];</data>
    </edge>
    <edge id="e3508" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19873-19911;567-567;17-55];</data>
    </edge>
    <edge id="e3509" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19873-19911;567-567;17-55];</data>
    </edge>
    <edge id="e3510" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[19873-19911;567-567;17-55];</data>
    </edge>
    <edge id="e3511" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid()" target="org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream,long,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[20698-20743;592-592;17-62];</data>
    </edge>
    <edge id="e3512" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[20698-20743;592-592;17-62];</data>
    </edge>
    <edge id="e3513" source="org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[20698-20743;592-592;17-62];</data>
    </edge>
    <edge id="e3514" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3515" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3516" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.CopyUtils.copy(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3517" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3518" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3519" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11125-11174;296-296;17-66];</data>
    </edge>
    <edge id="e3520" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3521" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3522" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.CopyUtils.copy(byte[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3523" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3524" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3525" source="org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[11946-11989;323-323;17-60];</data>
    </edge>
    <edge id="e3526" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3527" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3528" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3529" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3530" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3531" source="org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[12747-12787;348-348;17-57];</data>
    </edge>
    <edge id="e3532" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray()" target="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22134-22187;630-630;17-70/22134-22187;630-630;17-70/22134-22187;630-630;17-70/22134-22187;630-630;17-70];</data>
    </edge>
    <edge id="e3533" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22134-22187;630-630;17-70];</data>
    </edge>
    <edge id="e3534" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_Offset()" target="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,byte[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23324-23374;665-665;17-67];</data>
    </edge>
    <edge id="e3535" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_Offset()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23324-23374;665-665;17-67];</data>
    </edge>
    <edge id="e3536" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray()" target="org.apache.commons.io.IOUtils.readFully(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22946-23006;654-654;17-77];</data>
    </edge>
    <edge id="e3537" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22946-23006;654-654;17-77];</data>
    </edge>
    <edge id="e3538" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray()" target="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[22946-23006;654-654;17-77];</data>
    </edge>
    <edge id="e3539" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23769-23820;674-674;17-68/23769-23820;674-674;17-68/23769-23820;674-674;17-68/23769-23820;674-674;17-68];</data>
    </edge>
    <edge id="e3540" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[23769-23820;674-674;17-68];</data>
    </edge>
    <edge id="e3541" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader()" target="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[24857-24895;700-700;17-55/24857-24895;700-700;17-55/24857-24895;700-700;17-55/24857-24895;700-700;17-55];</data>
    </edge>
    <edge id="e3542" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[24857-24895;700-700;17-55];</data>
    </edge>
    <edge id="e3543" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset()" target="org.apache.commons.io.IOUtils.readFully(java.io.Reader,char[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[25644-25689;723-723;17-62];</data>
    </edge>
    <edge id="e3544" source="org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[25644-25689;723-723;17-62];</data>
    </edge>
    <edge id="e3545" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
    </edge>
    <edge id="e3546" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
    </edge>
    <edge id="e3547" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()" target="org.apache.commons.io.IOUtils.readLines(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
    </edge>
    <edge id="e3548" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
    </edge>
    <edge id="e3549" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26056-26099;732-732;17-60];</data>
    </edge>
    <edge id="e3550" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
    </edge>
    <edge id="e3551" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
    </edge>
    <edge id="e3552" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()" target="org.apache.commons.io.IOUtils.readLines(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
    </edge>
    <edge id="e3553" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
    </edge>
    <edge id="e3554" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[26661-26711;749-749;17-67];</data>
    </edge>
    <edge id="e3555" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
    </edge>
    <edge id="e3556" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()" target="org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
    </edge>
    <edge id="e3557" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()" target="org.apache.commons.io.IOUtils.readLines(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
    </edge>
    <edge id="e3558" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
    </edge>
    <edge id="e3559" source="org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27283-27321;766-766;17-55];</data>
    </edge>
    <edge id="e3560" source="org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[21280-21326;610-610;17-63/21280-21326;610-610;17-63];</data>
    </edge>
    <edge id="e3561" source="org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[21280-21326;610-610;17-63];</data>
    </edge>
    <edge id="e3562" source="org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[21280-21326;610-610;17-63];</data>
    </edge>
    <edge id="e3563" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream()" target="org.apache.commons.io.IOUtils.skipFully(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29185-29228;817-817;17-60/29185-29228;817-817;17-60/29185-29228;817-817;17-60/29185-29228;817-817;17-60];</data>
    </edge>
    <edge id="e3564" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29185-29228;817-817;17-60];</data>
    </edge>
    <edge id="e3565" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.skipFully(java.nio.channels.ReadableByteChannel,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29895-29946;839-839;17-68/29895-29946;839-839;17-68/29895-29946;839-839;17-68/29895-29946;839-839;17-68];</data>
    </edge>
    <edge id="e3566" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[29895-29946;839-839;17-68];</data>
    </edge>
    <edge id="e3567" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader()" target="org.apache.commons.io.IOUtils.skipFully(java.io.Reader,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[30811-30849;862-862;17-55/30811-30849;862-862;17-55/30811-30849;862-862;17-55/30811-30849;862-862;17-55];</data>
    </edge>
    <edge id="e3568" source="org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[30811-30849;862-862;17-55];</data>
    </edge>
    <edge id="e3569" source="org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader()" target="org.apache.commons.io.IOUtils.skip(java.io.Reader,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[27902-27939;783-783;17-54/27902-27939;783-783;17-54/27902-27939;783-783;17-54];</data>
    </edge>
    <edge id="e3570" source="org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream()" target="org.apache.commons.io.IOUtils.skip(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[28271-28309;794-794;17-55/28271-28309;794-794;17-55/28271-28309;794-794;17-55];</data>
    </edge>
    <edge id="e3571" source="org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.skip(java.nio.channels.ReadableByteChannel,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[28647-28693;805-805;17-63/28647-28693;805-805;17-63/28647-28693;805-805;17-63];</data>
    </edge>
    <edge id="e3572" source="org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[28647-28693;805-805;17-63];</data>
    </edge>
    <edge id="e3573" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3574" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3575" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.CopyUtils.copy(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3576" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3577" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3578" source="org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[31575-31617;885-885;17-59];</data>
    </edge>
    <edge id="e3579" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream()" target="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33199-33268;928-928;17-86];</data>
    </edge>
    <edge id="e3580" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33199-33268;928-928;17-86];</data>
    </edge>
    <edge id="e3581" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33199-33268;928-928;17-86];</data>
    </edge>
    <edge id="e3582" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream()" target="org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[32628-32683;914-914;17-72];</data>
    </edge>
    <edge id="e3583" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[32628-32683;914-914;17-72];</data>
    </edge>
    <edge id="e3584" source="org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[32628-32683;914-914;17-72];</data>
    </edge>
    <edge id="e3585" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33790-33835;942-942;17-62];</data>
    </edge>
    <edge id="e3586" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[33790-33835;942-942;17-62];</data>
    </edge>
    <edge id="e3587" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_NegativeSize()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[34281-34339;955-955;17-75];</data>
    </edge>
    <edge id="e3588" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[34860-34910;970-970;17-67];</data>
    </edge>
    <edge id="e3589" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(byte[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[34860-34910;970-970;17-67];</data>
    </edge>
    <edge id="e3590" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[35422-35479;983-983;17-74];</data>
    </edge>
    <edge id="e3591" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeLong()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[35960-36014;998-998;17-71];</data>
    </edge>
    <edge id="e3592" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[36560-36614;1013-1013;17-71];</data>
    </edge>
    <edge id="e3593" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37038-37080;1026-1026;17-59];</data>
    </edge>
    <edge id="e3594" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.Reader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37038-37080;1026-1026;17-59];</data>
    </edge>
    <edge id="e3595" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_String()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37615-37655;1037-1037;17-57];</data>
    </edge>
    <edge id="e3596" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_String()" target="org.apache.commons.io.IOUtils.toByteArray(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37615-37655;1037-1037;17-57];</data>
    </edge>
    <edge id="e3597" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_String()" target="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[37615-37655;1037-1037;17-57];</data>
    </edge>
    <edge id="e3598" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URI()" target="org.apache.commons.io.IOUtils.toByteArray(java.net.URI)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38066-38103;1050-1050;17-54];</data>
    </edge>
    <edge id="e3599" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URL()" target="org.apache.commons.io.IOUtils.toByteArray(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38285-38322;1056-1056;17-54];</data>
    </edge>
    <edge id="e3600" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection()" target="org.apache.commons.io.IOUtils.toByteArray(java.net.URLConnection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38512-38559;1062-1062;17-64];</data>
    </edge>
    <edge id="e3601" source="org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection()" target="org.apache.commons.io.IOUtils.close(java.net.URLConnection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38512-38559;1062-1062;17-64];</data>
    </edge>
    <edge id="e3602" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream()" target="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38957-39002;1074-1074;17-62];</data>
    </edge>
    <edge id="e3603" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(char[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[38957-39002;1074-1074;17-62];</data>
    </edge>
    <edge id="e3604" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName()" target="org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39448-39505;1087-1087;17-74];</data>
    </edge>
    <edge id="e3605" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(char[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39448-39505;1087-1087;17-74];</data>
    </edge>
    <edge id="e3606" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader()" target="org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39960-40000;1100-1100;17-57];</data>
    </edge>
    <edge id="e3607" source="org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader()" target="org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(char[],java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[39960-40000;1100-1100;17-57];</data>
    </edge>
    <edge id="e3608" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[40818-40866;1121-1121;17-65];</data>
    </edge>
    <edge id="e3609" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[40818-40866;1121-1121;17-65/40818-40866;1121-1121;17-65/40818-40866;1121-1121;17-65];</data>
    </edge>
    <edge id="e3610" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()" target="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[40818-40866;1121-1121;17-65/40818-40866;1121-1121;17-65/40818-40866;1121-1121;17-65];</data>
    </edge>
    <edge id="e3611" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence()" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[40818-40866;1121-1121;17-65/40818-40866;1121-1121;17-65];</data>
    </edge>
    <edge id="e3612" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42032-42074;1146-1146;17-59];</data>
    </edge>
    <edge id="e3613" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42032-42074;1146-1146;17-59/42032-42074;1146-1146;17-59/42032-42074;1146-1146;17-59];</data>
    </edge>
    <edge id="e3614" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()" target="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42032-42074;1146-1146;17-59/42032-42074;1146-1146;17-59/42032-42074;1146-1146;17-59];</data>
    </edge>
    <edge id="e3615" source="org.apache.commons.io.IOUtilsTestCase.testToInputStream_String()" target="org.apache.commons.io.IOUtils.toInputStream(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42032-42074;1146-1146;17-59/42032-42074;1146-1146;17-59];</data>
    </edge>
    <edge id="e3616" source="org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray()" target="org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42780-42820;1162-1162;17-57];</data>
    </edge>
    <edge id="e3617" source="org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray()" target="org.apache.commons.io.IOUtils.toString(byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42780-42820;1162-1162;17-57];</data>
    </edge>
    <edge id="e3618" source="org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray()" target="org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[42780-42820;1162-1162;17-57];</data>
    </edge>
    <edge id="e3619" source="org.apache.commons.io.IOUtilsTestCase.testToString_InputStream()" target="org.apache.commons.io.IOUtils.toString(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[43324-43366;1175-1175;17-59];</data>
    </edge>
    <edge id="e3620" source="org.apache.commons.io.IOUtilsTestCase.testToString_Reader()" target="org.apache.commons.io.IOUtils.toString(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[43762-43799;1187-1187;17-54];</data>
    </edge>
    <edge id="e3621" source="org.apache.commons.io.IOUtilsTestCase.testToString_URI()" target="org.apache.commons.io.IOUtils.toString(java.net.URI)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44191-44225;1199-1199;17-51];</data>
    </edge>
    <edge id="e3622" source="org.apache.commons.io.IOUtilsTestCase.testToString_URI(java.lang.String)" target="org.apache.commons.io.IOUtils.toString(java.net.URI,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44443-44498;1206-1206;18-73];</data>
    </edge>
    <edge id="e3623" source="org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetName()" target="org.apache.commons.io.IOUtilsTestCase.testToString_URI(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44725-44771;1213-1213;17-63];</data>
    </edge>
    <edge id="e3624" source="org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull()" target="org.apache.commons.io.IOUtilsTestCase.testToString_URI(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[44836-44886;1217-1217;17-67];</data>
    </edge>
    <edge id="e3625" source="org.apache.commons.io.IOUtilsTestCase.testToString_URL()" target="org.apache.commons.io.IOUtils.toString(java.net.URL)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45024-45058;1222-1222;17-51];</data>
    </edge>
    <edge id="e3626" source="org.apache.commons.io.IOUtilsTestCase.testToString_URL(java.lang.String)" target="org.apache.commons.io.IOUtils.toString(java.net.URL,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45284-45339;1229-1229;18-73];</data>
    </edge>
    <edge id="e3627" source="org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetName()" target="org.apache.commons.io.IOUtilsTestCase.testToString_URL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45574-45620;1236-1236;17-63];</data>
    </edge>
    <edge id="e3628" source="org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull()" target="org.apache.commons.io.IOUtilsTestCase.testToString_URL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsTestCase.java;[45685-45735;1240-1240;17-67];</data>
    </edge>
    <edge id="e3629" source="org.apache.commons.io.IOUtilsWriteTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[1578-1620;43-43;12-54];</data>
    </edge>
    <edge id="e3630" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3631" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3632" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3633" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3634" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3635" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21961-22006;541-541;17-62];</data>
    </edge>
    <edge id="e3636" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3637" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3638" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3639" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3640" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3641" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24156-24210;596-596;17-71];</data>
    </edge>
    <edge id="e3642" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3643" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3644" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3645" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3646" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3647" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[24874-24937;614-614;17-80];</data>
    </edge>
    <edge id="e3648" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3649" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3650" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3651" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3652" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3653" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26373-26440;650-650;17-84];</data>
    </edge>
    <edge id="e3654" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3655" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3656" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3657" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3658" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3659" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[25309-25377;625-625;17-85];</data>
    </edge>
    <edge id="e3660" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[26002-26067;641-641;17-82];</data>
    </edge>
    <edge id="e3661" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3662" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3663" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3664" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3665" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3666" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[22642-22696;559-559;17-71];</data>
    </edge>
    <edge id="e3667" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3668" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3669" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3670" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3671" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3672" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23056-23115;570-570;17-76];</data>
    </edge>
    <edge id="e3673" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[23728-23784;586-586;17-73];</data>
    </edge>
    <edge id="e3674" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
    </edge>
    <edge id="e3675" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
    </edge>
    <edge id="e3676" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
    </edge>
    <edge id="e3677" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
    </edge>
    <edge id="e3678" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27169-27208;669-669;17-56];</data>
    </edge>
    <edge id="e3679" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
    </edge>
    <edge id="e3680" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
    </edge>
    <edge id="e3681" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
    </edge>
    <edge id="e3682" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
    </edge>
    <edge id="e3683" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[27987-28035;689-689;17-65];</data>
    </edge>
    <edge id="e3684" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
    </edge>
    <edge id="e3685" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
    </edge>
    <edge id="e3686" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
    </edge>
    <edge id="e3687" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
    </edge>
    <edge id="e3688" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()" target="org.apache.commons.io.output.ByteArrayOutputStream.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[28538-28591;702-702;17-70];</data>
    </edge>
    <edge id="e3689" source="org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()" target="org.apache.commons.io.IOUtils.writeLines(java.util.Collection,java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[29347-29397;720-720;17-67];</data>
    </edge>
    <edge id="e3690" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3691" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3692" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3693" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3694" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3695" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3696" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2197-2248;64-64;17-68];</data>
    </edge>
    <edge id="e3697" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3698" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3699" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3700" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3701" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3702" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[2684-2744;76-76;17-77];</data>
    </edge>
    <edge id="e3703" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3092-3154;87-87;17-79];</data>
    </edge>
    <edge id="e3704" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3705" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3706" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3707" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3708" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3709" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[3400-3445;95-95;17-62];</data>
    </edge>
    <edge id="e3710" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
    </edge>
    <edge id="e3711" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
    </edge>
    <edge id="e3712" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
    </edge>
    <edge id="e3713" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
    </edge>
    <edge id="e3714" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4867-4921;130-130;17-71];</data>
    </edge>
    <edge id="e3715" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
    </edge>
    <edge id="e3716" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
    </edge>
    <edge id="e3717" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
    </edge>
    <edge id="e3718" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
    </edge>
    <edge id="e3719" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[5536-5599;145-145;17-80];</data>
    </edge>
    <edge id="e3720" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3721" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3722" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3723" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3724" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3725" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6334-6401;165-165;17-84];</data>
    </edge>
    <edge id="e3726" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[6099-6164;158-158;17-82];</data>
    </edge>
    <edge id="e3727" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
    </edge>
    <edge id="e3728" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
    </edge>
    <edge id="e3729" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
    </edge>
    <edge id="e3730" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
    </edge>
    <edge id="e3731" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4025-4079;109-109;17-71];</data>
    </edge>
    <edge id="e3732" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()" target="org.apache.commons.io.IOUtils.write(byte[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[4571-4627;122-122;17-73];</data>
    </edge>
    <edge id="e3733" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3734" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3735" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3736" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3737" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3738" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3739" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16997-17048;420-420;17-68];</data>
    </edge>
    <edge id="e3740" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3741" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3742" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3743" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3744" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3745" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18341-18401;454-454;17-77];</data>
    </edge>
    <edge id="e3746" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3747" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3748" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3749" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3750" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3751" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[18945-19014;469-469;17-86];</data>
    </edge>
    <edge id="e3752" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19362-19433;480-480;17-88];</data>
    </edge>
    <edge id="e3753" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3754" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3755" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3756" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3757" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3758" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17555-17615;434-434;17-77];</data>
    </edge>
    <edge id="e3759" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3760" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3761" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3762" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3763" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3764" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3765" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[19671-19735;488-488;17-81];</data>
    </edge>
    <edge id="e3766" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()" target="org.apache.commons.io.IOUtils.write(char[],java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[17963-18025;445-445;17-79];</data>
    </edge>
    <edge id="e3767" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3768" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3769" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.IOUtils.write(char[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3770" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3771" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3772" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[20335-20380;503-503;17-62];</data>
    </edge>
    <edge id="e3773" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
    </edge>
    <edge id="e3774" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
    </edge>
    <edge id="e3775" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(char[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
    </edge>
    <edge id="e3776" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
    </edge>
    <edge id="e3777" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21031-21094;519-519;17-80];</data>
    </edge>
    <edge id="e3778" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(char[],java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[21586-21651;532-532;17-82];</data>
    </edge>
    <edge id="e3779" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3780" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3781" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3782" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3783" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3784" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3785" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7073-7127;179-179;17-71];</data>
    </edge>
    <edge id="e3786" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3787" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3788" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3789" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3790" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3791" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8454-8517;213-213;17-80];</data>
    </edge>
    <edge id="e3792" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3793" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3794" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3795" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3796" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3797" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9072-9144;228-228;17-89];</data>
    </edge>
    <edge id="e3798" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9498-9572;239-239;17-91];</data>
    </edge>
    <edge id="e3799" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3800" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3801" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3802" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3803" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3804" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[7645-7708;193-193;17-80];</data>
    </edge>
    <edge id="e3805" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3806" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3807" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3808" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3809" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3810" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3811" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[9821-9888;247-247;17-84];</data>
    </edge>
    <edge id="e3812" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[8062-8127;204-204;17-82];</data>
    </edge>
    <edge id="e3813" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3814" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3815" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3816" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3817" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3818" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[10499-10547;262-262;17-65];</data>
    </edge>
    <edge id="e3819" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
    </edge>
    <edge id="e3820" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
    </edge>
    <edge id="e3821" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
    </edge>
    <edge id="e3822" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
    </edge>
    <edge id="e3823" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11209-11275;278-278;17-83];</data>
    </edge>
    <edge id="e3824" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.CharSequence,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[11773-11841;291-291;17-85];</data>
    </edge>
    <edge id="e3825" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3826" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3827" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3828" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3829" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3830" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3831" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12161-12209;299-299;17-65];</data>
    </edge>
    <edge id="e3832" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3833" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3834" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3835" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3836" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3837" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13468-13525;333-333;17-74];</data>
    </edge>
    <edge id="e3838" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3839" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3840" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3841" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3842" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3843" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14055-14121;348-348;17-83];</data>
    </edge>
    <edge id="e3844" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14469-14537;359-359;17-85];</data>
    </edge>
    <edge id="e3845" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3846" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3847" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3848" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3849" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3850" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[12702-12759;313-313;17-74];</data>
    </edge>
    <edge id="e3851" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3852" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3853" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3854" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3855" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3856" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3857" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[14761-14822;367-367;17-78];</data>
    </edge>
    <edge id="e3858" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[13107-13166;324-324;17-76];</data>
    </edge>
    <edge id="e3859" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3860" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3861" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3862" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3863" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3864" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()" target="org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[15408-15450;382-382;17-59];</data>
    </edge>
    <edge id="e3865" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
    </edge>
    <edge id="e3866" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream(java.io.OutputStream,boolean,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
    </edge>
    <edge id="e3867" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
    </edge>
    <edge id="e3868" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()" target="org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
    </edge>
    <edge id="e3869" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()" target="org.apache.commons.io.output.ByteArrayOutputStream.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16087-16147;398-398;17-77];</data>
    </edge>
    <edge id="e3870" source="org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()" target="org.apache.commons.io.IOUtils.write(java.lang.String,java.io.Writer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java;[16639-16701;411-411;17-79];</data>
    </edge>
    <edge id="e3871" source="org.apache.commons.io.LineIterator.hasNext()" target="org.apache.commons.io.LineIterator.isValidLine(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[3205-3213;87-87;20-28];</data>
    </edge>
    <edge id="e3872" source="org.apache.commons.io.LineIterator.hasNext()" target="org.apache.commons.io.LineIterator.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[3205-3213;87-87;20-28];</data>
    </edge>
    <edge id="e3873" source="org.apache.commons.io.LineIterator.next()" target="org.apache.commons.io.LineIterator.nextLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[4460-4465;127-127;19-24];</data>
    </edge>
    <edge id="e3874" source="org.apache.commons.io.LineIterator.nextLine()" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[4721-4730;137-137;19-28];</data>
    </edge>
    <edge id="e3875" source="org.apache.commons.io.LineIterator.close()" target="org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[5273-5279;153-153;17-23];</data>
    </edge>
    <edge id="e3876" source="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)" target="org.apache.commons.io.LineIterator.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/LineIterator.java;[5841-5881;174-174;24-64];</data>
    </edge>
    <edge id="e3877" source="org.apache.commons.io.LineIteratorTestCase(java.lang.String)" target="org.apache.commons.io.testtools.FileBasedTestCase(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1530-1568;43-43;12-50];</data>
    </edge>
    <edge id="e3878" source="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,int)" target="org.apache.commons.io.LineIteratorTestCase.createStringLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2296-2367;67-67;26-97];</data>
    </edge>
    <edge id="e3879" source="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,int)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2296-2367;67-67;26-97];</data>
    </edge>
    <edge id="e3880" source="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)" target="org.apache.commons.io.LineIteratorTestCase.createStringLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2822-2916;82-82;26-120];</data>
    </edge>
    <edge id="e3881" source="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)" target="org.apache.commons.io.FileUtils.writeLines(java.io.File,java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[2822-2916;82-82;26-120];</data>
    </edge>
    <edge id="e3882" source="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)" target="org.apache.commons.io.LineIterator.nextLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1617-1682;47-47;18-83];</data>
    </edge>
    <edge id="e3883" source="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1617-1682;47-47;18-83];</data>
    </edge>
    <edge id="e3884" source="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[1617-1682;47-47;18-83];</data>
    </edge>
    <edge id="e3885" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3886" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3887" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3888" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIterator.remove()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3889" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3890" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIterator.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85/10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3891" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIterator.nextLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3892" source="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[10409-10476;325-325;18-85];</data>
    </edge>
    <edge id="e3893" source="org.apache.commons.io.LineIteratorTestCase.setUp()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3499-3522;104-104;20-43];</data>
    </edge>
    <edge id="e3894" source="org.apache.commons.io.LineIteratorTestCase.setUp()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3499-3522;104-104;20-43];</data>
    </edge>
    <edge id="e3895" source="org.apache.commons.io.LineIteratorTestCase.tearDown()" target="org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3727-3753;115-115;20-46];</data>
    </edge>
    <edge id="e3896" source="org.apache.commons.io.LineIteratorTestCase.tearDown()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3727-3753;115-115;20-46];</data>
    </edge>
    <edge id="e3897" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3898" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3899" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3900" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIterator.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49/8722-8754;271-271;17-49/8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3901" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49/8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3902" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIterator.close()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49/8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3903" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIterator.nextLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49/8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3904" source="org.apache.commons.io.LineIteratorTestCase.testCloseEarly()" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8722-8754;271-271;17-49];</data>
    </edge>
    <edge id="e3905" source="org.apache.commons.io.LineIteratorTestCase.testConstructor()" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[3925-3958;122-122;17-50];</data>
    </edge>
    <edge id="e3906" source="org.apache.commons.io.LineIteratorTestCase$2(java.io.Reader)" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13148-13167;394-394;43-62];</data>
    </edge>
    <edge id="e3907" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIteratorTestCase$2(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3908" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3909" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator.remove()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3910" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3911" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77/13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3912" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator.nextLine()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3913" source="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[13043-13102;393-393;18-77];</data>
    </edge>
    <edge id="e3914" source="org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12599-12644;382-382;17-62];</data>
    </edge>
    <edge id="e3915" source="org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12599-12644;382-382;17-62];</data>
    </edge>
    <edge id="e3916" source="org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()" target="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12599-12644;382-382;17-62];</data>
    </edge>
    <edge id="e3917" source="org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12170-12211;370-370;17-58];</data>
    </edge>
    <edge id="e3918" source="org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12170-12211;370-370;17-58];</data>
    </edge>
    <edge id="e3919" source="org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()" target="org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List,java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[12170-12211;370-370;17-58];</data>
    </edge>
    <edge id="e3920" source="org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5722-5759;187-187;17-54];</data>
    </edge>
    <edge id="e3921" source="org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5722-5759;187-187;17-54];</data>
    </edge>
    <edge id="e3922" source="org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5722-5759;187-187;17-54];</data>
    </edge>
    <edge id="e3923" source="org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5722-5759;187-187;17-54];</data>
    </edge>
    <edge id="e3924" source="org.apache.commons.io.LineIteratorTestCase.testMissingFile()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4597-4630;152-152;17-50];</data>
    </edge>
    <edge id="e3925" source="org.apache.commons.io.LineIteratorTestCase.testMissingFile()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4597-4630;152-152;17-50];</data>
    </edge>
    <edge id="e3926" source="org.apache.commons.io.LineIteratorTestCase.testMissingFile()" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4597-4630;152-152;17-50];</data>
    </edge>
    <edge id="e3927" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6343-6392;205-205;17-66];</data>
    </edge>
    <edge id="e3928" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6343-6392;205-205;17-66];</data>
    </edge>
    <edge id="e3929" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6343-6392;205-205;17-66];</data>
    </edge>
    <edge id="e3930" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()" target="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6343-6392;205-205;17-66];</data>
    </edge>
    <edge id="e3931" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6694-6740;214-214;17-63];</data>
    </edge>
    <edge id="e3932" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6694-6740;214-214;17-63];</data>
    </edge>
    <edge id="e3933" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6694-6740;214-214;17-63];</data>
    </edge>
    <edge id="e3934" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()" target="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[6694-6740;214-214;17-63];</data>
    </edge>
    <edge id="e3935" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7101-7147;225-225;17-63];</data>
    </edge>
    <edge id="e3936" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7101-7147;225-225;17-63];</data>
    </edge>
    <edge id="e3937" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7101-7147;225-225;17-63];</data>
    </edge>
    <edge id="e3938" source="org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()" target="org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List,org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7101-7147;225-225;17-63];</data>
    </edge>
    <edge id="e3939" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3940" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3941" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3942" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.LineIterator.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3943" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3944" source="org.apache.commons.io.LineIteratorTestCase.testNextOnly()" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[7511-7541;236-236;17-47];</data>
    </edge>
    <edge id="e3945" source="org.apache.commons.io.LineIteratorTestCase.testNextWithException()" target="org.apache.commons.io.LineIteratorTestCase$1(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8220-8259;255-255;17-56];</data>
    </edge>
    <edge id="e3946" source="org.apache.commons.io.LineIteratorTestCase.testNextWithException()" target="org.apache.commons.io.LineIterator(java.io.Reader)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8220-8259;255-255;17-56];</data>
    </edge>
    <edge id="e3947" source="org.apache.commons.io.LineIteratorTestCase.testNextWithException()" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[8220-8259;255-255;17-56];</data>
    </edge>
    <edge id="e3948" source="org.apache.commons.io.LineIteratorTestCase.testOneLines()" target="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4271-4301;137-137;17-47];</data>
    </edge>
    <edge id="e3949" source="org.apache.commons.io.LineIteratorTestCase.testThreeLines()" target="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4487-4519;147-147;17-49];</data>
    </edge>
    <edge id="e3950" source="org.apache.commons.io.LineIteratorTestCase.testTwoLines()" target="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4379-4409;142-142;17-47];</data>
    </edge>
    <edge id="e3951" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3952" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3953" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.FileUtils.lineIterator(java.io.File,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3954" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.LineIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3955" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.LineIterator.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3956" source="org.apache.commons.io.LineIteratorTestCase.testValidEncoding()" target="org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[5099-5134;167-167;17-52];</data>
    </edge>
    <edge id="e3957" source="org.apache.commons.io.LineIteratorTestCase.testZeroLines()" target="org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/LineIteratorTestCase.java;[4162-4193;132-132;17-48];</data>
    </edge>
    <edge id="e3958" source="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)" target="org.apache.commons.io.IOExceptionWithCause(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[3977-4045;111-111;12-80];</data>
    </edge>
    <edge id="e3959" source="org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)" target="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[3485-3582;93-94;24-30];</data>
    </edge>
    <edge id="e3960" source="org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)" target="org.apache.commons.io.TaggedIOException.getCause()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java;[3485-3582;93-94;24-30];</data>
    </edge>
    <edge id="e3961" source="org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException()" target="org.apache.commons.io.TaggedIOException(java.io.IOException,java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java;[1078-1100;30-30;17-39];</data>
    </edge>
    <edge id="e3962" source="org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException()" target="org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java;[1078-1100;30-30;17-39/1078-1100;30-30;17-39];</data>
    </edge>
    <edge id="e3963" source="org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException()" target="org.apache.commons.io.TaggedIOException.getCause()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/TaggedIOExceptionTest.java;[1078-1100;30-30;17-39];</data>
    </edge>
    <edge id="e3964" source="org.apache.commons.io.ThreadMonitor.start(java.lang.Thread,long)" target="org.apache.commons.io.ThreadMonitor(java.lang.Thread,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[2447-2492;67-67;26-71];</data>
    </edge>
    <edge id="e3965" source="org.apache.commons.io.ThreadMonitor.start(long)" target="org.apache.commons.io.ThreadMonitor.start(java.lang.Thread,long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/ThreadMonitor.java;[1998-2022;54-54;26-50];</data>
    </edge>
    <edge id="e3966" source="org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout()" target="org.apache.commons.io.ThreadMonitor.start(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1502-1530;48-48;17-45];</data>
    </edge>
    <edge id="e3967" source="org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout()" target="org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1502-1530;48-48;17-45];</data>
    </edge>
    <edge id="e3968" source="org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout()" target="org.apache.commons.io.ThreadMonitor.start(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1834-1848;61-61;17-31/1834-1848;61-61;17-31];</data>
    </edge>
    <edge id="e3969" source="org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout()" target="org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1834-1848;61-61;17-31/1834-1848;61-61;17-31];</data>
    </edge>
    <edge id="e3970" source="org.apache.commons.io.ThreadMonitorTestCase.testTimeout()" target="org.apache.commons.io.ThreadMonitor.start(long)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1106-1118;34-34;17-29];</data>
    </edge>
    <edge id="e3971" source="org.apache.commons.io.ThreadMonitorTestCase.testTimeout()" target="org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/test/java/org/apache/commons/io/ThreadMonitorTestCase.java;[1106-1118;34-34;17-29];</data>
    </edge>
    <edge id="e3972" source="org.apache.commons.io.IOCase.checkIndexOf(java.lang.String,int,java.lang.String)" target="org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[7697-7772;215-215;16-91];</data>
    </edge>
    <edge id="e3973" source="org.apache.commons.io.IOCase.readResolve()" target="org.apache.commons.io.IOCase.forName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[3862-3874;109-109;20-32];</data>
    </edge>
    <edge id="e3974" source="org.apache.commons.io.IOCase.forName(java.lang.String)" target="org.apache.commons.io.IOCase.getName()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/tmp/dataset/commons-io/src/main/java/org/apache/commons/io/IOCase.java;[3042-3067;80-80;26-51];</data>
    </edge>
  </graph>
</graphml>
