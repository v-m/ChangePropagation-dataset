<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="UOI" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="445382">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="true" in="org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass()))))" to="(!((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))))" />
    <mutant id="mutant_565" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + 1)" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_567" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_568" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_3020" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) + 1)" />
    <mutant id="mutant_4351" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(!found) &amp;&amp; (j &lt; (Math.min((i + limit), second.length())))" to="!((!found) &amp;&amp; (j &lt; (Math.min((i + limit), second.length()))))" />
    <mutant id="mutant_4350" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="((i + limit) - 1)" />
    <mutant id="mutant_3017" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - 1)" />
    <mutant id="mutant_4348" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="((i + limit) + 1)" />
    <mutant id="mutant_3016" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) - 1)" />
    <mutant id="mutant_4347" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="((i - limit) + 1)" />
    <mutant id="mutant_3015" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) * -1)" />
    <mutant id="mutant_4346" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="((i - limit) - 1)" />
    <mutant id="mutant_3014" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) + 1)" />
    <mutant id="mutant_4345" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - limit)" to="((i - limit) * -1)" />
    <mutant id="mutant_3013" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) + 1)" />
    <mutant id="mutant_4344" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="(strs == null) || ((strs.length) == 0)" to="!((strs == null) || ((strs.length) == 0))" />
    <mutant id="mutant_3012" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * -1)" />
    <mutant id="mutant_4343" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) - 1)" />
    <mutant id="mutant_3011" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - 1)" />
    <mutant id="mutant_4342" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) + 1)" />
    <mutant id="mutant_3010" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4341" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) * -1)" />
    <mutant id="mutant_561" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) + 1)" />
    <mutant id="mutant_562" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) - 1)" />
    <mutant id="mutant_563" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) * -1)" />
    <mutant id="mutant_564" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) - 1)" />
    <mutant id="mutant_3019" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) + 1)" />
    <mutant id="mutant_560" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) * -1)" />
    <mutant id="mutant_3018" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * -1)" />
    <mutant id="mutant_4349" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i + limit)" to="((i + limit) * -1)" />
    <mutant id="mutant_576" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="((&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage())) + 1)" />
    <mutant id="mutant_577" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="((&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage())) * -1)" />
    <mutant id="mutant_578" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.setUpToClass(java.lang.Class)" from="(object != null) &amp;&amp; ((clazz.isInstance(object)) == false)" to="!((object != null) &amp;&amp; ((clazz.isInstance(object)) == false))" />
    <mutant id="mutant_579" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="(((FIELD_NAME_PREFIX) + fieldName) + 1)" />
    <mutant id="mutant_4340" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(last == (CharUtils.LF)) &amp;&amp; ((ret.charAt((lastIdx - 1))) == (CharUtils.CR))" to="!((last == (CharUtils.LF)) &amp;&amp; ((ret.charAt((lastIdx - 1))) == (CharUtils.CR)))" />
    <mutant id="mutant_3006" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) + 1" />
    <mutant id="mutant_4337" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) * -1)" />
    <mutant id="mutant_3005" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) * -1" />
    <mutant id="mutant_4336" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="(strLen - 1) - 1" />
    <mutant id="mutant_3004" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) - 1)" />
    <mutant id="mutant_4335" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="(strLen - 1) + 1" />
    <mutant id="mutant_3003" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) + 1)" />
    <mutant id="mutant_4334" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen - 1" to="(strLen - 1) * -1" />
    <mutant id="mutant_3002" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) * -1)" />
    <mutant id="mutant_4333" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) - 1)" />
    <mutant id="mutant_3001" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_4332" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) + 1)" />
    <mutant id="mutant_3000" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4331" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) * -1)" />
    <mutant id="mutant_4330" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) - 1" />
    <mutant id="mutant_572" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(Modifier.isStatic(field.getModifiers())) &amp;&amp; (!(isAppendStatics()))" to="!((Modifier.isStatic(field.getModifiers())) &amp;&amp; (!(isAppendStatics())))" />
    <mutant id="mutant_573" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="((this.excludeFieldNames) != null) &amp;&amp; ((Arrays.binarySearch(this.excludeFieldNames, field.getName())) &gt;= 0)" to="!(((this.excludeFieldNames) != null) &amp;&amp; ((Arrays.binarySearch(this.excludeFieldNames, field.getName())) &gt;= 0))" />
    <mutant id="mutant_574" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString()" from="((clazz.getSuperclass()) != null) &amp;&amp; (clazz != (getUpToClass()))" to="!(((clazz.getSuperclass()) != null) &amp;&amp; (clazz != (getUpToClass())))" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class)" from="(&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage()))" to="((&quot;Unexpected IllegalAccessException: &quot; + (ex.getMessage())) - 1)" />
    <mutant id="mutant_3009" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_570" viable="true" in="org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))) &amp;&amp; (accept(value.getClass()))" to="!(((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))) &amp;&amp; (accept(value.getClass())))" />
    <mutant id="mutant_3008" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4339" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) - 1)" />
    <mutant id="mutant_571" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(Modifier.isTransient(field.getModifiers())) &amp;&amp; (!(isAppendTransients()))" to="!((Modifier.isTransient(field.getModifiers())) &amp;&amp; (!(isAppendTransients())))" />
    <mutant id="mutant_3007" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) - 1" />
    <mutant id="mutant_4338" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="(lastIdx - 1)" to="((lastIdx - 1) + 1)" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="((&quot;\&quot;&quot; + value) * -1)" />
    <mutant id="mutant_588" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="(((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;) + 1)" />
    <mutant id="mutant_589" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="(((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;) - 1)" />
    <mutant id="mutant_4326" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) - 1)" />
    <mutant id="mutant_4325" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) + 1)" />
    <mutant id="mutant_1298" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) * -1)" />
    <mutant id="mutant_4324" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) * -1)" />
    <mutant id="mutant_1299" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) - 1)" />
    <mutant id="mutant_4323" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="((pads / 2) - 1)" />
    <mutant id="mutant_1296" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos &gt; offset) &amp;&amp; ((chars[(pos - 1)]) == escape)" to="!((pos &gt; offset) &amp;&amp; ((chars[(pos - 1)]) == escape))" />
    <mutant id="mutant_4322" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="((pads / 2) + 1)" />
    <mutant id="mutant_1297" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) + 1)" />
    <mutant id="mutant_4321" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(pads / 2)" to="((pads / 2) * -1)" />
    <mutant id="mutant_1294" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) * -1)" />
    <mutant id="mutant_4320" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) - 1" />
    <mutant id="mutant_1295" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) - 1)" />
    <mutant id="mutant_583" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="((((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX)) - 1)" />
    <mutant id="mutant_584" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="((((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX)) * -1)" />
    <mutant id="mutant_585" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="((&quot;\&quot;&quot; + value) - 1)" />
    <mutant id="mutant_586" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="(&quot;\&quot;&quot; + value)" to="((&quot;\&quot;&quot; + value) + 1)" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="(((FIELD_NAME_PREFIX) + fieldName) - 1)" />
    <mutant id="mutant_4329" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) * -1" />
    <mutant id="mutant_581" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="((FIELD_NAME_PREFIX) + fieldName)" to="(((FIELD_NAME_PREFIX) + fieldName) * -1)" />
    <mutant id="mutant_4328" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) + 1" />
    <mutant id="mutant_582" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX))" to="((((FIELD_NAME_PREFIX) + fieldName) + (FIELD_NAME_PREFIX)) + 1)" />
    <mutant id="mutant_4327" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(ch == (CharUtils.CR)) || (ch == (CharUtils.LF))" to="!((ch == (CharUtils.CR)) || (ch == (CharUtils.LF)))" />
    <mutant id="mutant_598" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer,java.lang.Object)" from="(useClassName) &amp;&amp; (object != null)" to="!((useClassName) &amp;&amp; (object != null))" />
    <mutant id="mutant_599" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer,java.lang.String)" from="(useFieldNames) &amp;&amp; (fieldName != null)" to="!((useFieldNames) &amp;&amp; (fieldName != null))" />
    <mutant id="mutant_1292" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="(offset + length) - 1" />
    <mutant id="mutant_1293" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - 1)" to="((pos - 1) + 1)" />
    <mutant id="mutant_1290" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="(offset + length) * -1" />
    <mutant id="mutant_1291" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset + length" to="(offset + length) + 1" />
    <mutant id="mutant_1289" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="((offset + length) - 1)" />
    <mutant id="mutant_4315" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) + 1)" />
    <mutant id="mutant_4314" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) * -1)" />
    <mutant id="mutant_1287" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="((offset + length) * -1)" />
    <mutant id="mutant_4313" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="((pads / 2) - 1)" />
    <mutant id="mutant_1288" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="(offset + length)" to="((offset + length) + 1)" />
    <mutant id="mutant_4312" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="((pads / 2) + 1)" />
    <mutant id="mutant_1285" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="((offset + length) + 1)" />
    <mutant id="mutant_4311" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(pads / 2)" to="((pads / 2) * -1)" />
    <mutant id="mutant_1286" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="((offset + length) - 1)" />
    <mutant id="mutant_4310" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="(size - strLen) - 1" />
    <mutant id="mutant_1283" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="(chars == null) || ((chars.length) == 0)" to="!((chars == null) || ((chars.length) == 0))" />
    <mutant id="mutant_1284" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="(offset + length)" to="((offset + length) * -1)" />
    <mutant id="mutant_594" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_595" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_596" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_597" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.isRegistered(java.lang.Object)" from="(m != null) &amp;&amp; (m.containsKey(value))" to="!((m != null) &amp;&amp; (m.containsKey(value)))" />
    <mutant id="mutant_590" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle.appendValueAsString(java.lang.StringBuffer,java.lang.String)" from="((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;)" to="(((&quot;\&quot;&quot; + value) + &quot;\&quot;&quot;) * -1)" />
    <mutant id="mutant_4319" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) * -1" />
    <mutant id="mutant_591" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;) * -1)" />
    <mutant id="mutant_4318" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) + 1" />
    <mutant id="mutant_592" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;) + 1)" />
    <mutant id="mutant_4317" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="(str == null) || (size &lt;= 0)" to="!((str == null) || (size &lt;= 0))" />
    <mutant id="mutant_593" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle()" from="((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;)" to="(((SystemUtils.LINE_SEPARATOR) + &quot;  &quot;) - 1)" />
    <mutant id="mutant_4316" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(strLen + (pads / 2))" to="((strLen + (pads / 2)) - 1)" />
    <mutant id="mutant_3064" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4395" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3063" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_4394" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3062" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4393" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3061" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) - 1" />
    <mutant id="mutant_4392" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3060" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) + 1" />
    <mutant id="mutant_4391" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_4390" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3059" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) * -1" />
    <mutant id="mutant_3058" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="((16 - srcPos) + 1)" />
    <mutant id="mutant_4389" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3057" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="((16 - srcPos) - 1)" />
    <mutant id="mutant_4388" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3056" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(16 - srcPos)" to="((16 - srcPos) * -1)" />
    <mutant id="mutant_4387" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3055" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_4386" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3054" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4385" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3053" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4384" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3052" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) - 1)" />
    <mutant id="mutant_4383" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3051" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) + 1)" />
    <mutant id="mutant_4382" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3050" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) * -1)" />
    <mutant id="mutant_4381" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_4380" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3049" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_3048" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4379" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3047" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4378" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3046" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4377" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3045" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_4376" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3044" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4375" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3043" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) - 1" />
    <mutant id="mutant_4374" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3042" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) + 1" />
    <mutant id="mutant_4373" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3041" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) * -1" />
    <mutant id="mutant_4372" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3040" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) - 1)" />
    <mutant id="mutant_4371" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_4370" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3039" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) + 1)" />
    <mutant id="mutant_3038" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) * -1)" />
    <mutant id="mutant_4369" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3037" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_4368" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3036" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4367" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3035" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4366" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3034" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4365" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3033" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_4364" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3032" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4363" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3031" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) - 1" />
    <mutant id="mutant_4362" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3030" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) + 1" />
    <mutant id="mutant_4361" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_4360" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3028" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) - 1)" />
    <mutant id="mutant_4359" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3027" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) + 1)" />
    <mutant id="mutant_4358" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3026" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="((nBools - 1) + srcPos)" to="(((nBools - 1) + srcPos) * -1)" />
    <mutant id="mutant_4357" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3025" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_4356" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3024" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4355" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3023" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4354" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_3022" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) - 1)" />
    <mutant id="mutant_4353" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_3021" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToBinary(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) * -1)" />
    <mutant id="mutant_4352" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_3029" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i + srcPos" to="(i + srcPos) * -1" />
    <mutant id="mutant_3099" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_3098" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_3097" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_3096" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3095" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_3094" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_3093" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) * -1" />
    <mutant id="mutant_3092" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) + 1" />
    <mutant id="mutant_3091" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) - 1" />
    <mutant id="mutant_3090" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_3089" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_3088" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_3087" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) * -1)" />
    <mutant id="mutant_3086" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) - 1)" />
    <mutant id="mutant_3085" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) + 1)" />
    <mutant id="mutant_3084" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) - 1)" />
    <mutant id="mutant_3083" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) * -1)" />
    <mutant id="mutant_3082" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) + 1)" />
    <mutant id="mutant_3081" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="((nHex - 1) - 1)" />
    <mutant id="mutant_3080" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="((nHex - 1) * -1)" />
    <mutant id="mutant_3079" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(nHex - 1)" to="((nHex - 1) + 1)" />
    <mutant id="mutant_3078" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3077" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_3076" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_3075" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="(i + dstPos) + 1" />
    <mutant id="mutant_3074" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="(i + dstPos) * -1" />
    <mutant id="mutant_3073" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i + dstPos" to="(i + dstPos) - 1" />
    <mutant id="mutant_3072" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) - 1)" />
    <mutant id="mutant_3071" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) + 1)" />
    <mutant id="mutant_3070" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) * -1)" />
    <mutant id="mutant_3069" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_3068" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4399" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_3067" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4398" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_3066" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools))" />
    <mutant id="mutant_4397" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_3065" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_4396" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_2608" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_2609" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3939" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) - 1)" />
    <mutant id="mutant_3930" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="((endExclusive - startInclusive) + 1)" />
    <mutant id="mutant_2606" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3938" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) * -1)" />
    <mutant id="mutant_2607" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3937" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) - 1)" />
    <mutant id="mutant_2604" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3936" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(&quot;Elements in a range must not be null: element1=&quot; + element1)" to="((&quot;Elements in a range must not be null: element1=&quot; + element1) + 1)" />
    <mutant id="mutant_2605" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3935" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(element1 == null) || (element2 == null)" to="!((element1 == null) || (element2 == null))" />
    <mutant id="mutant_2602" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3934" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="(startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))) * -1" />
    <mutant id="mutant_2603" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3933" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="(startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))) - 1" />
    <mutant id="mutant_2600" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3932" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="(startInclusive + (RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))) + 1" />
    <mutant id="mutant_2601" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3931" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="((endExclusive - startInclusive) - 1)" />
    <mutant id="mutant_3929" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(endExclusive - startInclusive)" to="((endExclusive - startInclusive) * -1)" />
    <mutant id="mutant_3928" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))) + 1" />
    <mutant id="mutant_3927" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))) * -1" />
    <mutant id="mutant_3926" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))) - 1" />
    <mutant id="mutant_3925" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat())) * -1)" />
    <mutant id="mutant_3924" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat())) + 1)" />
    <mutant id="mutant_3923" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextFloat())) - 1)" />
    <mutant id="mutant_3922" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) + 1)" />
    <mutant id="mutant_3921" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) * -1)" />
    <mutant id="mutant_3920" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) - 1)" />
    <mutant id="mutant_3919" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))) + 1" />
    <mutant id="mutant_3918" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))) * -1" />
    <mutant id="mutant_3917" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(startInclusive + ((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))) - 1" />
    <mutant id="mutant_3916" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble())) + 1)" />
    <mutant id="mutant_3915" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble())) - 1)" />
    <mutant id="mutant_3914" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble()))" to="(((endInclusive - startInclusive) * (RandomUtils.RANDOM.nextDouble())) * -1)" />
    <mutant id="mutant_3913" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) * -1)" />
    <mutant id="mutant_3912" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) + 1)" />
    <mutant id="mutant_3911" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(endInclusive - startInclusive)" to="((endInclusive - startInclusive) - 1)" />
    <mutant id="mutant_3910" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(ch &gt;= 56192) &amp;&amp; (ch &lt;= 56319)" to="!((ch &gt;= 56192) &amp;&amp; (ch &lt;= 56319))" />
    <mutant id="mutant_3909" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="((char)((56320 + (random.nextInt(128))))) + 1" />
    <mutant id="mutant_3908" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="((char)((56320 + (random.nextInt(128))))) - 1" />
    <mutant id="mutant_3907" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(56320 + (random.nextInt(128))))" to="((char)((56320 + (random.nextInt(128))))) * -1" />
    <mutant id="mutant_3906" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(ch &gt;= 55296) &amp;&amp; (ch &lt;= 56191)" to="!((ch &gt;= 55296) &amp;&amp; (ch &lt;= 56191))" />
    <mutant id="mutant_3905" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="((char)((55296 + (random.nextInt(128))))) * -1" />
    <mutant id="mutant_3904" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="((char)((55296 + (random.nextInt(128))))) - 1" />
    <mutant id="mutant_3903" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)(55296 + (random.nextInt(128))))" to="((char)((55296 + (random.nextInt(128))))) + 1" />
    <mutant id="mutant_3902" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(ch &gt;= 56320) &amp;&amp; (ch &lt;= 57343)" to="!((ch &gt;= 56320) &amp;&amp; (ch &lt;= 57343))" />
    <mutant id="mutant_3901" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((letters &amp;&amp; (Character.isLetter(ch))) || (numbers &amp;&amp; (Character.isDigit(ch)))) || ((!letters) &amp;&amp; (!numbers))" to="!(((letters &amp;&amp; (Character.isLetter(ch))) || (numbers &amp;&amp; (Character.isDigit(ch)))) || ((!letters) &amp;&amp; (!numbers)))" />
    <mutant id="mutant_3900" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((!letters) &amp;&amp; (!numbers))" to="(!((!letters) &amp;&amp; (!numbers)))" />
    <mutant id="mutant_1311" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="((i + valueDelimiterMatchLen) * -1)" />
    <mutant id="mutant_2642" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3974" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) * -1)" />
    <mutant id="mutant_1312" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="((i + valueDelimiterMatchLen) + 1)" />
    <mutant id="mutant_2643" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3973" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) - 1)" />
    <mutant id="mutant_2640" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3972" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) + 1)" />
    <mutant id="mutant_1310" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(!substitutionInVariablesEnabled) &amp;&amp; ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length)) != 0)" to="!((!substitutionInVariablesEnabled) &amp;&amp; ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length)) != 0))" />
    <mutant id="mutant_2641" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_3971" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR)) - 1)" />
    <mutant id="mutant_3970" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR)) * -1)" />
    <mutant id="mutant_1319" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="((endPos - startPos) + 1)" />
    <mutant id="mutant_1317" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="((endPos - startPos) * -1)" />
    <mutant id="mutant_2648" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1318" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(endPos - startPos)" to="((endPos - startPos) - 1)" />
    <mutant id="mutant_2649" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3979" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR)) * -1)" />
    <mutant id="mutant_1315" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="((change + varLen) - 1)" />
    <mutant id="mutant_2646" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3978" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) * -1)" />
    <mutant id="mutant_1316" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="((change + varLen) + 1)" />
    <mutant id="mutant_2647" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3977" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) - 1)" />
    <mutant id="mutant_1313" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(i + valueDelimiterMatchLen)" to="((i + valueDelimiterMatchLen) - 1)" />
    <mutant id="mutant_2644" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_3976" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - 1)" to="(((input.length()) - 1) + 1)" />
    <mutant id="mutant_1314" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen)" to="((change + varLen) * -1)" />
    <mutant id="mutant_2645" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_3975" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.charAt(0)) != (StringEscapeUtils.CsvUnescaper.CSV_QUOTE)) || ((input.charAt(((input.length()) - 1))) != (StringEscapeUtils.CsvUnescaper.CSV_QUOTE))" to="!(((input.charAt(0)) != (StringEscapeUtils.CsvUnescaper.CSV_QUOTE)) || ((input.charAt(((input.length()) - 1))) != (StringEscapeUtils.CsvUnescaper.CSV_QUOTE)))" />
    <mutant id="mutant_1300" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="substitutionInVariablesEnabled &amp;&amp; ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)" to="!(substitutionInVariablesEnabled &amp;&amp; ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0))" />
    <mutant id="mutant_2631" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_3963" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) * -1)" />
    <mutant id="mutant_1301" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="((startPos + startMatchLen) * -1)" />
    <mutant id="mutant_2632" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3962" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="((37 * result) + (minimum.hashCode())) + 1" />
    <mutant id="mutant_3961" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="((37 * result) + (minimum.hashCode())) - 1" />
    <mutant id="mutant_2630" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3960" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (minimum.hashCode())" to="((37 * result) + (minimum.hashCode())) * -1" />
    <mutant id="mutant_1308" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="(((pos - startPos) - startMatchLen) * -1)" />
    <mutant id="mutant_2639" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_1309" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="(((pos - startPos) - startMatchLen) - 1)" />
    <mutant id="mutant_1306" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="((pos - startPos) + 1)" />
    <mutant id="mutant_2637" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3969" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvEscaper.CSV_QUOTE_STR)) + 1)" />
    <mutant id="mutant_1307" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((pos - startPos) - startMatchLen)" to="(((pos - startPos) - startMatchLen) + 1)" />
    <mutant id="mutant_2638" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3968" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="((37 * result) + (maximum.hashCode())) + 1" />
    <mutant id="mutant_1304" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="((pos - startPos) - 1)" />
    <mutant id="mutant_2635" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3967" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="((37 * result) + (maximum.hashCode())) - 1" />
    <mutant id="mutant_1305" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pos - startPos)" to="((pos - startPos) * -1)" />
    <mutant id="mutant_2636" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_3966" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (maximum.hashCode())" to="((37 * result) + (maximum.hashCode())) * -1" />
    <mutant id="mutant_1302" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="((startPos + startMatchLen) - 1)" />
    <mutant id="mutant_2633" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3965" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) - 1)" />
    <mutant id="mutant_1303" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(startPos + startMatchLen)" to="((startPos + startMatchLen) + 1)" />
    <mutant id="mutant_2634" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3964" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) + 1)" />
    <mutant id="mutant_2620" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3952" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) + 1)" />
    <mutant id="mutant_2621" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_3951" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) * -1)" />
    <mutant id="mutant_3950" viable="true" in="org.apache.commons.lang3.Range.isOverlappedBy(org.apache.commons.lang3.Range)" from="((otherRange.contains(minimum)) || (otherRange.contains(maximum))) || (contains(otherRange.minimum))" to="!(((otherRange.contains(minimum)) || (otherRange.contains(maximum))) || (contains(otherRange.minimum)))" />
    <mutant id="mutant_2628" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_2629" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3959" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) - 1)" />
    <mutant id="mutant_2626" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3958" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) + 1)" />
    <mutant id="mutant_2627" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3957" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) * -1)" />
    <mutant id="mutant_2624" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3956" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="((37 * result) + (getClass().hashCode())) + 1" />
    <mutant id="mutant_2625" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3955" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="((37 * result) + (getClass().hashCode())) - 1" />
    <mutant id="mutant_2622" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_3954" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result) + (getClass().hashCode())" to="((37 * result) + (getClass().hashCode())) * -1" />
    <mutant id="mutant_2623" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3953" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(37 * result)" to="((37 * result) - 1)" />
    <mutant id="mutant_2619" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3941" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + 1)" />
    <mutant id="mutant_2610" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3940" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;)" to="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) * -1)" />
    <mutant id="mutant_2617" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3949" viable="true" in="org.apache.commons.lang3.Range.isOverlappedBy(org.apache.commons.lang3.Range)" from="((otherRange.contains(minimum)) || (otherRange.contains(maximum)))" to="(!((otherRange.contains(minimum)) || (otherRange.contains(maximum))))" />
    <mutant id="mutant_2618" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_3948" viable="true" in="org.apache.commons.lang3.Range.equals(java.lang.Object)" from="(minimum.equals(range.minimum)) &amp;&amp; (maximum.equals(range.maximum))" to="!((minimum.equals(range.minimum)) &amp;&amp; (maximum.equals(range.maximum)))" />
    <mutant id="mutant_2615" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3947" viable="true" in="org.apache.commons.lang3.Range.equals(java.lang.Object)" from="(obj == null) || ((obj.getClass()) != (getClass()))" to="!((obj == null) || ((obj.getClass()) != (getClass())))" />
    <mutant id="mutant_2616" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_3946" viable="true" in="org.apache.commons.lang3.Range.containsRange(org.apache.commons.lang3.Range)" from="(contains(otherRange.minimum)) &amp;&amp; (contains(otherRange.maximum))" to="!((contains(otherRange.minimum)) &amp;&amp; (contains(otherRange.maximum)))" />
    <mutant id="mutant_2613" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_3945" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="((comparator.compare(element, minimum)) &gt; (-1)) &amp;&amp; ((comparator.compare(element, maximum)) &lt; 1)" to="!(((comparator.compare(element, minimum)) &gt; (-1)) &amp;&amp; ((comparator.compare(element, maximum)) &lt; 1))" />
    <mutant id="mutant_2614" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3944" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="((((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2) + 1)" />
    <mutant id="mutant_2611" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3943" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="((((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2) - 1)" />
    <mutant id="mutant_2612" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3942" viable="false" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2)" to="((((&quot;Elements in a range must not be null: element1=&quot; + element1) + &quot;, element2=&quot;) + element2) * -1)" />
    <mutant id="mutant_2690" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1355" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="(quoteLen * 2) - 1" />
    <mutant id="mutant_2686" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1356" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="(pos + delimLen) - 1" />
    <mutant id="mutant_2687" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1353" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="(quoteLen * 2) * -1" />
    <mutant id="mutant_2684" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1354" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen * 2" to="(quoteLen * 2) + 1" />
    <mutant id="mutant_2685" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1351" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="((pos + quoteLen) * -1)" />
    <mutant id="mutant_2682" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1352" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="((pos + quoteLen) - 1)" />
    <mutant id="mutant_2683" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_2680" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1350" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(pos + quoteLen)" to="((pos + quoteLen) + 1)" />
    <mutant id="mutant_2681" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1359" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="(quoteLen &gt; 0) &amp;&amp; (isQuote(srcChars, pos, len, quoteStart, quoteLen))" to="!((quoteLen &gt; 0) &amp;&amp; (isQuote(srcChars, pos, len, quoteStart, quoteLen)))" />
    <mutant id="mutant_1357" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="(pos + delimLen) * -1" />
    <mutant id="mutant_2688" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1358" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos + delimLen" to="(pos + delimLen) + 1" />
    <mutant id="mutant_2689" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1344" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="(start + delimLen) + 1" />
    <mutant id="mutant_2675" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1345" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="(start + delimLen) * -1" />
    <mutant id="mutant_2676" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1342" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) &gt; 0))" to="(!((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) &gt; 0)))" />
    <mutant id="mutant_2673" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1343" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) &gt; 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) &gt; 0)" to="!(((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) &gt; 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) &gt; 0))" />
    <mutant id="mutant_2674" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1340" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="((tokenPos) - 1) - 1" />
    <mutant id="mutant_2671" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1341" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="((tokenPos) - 1) * -1" />
    <mutant id="mutant_2672" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_2670" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1348" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="((start + quoteLen) - 1)" />
    <mutant id="mutant_2679" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1349" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="((start + quoteLen) * -1)" />
    <mutant id="mutant_1346" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start + delimLen" to="(start + delimLen) - 1" />
    <mutant id="mutant_2677" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1347" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(start + quoteLen)" to="((start + quoteLen) + 1)" />
    <mutant id="mutant_2678" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_503" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_504" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_505" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_500" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="(((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))) * -1" />
    <mutant id="mutant_501" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="(((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))) - 1" />
    <mutant id="mutant_502" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_507" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_508" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) + 1" />
    <mutant id="mutant_509" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) * -1" />
    <mutant id="mutant_1333" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) - 1)" />
    <mutant id="mutant_2664" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_3996" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i &lt; csLast) &amp;&amp; ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))" to="!((i &lt; csLast) &amp;&amp; ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))))" />
    <mutant id="mutant_1334" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) * -1)" />
    <mutant id="mutant_2665" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3995" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1331" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) * -1)" />
    <mutant id="mutant_2662" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_3994" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1332" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) + 1)" />
    <mutant id="mutant_2663" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3993" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2660" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3992" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_1330" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) - 1)" />
    <mutant id="mutant_2661" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3991" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_3990" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_1339" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos) - 1" to="((tokenPos) - 1) + 1" />
    <mutant id="mutant_1337" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="((quoteStart + i) * -1)" />
    <mutant id="mutant_2668" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_1338" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="((pos + i) &gt;= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)]))" to="!(((pos + i) &gt;= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)])))" />
    <mutant id="mutant_2669" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3999" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="((str.length()) - len) + 1" />
    <mutant id="mutant_1335" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="((quoteStart + i) + 1)" />
    <mutant id="mutant_2666" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3998" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str == null) || (searchStr == null)" to="!((str == null) || (searchStr == null))" />
    <mutant id="mutant_1336" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(quoteStart + i)" to="((quoteStart + i) - 1)" />
    <mutant id="mutant_2667" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_3997" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchCharSequences))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchCharSequences)))" />
    <mutant id="mutant_514" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_515" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_516" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_517" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="(((iTotal) * (iConstant)) + superHashCode) + 1" />
    <mutant id="mutant_510" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) - 1" />
    <mutant id="mutant_511" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_512" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_513" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_518" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="(((iTotal) * (iConstant)) + superHashCode) * -1" />
    <mutant id="mutant_519" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="((iTotal) * (iConstant)) + superHashCode" to="(((iTotal) * (iConstant)) + superHashCode) - 1" />
    <mutant id="mutant_1322" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="((change + varLen) - (endPos - startPos)) - 1" />
    <mutant id="mutant_2653" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3985" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="(csLength - 1) + 1" />
    <mutant id="mutant_1323" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="(((priorVariables.size()) - 1) * -1)" />
    <mutant id="mutant_2654" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_3984" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="(csLength - 1) - 1" />
    <mutant id="mutant_1320" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="((change + varLen) - (endPos - startPos)) + 1" />
    <mutant id="mutant_2651" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3983" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_1321" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(change + varLen) - (endPos - startPos)" to="((change + varLen) - (endPos - startPos)) * -1" />
    <mutant id="mutant_2652" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3982" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,java.lang.CharSequence)" from="(seq == null) || (searchSeq == null)" to="!((seq == null) || (searchSeq == null))" />
    <mutant id="mutant_3981" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR)) + 1)" />
    <mutant id="mutant_2650" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3980" viable="false" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR))" to="(((StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR) + (StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR)) - 1)" />
    <mutant id="mutant_1328" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="((offset + length) - 1)" />
    <mutant id="mutant_2659" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_1329" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="(pos + i)" to="((pos + i) + 1)" />
    <mutant id="mutant_1326" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="((offset + length) * -1)" />
    <mutant id="mutant_2657" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3989" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="(searchLength - 1) * -1" />
    <mutant id="mutant_1327" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="(offset + length)" to="((offset + length) + 1)" />
    <mutant id="mutant_2658" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3988" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="(searchLength - 1) + 1" />
    <mutant id="mutant_1324" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="(((priorVariables.size()) - 1) - 1)" />
    <mutant id="mutant_2655" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3987" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength - 1" to="(searchLength - 1) - 1" />
    <mutant id="mutant_1325" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="((priorVariables.size()) - 1)" to="(((priorVariables.size()) - 1) + 1)" />
    <mutant id="mutant_2656" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3986" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength - 1" to="(csLength - 1) * -1" />
    <mutant id="mutant_525" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass()))))" to="(!((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))))" />
    <mutant id="mutant_526" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))) &amp;&amp; (accept(value.getClass()))" to="!(((!(ClassUtils.isPrimitiveWrapper(value.getClass()))) &amp;&amp; (!(String.class.equals(value.getClass())))) &amp;&amp; (accept(value.getClass())))" />
    <mutant id="mutant_527" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) - 1)" />
    <mutant id="mutant_528" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + 1)" />
    <mutant id="mutant_521" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="(useTransients || (!(Modifier.isTransient(field.getModifiers()))))" to="(!(useTransients || (!(Modifier.isTransient(field.getModifiers())))))" />
    <mutant id="mutant_522" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(field.getModifiers())))))" to="(!(((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(field.getModifiers()))))))" />
    <mutant id="mutant_523" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(field.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(field.getModifiers())))" to="!((((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(field.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(field.getModifiers()))))" />
    <mutant id="mutant_524" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object)" from="(registry != null) &amp;&amp; (registry.isEmpty())" to="!((registry != null) &amp;&amp; (registry.isEmpty()))" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;{&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) * -1)" />
    <mutant id="mutant_1399" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) * -1)" />
    <mutant id="mutant_4425" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="((count - (whitespacesCount &gt; 0 ? 1 : 0)) - 1)" />
    <mutant id="mutant_4424" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="((count - (whitespacesCount &gt; 0 ? 1 : 0)) + 1)" />
    <mutant id="mutant_1397" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) - 1)" />
    <mutant id="mutant_4423" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(whitespacesCount == 0) &amp;&amp; (!startWhitespaces)" to="!((whitespacesCount == 0) &amp;&amp; (!startWhitespaces))" />
    <mutant id="mutant_1398" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) + 1)" />
    <mutant id="mutant_4422" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) * -1)" />
    <mutant id="mutant_1395" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) * -1" />
    <mutant id="mutant_4421" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) + 1)" />
    <mutant id="mutant_1396" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) * -1)" />
    <mutant id="mutant_4420" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) - 1)" />
    <mutant id="mutant_1393" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) + 1" />
    <mutant id="mutant_1394" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) - 1" />
    <mutant id="mutant_520" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;))))" to="(!((!(ArrayUtils.contains(excludeFields, field.getName()))) &amp;&amp; (!(field.getName().contains(&quot;$&quot;)))))" />
    <mutant id="mutant_4429" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="((len + start) + 1)" />
    <mutant id="mutant_4428" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="((len + start) * -1)" />
    <mutant id="mutant_4427" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(len + start)" to="((len + start) - 1)" />
    <mutant id="mutant_4426" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="(count - (whitespacesCount &gt; 0 ? 1 : 0))" to="((count - (whitespacesCount &gt; 0 ? 1 : 0)) * -1)" />
    <mutant id="mutant_536" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) * -1)" />
    <mutant id="mutant_537" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) + 1)" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) - 1)" />
    <mutant id="mutant_539" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) * -1)" />
    <mutant id="mutant_532" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) - 1)" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) * -1)" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) - 1)" />
    <mutant id="mutant_535" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + 1)" />
    <mutant id="mutant_1391" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) - 1)" />
    <mutant id="mutant_1392" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) + 1)" />
    <mutant id="mutant_1390" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) * -1)" />
    <mutant id="mutant_1388" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) - 1)" />
    <mutant id="mutant_4414" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) * -1)" />
    <mutant id="mutant_1389" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) + 1)" />
    <mutant id="mutant_4413" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) - 1)" />
    <mutant id="mutant_1386" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) * -1" />
    <mutant id="mutant_4412" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(padLen == 1) &amp;&amp; (pads &lt;= (StringUtils.PAD_LIMIT))" to="!((padLen == 1) &amp;&amp; (pads &lt;= (StringUtils.PAD_LIMIT)))" />
    <mutant id="mutant_1387" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) * -1)" />
    <mutant id="mutant_4411" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) - 1" />
    <mutant id="mutant_1384" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) + 1" />
    <mutant id="mutant_4410" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) * -1" />
    <mutant id="mutant_1385" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt + 1" to="(spaceToWrapAt + 1) - 1" />
    <mutant id="mutant_1382" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) - 1)" />
    <mutant id="mutant_1383" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) + 1)" />
    <mutant id="mutant_530" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) + 1)" />
    <mutant id="mutant_531" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;{&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) * -1)" />
    <mutant id="mutant_4419" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) * -1)" />
    <mutant id="mutant_4418" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) + 1)" />
    <mutant id="mutant_4417" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(pos + len)" to="((pos + len) - 1)" />
    <mutant id="mutant_4416" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(len &lt; 0) || (pos &gt; (str.length()))" to="!((len &lt; 0) || (pos &gt; (str.length())))" />
    <mutant id="mutant_4415" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) + 1)" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;) * -1)" />
    <mutant id="mutant_548" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) * -1)" />
    <mutant id="mutant_549" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) - 1)" />
    <mutant id="mutant_543" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) - 1)" />
    <mutant id="mutant_544" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + 1)" />
    <mutant id="mutant_545" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;) + 1)" />
    <mutant id="mutant_546" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;)" to="((((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) + &quot;}&quot;) - 1)" />
    <mutant id="mutant_1380" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="((inputLineLength - offset) - 1)" />
    <mutant id="mutant_1381" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(wrapLength + offset)" to="((wrapLength + offset) * -1)" />
    <mutant id="mutant_1377" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="((inputLineLength + 32) * -1)" />
    <mutant id="mutant_4403" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) + 1)" />
    <mutant id="mutant_1378" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="((inputLineLength - offset) + 1)" />
    <mutant id="mutant_4402" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_1375" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="((inputLineLength + 32) - 1)" />
    <mutant id="mutant_4401" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_1376" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength + 32)" to="((inputLineLength + 32) + 1)" />
    <mutant id="mutant_4400" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_1373" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="((strLen / 2) + 1) * -1" />
    <mutant id="mutant_1374" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="(StringUtils.isEmpty(str)) || (delimLen == 0)" to="!((StringUtils.isEmpty(str)) || (delimLen == 0))" />
    <mutant id="mutant_1371" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="((strLen / 2) + 1) + 1" />
    <mutant id="mutant_1372" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2) + 1" to="((strLen / 2) + 1) - 1" />
    <mutant id="mutant_540" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) + 1)" />
    <mutant id="mutant_541" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((spaces) - (indent))" to="(((spaces) - (indent)) - 1)" />
    <mutant id="mutant_4409" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) + 1" />
    <mutant id="mutant_542" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent)))))" to="(((SystemUtils.LINE_SEPARATOR) + (spacer(((spaces) - (indent))))) * -1)" />
    <mutant id="mutant_4408" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) - 1" />
    <mutant id="mutant_4407" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) + 1" />
    <mutant id="mutant_4406" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) * -1" />
    <mutant id="mutant_1379" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="(inputLineLength - offset)" to="((inputLineLength - offset) * -1)" />
    <mutant id="mutant_4405" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) - 1)" />
    <mutant id="mutant_4404" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="(noOfItems * 16)" to="((noOfItems * 16) * -1)" />
    <mutant id="mutant_558" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) + 1)" />
    <mutant id="mutant_559" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) - 1)" />
    <mutant id="mutant_554" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) * -1)" />
    <mutant id="mutant_555" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) - 1)" />
    <mutant id="mutant_556" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;,&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + 1)" />
    <mutant id="mutant_557" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;,&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) * -1)" />
    <mutant id="mutant_1370" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="((strLen / 2) + 1)" />
    <mutant id="mutant_1366" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="(StringUtils.isEmpty(str)) || (delimLen == 0)" to="!((StringUtils.isEmpty(str)) || (delimLen == 0))" />
    <mutant id="mutant_2697" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1367" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(delimiters != null) &amp;&amp; ((delimiters.length) == 0)" to="!((delimiters != null) &amp;&amp; ((delimiters.length) == 0))" />
    <mutant id="mutant_2698" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1364" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="(pos &gt;= 0) &amp;&amp; (pos &lt; count)" to="!((pos &gt;= 0) &amp;&amp; (pos &lt; count))" />
    <mutant id="mutant_2695" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1365" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="(StringUtils.isEmpty(str)) || (delimLen == 0)" to="!((StringUtils.isEmpty(str)) || (delimLen == 0))" />
    <mutant id="mutant_2696" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1362" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="(&quot;StrTokenizer&quot; + (getTokenList())) * -1" />
    <mutant id="mutant_2693" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1363" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="(srcChars == null) || (count == 0)" to="!((srcChars == null) || (count == 0))" />
    <mutant id="mutant_2694" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1360" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="(&quot;StrTokenizer&quot; + (getTokenList())) - 1" />
    <mutant id="mutant_2691" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1361" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.toString()" from="&quot;StrTokenizer&quot; + (getTokenList())" to="(&quot;StrTokenizer&quot; + (getTokenList())) + 1" />
    <mutant id="mutant_2692" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_550" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(&quot;[&quot; + (SystemUtils.LINE_SEPARATOR))" to="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + 1)" />
    <mutant id="mutant_551" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) * -1)" />
    <mutant id="mutant_552" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) + 1)" />
    <mutant id="mutant_553" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces)))" to="(((&quot;[&quot; + (SystemUtils.LINE_SEPARATOR)) + (spacer(spaces))) - 1)" />
    <mutant id="mutant_1368" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="((strLen / 2) - 1)" />
    <mutant id="mutant_2699" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1369" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(strLen / 2)" to="((strLen / 2) * -1)" />
    <mutant id="mutant_448" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) * -1" />
    <mutant id="mutant_449" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) + 1" />
    <mutant id="mutant_444" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_446" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_447" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_4230" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="((index - (searchStr.length())) - 1)" />
    <mutant id="mutant_4227" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="((str == null) || (searchStr == null))" to="(!((str == null) || (searchStr == null)))" />
    <mutant id="mutant_4226" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="((str.length()) - (searchStr.length())) * -1" />
    <mutant id="mutant_1199" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) + 1)" />
    <mutant id="mutant_4225" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="((str.length()) - (searchStr.length())) - 1" />
    <mutant id="mutant_4224" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length()) - (searchStr.length())" to="((str.length()) - (searchStr.length())) + 1" />
    <mutant id="mutant_1197" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) * -1)" />
    <mutant id="mutant_4223" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) * -1)" />
    <mutant id="mutant_1198" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) - 1)" />
    <mutant id="mutant_4222" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) - 1)" />
    <mutant id="mutant_1195" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="((offset + length) - 1)" />
    <mutant id="mutant_4221" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) + 1)" />
    <mutant id="mutant_1196" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(length &lt; 0) || ((offset + length) &gt; (chars.length))" to="!((length &lt; 0) || ((offset + length) &gt; (chars.length)))" />
    <mutant id="mutant_4220" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str == null) || (searchStr == null)" to="!((str == null) || (searchStr == null))" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="(((iTotal) * (iConstant)) + (value ? 0 : 1)) * -1" />
    <mutant id="mutant_441" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="(((iTotal) * (iConstant)) + (value ? 0 : 1)) - 1" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_443" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_4229" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="((index - (searchStr.length())) + 1)" />
    <mutant id="mutant_4228" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="((str == null) || (searchStr == null)) || (ordinal &lt;= 0)" to="!(((str == null) || (searchStr == null)) || (ordinal &lt;= 0))" />
    <mutant id="mutant_459" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) - 1" />
    <mutant id="mutant_455" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_457" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) * -1" />
    <mutant id="mutant_458" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) + 1" />
    <mutant id="mutant_1193" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="((offset + length) * -1)" />
    <mutant id="mutant_1194" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset + length)" to="((offset + length) + 1)" />
    <mutant id="mutant_1191" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="((&quot;Invalid offset: &quot; + offset) + 1)" />
    <mutant id="mutant_1192" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="((&quot;Invalid offset: &quot; + offset) * -1)" />
    <mutant id="mutant_1190" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(&quot;Invalid offset: &quot; + offset)" to="((&quot;Invalid offset: &quot; + offset) - 1)" />
    <mutant id="mutant_4216" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="(seq == null) || (searchSeq == null)" to="!((seq == null) || (searchSeq == null))" />
    <mutant id="mutant_4215" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="(((str.length()) - (searchStr.length())) + 1) * -1" />
    <mutant id="mutant_1188" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_4214" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="(((str.length()) - (searchStr.length())) + 1) - 1" />
    <mutant id="mutant_1189" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(offset &lt; 0) || (offset &gt; (chars.length))" to="!((offset &lt; 0) || (offset &gt; (chars.length)))" />
    <mutant id="mutant_4213" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length())) + 1" to="(((str.length()) - (searchStr.length())) + 1) + 1" />
    <mutant id="mutant_1186" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_4212" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) * -1)" />
    <mutant id="mutant_1187" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_4211" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) - 1)" />
    <mutant id="mutant_1184" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="((index + len) * -1)" />
    <mutant id="mutant_4210" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="((str.length()) - (searchStr.length()))" to="(((str.length()) - (searchStr.length())) + 1)" />
    <mutant id="mutant_1185" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="((index + len) + 1)" />
    <mutant id="mutant_451" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_453" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_4219" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str == null) || (searchStr == null)" to="!((str == null) || (searchStr == null))" />
    <mutant id="mutant_4218" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(str == null) || (searchStrs == null)" to="!((str == null) || (searchStrs == null))" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) - 1" />
    <mutant id="mutant_4217" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="(seq == null) || (searchSeq == null)" to="!((seq == null) || (searchSeq == null))" />
    <mutant id="mutant_466" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_467" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_468" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_469" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="(((iTotal) * (iConstant)) + (Float.floatToIntBits(value))) - 1" />
    <mutant id="mutant_1182" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="(((size) + len) * -1)" />
    <mutant id="mutant_1183" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(index + len)" to="((index + len) - 1)" />
    <mutant id="mutant_1180" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="(((size) + len) + 1)" />
    <mutant id="mutant_1181" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="((size) + len)" to="(((size) + len) - 1)" />
    <mutant id="mutant_1179" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_4205" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="(css == null) || ((css.length) &lt;= 1)" to="!((css == null) || ((css.length) &lt;= 1))" />
    <mutant id="mutant_4204" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(i &lt; (cs2.length())) || (i &lt; (cs1.length()))" to="!((i &lt; (cs2.length())) || (i &lt; (cs1.length())))" />
    <mutant id="mutant_1177" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_4203" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(i &lt; (cs1.length())) &amp;&amp; (i &lt; (cs2.length()))" to="!((i &lt; (cs1.length())) &amp;&amp; (i &lt; (cs2.length())))" />
    <mutant id="mutant_1178" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_4202" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="!((cs1 == null) || (cs2 == null))" />
    <mutant id="mutant_1175" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_4201" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="chFound &amp;&amp; ((CharSequenceUtils.indexOf(searchChars, ch2, 0)) &lt; 0)" to="!(chFound &amp;&amp; ((CharSequenceUtils.indexOf(searchChars, ch2, 0)) &lt; 0))" />
    <mutant id="mutant_1176" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_4200" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1173" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="(((size) + 1) - 1)" />
    <mutant id="mutant_1174" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_462" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_463" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_464" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_465" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_4209" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str == null) || (searchStr == null)" to="!((str == null) || (searchStr == null))" />
    <mutant id="mutant_4208" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="(firstDiff == (-1)) &amp;&amp; (shortestStrLen != longestStrLen)" to="!((firstDiff == (-1)) &amp;&amp; (shortestStrLen != longestStrLen))" />
    <mutant id="mutant_460" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_4207" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="allStringsNull || ((longestStrLen == 0) &amp;&amp; (!anyStringNull))" to="!(allStringsNull || ((longestStrLen == 0) &amp;&amp; (!anyStringNull)))" />
    <mutant id="mutant_461" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_4206" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="((longestStrLen == 0) &amp;&amp; (!anyStringNull))" to="(!((longestStrLen == 0) &amp;&amp; (!anyStringNull)))" />
    <mutant id="mutant_477" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_478" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) + 1" />
    <mutant id="mutant_479" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) - 1" />
    <mutant id="mutant_1171" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="(((size) + 1) * -1)" />
    <mutant id="mutant_1172" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="((size) + 1)" to="(((size) + 1) + 1)" />
    <mutant id="mutant_1170" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_1168" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_2499" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_1169" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_1166" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="((index + 5) * -1)" />
    <mutant id="mutant_2497" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_1167" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="((index + 5) + 1)" />
    <mutant id="mutant_2498" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_1164" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="(((size) + 5) - 1)" />
    <mutant id="mutant_2495" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_1165" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 5)" to="((index + 5) - 1)" />
    <mutant id="mutant_2496" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_1162" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="(((size) + 5) * -1)" />
    <mutant id="mutant_2493" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_1163" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 5)" to="(((size) + 5) + 1)" />
    <mutant id="mutant_2494" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_473" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_474" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_475" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_476" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_470" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="(((iTotal) * (iConstant)) + (Float.floatToIntBits(value))) + 1" />
    <mutant id="mutant_471" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="((iTotal) * (iConstant)) + (Float.floatToIntBits(value))" to="(((iTotal) * (iConstant)) + (Float.floatToIntBits(value))) * -1" />
    <mutant id="mutant_472" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_488" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_489" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_4274" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="(abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))) + 1" />
    <mutant id="mutant_4273" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="(((str.length()) - (maxWidth - 3)) - 1)" />
    <mutant id="mutant_4272" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="(((str.length()) - (maxWidth - 3)) * -1)" />
    <mutant id="mutant_4271" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - (maxWidth - 3))" to="(((str.length()) - (maxWidth - 3)) + 1)" />
    <mutant id="mutant_4270" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) - 1)" />
    <mutant id="mutant_4269" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) + 1)" />
    <mutant id="mutant_4268" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) * -1)" />
    <mutant id="mutant_4267" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="(abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))) + 1" />
    <mutant id="mutant_4266" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="(abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))) - 1" />
    <mutant id="mutant_4265" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))" to="(abrevMarker + (org.apache.commons.lang3.StringUtils.abbreviate(str.substring(offset), (maxWidth - 3)))) * -1" />
    <mutant id="mutant_4264" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) - 1)" />
    <mutant id="mutant_484" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_485" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_486" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_487" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_480" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="((iTotal) * (iConstant)) + value" to="(((iTotal) * (iConstant)) + value) * -1" />
    <mutant id="mutant_481" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_482" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_483" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_499" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))" to="(((iTotal) * (iConstant)) + ((int)((value ^ (value &gt;&gt; 32))))) + 1" />
    <mutant id="mutant_4263" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) + 1)" />
    <mutant id="mutant_4262" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) * -1)" />
    <mutant id="mutant_4261" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="(((offset + maxWidth) - 3) - 1)" />
    <mutant id="mutant_4260" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="(((offset + maxWidth) - 3) + 1)" />
    <mutant id="mutant_4259" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((offset + maxWidth) - 3)" to="(((offset + maxWidth) - 3) * -1)" />
    <mutant id="mutant_4258" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="((offset + maxWidth) * -1)" />
    <mutant id="mutant_490" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="(((iTotal) * (iConstant)) + (object.hashCode())) + 1" />
    <mutant id="mutant_4257" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="((offset + maxWidth) - 1)" />
    <mutant id="mutant_4256" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(offset + maxWidth)" to="((offset + maxWidth) + 1)" />
    <mutant id="mutant_4255" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="((str.substring(0, (maxWidth - 3))) + abrevMarker) * -1" />
    <mutant id="mutant_4254" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="((str.substring(0, (maxWidth - 3))) + abrevMarker) - 1" />
    <mutant id="mutant_4253" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.substring(0, (maxWidth - 3))) + abrevMarker" to="((str.substring(0, (maxWidth - 3))) + abrevMarker) + 1" />
    <mutant id="mutant_495" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) * -1" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_497" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_498" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_491" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="(((iTotal) * (iConstant)) + (object.hashCode())) - 1" />
    <mutant id="mutant_492" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="((iTotal) * (iConstant)) + (object.hashCode())" to="(((iTotal) * (iConstant)) + (object.hashCode())) * -1" />
    <mutant id="mutant_493" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) + 1" />
    <mutant id="mutant_494" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal) * (iConstant)" to="((iTotal) * (iConstant)) - 1" />
    <mutant id="mutant_4252" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) - 1)" />
    <mutant id="mutant_4251" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) + 1)" />
    <mutant id="mutant_4250" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) * -1)" />
    <mutant id="mutant_4249" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="((str.length()) - (maxWidth - 3)) - 1" />
    <mutant id="mutant_4248" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="((str.length()) - (maxWidth - 3)) * -1" />
    <mutant id="mutant_4247" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length()) - (maxWidth - 3)" to="((str.length()) - (maxWidth - 3)) + 1" />
    <mutant id="mutant_4246" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) - 1)" />
    <mutant id="mutant_4245" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) + 1)" />
    <mutant id="mutant_4244" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) * -1)" />
    <mutant id="mutant_4243" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) - 1)" />
    <mutant id="mutant_4242" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) + 1)" />
    <mutant id="mutant_4241" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(maxWidth - 3)" to="((maxWidth - 3) * -1)" />
    <mutant id="mutant_4240" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="(((str.length()) - offset) - 1)" />
    <mutant id="mutant_4238" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="(((str.length()) - offset) + 1)" />
    <mutant id="mutant_4237" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="(transpositions / 2) * -1" />
    <mutant id="mutant_4236" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="(transpositions / 2) - 1" />
    <mutant id="mutant_4235" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions / 2" to="(transpositions / 2) + 1" />
    <mutant id="mutant_4234" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="((index + (searchStr.length())) + 1)" />
    <mutant id="mutant_4233" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="((index + (searchStr.length())) * -1)" />
    <mutant id="mutant_4232" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index + (searchStr.length()))" to="((index + (searchStr.length())) - 1)" />
    <mutant id="mutant_4231" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(index - (searchStr.length()))" to="((index - (searchStr.length())) * -1)" />
    <mutant id="mutant_4239" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="((str.length()) - offset)" to="(((str.length()) - offset) * -1)" />
    <mutant id="mutant_4299" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="((str.length()) - (targetSting / 2)) * -1" />
    <mutant id="mutant_4298" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="((str.length()) - (targetSting / 2)) + 1" />
    <mutant id="mutant_4297" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length()) - (targetSting / 2)" to="((str.length()) - (targetSting / 2)) - 1" />
    <mutant id="mutant_4296" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) - 1)" />
    <mutant id="mutant_4295" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) * -1)" />
    <mutant id="mutant_4294" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) + 1)" />
    <mutant id="mutant_4293" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="((targetSting / 2) + (targetSting % 2)) + 1" />
    <mutant id="mutant_4292" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="((targetSting / 2) + (targetSting % 2)) - 1" />
    <mutant id="mutant_4291" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2) + (targetSting % 2)" to="((targetSting / 2) + (targetSting % 2)) * -1" />
    <mutant id="mutant_4290" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="((targetSting % 2) + 1)" />
    <mutant id="mutant_4289" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="((targetSting % 2) * -1)" />
    <mutant id="mutant_4288" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting % 2)" to="((targetSting % 2) - 1)" />
    <mutant id="mutant_4287" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) - 1)" />
    <mutant id="mutant_4286" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) * -1)" />
    <mutant id="mutant_4285" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(targetSting / 2)" to="((targetSting / 2) + 1)" />
    <mutant id="mutant_4284" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="(length - (middle.length())) * -1" />
    <mutant id="mutant_4283" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="(length - (middle.length())) + 1" />
    <mutant id="mutant_4282" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length - (middle.length())" to="(length - (middle.length())) - 1" />
    <mutant id="mutant_4281" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(length &gt;= (str.length())) || (length &lt; ((middle.length()) + 2))" to="!((length &gt;= (str.length())) || (length &lt; ((middle.length()) + 2)))" />
    <mutant id="mutant_4280" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="(((middle.length()) + 2) * -1)" />
    <mutant id="mutant_4279" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="(((middle.length()) + 2) + 1)" />
    <mutant id="mutant_4278" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="((middle.length()) + 2)" to="(((middle.length()) + 2) - 1)" />
    <mutant id="mutant_4277" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle)))" />
    <mutant id="mutant_4276" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="(abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))) - 1" />
    <mutant id="mutant_4275" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))" to="(abrevMarker + (str.substring(((str.length()) - (maxWidth - 3))))) * -1" />
    <mutant id="mutant_3819" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) - 1)" />
    <mutant id="mutant_3818" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_3817" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_3816" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_3815" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; (((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))))) &amp;&amp; ((split[2].length()) &gt; 0)" to="!((((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; (((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))))) &amp;&amp; ((split[2].length()) &gt; 0))" />
    <mutant id="mutant_3814" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; (((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1])))))" to="(!(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; (((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))))))" />
    <mutant id="mutant_3813" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))))" to="(!(((split[1].length()) == 0) || (((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1])))))" />
    <mutant id="mutant_3812" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1])))" to="(!(((split[1].length()) == 2) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))))" />
    <mutant id="mutant_3811" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3)))" to="(!((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))))" />
    <mutant id="mutant_3810" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((split[0].length()) == 2) || ((split[0].length()) == 3))" to="(!(((split[0].length()) == 2) || ((split[0].length()) == 3)))" />
    <mutant id="mutant_3809" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_3808" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_3807" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_3806" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; ((split[1].length()) == 2)) &amp;&amp; (StringUtils.isAllUpperCase(split[1]))" to="!((((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; ((split[1].length()) == 2)) &amp;&amp; (StringUtils.isAllUpperCase(split[1])))" />
    <mutant id="mutant_3805" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; ((split[1].length()) == 2))" to="(!(((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))) &amp;&amp; ((split[1].length()) == 2)))" />
    <mutant id="mutant_3804" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3)))" to="(!((StringUtils.isAllLowerCase(split[0])) &amp;&amp; (((split[0].length()) == 2) || ((split[0].length()) == 3))))" />
    <mutant id="mutant_3803" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(((split[0].length()) == 2) || ((split[0].length()) == 3))" to="(!(((split[0].length()) == 2) || ((split[0].length()) == 3)))" />
    <mutant id="mutant_3802" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_3801" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_3800" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_2521" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_3853" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="((hash * 31) + 1)" />
    <mutant id="mutant_2522" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3852" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="((hash * 31) - 1)" />
    <mutant id="mutant_3851" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31)" to="((hash * 31) * -1)" />
    <mutant id="mutant_2520" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3850" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_2529" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_2527" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3859" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) - 1)" />
    <mutant id="mutant_2528" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3858" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + 1)" />
    <mutant id="mutant_2525" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3857" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(v &lt; (Short.MIN_VALUE)) || (v &gt; (Short.MAX_VALUE))" to="!((v &lt; (Short.MIN_VALUE)) || (v &gt; (Short.MAX_VALUE)))" />
    <mutant id="mutant_2526" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_3856" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="((hash * 31) + tmpHash) + 1" />
    <mutant id="mutant_2523" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3855" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="((hash * 31) + tmpHash) - 1" />
    <mutant id="mutant_2524" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_3854" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="(hash * 31) + tmpHash" to="((hash * 31) + tmpHash) * -1" />
    <mutant id="mutant_2510" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3842" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) - 1)" />
    <mutant id="mutant_2511" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3841" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) + 1)" />
    <mutant id="mutant_3840" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) * -1)" />
    <mutant id="mutant_2518" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_2519" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3849" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_2516" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_3848" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_2517" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3847" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) - 1)" />
    <mutant id="mutant_2514" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3846" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) + 1)" />
    <mutant id="mutant_2515" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3845" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -128 and 127: [&quot; + v) * -1)" />
    <mutant id="mutant_2512" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3844" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="(v &lt; (Byte.MIN_VALUE)) || (v &gt; (Byte.MAX_VALUE))" to="!((v &lt; (Byte.MIN_VALUE)) || (v &gt; (Byte.MAX_VALUE)))" />
    <mutant id="mutant_2513" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3843" viable="true" in="org.apache.commons.lang3.ObjectUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="!((object1 == null) || (object2 == null))" />
    <mutant id="mutant_2509" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3831" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_2500" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3830" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="(((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;) - 1)" />
    <mutant id="mutant_2507" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_3839" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) * -1)" />
    <mutant id="mutant_2508" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3838" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) + 1)" />
    <mutant id="mutant_2505" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3837" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) - 1)" />
    <mutant id="mutant_2506" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_3836" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_2503" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_3835" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_2504" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3834" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Exception cloning Cloneable type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_2501" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_3833" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_2502" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3832" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cannot clone Cloneable type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_3829" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="(((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;) * -1)" />
    <mutant id="mutant_3820" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) + 1)" />
    <mutant id="mutant_3828" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;)" to="(((&quot;Cloneable type &quot; + (obj.getClass().getName())) + &quot; has no clone method&quot;) + 1)" />
    <mutant id="mutant_3827" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_3826" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_3825" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="(&quot;Cloneable type &quot; + (obj.getClass().getName()))" to="((&quot;Cloneable type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_3824" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) - 1)" />
    <mutant id="mutant_3823" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) + 1)" />
    <mutant id="mutant_3822" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(((sort.size()) - 1) / 2)" to="((((sort.size()) - 1) / 2) * -1)" />
    <mutant id="mutant_3821" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="((sort.size()) - 1)" to="(((sort.size()) - 1) * -1)" />
    <mutant id="mutant_1234" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="((i + removeLen) - 1)" />
    <mutant id="mutant_2565" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3897" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(letters &amp;&amp; (Character.isLetter(ch)))" to="(!(letters &amp;&amp; (Character.isLetter(ch))))" />
    <mutant id="mutant_1235" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="((to - removeLen) - 1)" />
    <mutant id="mutant_2566" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3896" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="(((random.nextInt(gap)) + start) + 1)" />
    <mutant id="mutant_1232" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="((i + removeLen) * -1)" />
    <mutant id="mutant_2563" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3895" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="(((random.nextInt(gap)) + start) * -1)" />
    <mutant id="mutant_1233" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + removeLen)" to="((i + removeLen) + 1)" />
    <mutant id="mutant_2564" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3894" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((random.nextInt(gap)) + start)" to="(((random.nextInt(gap)) + start) - 1)" />
    <mutant id="mutant_1230" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(matcher == null) || ((size) == 0)" to="!((matcher == null) || ((size) == 0))" />
    <mutant id="mutant_2561" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3893" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="((char)(((random.nextInt(gap)) + start))) + 1" />
    <mutant id="mutant_1231" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i &lt; to) &amp;&amp; (replaceCount != 0)" to="!((i &lt; to) &amp;&amp; (replaceCount != 0))" />
    <mutant id="mutant_2562" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_3892" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="((char)(((random.nextInt(gap)) + start))) * -1" />
    <mutant id="mutant_3891" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((char)((random.nextInt(gap)) + start))" to="((char)(((random.nextInt(gap)) + start))) - 1" />
    <mutant id="mutant_2560" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3890" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="(end - start) * -1" />
    <mutant id="mutant_1238" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="((to - removeLen) + replaceLen) + 1" />
    <mutant id="mutant_2569" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_1239" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="((to - removeLen) + replaceLen) - 1" />
    <mutant id="mutant_1236" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="((to - removeLen) * -1)" />
    <mutant id="mutant_2567" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_3899" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((letters &amp;&amp; (Character.isLetter(ch))) || (numbers &amp;&amp; (Character.isDigit(ch))))" to="(!((letters &amp;&amp; (Character.isLetter(ch))) || (numbers &amp;&amp; (Character.isDigit(ch)))))" />
    <mutant id="mutant_1237" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen)" to="((to - removeLen) + 1)" />
    <mutant id="mutant_2568" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3898" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(numbers &amp;&amp; (Character.isDigit(ch)))" to="(!(numbers &amp;&amp; (Character.isDigit(ch))))" />
    <mutant id="mutant_1223" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) * -1)" />
    <mutant id="mutant_2554" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3886" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="(((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;) - 1)" />
    <mutant id="mutant_1224" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="((index + replaceLen) - 1)" />
    <mutant id="mutant_2555" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3885" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="(((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;) + 1)" />
    <mutant id="mutant_1221" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) - 1)" />
    <mutant id="mutant_2552" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_3884" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) * -1)" />
    <mutant id="mutant_1222" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) + 1)" />
    <mutant id="mutant_2553" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_3883" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) - 1)" />
    <mutant id="mutant_2550" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_3882" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start)" to="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + 1)" />
    <mutant id="mutant_1220" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="((endIndex - startIndex) - 1)" />
    <mutant id="mutant_2551" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_3881" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + 1)" />
    <mutant id="mutant_3880" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) - 1)" />
    <mutant id="mutant_1229" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) * -1)" />
    <mutant id="mutant_1227" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) - 1)" />
    <mutant id="mutant_2558" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1228" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="(index + searchLen)" to="((index + searchLen) + 1)" />
    <mutant id="mutant_2559" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3889" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="(end - start) - 1" />
    <mutant id="mutant_1225" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="((index + replaceLen) + 1)" />
    <mutant id="mutant_2556" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3888" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end - start" to="(end - start) + 1" />
    <mutant id="mutant_1226" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="(index + replaceLen)" to="((index + replaceLen) * -1)" />
    <mutant id="mutant_2557" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3887" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;)" to="(((((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) + start) + &quot;)&quot;) * -1)" />
    <mutant id="mutant_1212" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="((index + strLen) + 1)" />
    <mutant id="mutant_2543" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3875" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="('z' + 1) - 1" />
    <mutant id="mutant_1213" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="((index + strLen) * -1)" />
    <mutant id="mutant_2544" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_3874" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="('z' + 1) + 1" />
    <mutant id="mutant_1210" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="((size) + strLen) - 1" />
    <mutant id="mutant_2541" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3873" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="'z' + 1" to="('z' + 1) * -1" />
    <mutant id="mutant_1211" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="((size) + strLen) * -1" />
    <mutant id="mutant_2542" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3872" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(!letters) &amp;&amp; (!numbers)" to="!((!letters) &amp;&amp; (!numbers))" />
    <mutant id="mutant_3871" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(start == 0) &amp;&amp; (end == 0)" to="!((start == 0) &amp;&amp; (end == 0))" />
    <mutant id="mutant_2540" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_3870" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(chars != null) &amp;&amp; ((chars.length) == 0)" to="!((chars != null) &amp;&amp; ((chars.length) == 0))" />
    <mutant id="mutant_1218" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="((endIndex - startIndex) + 1)" />
    <mutant id="mutant_2549" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_1219" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="(endIndex - startIndex)" to="((endIndex - startIndex) * -1)" />
    <mutant id="mutant_1216" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_2547" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_3879" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;)" to="(((&quot;Parameter end (&quot; + end) + &quot;) must be greater than start (&quot;) * -1)" />
    <mutant id="mutant_1217" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_2548" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_3878" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="((&quot;Parameter end (&quot; + end) - 1)" />
    <mutant id="mutant_1214" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(index + strLen)" to="((index + strLen) - 1)" />
    <mutant id="mutant_2545" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_3877" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="((&quot;Parameter end (&quot; + end) * -1)" />
    <mutant id="mutant_1215" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_2546" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_3876" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Parameter end (&quot; + end)" to="((&quot;Parameter end (&quot; + end) + 1)" />
    <mutant id="mutant_1201" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="(((size) + length) - 1)" />
    <mutant id="mutant_2532" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3864" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="((&quot;Requested random string length &quot; + count) * -1)" />
    <mutant id="mutant_1202" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="(((size) + length) * -1)" />
    <mutant id="mutant_2533" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3863" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_2530" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_3862" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_1200" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) + length)" to="(((size) + length) + 1)" />
    <mutant id="mutant_2531" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3861" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;)" to="(((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_3860" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="(&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v)" to="((&quot;Supplied value must be a valid byte literal between -32768 and 32767: [&quot; + v) * -1)" />
    <mutant id="mutant_1209" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size) + strLen" to="((size) + strLen) + 1" />
    <mutant id="mutant_1207" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_2538" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_1208" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_2539" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_3869" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="(((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;) * -1)" />
    <mutant id="mutant_1205" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="((index + length) * -1)" />
    <mutant id="mutant_2536" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_3868" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="(((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;) - 1)" />
    <mutant id="mutant_1206" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_2537" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_3867" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;)" to="(((&quot;Requested random string length &quot; + count) + &quot; is less than 0.&quot;) + 1)" />
    <mutant id="mutant_1203" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="((index + length) + 1)" />
    <mutant id="mutant_2534" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_3866" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="((&quot;Requested random string length &quot; + count) - 1)" />
    <mutant id="mutant_1204" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(index + length)" to="((index + length) - 1)" />
    <mutant id="mutant_2535" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_3865" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(&quot;Requested random string length &quot; + count)" to="((&quot;Requested random string length &quot; + count) + 1)" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_405" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_406" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_407" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(java.lang.Object,java.lang.Object)" from="(registry != null) &amp;&amp; ((registry.contains(pair)) || (registry.contains(swappedPair)))" to="!((registry != null) &amp;&amp; ((registry.contains(pair)) || (registry.contains(swappedPair))))" />
    <mutant id="mutant_401" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_402" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="((testClass.getSuperclass()) != null) &amp;&amp; (testClass != reflectUpToClass)" to="!(((testClass.getSuperclass()) != null) &amp;&amp; (testClass != reflectUpToClass))" />
    <mutant id="mutant_403" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_1281" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="((pos + len) + 1)" />
    <mutant id="mutant_1282" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="((pos + len) * -1)" />
    <mutant id="mutant_1280" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(pos + len)" to="((pos + len) - 1)" />
    <mutant id="mutant_408" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_409" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_1278" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="(((size) - endIndex) - 1)" />
    <mutant id="mutant_4304" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="(str + (suffix.toString())) * -1" />
    <mutant id="mutant_1279" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="(index &lt; 0) || (index &gt; (size))" to="!((index &lt; 0) || (index &gt; (size)))" />
    <mutant id="mutant_4303" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="(str + (suffix.toString())) + 1" />
    <mutant id="mutant_1276" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="(((size) - endIndex) * -1)" />
    <mutant id="mutant_4302" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(suffixes != null) &amp;&amp; ((suffixes.length) &gt; 0)" to="!((suffixes != null) &amp;&amp; ((suffixes.length) &gt; 0))" />
    <mutant id="mutant_1277" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - endIndex)" to="(((size) - endIndex) + 1)" />
    <mutant id="mutant_4301" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))" to="!(((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase)))" />
    <mutant id="mutant_1274" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="((startIndex + insertLen) + 1)" />
    <mutant id="mutant_4300" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix)))" to="(!((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))))" />
    <mutant id="mutant_1275" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="((startIndex + insertLen) - 1)" />
    <mutant id="mutant_1272" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="(((size) - removeLen) + insertLen) * -1" />
    <mutant id="mutant_1273" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(startIndex + insertLen)" to="((startIndex + insertLen) * -1)" />
    <mutant id="mutant_4309" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="(size - strLen) * -1" />
    <mutant id="mutant_4308" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size - strLen" to="(size - strLen) + 1" />
    <mutant id="mutant_4307" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="(str == null) || (size &lt;= 0)" to="!((str == null) || (size &lt;= 0))" />
    <mutant id="mutant_4306" viable="false" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="(str == null) || ((strLen = str.length()) == 0)" to="!((str == null) || ((strLen = str.length()) == 0))" />
    <mutant id="mutant_4305" viable="false" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="str + (suffix.toString())" to="(str + (suffix.toString())) - 1" />
    <mutant id="mutant_415" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object,java.lang.Object)" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_416" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_418" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_411" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_412" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_413" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_1270" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="(((size) - removeLen) + insertLen) - 1" />
    <mutant id="mutant_1271" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen) + insertLen" to="(((size) - removeLen) + insertLen) + 1" />
    <mutant id="mutant_419" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_1267" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="(((size) - removeLen) + 1)" />
    <mutant id="mutant_2598" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_1268" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="(((size) - removeLen) - 1)" />
    <mutant id="mutant_2599" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_1265" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) * -1)" />
    <mutant id="mutant_2596" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_1266" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) - 1)" />
    <mutant id="mutant_2597" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_1263" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex &lt; 0) || (endIndex &gt; (length()))" to="!((endIndex &lt; 0) || (endIndex &gt; (length())))" />
    <mutant id="mutant_2594" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_1264" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) + 1)" />
    <mutant id="mutant_2595" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_1261" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="(((size) - endIndex) + 1)" />
    <mutant id="mutant_2592" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_1262" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="(((size) - endIndex) - 1)" />
    <mutant id="mutant_2593" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_410" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_1269" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="((size) - removeLen)" to="(((size) - removeLen) * -1)" />
    <mutant id="mutant_426" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(f.getModifiers())))" to="!((((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(f.getModifiers()))))" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.unregister(java.lang.Object,java.lang.Object)" from="(registry != null) &amp;&amp; (registry.isEmpty())" to="!((registry != null) &amp;&amp; (registry.isEmpty()))" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="((initialOddNumber % 2) * -1)" />
    <mutant id="mutant_429" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="((initialOddNumber % 2) + 1)" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(i &lt; (fields.length)) &amp;&amp; (builder.isEquals)" to="!((i &lt; (fields.length)) &amp;&amp; (builder.isEquals))" />
    <mutant id="mutant_423" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;))))" to="(!((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))))" />
    <mutant id="mutant_424" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(useTransients || (!(Modifier.isTransient(f.getModifiers()))))" to="(!(useTransients || (!(Modifier.isTransient(f.getModifiers())))))" />
    <mutant id="mutant_425" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers())))))" to="(!(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))))" />
    <mutant id="mutant_2590" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_1260" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="((size) - endIndex)" to="(((size) - endIndex) * -1)" />
    <mutant id="mutant_2591" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_1256" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_2587" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_1257" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_2588" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_1254" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setNullText(java.lang.String)" from="(nullText != null) &amp;&amp; (nullText.isEmpty())" to="!((nullText != null) &amp;&amp; (nullText.isEmpty()))" />
    <mutant id="mutant_2585" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_1255" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(pos &lt; len) &amp;&amp; ((buf[pos]) &lt;= ' ')" to="!((pos &lt; len) &amp;&amp; ((buf[pos]) &lt;= ' '))" />
    <mutant id="mutant_2586" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_1252" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_2583" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_1253" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="(index &lt; 0) || (index &gt;= (length()))" to="!((index &lt; 0) || (index &gt;= (length())))" />
    <mutant id="mutant_2584" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_1250" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_2581" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1251" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_2582" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_420" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(i &lt; (lhs.length)) &amp;&amp; (isEquals)" to="!((i &lt; (lhs.length)) &amp;&amp; (isEquals))" />
    <mutant id="mutant_1258" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_2589" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_1259" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(pos &lt; len) &amp;&amp; ((buf[(len - 1)]) &lt;= ' ')" to="!((pos &lt; len) &amp;&amp; ((buf[(len - 1)]) &lt;= ' '))" />
    <mutant id="mutant_437" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) - 1)" />
    <mutant id="mutant_438" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) * -1)" />
    <mutant id="mutant_439" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant)) + (value ? 0 : 1)" to="(((iTotal) * (iConstant)) + (value ? 0 : 1)) + 1" />
    <mutant id="mutant_433" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="((multiplierOddNumber % 2) * -1)" />
    <mutant id="mutant_434" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="((clazz.getSuperclass()) != null) &amp;&amp; (clazz != reflectUpToClass)" to="!(((clazz.getSuperclass()) != null) &amp;&amp; (clazz != reflectUpToClass))" />
    <mutant id="mutant_435" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(java.lang.Object)" from="(registry != null) &amp;&amp; (registry.contains(new IDKey(value)))" to="!((registry != null) &amp;&amp; (registry.contains(new IDKey(value))))" />
    <mutant id="mutant_436" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="((iTotal) * (iConstant))" to="(((iTotal) * (iConstant)) + 1)" />
    <mutant id="mutant_2580" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_1245" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="((i + replaceLen) - 1) * -1" />
    <mutant id="mutant_2576" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_1246" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="((i + replaceLen) - 1) + 1" />
    <mutant id="mutant_2577" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_1243" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="((i + replaceLen) + 1)" />
    <mutant id="mutant_2574" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_1244" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen) - 1" to="((i + replaceLen) - 1) - 1" />
    <mutant id="mutant_2575" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_1241" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="((i + replaceLen) * -1)" />
    <mutant id="mutant_2572" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_1242" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(i + replaceLen)" to="((i + replaceLen) - 1)" />
    <mutant id="mutant_2573" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_2570" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_1240" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(to - removeLen) + replaceLen" to="((to - removeLen) + replaceLen) * -1" />
    <mutant id="mutant_2571" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_430" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(initialOddNumber % 2)" to="((initialOddNumber % 2) - 1)" />
    <mutant id="mutant_431" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="((multiplierOddNumber % 2) + 1)" />
    <mutant id="mutant_432" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="(multiplierOddNumber % 2)" to="((multiplierOddNumber % 2) - 1)" />
    <mutant id="mutant_1249" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="((size) / 2) + 1" />
    <mutant id="mutant_1247" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="((size) / 2) * -1" />
    <mutant id="mutant_2578" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1248" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size) / 2" to="((size) / 2) - 1" />
    <mutant id="mutant_2579" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1083" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="((((buf.arrayOffset()) + (buf.position())) + startIndex) * -1)" />
    <mutant id="mutant_1084" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="((((buf.arrayOffset()) + (buf.position())) + startIndex) - 1)" />
    <mutant id="mutant_1081" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) - 1)" />
    <mutant id="mutant_1082" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(((buf.arrayOffset()) + (buf.position())) + startIndex)" to="((((buf.arrayOffset()) + (buf.position())) + startIndex) + 1)" />
    <mutant id="mutant_1080" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) * -1)" />
    <mutant id="mutant_4106" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4105" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1078" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_4104" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1079" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) + 1)" />
    <mutant id="mutant_4103" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1076" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_4102" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1077" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_4101" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1074" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_4100" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="((j - 1) + 1)" />
    <mutant id="mutant_1075" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; totalLength)" to="!((length &lt; 0) || ((startIndex + length) &gt; totalLength))" />
    <mutant id="mutant_4109" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="(((d[(i - 1)]) + 1) * -1)" />
    <mutant id="mutant_4108" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="(((d[(i - 1)]) + 1) + 1)" />
    <mutant id="mutant_4107" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((d[(i - 1)]) + 1)" to="(((d[(i - 1)]) + 1) - 1)" />
    <mutant id="mutant_1072" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_1073" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_1070" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) - 1)" />
    <mutant id="mutant_1071" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(startIndex &lt; 0) || (startIndex &gt; totalLength)" to="!((startIndex &lt; 0) || (startIndex &gt; totalLength))" />
    <mutant id="mutant_1069" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) * -1)" />
    <mutant id="mutant_1067" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_2398" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) - 1)" />
    <mutant id="mutant_1068" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="((buf.arrayOffset()) + (buf.position()))" to="(((buf.arrayOffset()) + (buf.position())) + 1)" />
    <mutant id="mutant_2399" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) * -1)" />
    <mutant id="mutant_1065" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_2396" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + 1)" />
    <mutant id="mutant_1066" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_2397" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + 1)" />
    <mutant id="mutant_1063" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2394" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) * -1)" />
    <mutant id="mutant_1064" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2395" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) - 1)" />
    <mutant id="mutant_1061" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_2392" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) + 1)" />
    <mutant id="mutant_1062" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2393" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) * -1)" />
    <mutant id="mutant_2390" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;) + 1)" />
    <mutant id="mutant_1060" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_2391" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) - 1)" />
    <mutant id="mutant_1058" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; (str.length()))" to="!((length &lt; 0) || ((startIndex + length) &gt; (str.length())))" />
    <mutant id="mutant_2389" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;) * -1)" />
    <mutant id="mutant_1059" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_1056" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2387" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) * -1)" />
    <mutant id="mutant_1057" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2388" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', has a length less than 2&quot;) - 1)" />
    <mutant id="mutant_1054" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex &lt; 0) || (startIndex &gt; (str.length()))" to="!((startIndex &lt; 0) || (startIndex &gt; (str.length())))" />
    <mutant id="mutant_2385" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + 1)" />
    <mutant id="mutant_1055" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2386" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object)" to="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) - 1)" />
    <mutant id="mutant_1052" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="((len + strLen) * -1)" />
    <mutant id="mutant_2383" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) - 1)" />
    <mutant id="mutant_1053" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="((len + strLen) - 1)" />
    <mutant id="mutant_2384" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) + 1)" />
    <mutant id="mutant_1050" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2381" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) * -1)" />
    <mutant id="mutant_1051" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="(len + strLen)" to="((len + strLen) + 1)" />
    <mutant id="mutant_2382" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((&quot;Array element &quot; + i) + &quot;, \'&quot;)" to="(((&quot;Array element &quot; + i) + &quot;, \'&quot;) * -1)" />
    <mutant id="mutant_2380" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) + 1)" />
    <mutant id="mutant_1047" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_2378" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="(((int)(((array.length) * 1.5))) + 1)" />
    <mutant id="mutant_1048" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2379" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(&quot;Array element &quot; + i)" to="((&quot;Array element &quot; + i) - 1)" />
    <mutant id="mutant_1045" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_2376" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="(((int)(((array.length) * 1.5))) * -1)" />
    <mutant id="mutant_1046" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_2377" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((int)((array.length) * 1.5))" to="(((int)(((array.length) * 1.5))) - 1)" />
    <mutant id="mutant_1043" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2374" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="(srcLength - srcIndex) + 1" />
    <mutant id="mutant_1044" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; (str.length()))" to="!((length &lt; 0) || ((startIndex + length) &gt; (str.length())))" />
    <mutant id="mutant_2375" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="(srcLength - srcIndex) - 1" />
    <mutant id="mutant_1041" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2372" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="(set - srcIndex) + 1" />
    <mutant id="mutant_1042" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2373" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength - srcIndex" to="(srcLength - srcIndex) * -1" />
    <mutant id="mutant_1049" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_4153" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4152" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4151" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4150" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4149" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4148" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4147" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4146" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4145" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4144" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4143" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="((min - 1) * -1)" />
    <mutant id="mutant_4142" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="((min - 1) - 1)" />
    <mutant id="mutant_4141" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(min - 1)" to="((min - 1) + 1)" />
    <mutant id="mutant_4140" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="((j + threshold) - 1)" />
    <mutant id="mutant_4139" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="((j + threshold) * -1)" />
    <mutant id="mutant_4138" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j + threshold)" to="((j + threshold) + 1)" />
    <mutant id="mutant_4137" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="(((Integer.MAX_VALUE) - threshold) - 1)" />
    <mutant id="mutant_4136" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="(((Integer.MAX_VALUE) - threshold) + 1)" />
    <mutant id="mutant_4135" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="((Integer.MAX_VALUE) - threshold)" to="(((Integer.MAX_VALUE) - threshold) * -1)" />
    <mutant id="mutant_4134" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="((j - threshold) - 1)" />
    <mutant id="mutant_4133" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="((j - threshold) * -1)" />
    <mutant id="mutant_4132" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - threshold)" to="((j - threshold) + 1)" />
    <mutant id="mutant_4131" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="((j - 1) + 1)" />
    <mutant id="mutant_4130" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="((j - 1) - 1)" />
    <mutant id="mutant_4128" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="((Math.min(n, threshold)) + 1) * -1" />
    <mutant id="mutant_4127" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="((Math.min(n, threshold)) + 1) + 1" />
    <mutant id="mutant_4126" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold)) + 1" to="((Math.min(n, threshold)) + 1) - 1" />
    <mutant id="mutant_4125" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) * -1" />
    <mutant id="mutant_1098" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_4124" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) - 1" />
    <mutant id="mutant_1099" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) + 1)" />
    <mutant id="mutant_4123" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) + 1" />
    <mutant id="mutant_1096" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_4122" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) * -1" />
    <mutant id="mutant_1097" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_4121" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) - 1" />
    <mutant id="mutant_4129" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(j - 1)" to="((j - 1) * -1)" />
    <mutant id="mutant_1094" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_4120" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n + 1" to="(n + 1) + 1" />
    <mutant id="mutant_1095" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_1092" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; (str.length()))" to="!((length &lt; 0) || ((startIndex + length) &gt; (str.length())))" />
    <mutant id="mutant_1093" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_1090" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_1091" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_4117" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="(((p[(i - 1)]) + cost) + 1)" />
    <mutant id="mutant_4116" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="(((p[(i - 1)]) + cost) - 1)" />
    <mutant id="mutant_1089" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_4115" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4114" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1087" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="((len + strLen) - 1)" />
    <mutant id="mutant_4113" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1088" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(startIndex &lt; 0) || (startIndex &gt; (str.length()))" to="!((startIndex &lt; 0) || (startIndex &gt; (str.length())))" />
    <mutant id="mutant_4112" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="(((p[i]) + 1) * -1)" />
    <mutant id="mutant_1085" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="((len + strLen) + 1)" />
    <mutant id="mutant_4111" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="(((p[i]) + 1) + 1)" />
    <mutant id="mutant_1086" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="(len + strLen)" to="((len + strLen) * -1)" />
    <mutant id="mutant_4110" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[i]) + 1)" to="(((p[i]) + 1) - 1)" />
    <mutant id="mutant_4119" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(s == null) || (t == null)" to="!((s == null) || (t == null))" />
    <mutant id="mutant_4118" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((p[(i - 1)]) + cost)" to="(((p[(i - 1)]) + cost) * -1)" />
    <mutant id="mutant_1919" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="((mTimeZone.equals(other.mTimeZone)) &amp;&amp; ((mStyle) == (other.mStyle))) &amp;&amp; (mLocale.equals(other.mLocale))" to="!(((mTimeZone.equals(other.mTimeZone)) &amp;&amp; ((mStyle) == (other.mStyle))) &amp;&amp; (mLocale.equals(other.mLocale)))" />
    <mutant id="mutant_1917" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="(((char)(('0' + (value % 10)))) * -1)" />
    <mutant id="mutant_1918" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="((mTimeZone.equals(other.mTimeZone)) &amp;&amp; ((mStyle) == (other.mStyle)))" to="(!((mTimeZone.equals(other.mTimeZone)) &amp;&amp; ((mStyle) == (other.mStyle))))" />
    <mutant id="mutant_1915" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="(((char)(('0' + (value % 10)))) + 1)" />
    <mutant id="mutant_1916" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)('0' + (value % 10)))" to="(((char)(('0' + (value % 10)))) - 1)" />
    <mutant id="mutant_4197" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="((i + 1) &lt; strLen) &amp;&amp; (Character.isHighSurrogate(ch))" to="!(((i + 1) &lt; strLen) &amp;&amp; (Character.isHighSurrogate(ch)))" />
    <mutant id="mutant_4196" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4195" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4194" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4193" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_4192" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4191" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4190" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4189" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_4188" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_4187" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_1913" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) + 1)" />
    <mutant id="mutant_1914" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) - 1)" />
    <mutant id="mutant_1911" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) * -1" />
    <mutant id="mutant_1912" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) * -1)" />
    <mutant id="mutant_1910" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) - 1" />
    <mutant id="mutant_1908" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) + 1)" />
    <mutant id="mutant_1909" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) + 1" />
    <mutant id="mutant_1906" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) * -1)" />
    <mutant id="mutant_1907" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) - 1)" />
    <mutant id="mutant_1904" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) - 1)" />
    <mutant id="mutant_1905" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) * -1)" />
    <mutant id="mutant_4186" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="((i &lt; csLast) &amp;&amp; (j &lt; searchLast)) &amp;&amp; (Character.isHighSurrogate(ch))" to="!(((i &lt; csLast) &amp;&amp; (j &lt; searchLast)) &amp;&amp; (Character.isHighSurrogate(ch)))" />
    <mutant id="mutant_4185" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="((i &lt; csLast) &amp;&amp; (j &lt; searchLast))" to="(!((i &lt; csLast) &amp;&amp; (j &lt; searchLast)))" />
    <mutant id="mutant_4184" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) - 1" />
    <mutant id="mutant_4183" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) + 1" />
    <mutant id="mutant_4182" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) * -1" />
    <mutant id="mutant_4181" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) + 1" />
    <mutant id="mutant_4180" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) - 1" />
    <mutant id="mutant_4179" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) * -1" />
    <mutant id="mutant_4178" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_4177" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_4176" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(str == null) || (searchStrs == null)" to="!((str == null) || (searchStrs == null))" />
    <mutant id="mutant_1902" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) + 1)" />
    <mutant id="mutant_1903" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) + 1)" />
    <mutant id="mutant_1900" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) * -1)" />
    <mutant id="mutant_1901" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) - 1)" />
    <mutant id="mutant_4175" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4174" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4173" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4172" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_4171" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_4170" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_4169" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="((i &lt; csLast) &amp;&amp; (j &lt; searchLast)) &amp;&amp; (Character.isHighSurrogate(ch))" to="!(((i &lt; csLast) &amp;&amp; (j &lt; searchLast)) &amp;&amp; (Character.isHighSurrogate(ch)))" />
    <mutant id="mutant_4168" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="((i &lt; csLast) &amp;&amp; (j &lt; searchLast))" to="(!((i &lt; csLast) &amp;&amp; (j &lt; searchLast)))" />
    <mutant id="mutant_4167" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) - 1" />
    <mutant id="mutant_4166" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) + 1" />
    <mutant id="mutant_4165" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) * -1" />
    <mutant id="mutant_4164" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) + 1" />
    <mutant id="mutant_4163" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) - 1" />
    <mutant id="mutant_4162" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) * -1" />
    <mutant id="mutant_4161" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (ArrayUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_4160" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="(seq == null) || (searchSeq == null)" to="!((seq == null) || (searchSeq == null))" />
    <mutant id="mutant_4159" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="(seq == null) || (searchSeq == null)" to="!((seq == null) || (searchSeq == null))" />
    <mutant id="mutant_4158" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="(1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))) * -1" />
    <mutant id="mutant_4157" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="(1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))) + 1" />
    <mutant id="mutant_4156" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="(1 + (Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))) - 1" />
    <mutant id="mutant_4155" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4154" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1959" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="((calendar.getLeastMaximum(Calendar.HOUR)) + 1) * -1" />
    <mutant id="mutant_1950" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) * -1)" />
    <mutant id="mutant_1957" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="((calendar.getLeastMaximum(Calendar.HOUR)) + 1) + 1" />
    <mutant id="mutant_1958" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR)) + 1" to="((calendar.getLeastMaximum(Calendar.HOUR)) + 1) - 1" />
    <mutant id="mutant_1955" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) - 1" />
    <mutant id="mutant_1956" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) * -1" />
    <mutant id="mutant_1953" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) + 1)" />
    <mutant id="mutant_1954" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000)) - (60 * hours)" to="((offset / (60 * 1000)) - (60 * hours)) + 1" />
    <mutant id="mutant_1951" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) * -1)" />
    <mutant id="mutant_1952" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * hours)" to="((60 * hours) - 1)" />
    <mutant id="mutant_1948" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) + 1)" />
    <mutant id="mutant_1949" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(offset / (60 * 1000))" to="((offset / (60 * 1000)) - 1)" />
    <mutant id="mutant_1946" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) - 1)" />
    <mutant id="mutant_1947" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) + 1)" />
    <mutant id="mutant_1944" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) + 1" />
    <mutant id="mutant_1945" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 1000)" to="((60 * 1000) * -1)" />
    <mutant id="mutant_1942" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) - 1" />
    <mutant id="mutant_1943" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) * -1" />
    <mutant id="mutant_1940" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) - 1)" />
    <mutant id="mutant_1941" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) * -1)" />
    <mutant id="mutant_1939" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) + 1)" />
    <mutant id="mutant_1937" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) * -1)" />
    <mutant id="mutant_1938" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) - 1)" />
    <mutant id="mutant_1935" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="((calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))) + 1" />
    <mutant id="mutant_1936" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) + 1)" />
    <mutant id="mutant_1933" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="((calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))) - 1" />
    <mutant id="mutant_1934" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))" to="((calendar.get(Calendar.ZONE_OFFSET)) + (calendar.get(Calendar.DST_OFFSET))) * -1" />
    <mutant id="mutant_1931" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())) + 1" />
    <mutant id="mutant_1932" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(mISO8601) &amp;&amp; (calendar.getTimeZone().getID().equals(&quot;UTC&quot;))" to="!((mISO8601) &amp;&amp; (calendar.getTimeZone().getID().equals(&quot;UTC&quot;)))" />
    <mutant id="mutant_1930" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())) * -1" />
    <mutant id="mutant_1928" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) * -1)" />
    <mutant id="mutant_1929" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) + (mTimeZone.hashCode())) - 1" />
    <mutant id="mutant_1926" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) - 1)" />
    <mutant id="mutant_1927" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((((mStyle) * 31) + (mLocale.hashCode())) * 31)" to="(((((mStyle) * 31) + (mLocale.hashCode())) * 31) + 1)" />
    <mutant id="mutant_4199" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4198" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1924" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="((((mStyle) * 31) + (mLocale.hashCode())) - 1)" />
    <mutant id="mutant_1925" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="((((mStyle) * 31) + (mLocale.hashCode())) * -1)" />
    <mutant id="mutant_1922" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="(((mStyle) * 31) * -1)" />
    <mutant id="mutant_1923" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(((mStyle) * 31) + (mLocale.hashCode()))" to="((((mStyle) * 31) + (mLocale.hashCode())) + 1)" />
    <mutant id="mutant_1920" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="(((mStyle) * 31) + 1)" />
    <mutant id="mutant_1921" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="((mStyle) * 31)" to="(((mStyle) * 31) - 1)" />
    <mutant id="mutant_1993" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(!((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_1994" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="!(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_1991" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))) + 1" />
    <mutant id="mutant_1992" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(!((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')))" />
    <mutant id="mutant_1990" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))) * -1" />
    <mutant id="mutant_1999" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1997" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1998" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1995" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1996" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1982" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="((13 * (mLocale.hashCode())) - 1)" />
    <mutant id="mutant_1983" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="(((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))) + 1)" />
    <mutant id="mutant_1980" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="((13 * (mLocale.hashCode())) + 1)" />
    <mutant id="mutant_1981" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * (mLocale.hashCode()))" to="((13 * (mLocale.hashCode())) * -1)" />
    <mutant id="mutant_1988" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))) - 1)" />
    <mutant id="mutant_1989" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((mPattern.hashCode()) + (13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))) - 1" />
    <mutant id="mutant_1986" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))) + 1)" />
    <mutant id="mutant_1987" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))))" to="((13 * ((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))) * -1)" />
    <mutant id="mutant_1984" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="(((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))) - 1)" />
    <mutant id="mutant_1985" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="((mTimeZone.hashCode()) + (13 * (mLocale.hashCode())))" to="(((mTimeZone.hashCode()) + (13 * (mLocale.hashCode()))) * -1)" />
    <mutant id="mutant_1971" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) * -1)" />
    <mutant id="mutant_1972" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_1970" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) + 1)" />
    <mutant id="mutant_1979" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.equals(java.lang.Object)" from="((mPattern.equals(other.mPattern)) &amp;&amp; (mTimeZone.equals(other.mTimeZone))) &amp;&amp; (mLocale.equals(other.mLocale))" to="!(((mPattern.equals(other.mPattern)) &amp;&amp; (mTimeZone.equals(other.mTimeZone))) &amp;&amp; (mLocale.equals(other.mLocale)))" />
    <mutant id="mutant_1977" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) * -1)" />
    <mutant id="mutant_1978" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.equals(java.lang.Object)" from="((mPattern.equals(other.mPattern)) &amp;&amp; (mTimeZone.equals(other.mTimeZone)))" to="(!((mPattern.equals(other.mPattern)) &amp;&amp; (mTimeZone.equals(other.mTimeZone))))" />
    <mutant id="mutant_1975" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) - 1)" />
    <mutant id="mutant_1976" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) + 1)" />
    <mutant id="mutant_1973" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_1974" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_1960" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="((calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1) + 1" />
    <mutant id="mutant_1961" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="((calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1) * -1" />
    <mutant id="mutant_1968" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="(((calendar.get(Calendar.YEAR)) % 100) * -1)" />
    <mutant id="mutant_1969" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) - 1)" />
    <mutant id="mutant_1966" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="(((calendar.get(Calendar.YEAR)) % 100) - 1)" />
    <mutant id="mutant_1967" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.YEAR)) % 100)" to="(((calendar.get(Calendar.YEAR)) % 100) + 1)" />
    <mutant id="mutant_1964" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_1965" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_1962" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1" to="((calendar.getMaximum(Calendar.HOUR_OF_DAY)) + 1) - 1" />
    <mutant id="mutant_1963" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_2400" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;) * -1)" />
    <mutant id="mutant_3732" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) * -1" />
    <mutant id="mutant_2401" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;) - 1)" />
    <mutant id="mutant_3731" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) - 1" />
    <mutant id="mutant_3730" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) + 1" />
    <mutant id="mutant_2408" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_2409" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_3739" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="(((constant.ordinal()) % (Long.SIZE)) * -1)" />
    <mutant id="mutant_2406" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3738" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="((constant.ordinal()) / (Long.SIZE)) - 1" />
    <mutant id="mutant_2407" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_3737" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="((constant.ordinal()) / (Long.SIZE)) + 1" />
    <mutant id="mutant_2404" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3736" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal()) / (Long.SIZE)" to="((constant.ordinal()) / (Long.SIZE)) * -1" />
    <mutant id="mutant_2405" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3735" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_2402" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;)" to="(((((&quot;Array element &quot; + i) + &quot;, \'&quot;) + object) + &quot;\', is neither of type Map.Entry nor an Array&quot;) + 1)" />
    <mutant id="mutant_3734" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2403" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3733" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3721" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) * -1)" />
    <mutant id="mutant_3720" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) * -1)" />
    <mutant id="mutant_3729" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="((i * 16) - 1)" />
    <mutant id="mutant_3728" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="((i * 16) * -1)" />
    <mutant id="mutant_3727" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(i * 16)" to="((i * 16) + 1)" />
    <mutant id="mutant_3726" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) * -1)" />
    <mutant id="mutant_3725" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) - 1)" />
    <mutant id="mutant_3724" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) + 1)" />
    <mutant id="mutant_3723" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) - 1)" />
    <mutant id="mutant_3722" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) + 1)" />
    <mutant id="mutant_701" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_703" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(firstChar == 'x') || (firstChar == 'X')" to="!((firstChar == 'x') || (firstChar == 'X'))" />
    <mutant id="mutant_704" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9'))" to="(!(((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')))" />
    <mutant id="mutant_700" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_3719" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) - 1)" />
    <mutant id="mutant_709" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(end &lt; seqEnd) &amp;&amp; (((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))) || (((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F')))" to="!((end &lt; seqEnd) &amp;&amp; (((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))) || (((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F'))))" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))" to="(!(((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f')))" />
    <mutant id="mutant_706" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f')))" to="(!((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))))" />
    <mutant id="mutant_707" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F'))" to="(!(((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F')))" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))) || (((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F')))" to="(!(((((input.charAt(end)) &gt;= '0') &amp;&amp; ((input.charAt(end)) &lt;= '9')) || (((input.charAt(end)) &gt;= 'a') &amp;&amp; ((input.charAt(end)) &lt;= 'f'))) || (((input.charAt(end)) &gt;= 'A') &amp;&amp; ((input.charAt(end)) &lt;= 'F'))))" />
    <mutant id="mutant_3710" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="((i * 16) * -1)" />
    <mutant id="mutant_3718" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) + 1)" />
    <mutant id="mutant_3717" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_3716" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_3715" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3714" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) * -1" />
    <mutant id="mutant_3713" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) - 1" />
    <mutant id="mutant_3712" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16) + srcPos" to="((i * 16) + srcPos) + 1" />
    <mutant id="mutant_3711" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="((i * 16) - 1)" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="((2 + end) + 1)" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="((2 + end) - 1)" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="(((2 + end) - start) * -1)" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="(((2 + end) - start) - 1)" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(end != seqEnd) &amp;&amp; ((input.charAt(end)) == ';')" to="!((end != seqEnd) &amp;&amp; ((input.charAt(end)) == ';'))" />
    <mutant id="mutant_3709" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(i * 16)" to="((i * 16) + 1)" />
    <mutant id="mutant_711" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(2 + end)" to="((2 + end) * -1)" />
    <mutant id="mutant_3708" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) * -1)" />
    <mutant id="mutant_716" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((2 + end) - start)" to="(((2 + end) - start) + 1)" />
    <mutant id="mutant_717" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="((((2 + end) - start) + (isHex ? 1 : 0)) + 1)" />
    <mutant id="mutant_718" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="((((2 + end) - start) + (isHex ? 1 : 0)) * -1)" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0))" to="((((2 + end) - start) + (isHex ? 1 : 0)) - 1)" />
    <mutant id="mutant_3707" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) - 1)" />
    <mutant id="mutant_3706" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(((nShorts - 1) * 16) + srcPos)" to="((((nShorts - 1) * 16) + srcPos) + 1)" />
    <mutant id="mutant_3705" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) - 1)" />
    <mutant id="mutant_3704" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) + 1)" />
    <mutant id="mutant_3703" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) * -1)" />
    <mutant id="mutant_3702" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) * -1)" />
    <mutant id="mutant_3701" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) - 1)" />
    <mutant id="mutant_3700" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="(nShorts - 1)" to="((nShorts - 1) + 1)" />
    <mutant id="mutant_723" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.isOctalDigit(char)" from="(ch &gt;= '0') &amp;&amp; (ch &lt;= '7')" to="!((ch &gt;= '0') &amp;&amp; (ch &lt;= '7'))" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.isZeroToThree(char)" from="(ch &gt;= '0') &amp;&amp; (ch &lt;= '3')" to="!((ch &gt;= '0') &amp;&amp; (ch &lt;= '3'))" />
    <mutant id="mutant_725" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="(((input.length()) - index) + 1)" />
    <mutant id="mutant_726" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="(((input.length()) - index) - 1)" />
    <mutant id="mutant_720" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="((((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)) * -1" />
    <mutant id="mutant_721" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="((((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)) - 1" />
    <mutant id="mutant_722" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)" to="((((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0)) + 1" />
    <mutant id="mutant_727" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index)" to="(((input.length()) - index) * -1)" />
    <mutant id="mutant_728" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="(((input.length()) - index) - 1) * -1" />
    <mutant id="mutant_729" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="(((input.length()) - index) - 1) - 1" />
    <mutant id="mutant_1113" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="(((size) + padLen) * -1)" />
    <mutant id="mutant_2444" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3776" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_1114" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) + 1)" />
    <mutant id="mutant_2445" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3775" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="(countryCode.equals(locale.getCountry())) &amp;&amp; (locale.getVariant().isEmpty())" to="!((countryCode.equals(locale.getCountry())) &amp;&amp; (locale.getVariant().isEmpty()))" />
    <mutant id="mutant_1111" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="(((size) + padLen) - 1)" />
    <mutant id="mutant_2442" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3774" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="((languageCode.equals(locale.getLanguage())) &amp;&amp; ((locale.getCountry().length()) != 0)) &amp;&amp; (locale.getVariant().isEmpty())" to="!(((languageCode.equals(locale.getLanguage())) &amp;&amp; ((locale.getCountry().length()) != 0)) &amp;&amp; (locale.getVariant().isEmpty()))" />
    <mutant id="mutant_1112" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + padLen)" to="(((size) + padLen) + 1)" />
    <mutant id="mutant_2443" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3773" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="((languageCode.equals(locale.getLanguage())) &amp;&amp; ((locale.getCountry().length()) != 0))" to="(!((languageCode.equals(locale.getLanguage())) &amp;&amp; ((locale.getCountry().length()) != 0)))" />
    <mutant id="mutant_2440" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3772" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) - 1)" />
    <mutant id="mutant_1110" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="(((size) + i) + 1)" />
    <mutant id="mutant_2441" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3771" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) + 1)" />
    <mutant id="mutant_3770" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) * -1)" />
    <mutant id="mutant_1119" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) + 1" />
    <mutant id="mutant_1117" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) * -1" />
    <mutant id="mutant_2448" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_1118" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) - 1" />
    <mutant id="mutant_2449" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3779" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_1115" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) - 1)" />
    <mutant id="mutant_2446" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3778" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_1116" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) * -1)" />
    <mutant id="mutant_2447" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3777" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_735" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '\\') &amp;&amp; (remaining &gt; 0)) &amp;&amp; (isOctalDigit(input.charAt((index + 1))))" to="!((((input.charAt(index)) == '\\') &amp;&amp; (remaining &gt; 0)) &amp;&amp; (isOctalDigit(input.charAt((index + 1)))))" />
    <mutant id="mutant_736" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_730" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((input.length()) - index) - 1" to="(((input.length()) - index) - 1) + 1" />
    <mutant id="mutant_731" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '\\') &amp;&amp; (remaining &gt; 0))" to="(!(((input.charAt(index)) == '\\') &amp;&amp; (remaining &gt; 0)))" />
    <mutant id="mutant_732" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_738" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_1102" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="((strLen - width) - 1)" />
    <mutant id="mutant_2433" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3765" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) - 1" />
    <mutant id="mutant_1103" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="((strLen - width) + 1)" />
    <mutant id="mutant_2434" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3764" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) + 1" />
    <mutant id="mutant_1100" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) - 1)" />
    <mutant id="mutant_2431" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3763" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) * -1)" />
    <mutant id="mutant_1101" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + width)" to="(((size) + width) * -1)" />
    <mutant id="mutant_2432" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3762" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) - 1)" />
    <mutant id="mutant_3761" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1)" />
    <mutant id="mutant_2430" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3760" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) + 1)" />
    <mutant id="mutant_1108" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="(((size) + i) - 1)" />
    <mutant id="mutant_2439" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_1109" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="((size) + i)" to="(((size) + i) * -1)" />
    <mutant id="mutant_1106" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) - 1" />
    <mutant id="mutant_2437" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3769" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) - 1)" />
    <mutant id="mutant_1107" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) + 1" />
    <mutant id="mutant_2438" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3768" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) + 1)" />
    <mutant id="mutant_1104" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(strLen - width)" to="((strLen - width) * -1)" />
    <mutant id="mutant_2435" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_3767" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) * -1)" />
    <mutant id="mutant_1105" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width - strLen" to="(width - strLen) * -1" />
    <mutant id="mutant_2436" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_3766" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) * -1" />
    <mutant id="mutant_745" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(remaining &gt; 1) &amp;&amp; (isOctalDigit(input.charAt(next2)))" to="!((remaining &gt; 1) &amp;&amp; (isOctalDigit(input.charAt(next2))))" />
    <mutant id="mutant_746" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((remaining &gt; 2) &amp;&amp; (isZeroToThree(input.charAt(next))))" to="(!((remaining &gt; 2) &amp;&amp; (isZeroToThree(input.charAt(next)))))" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((remaining &gt; 2) &amp;&amp; (isZeroToThree(input.charAt(next)))) &amp;&amp; (isOctalDigit(input.charAt(next3)))" to="!(((remaining &gt; 2) &amp;&amp; (isZeroToThree(input.charAt(next)))) &amp;&amp; (isOctalDigit(input.charAt(next3))))" />
    <mutant id="mutant_748" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="(1 + (builder.length())) + 1" />
    <mutant id="mutant_741" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="(index + 3) * -1" />
    <mutant id="mutant_743" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="(index + 3) + 1" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 3" to="(index + 3) - 1" />
    <mutant id="mutant_749" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="(1 + (builder.length())) - 1" />
    <mutant id="mutant_2422" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3754" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) - 1)" />
    <mutant id="mutant_2423" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3753" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) + 1)" />
    <mutant id="mutant_2420" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3752" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) / (Long.SIZE))" to="(((value.ordinal()) / (Long.SIZE)) * -1)" />
    <mutant id="mutant_2421" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3751" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) * -1" />
    <mutant id="mutant_3750" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) - 1" />
    <mutant id="mutant_2428" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_740" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_2429" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_3759" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) - 1)" />
    <mutant id="mutant_2426" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_3758" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) * -1)" />
    <mutant id="mutant_2427" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_3757" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) - 1)" />
    <mutant id="mutant_2424" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3756" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) + 1)" />
    <mutant id="mutant_2425" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3755" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((value.ordinal()) % (Long.SIZE))" to="(((value.ordinal()) % (Long.SIZE)) * -1)" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_758" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '\\') &amp;&amp; ((index + 1) &lt; (input.length())))" to="(!(((input.charAt(index)) == '\\') &amp;&amp; ((index + 1) &lt; (input.length()))))" />
    <mutant id="mutant_752" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(codepoint &gt;= (below)) &amp;&amp; (codepoint &lt;= (above))" to="!((codepoint &gt;= (below)) &amp;&amp; (codepoint &lt;= (above)))" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))) + 1" />
    <mutant id="mutant_754" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))) - 1" />
    <mutant id="mutant_755" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))" to="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))) * -1" />
    <mutant id="mutant_2411" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3743" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) * -1)" />
    <mutant id="mutant_2412" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3742" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(block &lt; (lvalues.length)) &amp;&amp; (((lvalues[block]) &amp; (1 &lt;&lt; ((constant.ordinal()) % (Long.SIZE)))) != 0)" to="!((block &lt; (lvalues.length)) &amp;&amp; (((lvalues[block]) &amp; (1 &lt;&lt; ((constant.ordinal()) % (Long.SIZE)))) != 0))" />
    <mutant id="mutant_3741" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="(((constant.ordinal()) % (Long.SIZE)) - 1)" />
    <mutant id="mutant_2410" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_3740" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="((constant.ordinal()) % (Long.SIZE))" to="(((constant.ordinal()) % (Long.SIZE)) + 1)" />
    <mutant id="mutant_2419" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_750" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1 + (builder.length())" to="(1 + (builder.length())) * -1" />
    <mutant id="mutant_2417" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_3749" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1) + 1" />
    <mutant id="mutant_751" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(codepoint &lt; (below)) || (codepoint &gt; (above))" to="!((codepoint &lt; (below)) || (codepoint &gt; (above)))" />
    <mutant id="mutant_2418" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3748" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) * -1)" />
    <mutant id="mutant_2415" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3747" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) - 1)" />
    <mutant id="mutant_2416" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_3746" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(((enumClass.getEnumConstants().length) - 1) / (Long.SIZE))" to="((((enumClass.getEnumConstants().length) - 1) / (Long.SIZE)) + 1)" />
    <mutant id="mutant_2413" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3745" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) + 1)" />
    <mutant id="mutant_2414" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3744" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="((enumClass.getEnumConstants().length) - 1)" to="(((enumClass.getEnumConstants().length) - 1) - 1)" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_769" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '\\') &amp;&amp; ((index + 1) &lt; (input.length()))) &amp;&amp; ((input.charAt((index + 1))) == 'u')" to="!((((input.charAt(index)) == '\\') &amp;&amp; ((index + 1) &lt; (input.length()))) &amp;&amp; ((input.charAt((index + 1))) == 'u'))" />
    <mutant id="mutant_764" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_765" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_766" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_1160" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_2491" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_1161" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_2492" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_2490" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1157" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="((index + 4) * -1)" />
    <mutant id="mutant_2488" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_1158" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="((index + 4) - 1)" />
    <mutant id="mutant_2489" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1155" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="(((size) + 4) + 1)" />
    <mutant id="mutant_2486" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) + 1)" />
    <mutant id="mutant_1156" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(index + 4)" to="((index + 4) + 1)" />
    <mutant id="mutant_2487" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) - 1)" />
    <mutant id="mutant_1153" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="(((size) + 4) * -1)" />
    <mutant id="mutant_2484" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) - 1)" />
    <mutant id="mutant_1154" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) + 4)" to="(((size) + 4) - 1)" />
    <mutant id="mutant_2485" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n_offset)" to="((startIndexInclusive + n_offset) * -1)" />
    <mutant id="mutant_1151" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="(capacity * 2) - 1" />
    <mutant id="mutant_2482" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) * -1)" />
    <mutant id="mutant_1152" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="(capacity * 2) + 1" />
    <mutant id="mutant_2483" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((startIndexInclusive + n) - n_offset)" to="(((startIndexInclusive + n) - n_offset) + 1)" />
    <mutant id="mutant_760" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_761" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1159" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_778" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_779" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_776" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_777" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) &lt; (input.length())) &amp;&amp; ((input.charAt((index + i))) == '+')" to="!(((index + i) &lt; (input.length())) &amp;&amp; ((input.charAt((index + i))) == '+'))" />
    <mutant id="mutant_2480" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) - 1)" />
    <mutant id="mutant_1150" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity * 2" to="(capacity * 2) * -1" />
    <mutant id="mutant_2481" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) + 1)" />
    <mutant id="mutant_1146" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_2477" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="(n - offset) + 1" />
    <mutant id="mutant_1147" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="((index + len) - 1)" />
    <mutant id="mutant_2478" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="(n - offset) - 1" />
    <mutant id="mutant_1144" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2475" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(n &gt; 1) &amp;&amp; (offset &gt; 0)" to="!((n &gt; 1) &amp;&amp; (offset &gt; 0))" />
    <mutant id="mutant_1145" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_2476" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n - offset" to="(n - offset) * -1" />
    <mutant id="mutant_1142" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_2473" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_1143" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_2474" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_1140" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index &lt; 0) || (index &gt;= (size))" to="!((index &lt; 0) || (index &gt;= (size)))" />
    <mutant id="mutant_2471" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0)" to="!((startIndexInclusive &gt;= ((array.length) - 1)) || (endIndexExclusive &lt;= 0))" />
    <mutant id="mutant_1141" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_2472" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_770" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) &lt; (input.length())) &amp;&amp; ((input.charAt((index + i))) == 'u')" to="!(((index + i) &lt; (input.length())) &amp;&amp; ((input.charAt((index + i))) == 'u'))" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_772" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_1148" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="((index + len) * -1)" />
    <mutant id="mutant_2479" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(startIndexInclusive + n)" to="((startIndexInclusive + n) * -1)" />
    <mutant id="mutant_1149" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="(index + len)" to="((index + len) + 1)" />
    <mutant id="mutant_789" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_785" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_786" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_787" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_788" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_2470" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) + 1)" />
    <mutant id="mutant_1135" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="(i - start) + 1" />
    <mutant id="mutant_2466" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3798" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="((len == 2) || (len == 3))" to="(!((len == 2) || (len == 3)))" />
    <mutant id="mutant_1136" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="(i - start) * -1" />
    <mutant id="mutant_2467" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3797" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="((split.length) - 1) + 1" />
    <mutant id="mutant_1133" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_2464" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3796" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="((split.length) - 1) - 1" />
    <mutant id="mutant_1134" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i - start" to="(i - start) - 1" />
    <mutant id="mutant_2465" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3795" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length) - 1" to="((split.length) - 1) * -1" />
    <mutant id="mutant_1131" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_2462" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3794" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_1132" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_2463" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3793" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_2460" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3792" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_1130" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="(array != null) &amp;&amp; ((array.length) &gt; 0)" to="!((array != null) &amp;&amp; ((array.length) &gt; 0))" />
    <mutant id="mutant_2461" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3791" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_781" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) + 1)" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) * -1)" />
    <mutant id="mutant_783" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) - 1)" />
    <mutant id="mutant_784" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_1139" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="((index + len) + 1)" />
    <mutant id="mutant_1137" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="((index + len) - 1)" />
    <mutant id="mutant_2468" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) * -1)" />
    <mutant id="mutant_780" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_1138" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="(index + len)" to="((index + len) * -1)" />
    <mutant id="mutant_2469" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="((array.length) - 1)" to="(((array.length) - 1) - 1)" />
    <mutant id="mutant_3799" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(StringUtils.isAllLowerCase(str)) &amp;&amp; ((len == 2) || (len == 3))" to="!((StringUtils.isAllLowerCase(str)) &amp;&amp; ((len == 2) || (len == 3)))" />
    <mutant id="mutant_796" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="(i + 4) + 1" />
    <mutant id="mutant_797" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="(i + 4) - 1" />
    <mutant id="mutant_798" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i + 4" to="(i + 4) * -1" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + 1)" />
    <mutant id="mutant_3790" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_1124" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="((((size) + strLen) + i) * -1)" />
    <mutant id="mutant_2455" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3787" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_1125" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="((((size) + strLen) + i) - 1)" />
    <mutant id="mutant_2456" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3786" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_1122" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="(((size) + strLen) * -1)" />
    <mutant id="mutant_2453" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3785" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(!(Character.isUpperCase(ch1))) || (!(Character.isUpperCase(ch2)))" to="!((!(Character.isUpperCase(ch1))) || (!(Character.isUpperCase(ch2))))" />
    <mutant id="mutant_1123" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(((size) + strLen) + i)" to="((((size) + strLen) + i) + 1)" />
    <mutant id="mutant_2454" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3784" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_1120" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="(((size) + strLen) + 1)" />
    <mutant id="mutant_2451" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3783" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_1121" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="((size) + strLen)" to="(((size) + strLen) - 1)" />
    <mutant id="mutant_2452" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3782" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_3781" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_2450" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_3780" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) + 1)" />
    <mutant id="mutant_792" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) - 1)" />
    <mutant id="mutant_793" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="((&quot;Unable to parse unicode value: &quot; + unicode) + 1)" />
    <mutant id="mutant_794" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="((&quot;Unable to parse unicode value: &quot; + unicode) * -1)" />
    <mutant id="mutant_795" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Unable to parse unicode value: &quot; + unicode)" to="((&quot;Unable to parse unicode value: &quot; + unicode) - 1)" />
    <mutant id="mutant_1128" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="(((size) + length) * -1)" />
    <mutant id="mutant_2459" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) + 1" />
    <mutant id="mutant_1129" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String,int)" from="(separator != null) &amp;&amp; (loopIndex &gt; 0)" to="!((separator != null) &amp;&amp; (loopIndex &gt; 0))" />
    <mutant id="mutant_790" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) + 1)" />
    <mutant id="mutant_1126" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="(((size) + length) + 1)" />
    <mutant id="mutant_2457" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) - 1" />
    <mutant id="mutant_3789" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) * -1)" />
    <mutant id="mutant_791" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((index + i) + 4)" to="(((index + i) + 4) * -1)" />
    <mutant id="mutant_1127" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="((size) + length)" to="(((size) + length) - 1)" />
    <mutant id="mutant_2458" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive)) - 1" to="((Math.min(array.length, endIndexExclusive)) - 1) * -1" />
    <mutant id="mutant_3788" viable="false" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(&quot;Invalid locale format: &quot; + str)" to="((&quot;Invalid locale format: &quot; + str) - 1)" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="(((long)(x)) + ((long)(y))) * -1" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="(((long)(x)) + ((long)(y))) - 1" />
    <mutant id="mutant_5" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="(((float)(numerator)) / ((float)(denominator))) + 1" />
    <mutant id="mutant_686" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="((input.length()) - index) * -1" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="(((float)(numerator)) / ((float)(denominator))) - 1" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) * -1)" />
    <mutant id="mutant_7" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x)) + ((long)(y))" to="(((long)(x)) + ((long)(y))) + 1" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) - 1)" />
    <mutant id="mutant_6" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator)) / ((float)(denominator))" to="(((float)(numerator)) / ((float)(denominator))) * -1" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + i)" to="((index + i) + 1)" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="(((fraction.denominator) / d2) * -1)" />
    <mutant id="mutant_2293" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + 1)" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) + 1)" />
    <mutant id="mutant_2294" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - 1)" />
    <mutant id="mutant_87" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="(((fraction.denominator) / d2) + 1)" />
    <mutant id="mutant_2291" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) * -1)" />
    <mutant id="mutant_86" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d2)" to="(((fraction.denominator) / d2) - 1)" />
    <mutant id="mutant_2292" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) + 1)" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="(value - a1) + 1" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value &gt; (Integer.MAX_VALUE)) || (Double.isNaN(value))" to="!((value &gt; (Integer.MAX_VALUE)) || (Double.isNaN(value)))" />
    <mutant id="mutant_2290" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) - 1)" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="(value - a1) - 1" />
    <mutant id="mutant_2288" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;) + 1)" />
    <mutant id="mutant_2289" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index &gt; length) || (index &lt; 0)" to="!((index &gt; length) || (index &lt; 0))" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000))" to="(!((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000)))" />
    <mutant id="mutant_2286" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;) * -1)" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value - a1" to="(value - a1) * -1" />
    <mutant id="mutant_2287" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: 0&quot;) - 1)" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000)) &amp;&amp; (denom2 &gt; 0)) &amp;&amp; (i &lt; 25)" to="!((((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000)) &amp;&amp; (denom2 &gt; 0)) &amp;&amp; (i &lt; 25))" />
    <mutant id="mutant_2284" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) * -1)" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000)) &amp;&amp; (denom2 &gt; 0))" to="(!(((delta1 &gt; delta2) &amp;&amp; (denom2 &lt;= 10000)) &amp;&amp; (denom2 &gt; 0)))" />
    <mutant id="mutant_2285" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) + 1)" />
    <mutant id="mutant_1" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="(((double)(numerator)) / ((double)(denominator))) - 1" />
    <mutant id="mutant_682" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="((index + (longest)) + 1)" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="((getNumerator()) == (other.getNumerator())) &amp;&amp; ((getDenominator()) == (other.getDenominator()))" to="!(((getNumerator()) == (other.getNumerator())) &amp;&amp; ((getDenominator()) == (other.getDenominator())))" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="((index + (longest)) * -1)" />
    <mutant id="mutant_3" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="(((double)(numerator)) / ((double)(denominator))) * -1" />
    <mutant id="mutant_684" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="((input.length()) - index) + 1" />
    <mutant id="mutant_2" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator)) / ((double)(denominator))" to="(((double)(numerator)) / ((double)(denominator))) + 1" />
    <mutant id="mutant_685" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length()) - index" to="((input.length()) - index) - 1" />
    <mutant id="mutant_680" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))) - 1" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + (longest))" to="((index + (longest)) - 1)" />
    <mutant id="mutant_697" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '&amp;') &amp;&amp; (index &lt; (seqEnd - 2))) &amp;&amp; ((input.charAt((index + 1))) == '#')" to="!((((input.charAt(index)) == '&amp;') &amp;&amp; (index &lt; (seqEnd - 2))) &amp;&amp; ((input.charAt((index + 1))) == '#'))" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="(((long)(numerator)) / (denominator)) + 1" />
    <mutant id="mutant_2282" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="(((long)(numerator)) / (denominator)) - 1" />
    <mutant id="mutant_2283" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) - 1)" />
    <mutant id="mutant_76" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) * -1)" />
    <mutant id="mutant_2280" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator)) / (denominator)" to="(((long)(numerator)) / (denominator)) * -1" />
    <mutant id="mutant_2281" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) + 1)" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) - 1)" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) * -1)" />
    <mutant id="mutant_2279" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_2277" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_2278" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) + 1)" />
    <mutant id="mutant_2275" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) - 1)" />
    <mutant id="mutant_2276" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) - 1)" />
    <mutant id="mutant_2273" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_82" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="((denominator) / d1)" to="(((denominator) / d1) * -1)" />
    <mutant id="mutant_2274" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="((seqEnd - 2) + 1)" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="((seqEnd - 2) - 1)" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(((input.charAt(index)) == '&amp;') &amp;&amp; (index &lt; (seqEnd - 2)))" to="(!(((input.charAt(index)) == '&amp;') &amp;&amp; (index &lt; (seqEnd - 2))))" />
    <mutant id="mutant_696" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(codepoint &lt; (below)) || (codepoint &gt; (above))" to="!((codepoint &lt; (below)) || (codepoint &gt; (above)))" />
    <mutant id="mutant_691" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(codepoint &gt;= (below)) &amp;&amp; (codepoint &lt;= (above))" to="!((codepoint &gt;= (below)) &amp;&amp; (codepoint &lt;= (above)))" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(seqEnd - 2)" to="((seqEnd - 2) * -1)" />
    <mutant id="mutant_2271" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_2272" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_2270" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_2268" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_2269" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_3599" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_2266" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3598" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) * -1)" />
    <mutant id="mutant_2267" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3597" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) - 1)" />
    <mutant id="mutant_2264" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3596" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) + 1)" />
    <mutant id="mutant_2265" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3595" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) - 1)" />
    <mutant id="mutant_2262" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3594" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) * -1)" />
    <mutant id="mutant_2263" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3593" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) + 1)" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="((int)((x1 / y1))) - 1" />
    <mutant id="mutant_2260" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3592" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="((nHex - 1) - 1)" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="((int)((x1 / y1))) + 1" />
    <mutant id="mutant_2261" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3591" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="((nHex - 1) * -1)" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="((a2 * y1) * -1)" />
    <mutant id="mutant_3590" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(nHex - 1)" to="((nHex - 1) + 1)" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(x1 / y1))" to="((int)((x1 / y1))) * -1" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="((a2 * y1) + 1)" />
    <mutant id="mutant_2257" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3589" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2258" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3588" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2255" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3587" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2256" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3586" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) + 1" />
    <mutant id="mutant_2253" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3585" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) - 1" />
    <mutant id="mutant_2254" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3584" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) * -1" />
    <mutant id="mutant_2251" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3583" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_2252" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3582" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_2259" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_4032" viable="false" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="(cs == null) || ((strLen = cs.length()) == 0)" to="!((cs == null) || ((strLen = cs.length()) == 0))" />
    <mutant id="mutant_4031" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="((Character.isLetterOrDigit(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' ')" to="!(((Character.isLetterOrDigit(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' '))" />
    <mutant id="mutant_4030" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="((Character.isLetter(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' ')" to="!(((Character.isLetter(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' '))" />
    <mutant id="mutant_4029" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))" to="!((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs)))" />
    <mutant id="mutant_4028" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))" to="!((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs)))" />
    <mutant id="mutant_4027" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str1 == null) || (str2 == null)" to="!((str1 == null) || (str2 == null))" />
    <mutant id="mutant_4026" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="!((cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String))" />
    <mutant id="mutant_4025" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="!((cs1 == null) || (cs2 == null))" />
    <mutant id="mutant_4024" viable="true" in="org.apache.commons.lang3.StringUtils.endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (ArrayUtils.isEmpty(searchStrings))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (ArrayUtils.isEmpty(searchStrings)))" />
    <mutant id="mutant_4023" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="((str.length()) - (suffix.length())) * -1" />
    <mutant id="mutant_4022" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="((str.length()) - (suffix.length())) - 1" />
    <mutant id="mutant_4021" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length()) - (suffix.length())" to="((str.length()) - (suffix.length())) + 1" />
    <mutant id="mutant_4020" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str == null) &amp;&amp; (suffix == null)" to="!((str == null) &amp;&amp; (suffix == null))" />
    <mutant id="mutant_4018" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,java.lang.String)" from="(cs == null) || (validChars == null)" to="!((cs == null) || (validChars == null))" />
    <mutant id="mutant_4017" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(valid == null) || (cs == null)" to="!((valid == null) || (cs == null))" />
    <mutant id="mutant_4016" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,java.lang.String)" from="(cs == null) || (invalidChars == null)" to="!((cs == null) || (invalidChars == null))" />
    <mutant id="mutant_4015" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i &lt; csLast) &amp;&amp; ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))" to="!((i &lt; csLast) &amp;&amp; ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))))" />
    <mutant id="mutant_4014" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4013" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4012" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4011" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_4019" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str == null) || (suffix == null)" to="!((str == null) || (suffix == null))" />
    <mutant id="mutant_4010" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_4007" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) + 1" />
    <mutant id="mutant_4006" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) * -1" />
    <mutant id="mutant_4005" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) + 1" />
    <mutant id="mutant_4004" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) - 1" />
    <mutant id="mutant_4003" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen - 1" to="(csLen - 1) * -1" />
    <mutant id="mutant_4002" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(cs == null) || (searchChars == null)" to="!((cs == null) || (searchChars == null))" />
    <mutant id="mutant_4001" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="((str.length()) - len) * -1" />
    <mutant id="mutant_4000" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length()) - len" to="((str.length()) - len) - 1" />
    <mutant id="mutant_4009" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_4008" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen - 1" to="(searchLen - 1) - 1" />
    <mutant id="mutant_2299" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="((length + 1) - 1)" />
    <mutant id="mutant_2297" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) * -1)" />
    <mutant id="mutant_2298" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) + 1)" />
    <mutant id="mutant_2295" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * -1)" />
    <mutant id="mutant_2296" viable="false" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) - 1)" />
    <mutant id="mutant_4076" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="((((m1.length()) - transpositions) / ((double)(m1.length()))) + 1)" />
    <mutant id="mutant_4075" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="(((m1.length()) - transpositions) + 1)" />
    <mutant id="mutant_4074" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="(((m1.length()) - transpositions) - 1)" />
    <mutant id="mutant_4073" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) - transpositions)" to="(((m1.length()) - transpositions) * -1)" />
    <mutant id="mutant_4072" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + 1)" />
    <mutant id="mutant_4071" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) * -1)" />
    <mutant id="mutant_4070" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length()))))" to="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) - 1)" />
    <mutant id="mutant_4069" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="(((m2.length()) / ((double)(longer.length()))) * -1)" />
    <mutant id="mutant_4068" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="(((m2.length()) / ((double)(longer.length()))) - 1)" />
    <mutant id="mutant_4067" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m2.length()) / ((double)(longer.length())))" to="(((m2.length()) / ((double)(longer.length()))) + 1)" />
    <mutant id="mutant_4066" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="(((m1.length()) / ((double)(shorter.length()))) * -1)" />
    <mutant id="mutant_4065" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="(((m1.length()) / ((double)(shorter.length()))) - 1)" />
    <mutant id="mutant_4064" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) / ((double)(shorter.length())))" to="(((m1.length()) / ((double)(shorter.length()))) + 1)" />
    <mutant id="mutant_4063" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((m1.length()) == 0) || ((m2.length()) == 0)" to="!(((m1.length()) == 0) || ((m2.length()) == 0))" />
    <mutant id="mutant_4062" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="(((shorter.length()) / 2) + 1) * -1" />
    <mutant id="mutant_4061" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="(((shorter.length()) / 2) + 1) - 1" />
    <mutant id="mutant_4060" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2) + 1" to="(((shorter.length()) / 2) + 1) + 1" />
    <mutant id="mutant_4059" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="(((shorter.length()) / 2) - 1)" />
    <mutant id="mutant_4058" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="(((shorter.length()) / 2) * -1)" />
    <mutant id="mutant_4057" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((shorter.length()) / 2)" to="(((shorter.length()) / 2) + 1)" />
    <mutant id="mutant_4056" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="((Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0) - 1" />
    <mutant id="mutant_4055" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="((Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0) * -1" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="((Math.abs(u)) + (Math.abs(v))) + 1" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="((Math.abs(u)) + (Math.abs(v))) * -1" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="((Math.abs(u)) == 1) || ((Math.abs(v)) == 1)" to="!(((Math.abs(u)) == 1) || ((Math.abs(v)) == 1))" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u)) + (Math.abs(v))" to="((Math.abs(u)) + (Math.abs(v))) - 1" />
    <mutant id="mutant_4054" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0" to="((Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0) + 1" />
    <mutant id="mutant_4053" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0) + 1)" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) - 1" />
    <mutant id="mutant_4052" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0) * -1)" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="(((numerator) % (denominator)) * -1)" />
    <mutant id="mutant_4051" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)" to="(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0) - 1)" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) * -1" />
    <mutant id="mutant_4050" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * -1)" />
    <mutant id="mutant_22" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) + 1" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u == (Integer.MIN_VALUE)) || (v == (Integer.MIN_VALUE))" to="!((u == (Integer.MIN_VALUE)) || (v == (Integer.MIN_VALUE)))" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u == 0) || (v == 0)" to="!((u == 0) || (v == 0))" />
    <mutant id="mutant_4049" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) - 1)" />
    <mutant id="mutant_4048" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)))" to="((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) + 1)" />
    <mutant id="mutant_4047" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="(((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)) + 1)" />
    <mutant id="mutant_4046" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="(((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)) * -1)" />
    <mutant id="mutant_4045" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))" to="(((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro)) - 1)" />
    <mutant id="mutant_4044" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="((1.0 - jaro) + 1)" />
    <mutant id="mutant_16" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="(((long)(other.numerator)) * ((long)(denominator))) + 1" />
    <mutant id="mutant_15" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="(((long)(other.numerator)) * ((long)(denominator))) * -1" />
    <mutant id="mutant_18" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="(((numerator) % (denominator)) + 1)" />
    <mutant id="mutant_17" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator)) * ((long)(denominator))" to="(((long)(other.numerator)) * ((long)(denominator))) - 1" />
    <mutant id="mutant_19" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="((numerator) % (denominator))" to="(((numerator) % (denominator)) - 1)" />
    <mutant id="mutant_4043" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="((1.0 - jaro) * -1)" />
    <mutant id="mutant_4042" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(1.0 - jaro)" to="((1.0 - jaro) - 1)" />
    <mutant id="mutant_10" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="(s &lt; (Integer.MIN_VALUE)) || (s &gt; (Integer.MAX_VALUE))" to="!((s &lt; (Integer.MIN_VALUE)) || (s &gt; (Integer.MAX_VALUE)))" />
    <mutant id="mutant_4041" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="((DEFAULT_SCALING_FACTOR * cl) * -1)" />
    <mutant id="mutant_4040" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="((DEFAULT_SCALING_FACTOR * cl) - 1)" />
    <mutant id="mutant_12" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="(((long)(numerator)) * ((long)(other.denominator))) * -1" />
    <mutant id="mutant_11" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((numerator) == (other.numerator)) &amp;&amp; ((denominator) == (other.denominator))" to="!(((numerator) == (other.numerator)) &amp;&amp; ((denominator) == (other.denominator)))" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="(((long)(numerator)) * ((long)(other.denominator))) - 1" />
    <mutant id="mutant_13" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator)) * ((long)(other.denominator))" to="(((long)(numerator)) * ((long)(other.denominator))) + 1" />
    <mutant id="mutant_4039" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(DEFAULT_SCALING_FACTOR * cl)" to="((DEFAULT_SCALING_FACTOR * cl) + 1)" />
    <mutant id="mutant_4038" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(first == null) || (second == null)" to="!((first == null) || (second == null))" />
    <mutant id="mutant_4037" viable="true" in="org.apache.commons.lang3.StringUtils.startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(org.apache.commons.lang3.StringUtils.isEmpty(string)) || (ArrayUtils.isEmpty(searchStrings))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (ArrayUtils.isEmpty(searchStrings)))" />
    <mutant id="mutant_4036" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str == null) &amp;&amp; (prefix == null)" to="!((str == null) &amp;&amp; (prefix == null))" />
    <mutant id="mutant_4035" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str == null) || (prefix == null)" to="!((str == null) || (prefix == null))" />
    <mutant id="mutant_4034" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="((Character.isDigit(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' ')" to="!(((Character.isDigit(cs.charAt(i))) == false) &amp;&amp; ((cs.charAt(i)) != ' '))" />
    <mutant id="mutant_4033" viable="true" in="org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)" from="(cs == null) || ((cs.length()) == 0)" to="!((cs == null) || ((cs.length()) == 0))" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="(((37 * 17) + (getNumerator())) * -1)" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="(((37 * 17) + (getNumerator())) - 1)" />
    <mutant id="mutant_1838" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_1839" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="((-u) * (1 &lt;&lt; k)) - 1" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="((v - u) / 2) + 1" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="((-u) * (1 &lt;&lt; k)) * -1" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(-u) * (1 &lt;&lt; k)" to="((-u) * (1 &lt;&lt; k)) + 1" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="((37 * 17) - 1)" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="((37 * 17) * -1)" />
    <mutant id="mutant_47" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="((37 * 17) + (getNumerator()))" to="(((37 * 17) + (getNumerator())) + 1)" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * 17)" to="((37 * 17) + 1)" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="((37 * ((37 * 17) + (getNumerator()))) * -1)" />
    <mutant id="mutant_1836" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + 1)" />
    <mutant id="mutant_1837" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_1834" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) * -1)" />
    <mutant id="mutant_1835" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID()))" to="((((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + (timeZone.getID())) - 1)" />
    <mutant id="mutant_1832" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_1833" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_1830" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) - 1)" />
    <mutant id="mutant_1831" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;)" to="(((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="((v - u) / 2) - 1" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="((v - u) * -1)" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u) / 2" to="((v - u) / 2) * -1" />
    <mutant id="mutant_1829" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) * -1)" />
    <mutant id="mutant_1827" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_1828" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale))" to="((((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) + (locale)) + 1)" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(((u &amp; 1) == 0) &amp;&amp; ((v &amp; 1) == 0))" to="(!(((u &amp; 1) == 0) &amp;&amp; ((v &amp; 1) == 0)))" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="((u / 2) + 1)" />
    <mutant id="mutant_31" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(((u &amp; 1) == 0) &amp;&amp; ((v &amp; 1) == 0)) &amp;&amp; (k &lt; 31)" to="!((((u &amp; 1) == 0) &amp;&amp; ((v &amp; 1) == 0)) &amp;&amp; (k &lt; 31))" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="((u / 2) * -1)" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(u / 2)" to="((u / 2) - 1)" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="((v - u) - 1)" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(v - u)" to="((v - u) + 1)" />
    <mutant id="mutant_4099" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="((j - 1) - 1)" />
    <mutant id="mutant_1825" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_1826" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;)" to="(((&quot;FastDateParser[&quot; + (pattern)) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_1823" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="((&quot;FastDateParser[&quot; + (pattern)) - 1)" />
    <mutant id="mutant_1824" viable="false" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="((&quot;FastDateParser[&quot; + (pattern)) * -1)" />
    <mutant id="mutant_1821" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))) + 1" />
    <mutant id="mutant_1822" viable="true" in="org.apache.commons.lang3.time.FastDateParser.toString()" from="(&quot;FastDateParser[&quot; + (pattern))" to="((&quot;FastDateParser[&quot; + (pattern)) + 1)" />
    <mutant id="mutant_1820" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))) * -1" />
    <mutant id="mutant_4090" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="((previousMatchingCharacterIndex + 1) - 1)" />
    <mutant id="mutant_1818" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((13 * ((timeZone.hashCode()) + (13 * (locale.hashCode())))) - 1)" />
    <mutant id="mutant_1819" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((pattern.hashCode()) + (13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))) - 1" />
    <mutant id="mutant_1816" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((13 * ((timeZone.hashCode()) + (13 * (locale.hashCode())))) + 1)" />
    <mutant id="mutant_1817" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * ((timeZone.hashCode()) + (13 * (locale.hashCode()))))" to="((13 * ((timeZone.hashCode()) + (13 * (locale.hashCode())))) * -1)" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) * -1" />
    <mutant id="mutant_4098" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(j - 1)" to="((j - 1) * -1)" />
    <mutant id="mutant_62" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="(m &lt; (Integer.MIN_VALUE)) || (m &gt; (Integer.MAX_VALUE))" to="!((m &lt; (Integer.MIN_VALUE)) || (m &gt; (Integer.MAX_VALUE)))" />
    <mutant id="mutant_4097" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) * -1" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) - 1" />
    <mutant id="mutant_4096" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) - 1" />
    <mutant id="mutant_64" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) + 1" />
    <mutant id="mutant_4095" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) + 1" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="(((long)(x)) - ((long)(y))) - 1" />
    <mutant id="mutant_4094" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) * -1" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="(((long)(x)) - ((long)(y))) * -1" />
    <mutant id="mutant_4093" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) - 1" />
    <mutant id="mutant_69" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="(s &lt; (Integer.MIN_VALUE)) || (s &gt; (Integer.MAX_VALUE))" to="!((s &lt; (Integer.MIN_VALUE)) || (s &gt; (Integer.MAX_VALUE)))" />
    <mutant id="mutant_4092" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n + 1" to="(n + 1) + 1" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x)) - ((long)(y))" to="(((long)(x)) - ((long)(y))) + 1" />
    <mutant id="mutant_4091" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(s == null) || (t == null)" to="!((s == null) || (t == null))" />
    <mutant id="mutant_70" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="(((-1) * (denominator)) * -1)" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="(((-1) * (denominator)) + 1)" />
    <mutant id="mutant_4089" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="((previousMatchingCharacterIndex + 1) * -1)" />
    <mutant id="mutant_71" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="((-1) * (denominator))" to="(((-1) * (denominator)) - 1)" />
    <mutant id="mutant_4088" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(previousMatchingCharacterIndex + 1)" to="((previousMatchingCharacterIndex + 1) + 1)" />
    <mutant id="mutant_1814" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="(((timeZone.hashCode()) + (13 * (locale.hashCode()))) - 1)" />
    <mutant id="mutant_1815" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="(((timeZone.hashCode()) + (13 * (locale.hashCode()))) * -1)" />
    <mutant id="mutant_1812" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="((13 * (locale.hashCode())) - 1)" />
    <mutant id="mutant_1813" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="((timeZone.hashCode()) + (13 * (locale.hashCode())))" to="(((timeZone.hashCode()) + (13 * (locale.hashCode()))) + 1)" />
    <mutant id="mutant_1810" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="((13 * (locale.hashCode())) + 1)" />
    <mutant id="mutant_1811" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(13 * (locale.hashCode()))" to="((13 * (locale.hashCode())) * -1)" />
    <mutant id="mutant_59" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) * -1" />
    <mutant id="mutant_1809" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="(trial + 100) - 1" />
    <mutant id="mutant_1807" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="(trial + 100) + 1" />
    <mutant id="mutant_1808" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial + 100" to="(trial + 100) * -1" />
    <mutant id="mutant_1805" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="((century) + twoDigitYear) * -1" />
    <mutant id="mutant_1806" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="((century) + twoDigitYear) - 1" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="((37 * ((37 * 17) + (getNumerator()))) + 1)" />
    <mutant id="mutant_4087" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(termIndex &lt; (termLowerCase.length())) &amp;&amp; (!termCharacterMatchFound)" to="!((termIndex &lt; (termLowerCase.length())) &amp;&amp; (!termCharacterMatchFound))" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator())))" to="((37 * ((37 * 17) + (getNumerator()))) - 1)" />
    <mutant id="mutant_4086" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(term == null) || (query == null)" to="!((term == null) || (query == null))" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="((37 * ((37 * 17) + (getNumerator()))) + (getDenominator())) * -1" />
    <mutant id="mutant_4085" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub)))" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="((37 * ((37 * 17) + (getNumerator()))) + (getDenominator())) + 1" />
    <mutant id="mutant_4084" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0) - 1" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) - 1" />
    <mutant id="mutant_4083" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0) + 1" />
    <mutant id="mutant_55" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(37 * ((37 * 17) + (getNumerator()))) + (getDenominator())" to="((37 * ((37 * 17) + (getNumerator()))) + (getDenominator())) - 1" />
    <mutant id="mutant_4082" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0) * -1" />
    <mutant id="mutant_58" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) * -1" />
    <mutant id="mutant_4081" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) * -1)" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator) / (denominator)" to="((numerator) / (denominator)) + 1" />
    <mutant id="mutant_4080" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) - 1)" />
    <mutant id="mutant_4079" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length()))))" to="(((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) + 1)" />
    <mutant id="mutant_61" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) - 1" />
    <mutant id="mutant_4078" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="((((m1.length()) - transpositions) / ((double)(m1.length()))) * -1)" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x)) * ((long)(y))" to="(((long)(x)) * ((long)(y))) + 1" />
    <mutant id="mutant_4077" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(((m1.length()) - transpositions) / ((double)(m1.length())))" to="((((m1.length()) - transpositions) / ((double)(m1.length()))) - 1)" />
    <mutant id="mutant_1803" viable="true" in="org.apache.commons.lang3.time.FastDateParser.isNextNumber()" from="((nextStrategy) != null) &amp;&amp; (nextStrategy.isNumber())" to="!(((nextStrategy) != null) &amp;&amp; (nextStrategy.isNumber()))" />
    <mutant id="mutant_1804" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century) + twoDigitYear" to="((century) + twoDigitYear) + 1" />
    <mutant id="mutant_1801" viable="true" in="org.apache.commons.lang3.time.FastDateParser.equals(java.lang.Object)" from="((pattern.equals(other.pattern)) &amp;&amp; (timeZone.equals(other.timeZone)))" to="(!((pattern.equals(other.pattern)) &amp;&amp; (timeZone.equals(other.timeZone))))" />
    <mutant id="mutant_1802" viable="true" in="org.apache.commons.lang3.time.FastDateParser.equals(java.lang.Object)" from="((pattern.equals(other.pattern)) &amp;&amp; (timeZone.equals(other.timeZone))) &amp;&amp; (locale.equals(other.locale))" to="!(((pattern.equals(other.pattern)) &amp;&amp; (timeZone.equals(other.timeZone))) &amp;&amp; (locale.equals(other.locale)))" />
    <mutant id="mutant_1800" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="(centuryStartYear - (century)) - 1" />
    <mutant id="mutant_1872" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="(((formatField.length()) - 1) - 1)" />
    <mutant id="mutant_1873" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) * -1)" />
    <mutant id="mutant_1870" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="(((formatField.length()) - 1) + 1)" />
    <mutant id="mutant_1871" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="((formatField.length()) - 1)" to="(((formatField.length()) - 1) * -1)" />
    <mutant id="mutant_1878" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="(((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_1879" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) * -1)" />
    <mutant id="mutant_1876" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="(((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_1877" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;)" to="(((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_1874" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) - 1)" />
    <mutant id="mutant_1875" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart())))" to="((&quot;Illegal pattern character \'&quot; + (pattern.charAt(patternMatcher.regionStart()))) + 1)" />
    <mutant id="mutant_1861" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) * -1)" />
    <mutant id="mutant_1862" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) - 1)" />
    <mutant id="mutant_1860" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="((&quot;Unparseable date: \&quot;&quot; + source) * -1)" />
    <mutant id="mutant_1869" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="((offset + (matcher.end())) - 1)" />
    <mutant id="mutant_1867" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="((offset + (matcher.end())) + 1)" />
    <mutant id="mutant_1868" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(offset + (matcher.end()))" to="((offset + (matcher.end())) * -1)" />
    <mutant id="mutant_1865" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) - 1)" />
    <mutant id="mutant_1866" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) + 1)" />
    <mutant id="mutant_1863" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;)" to="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + 1)" />
    <mutant id="mutant_1864" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="((((&quot;Unparseable date: \&quot;&quot; + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) * -1)" />
    <mutant id="mutant_1850" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) - 1)" />
    <mutant id="mutant_1851" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + 1)" />
    <mutant id="mutant_1858" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="((&quot;Unparseable date: \&quot;&quot; + source) - 1)" />
    <mutant id="mutant_1859" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;Unparseable date: \&quot;&quot; + source)" to="((&quot;Unparseable date: \&quot;&quot; + source) + 1)" />
    <mutant id="mutant_1856" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) - 1)" />
    <mutant id="mutant_1857" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) + 1)" />
    <mutant id="mutant_1854" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) - 1)" />
    <mutant id="mutant_1855" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern()))" to="(((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + (parsePattern.pattern())) * -1)" />
    <mutant id="mutant_1852" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) * -1)" />
    <mutant id="mutant_1853" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;)" to="((((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) + &quot;\&quot; does not match &quot;) + 1)" />
    <mutant id="mutant_1849" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source)" to="(((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + source) * -1)" />
    <mutant id="mutant_1840" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="((&quot;(The &quot; + (locale)) * -1)" />
    <mutant id="mutant_1847" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) - 1)" />
    <mutant id="mutant_1848" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) + 1)" />
    <mutant id="mutant_1845" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) - 1)" />
    <mutant id="mutant_1846" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;)" to="((((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + &quot;Unparseable date: \&quot;&quot;) * -1)" />
    <mutant id="mutant_1843" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) + 1)" />
    <mutant id="mutant_1844" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;)" to="(((&quot;(The &quot; + (locale)) + &quot; locale does not support dates before 1868 AD)\n&quot;) * -1)" />
    <mutant id="mutant_1841" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="((&quot;(The &quot; + (locale)) - 1)" />
    <mutant id="mutant_1842" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="(&quot;(The &quot; + (locale))" to="((&quot;(The &quot; + (locale)) + 1)" />
    <mutant id="mutant_3611" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="((nInts - 1) - 1)" />
    <mutant id="mutant_3610" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="((nInts - 1) * -1)" />
    <mutant id="mutant_3619" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="((i * 32) - 1)" />
    <mutant id="mutant_3618" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="((((nInts - 1) * 32) + dstPos) - 1)" />
    <mutant id="mutant_3617" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="((((nInts - 1) * 32) + dstPos) * -1)" />
    <mutant id="mutant_3616" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((nInts - 1) * 32) + dstPos)" to="((((nInts - 1) * 32) + dstPos) + 1)" />
    <mutant id="mutant_3615" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) * -1)" />
    <mutant id="mutant_3614" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) + 1)" />
    <mutant id="mutant_3613" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) - 1)" />
    <mutant id="mutant_3612" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(nInts - 1)" to="((nInts - 1) + 1)" />
    <mutant id="mutant_3609" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nInts)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nInts))" />
    <mutant id="mutant_3600" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_3608" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_3607" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3606" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_3605" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_3604" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) * -1" />
    <mutant id="mutant_3603" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) + 1" />
    <mutant id="mutant_3602" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) - 1" />
    <mutant id="mutant_3601" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_1894" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) + 1)" />
    <mutant id="mutant_1895" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) - 1)" />
    <mutant id="mutant_1892" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) * -1)" />
    <mutant id="mutant_1893" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) - 1)" />
    <mutant id="mutant_1890" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="(zoneOffset + (calendar.get(Calendar.DST_OFFSET))) - 1" />
    <mutant id="mutant_1891" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(60 * 60)" to="((60 * 60) + 1)" />
    <mutant id="mutant_1898" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) * -1" />
    <mutant id="mutant_1899" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) + 1" />
    <mutant id="mutant_1896" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="((60 * 60) * 1000)" to="(((60 * 60) * 1000) * -1)" />
    <mutant id="mutant_1897" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset / ((60 * 60) * 1000)" to="(offset / ((60 * 60) * 1000)) - 1" />
    <mutant id="mutant_1883" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + 1)" />
    <mutant id="mutant_1884" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) - 1)" />
    <mutant id="mutant_1881" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) - 1)" />
    <mutant id="mutant_1882" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;)" to="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) * -1)" />
    <mutant id="mutant_1880" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(&quot;Failed to parse \&quot;&quot; + (pattern))" to="((&quot;Failed to parse \&quot;&quot; + (pattern)) + 1)" />
    <mutant id="mutant_1889" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="(zoneOffset + (calendar.get(Calendar.DST_OFFSET))) * -1" />
    <mutant id="mutant_1887" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="((((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart())) + 1)" />
    <mutant id="mutant_1888" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset + (calendar.get(Calendar.DST_OFFSET))" to="(zoneOffset + (calendar.get(Calendar.DST_OFFSET))) + 1" />
    <mutant id="mutant_1885" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="((((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart())) - 1)" />
    <mutant id="mutant_1886" viable="false" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart()))" to="((((&quot;Failed to parse \&quot;&quot; + (pattern)) + &quot;\&quot; ; gave up at index &quot;) + (patternMatcher.regionStart())) * -1)" />
    <mutant id="mutant_602" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character))" to="(!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))" />
    <mutant id="mutant_603" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="(org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) &amp;&amp; (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))" to="!((org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) &amp;&amp; (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character))))" />
    <mutant id="mutant_604" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="((toString.indexOf(contentStart)) + (contentStart.length())) + 1" />
    <mutant id="mutant_605" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="((toString.indexOf(contentStart)) + (contentStart.length())) - 1" />
    <mutant id="mutant_600" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object)" from="(isUseIdentityHashCode()) &amp;&amp; (object != null)" to="!((isUseIdentityHashCode()) &amp;&amp; (object != null))" />
    <mutant id="mutant_601" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean))" to="(!((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)))" />
    <mutant id="mutant_606" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart)) + (contentStart.length())" to="((toString.indexOf(contentStart)) + (contentStart.length())) * -1" />
    <mutant id="mutant_607" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="((pos1 != pos2) &amp;&amp; (pos1 &gt;= 0))" to="(!((pos1 != pos2) &amp;&amp; (pos1 &gt;= 0)))" />
    <mutant id="mutant_608" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="((pos1 != pos2) &amp;&amp; (pos1 &gt;= 0)) &amp;&amp; (pos2 &gt;= 0)" to="!(((pos1 != pos2) &amp;&amp; (pos1 &gt;= 0)) &amp;&amp; (pos2 &gt;= 0))" />
    <mutant id="mutant_609" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len &gt; 0) &amp;&amp; (sepLen &gt; 0))" to="(!((len &gt; 0) &amp;&amp; (sepLen &gt; 0)))" />
    <mutant id="mutant_2323" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) + 1)" />
    <mutant id="mutant_3655" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) - 1)" />
    <mutant id="mutant_2324" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) - 1)" />
    <mutant id="mutant_3654" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) + 1)" />
    <mutant id="mutant_2321" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) - 1)" />
    <mutant id="mutant_3653" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) * -1)" />
    <mutant id="mutant_2322" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) * -1)" />
    <mutant id="mutant_3652" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_3651" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_2320" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) + 1)" />
    <mutant id="mutant_3650" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_2329" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_2327" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_3659" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2328" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_3658" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="(i + dstPos) + 1" />
    <mutant id="mutant_2325" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) * -1)" />
    <mutant id="mutant_3657" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="(i + dstPos) * -1" />
    <mutant id="mutant_2326" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - 1)" to="((length - 1) + 1)" />
    <mutant id="mutant_3656" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i + dstPos" to="(i + dstPos) - 1" />
    <mutant id="mutant_613" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_614" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="(((len - 1) - i) * -1)" />
    <mutant id="mutant_615" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="(((len - 1) - i) + 1)" />
    <mutant id="mutant_616" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len - 1) - i)" to="(((len - 1) - i) - 1)" />
    <mutant id="mutant_610" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((len &gt; 0) &amp;&amp; (sepLen &gt; 0)) &amp;&amp; (len &gt;= sepLen)" to="!(((len &gt; 0) &amp;&amp; (sepLen &gt; 0)) &amp;&amp; (len &gt;= sepLen))" />
    <mutant id="mutant_611" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_612" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_617" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="((sepLen - 1) * -1)" />
    <mutant id="mutant_618" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="((sepLen - 1) + 1)" />
    <mutant id="mutant_619" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(sepLen - 1)" to="((sepLen - 1) - 1)" />
    <mutant id="mutant_2312" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) - 1)" />
    <mutant id="mutant_3644" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) * -1" />
    <mutant id="mutant_2313" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) * -1)" />
    <mutant id="mutant_3643" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) + 1" />
    <mutant id="mutant_2310" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="((arrayLength + 1) + 1)" />
    <mutant id="mutant_3642" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) - 1" />
    <mutant id="mutant_2311" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(index &lt; 0) || (index &gt;= length)" to="!((index &lt; 0) || (index &gt;= length))" />
    <mutant id="mutant_3641" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="((i * 16) - 1)" />
    <mutant id="mutant_3640" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="((i * 16) * -1)" />
    <mutant id="mutant_2318" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) - 1)" />
    <mutant id="mutant_2319" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) * -1)" />
    <mutant id="mutant_3649" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools))" />
    <mutant id="mutant_2316" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - 1)" />
    <mutant id="mutant_3648" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_2317" viable="false" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * -1)" />
    <mutant id="mutant_3647" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2314" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) + 1)" />
    <mutant id="mutant_3646" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2315" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + 1)" />
    <mutant id="mutant_3645" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_624" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="((len - sepLen) - 1)" />
    <mutant id="mutant_625" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="((len - sepLen) + 1)" />
    <mutant id="mutant_626" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="(&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))) - 1" />
    <mutant id="mutant_627" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="(&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))) + 1" />
    <mutant id="mutant_620" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="(((sepLen - 1) - i) + 1)" />
    <mutant id="mutant_621" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="(((sepLen - 1) - i) * -1)" />
    <mutant id="mutant_622" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="((sepLen - 1) - i)" to="(((sepLen - 1) - i) - 1)" />
    <mutant id="mutant_623" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="(len - sepLen)" to="((len - sepLen) * -1)" />
    <mutant id="mutant_628" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))" to="(&quot;Exception thrown on toString(): &quot; + (ExceptionUtils.getStackTrace(e))) * -1" />
    <mutant id="mutant_629" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwable == null) || (type == null)" to="!((throwable == null) || (type == null))" />
    <mutant id="mutant_2301" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="((length + 1) + 1)" />
    <mutant id="mutant_3633" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) * -1)" />
    <mutant id="mutant_2302" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_3632" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="((nShorts - 1) * -1)" />
    <mutant id="mutant_3631" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="((nShorts - 1) - 1)" />
    <mutant id="mutant_2300" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length + 1)" to="((length + 1) * -1)" />
    <mutant id="mutant_3630" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(nShorts - 1)" to="((nShorts - 1) + 1)" />
    <mutant id="mutant_2309" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="((arrayLength + 1) - 1)" />
    <mutant id="mutant_2307" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="((length - index) * -1)" />
    <mutant id="mutant_3639" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(i * 16)" to="((i * 16) + 1)" />
    <mutant id="mutant_2308" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="(arrayLength + 1)" to="((arrayLength + 1) * -1)" />
    <mutant id="mutant_3638" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) + 1)" />
    <mutant id="mutant_2305" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="((length - index) + 1)" />
    <mutant id="mutant_3637" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) * -1)" />
    <mutant id="mutant_2306" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(length - index)" to="((length - index) - 1)" />
    <mutant id="mutant_3636" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) - 1)" />
    <mutant id="mutant_2303" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_3635" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) - 1)" />
    <mutant id="mutant_2304" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_3634" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) + 1)" />
    <mutant id="mutant_635" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="((clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))) - 1" />
    <mutant id="mutant_636" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_637" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_631" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="((clsName + &quot;: &quot;) * -1)" />
    <mutant id="mutant_632" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="((clsName + &quot;: &quot;) + 1)" />
    <mutant id="mutant_633" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="((clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))) + 1" />
    <mutant id="mutant_634" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))" to="((clsName + &quot;: &quot;) + (StringUtils.defaultString(msg))) * -1" />
    <mutant id="mutant_639" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3622" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="((i * 32) + dstPos) + 1" />
    <mutant id="mutant_3621" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="((i * 32) + 1)" />
    <mutant id="mutant_3620" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32)" to="((i * 32) * -1)" />
    <mutant id="mutant_3629" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nShorts)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nShorts))" />
    <mutant id="mutant_3628" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_630" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)" from="(clsName + &quot;: &quot;)" to="((clsName + &quot;: &quot;) - 1)" />
    <mutant id="mutant_3627" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3626" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_3625" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_3624" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="((i * 32) + dstPos) - 1" />
    <mutant id="mutant_3623" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(i * 32) + dstPos" to="((i * 32) + dstPos) * -1" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="(((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString())) + 1)" />
    <mutant id="mutant_647" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="(((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString())) - 1)" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(java.lang.Throwable,java.lang.String)" from="(method != null) &amp;&amp; (Throwable.class.isAssignableFrom(method.getReturnType()))" to="!((method != null) &amp;&amp; (Throwable.class.isAssignableFrom(method.getReturnType())))" />
    <mutant id="mutant_649" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="(((list.size()) - 1) * -1)" />
    <mutant id="mutant_642" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_643" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_644" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_645" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString()))" to="(((ExceptionUtils.WRAPPED_MARKER) + (throwables[i].toString())) * -1)" />
    <mutant id="mutant_2370" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="(set - srcIndex) - 1" />
    <mutant id="mutant_1040" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(startIndex &lt; 0) || (startIndex &gt; (str.length()))" to="!((startIndex &lt; 0) || (startIndex &gt; (str.length())))" />
    <mutant id="mutant_2371" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set - srcIndex" to="(set - srcIndex) * -1" />
    <mutant id="mutant_1036" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2367" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="((srcLength - removals) + 1)" />
    <mutant id="mutant_3699" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_1037" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="((len + strLen) + 1)" />
    <mutant id="mutant_2368" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="((srcLength - removals) - 1)" />
    <mutant id="mutant_3698" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_1034" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2365" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_3697" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_1035" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2366" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_3696" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) * -1" />
    <mutant id="mutant_1032" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_2363" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="((end - index) - 1) * -1" />
    <mutant id="mutant_3695" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) + 1" />
    <mutant id="mutant_1033" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_2364" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_3694" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) - 1" />
    <mutant id="mutant_1030" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; (str.length()))" to="!((length &lt; 0) || ((startIndex + length) &gt; (str.length())))" />
    <mutant id="mutant_2361" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="((end - index) - 1) + 1" />
    <mutant id="mutant_3693" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_1031" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_2362" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index) - 1" to="((end - index) - 1) - 1" />
    <mutant id="mutant_3692" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_640" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_641" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1038" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="((len + strLen) * -1)" />
    <mutant id="mutant_2369" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="(srcLength - removals)" to="((srcLength - removals) * -1)" />
    <mutant id="mutant_1039" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="(len + strLen)" to="((len + strLen) - 1)" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="((causeFrames.size()) - 1) + 1" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="((wrapperFrames.size()) - 1) * -1" />
    <mutant id="mutant_659" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="((wrapperFrames.size()) - 1) - 1" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(java.lang.Throwable)" from="(throwable != null) &amp;&amp; ((list.contains(throwable)) == false)" to="!((throwable != null) &amp;&amp; ((list.contains(throwable)) == false))" />
    <mutant id="mutant_654" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames == null) || (wrapperFrames == null)" to="!((causeFrames == null) || (wrapperFrames == null))" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="((causeFrames.size()) - 1) * -1" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size()) - 1" to="((causeFrames.size()) - 1) - 1" />
    <mutant id="mutant_3691" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_2360" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) * -1)" />
    <mutant id="mutant_3690" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) * -1)" />
    <mutant id="mutant_1025" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="((len + strLen) - 1)" />
    <mutant id="mutant_2356" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) + 1)" />
    <mutant id="mutant_3688" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) + 1)" />
    <mutant id="mutant_1026" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex &lt; 0) || (startIndex &gt; (str.length()))" to="!((startIndex &lt; 0) || (startIndex &gt; (str.length())))" />
    <mutant id="mutant_2357" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) * -1)" />
    <mutant id="mutant_3687" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) - 1)" />
    <mutant id="mutant_1023" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="((len + strLen) + 1)" />
    <mutant id="mutant_2354" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="((indices.length) - 1) + 1" />
    <mutant id="mutant_3686" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) * -1)" />
    <mutant id="mutant_1024" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="(len + strLen)" to="((len + strLen) * -1)" />
    <mutant id="mutant_2355" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) - 1)" />
    <mutant id="mutant_3685" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) + 1)" />
    <mutant id="mutant_1021" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="((len + length) * -1)" />
    <mutant id="mutant_2352" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="((indices.length) - 1) * -1" />
    <mutant id="mutant_3684" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="((nHex - 1) - 1)" />
    <mutant id="mutant_1022" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="((len + length) - 1)" />
    <mutant id="mutant_2353" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length) - 1" to="((indices.length) - 1) - 1" />
    <mutant id="mutant_3683" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="((nHex - 1) * -1)" />
    <mutant id="mutant_2350" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="(length - diff) - 1" />
    <mutant id="mutant_3682" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(nHex - 1)" to="((nHex - 1) + 1)" />
    <mutant id="mutant_1020" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(len + length)" to="((len + length) + 1)" />
    <mutant id="mutant_2351" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="(length - diff) + 1" />
    <mutant id="mutant_3681" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_650" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="(((list.size()) - 1) - 1)" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="((list.size()) - 1)" to="(((list.size()) - 1) + 1)" />
    <mutant id="mutant_652" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="(at != (-1)) &amp;&amp; (token.substring(0, at).trim().isEmpty())" to="!((at != (-1)) &amp;&amp; (token.substring(0, at).trim().isEmpty()))" />
    <mutant id="mutant_1029" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_1027" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2358" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) - 1)" />
    <mutant id="mutant_1028" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2359" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(end - index)" to="((end - index) + 1)" />
    <mutant id="mutant_3689" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) - 1)" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="((translators.length) + 1) - 1" />
    <mutant id="mutant_669" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="((translators.length) + 1) * -1" />
    <mutant id="mutant_664" viable="true" in="org.apache.commons.lang3.tuple.Triple.equals(java.lang.Object)" from="((ObjectUtils.equals(getLeft(), other.getLeft())) &amp;&amp; (ObjectUtils.equals(getMiddle(), other.getMiddle()))) &amp;&amp; (ObjectUtils.equals(getRight(), other.getRight()))" to="!(((ObjectUtils.equals(getLeft(), other.getLeft())) &amp;&amp; (ObjectUtils.equals(getMiddle(), other.getMiddle()))) &amp;&amp; (ObjectUtils.equals(getRight(), other.getRight())))" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="(((input.length()) * 2) - 1)" />
    <mutant id="mutant_666" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="(((input.length()) * 2) * -1)" />
    <mutant id="mutant_667" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="((input.length()) * 2)" to="(((input.length()) * 2) + 1)" />
    <mutant id="mutant_3680" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_1014" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="((startIndex + length) * -1)" />
    <mutant id="mutant_2345" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) + 1)" />
    <mutant id="mutant_3677" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) - 1" />
    <mutant id="mutant_1015" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="((startIndex + length) - 1)" />
    <mutant id="mutant_2346" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="((length - diff) * -1)" />
    <mutant id="mutant_3676" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) * -1" />
    <mutant id="mutant_1012" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="((&quot;Invalid startIndex: &quot; + length) * -1)" />
    <mutant id="mutant_2343" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) - 1)" />
    <mutant id="mutant_3675" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_1013" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex + length)" to="((startIndex + length) + 1)" />
    <mutant id="mutant_2344" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length)" to="((((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + length) * -1)" />
    <mutant id="mutant_3674" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_1010" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="((&quot;Invalid startIndex: &quot; + length) + 1)" />
    <mutant id="mutant_2341" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) - 1)" />
    <mutant id="mutant_3673" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_1011" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid startIndex: &quot; + length)" to="((&quot;Invalid startIndex: &quot; + length) - 1)" />
    <mutant id="mutant_2342" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) * -1)" />
    <mutant id="mutant_3672" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) * -1)" />
    <mutant id="mutant_3671" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) - 1)" />
    <mutant id="mutant_2340" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="((&quot;Index: &quot; + index) + &quot;, Length: &quot;)" to="(((&quot;Index: &quot; + index) + &quot;, Length: &quot;) + 1)" />
    <mutant id="mutant_3670" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) + 1)" />
    <mutant id="mutant_660" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size()) - 1" to="((wrapperFrames.size()) - 1) + 1" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrameIndex &gt;= 0) &amp;&amp; (wrapperFrameIndex &gt;= 0)" to="!((causeFrameIndex &gt;= 0) &amp;&amp; (wrapperFrameIndex &gt;= 0))" />
    <mutant id="mutant_662" viable="true" in="org.apache.commons.lang3.tuple.Pair.equals(java.lang.Object)" from="(ObjectUtils.equals(getKey(), other.getKey())) &amp;&amp; (ObjectUtils.equals(getValue(), other.getValue()))" to="!((ObjectUtils.equals(getKey(), other.getKey())) &amp;&amp; (ObjectUtils.equals(getValue(), other.getValue())))" />
    <mutant id="mutant_663" viable="true" in="org.apache.commons.lang3.tuple.Triple.equals(java.lang.Object)" from="((ObjectUtils.equals(getLeft(), other.getLeft())) &amp;&amp; (ObjectUtils.equals(getMiddle(), other.getMiddle())))" to="(!((ObjectUtils.equals(getLeft(), other.getLeft())) &amp;&amp; (ObjectUtils.equals(getMiddle(), other.getMiddle()))))" />
    <mutant id="mutant_1018" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) - 1)" />
    <mutant id="mutant_2349" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length - diff" to="(length - diff) * -1" />
    <mutant id="mutant_1019" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) + 1)" />
    <mutant id="mutant_1016" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(length &lt; 0) || ((startIndex + length) &gt; (chars.length))" to="!((length &lt; 0) || ((startIndex + length) &gt; (chars.length)))" />
    <mutant id="mutant_2347" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="((length - diff) - 1)" />
    <mutant id="mutant_3679" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_1017" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(&quot;Invalid length: &quot; + length)" to="((&quot;Invalid length: &quot; + length) * -1)" />
    <mutant id="mutant_2348" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(length - diff)" to="((length - diff) + 1)" />
    <mutant id="mutant_3678" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) + 1" />
    <mutant id="mutant_679" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))) + 1" />
    <mutant id="mutant_675" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) * -1)" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + 1)" />
    <mutant id="mutant_677" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;)" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) - 1)" />
    <mutant id="mutant_678" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))" to="(((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + &quot;\\u&quot;) + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]))) * -1" />
    <mutant id="mutant_1003" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="((len + 1) + 1)" />
    <mutant id="mutant_2334" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="(((length - index) - 1) + 1)" />
    <mutant id="mutant_3666" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_1004" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="((len + 1) - 1)" />
    <mutant id="mutant_2335" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="(((length - index) - 1) * -1)" />
    <mutant id="mutant_3665" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_1001" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="(((size) + 5) + 1)" />
    <mutant id="mutant_2332" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="((length - index) * -1)" />
    <mutant id="mutant_3664" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_1002" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="(((size) + 5) - 1)" />
    <mutant id="mutant_2333" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="((length - index) - 1)" to="(((length - index) - 1) - 1)" />
    <mutant id="mutant_3663" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes))" />
    <mutant id="mutant_2330" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="((length - index) + 1)" />
    <mutant id="mutant_3662" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_1000" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 5)" to="(((size) + 5) * -1)" />
    <mutant id="mutant_2331" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="(length - index)" to="((length - index) - 1)" />
    <mutant id="mutant_3661" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3660" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_671" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="(Character.isHighSurrogate(c1)) &amp;&amp; (pos &lt; len)" to="!((Character.isHighSurrogate(c1)) &amp;&amp; (pos &lt; len))" />
    <mutant id="mutant_672" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) * -1)" />
    <mutant id="mutant_673" viable="false" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) - 1)" />
    <mutant id="mutant_1009" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(startIndex &lt; 0) || (startIndex &gt; (chars.length))" to="!((startIndex &lt; 0) || (startIndex &gt; (chars.length)))" />
    <mutant id="mutant_674" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="(&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0])))" to="((&quot;\\u&quot; + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + 1)" />
    <mutant id="mutant_1007" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="((len + strLen) * -1)" />
    <mutant id="mutant_2338" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) * -1)" />
    <mutant id="mutant_1008" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="((len + strLen) - 1)" />
    <mutant id="mutant_2339" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) + 1)" />
    <mutant id="mutant_3669" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_1005" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(len + 1)" to="((len + 1) * -1)" />
    <mutant id="mutant_2336" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(index &lt; 0) || (index &gt;= length)" to="!((index &lt; 0) || (index &gt;= length))" />
    <mutant id="mutant_3668" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length) + 1" to="((translators.length) + 1) + 1" />
    <mutant id="mutant_1006" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="(len + strLen)" to="((len + strLen) + 1)" />
    <mutant id="mutant_2337" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(&quot;Index: &quot; + index)" to="((&quot;Index: &quot; + index) - 1)" />
    <mutant id="mutant_3667" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_2172" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_2173" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_2170" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_2171" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_2169" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_2167" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_3499" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) + 1" />
    <mutant id="mutant_2168" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_3498" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_2165" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3497" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_2166" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3496" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_2163" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3495" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) * -1)" />
    <mutant id="mutant_2164" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3494" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) - 1)" />
    <mutant id="mutant_2161" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3493" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) + 1)" />
    <mutant id="mutant_2162" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3492" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) + 1)" />
    <mutant id="mutant_3491" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) - 1)" />
    <mutant id="mutant_2160" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3490" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) * -1)" />
    <mutant id="mutant_2158" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_2159" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3489" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) + 1)" />
    <mutant id="mutant_2156" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3488" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) * -1)" />
    <mutant id="mutant_2157" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_3487" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) - 1)" />
    <mutant id="mutant_2154" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3486" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_2155" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3485" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2152" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3484" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_2153" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3483" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="((a1 * numer1) + numer0) * -1" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="((a1 * numer1) + numer0) - 1" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1) + numer0" to="((a1 * numer1) + numer0) + 1" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="(x1 - (a2 * y1)) * -1" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="((a1 * numer1) * -1)" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="((a1 * numer1) + 1)" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * numer1)" to="((a1 * numer1) - 1)" />
    <mutant id="mutant_2150" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_3482" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2151" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_3481" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3480" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) * -1" />
    <mutant id="mutant_2147" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3479" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) - 1" />
    <mutant id="mutant_2148" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_3478" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) + 1" />
    <mutant id="mutant_2145" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3477" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_2146" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3476" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_2143" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3475" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_2144" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3474" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) * -1)" />
    <mutant id="mutant_2141" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3473" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) - 1)" />
    <mutant id="mutant_2142" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3472" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) + 1)" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a2 * y1)" to="((a2 * y1) - 1)" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="(x1 - (a2 * y1)) + 1" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1 - (a2 * y1)" to="(x1 - (a2 * y1)) - 1" />
    <mutant id="mutant_2149" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="(((double)(numer2)) / ((double)(denom2))) - 1" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="((value - fraction) + 1)" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="((a1 * denom1) + denom0) - 1" />
    <mutant id="mutant_115" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="((a1 * denom1) + denom0) + 1" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="(((double)(numer2)) / ((double)(denom2))) + 1" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2)) / ((double)(denom2))" to="(((double)(numer2)) / ((double)(denom2))) * -1" />
    <mutant id="mutant_3471" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) + 1)" />
    <mutant id="mutant_2140" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3470" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) - 1)" />
    <mutant id="mutant_2136" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3468" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) + 1)" />
    <mutant id="mutant_2137" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3467" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) * -1)" />
    <mutant id="mutant_2134" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3466" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) - 1)" />
    <mutant id="mutant_2135" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3465" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_2132" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_3464" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2133" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3463" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_2130" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_3462" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="((i * 32) + srcPos) * -1" />
    <mutant id="mutant_2131" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_3461" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="((i * 32) + srcPos) - 1" />
    <mutant id="mutant_110" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="((a1 * denom1) - 1)" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="((a1 * denom1) + 1)" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1)" to="((a1 * denom1) * -1)" />
    <mutant id="mutant_113" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(a1 * denom1) + denom0" to="((a1 * denom1) + denom0) * -1" />
    <mutant id="mutant_2138" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_2139" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_3469" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) * -1)" />
    <mutant id="mutant_129" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="(((numer0 + (wholeNumber * denom0)) * sign) - 1)" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="((numer0 + (wholeNumber * denom0)) + 1)" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="((numer0 + (wholeNumber * denom0)) - 1)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(numer0 + (wholeNumber * denom0))" to="((numer0 + (wholeNumber * denom0)) * -1)" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="(((numer0 + (wholeNumber * denom0)) * sign) + 1)" />
    <mutant id="mutant_121" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="((value - fraction) * -1)" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="((wholeNumber * denom0) + 1)" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="((wholeNumber * denom0) * -1)" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(wholeNumber * denom0)" to="((wholeNumber * denom0) - 1)" />
    <mutant id="mutant_120" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(value - fraction)" to="((value - fraction) - 1)" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="((whole * ((long)(denominator))) - numerator) - 1" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="((whole * ((long)(denominator))) - numerator) + 1" />
    <mutant id="mutant_138" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) * -1)" />
    <mutant id="mutant_139" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) + 1)" />
    <mutant id="mutant_2198" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_2199" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_2196" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_2197" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_132" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) * -1)" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) + 1)" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) - 1)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) - numerator" to="((whole * ((long)(denominator))) - numerator) * -1" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((numer0 + (wholeNumber * denom0)) * sign)" to="(((numer0 + (wholeNumber * denom0)) * sign) * -1)" />
    <mutant id="mutant_131" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="(numerator == (Integer.MIN_VALUE)) || (denominator == (Integer.MIN_VALUE))" to="!((numerator == (Integer.MIN_VALUE)) || (denominator == (Integer.MIN_VALUE)))" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_2194" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_2195" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_2192" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_2193" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_2190" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_2191" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_2189" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_2187" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_2188" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_2185" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_2186" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="((whole * ((long)(denominator))) + numerator) + 1" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(numeratorValue &lt; (Integer.MIN_VALUE)) || (numeratorValue &gt; (Integer.MAX_VALUE))" to="!((numeratorValue &lt; (Integer.MIN_VALUE)) || (numeratorValue &gt; (Integer.MAX_VALUE)))" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_140" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator)))" to="((whole * ((long)(denominator))) - 1)" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="((whole * ((long)(denominator))) + numerator) * -1" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(whole * ((long)(denominator))) + numerator" to="((whole * ((long)(denominator))) + numerator) - 1" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="(((numerator) / d1) + 1)" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="(((numerator) / d1) * -1)" />
    <mutant id="mutant_2183" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_2184" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_2181" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_2182" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_2180" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_2178" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_2179" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_2176" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_2177" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_2174" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_2175" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_154" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(denominator == (Integer.MIN_VALUE)) &amp;&amp; ((numerator &amp; 1) == 0)" to="!((denominator == (Integer.MIN_VALUE)) &amp;&amp; ((numerator &amp; 1) == 0))" />
    <mutant id="mutant_155" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(numerator == (Integer.MIN_VALUE)) || (denominator == (Integer.MIN_VALUE))" to="!((numerator == (Integer.MIN_VALUE)) || (denominator == (Integer.MIN_VALUE)))" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) == 0) || ((fraction.numerator) == 0)" to="!(((numerator) == 0) || ((fraction.numerator) == 0))" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((numerator) / d1)" to="(((numerator) / d1) - 1)" />
    <mutant id="mutant_150" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_151" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_152" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) - 1)" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="(((fraction.numerator) / d2) * -1)" />
    <mutant id="mutant_165" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="(((denominator) / d2) + 1)" />
    <mutant id="mutant_166" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) * -1)" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) - 1)" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.denominator) / d1)" to="(((fraction.denominator) / d1) + 1)" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="(((fraction.numerator) / d2) + 1)" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((fraction.numerator) / d2)" to="(((fraction.numerator) / d2) - 1)" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="(((denominator) / d2) * -1)" />
    <mutant id="mutant_164" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="((denominator) / d2)" to="(((denominator) / d2) - 1)" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) * -1)" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) + 1)" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) * -1)" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) + 1)" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) - 1)" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) * -1)" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="((power % 2) * -1)" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="((power % 2) + 1)" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power % 2)" to="((power % 2) - 1)" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) - 1)" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(power / 2)" to="((power / 2) + 1)" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="(((numerator) / gcd) * -1)" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="(((numerator) / gcd) + 1)" />
    <mutant id="mutant_187" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) + 1" />
    <mutant id="mutant_188" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) * -1" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length()) - 1" to="((str.length()) - 1) - 1" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((numerator) / gcd)" to="(((numerator) / gcd) - 1)" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="(((denominator) / gcd) - 1)" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="(((denominator) / gcd) * -1)" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="((denominator) / gcd)" to="(((denominator) / gcd) + 1)" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) * -1)" />
    <mutant id="mutant_191" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) - 1)" />
    <mutant id="mutant_192" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) + 1)" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz &gt; (start + 1)) &amp;&amp; ((chars[start]) == '0')" to="!((sz &gt; (start + 1)) &amp;&amp; ((chars[start]) == '0'))" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) - 1)" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) + 1)" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) * -1)" />
    <mutant id="mutant_195" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) - 1)" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) + 1)" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) * -1)" />
    <mutant id="mutant_1719" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="(24 * days) - 1" />
    <mutant id="mutant_1717" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="(24 * days) + 1" />
    <mutant id="mutant_1718" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24 * days" to="(24 * days) * -1" />
    <mutant id="mutant_1715" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="((start instanceof java.util.GregorianCalendar) &amp;&amp; ((start.get(Calendar.MONTH)) == (Calendar.FEBRUARY)))" to="(!((start instanceof java.util.GregorianCalendar) &amp;&amp; ((start.get(Calendar.MONTH)) == (Calendar.FEBRUARY))))" />
    <mutant id="mutant_1716" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="((start instanceof java.util.GregorianCalendar) &amp;&amp; ((start.get(Calendar.MONTH)) == (Calendar.FEBRUARY))) &amp;&amp; ((start.get(Calendar.DAY_OF_MONTH)) == 29)" to="!(((start instanceof java.util.GregorianCalendar) &amp;&amp; ((start.get(Calendar.MONTH)) == (Calendar.FEBRUARY))) &amp;&amp; ((start.get(Calendar.DAY_OF_MONTH)) == 29))" />
    <mutant id="mutant_1713" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="((start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))) * -1" />
    <mutant id="mutant_1714" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="((start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))) + 1" />
    <mutant id="mutant_1711" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="(12 * years) * -1" />
    <mutant id="mutant_1712" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))" to="((start.getActualMaximum(Calendar.DAY_OF_YEAR)) - (start.get(Calendar.DAY_OF_YEAR))) - 1" />
    <mutant id="mutant_1710" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="(12 * years) - 1" />
    <mutant id="mutant_1708" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(!(DurationFormatUtils.Token.containsTokenWithValue(tokens, DurationFormatUtils.y))) &amp;&amp; (years != 0)" to="!((!(DurationFormatUtils.Token.containsTokenWithValue(tokens, DurationFormatUtils.y))) &amp;&amp; (years != 0))" />
    <mutant id="mutant_1709" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12 * years" to="(12 * years) + 1" />
    <mutant id="mutant_1706" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="((end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))) * -1" />
    <mutant id="mutant_1707" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="((end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))) - 1" />
    <mutant id="mutant_1704" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="((end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))) + 1" />
    <mutant id="mutant_1705" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))" to="((end.get(Calendar.YEAR)) - (start.get(Calendar.YEAR))) + 1" />
    <mutant id="mutant_1702" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="((end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))) - 1" />
    <mutant id="mutant_1703" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))" to="((end.get(Calendar.MONTH)) - (start.get(Calendar.MONTH))) * -1" />
    <mutant id="mutant_1700" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="((end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))) - 1" />
    <mutant id="mutant_1701" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="((end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))) + 1" />
    <mutant id="mutant_1751" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_1752" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="(((regex.length()) - 1) * -1)" />
    <mutant id="mutant_1750" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_1759" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) + 1)" />
    <mutant id="mutant_1757" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) - 1)" />
    <mutant id="mutant_1758" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) - 1)" />
    <mutant id="mutant_1755" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) * -1)" />
    <mutant id="mutant_1756" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) + 1)" />
    <mutant id="mutant_1753" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="(((regex.length()) - 1) + 1)" />
    <mutant id="mutant_1754" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="((regex.length()) - 1)" to="(((regex.length()) - 1) - 1)" />
    <mutant id="mutant_1740" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) * -1)" />
    <mutant id="mutant_1741" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) - 1)" />
    <mutant id="mutant_1748" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) * -1)" />
    <mutant id="mutant_1749" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_1746" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) - 1)" />
    <mutant id="mutant_1747" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID()))" to="((((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + (printer.getTimeZone().getID())) + 1)" />
    <mutant id="mutant_1744" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_1745" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_1742" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale()))" to="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + 1)" />
    <mutant id="mutant_1743" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;)" to="(((((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + (printer.getLocale())) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_900" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_901" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_902" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_1739" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_907" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) + 1" />
    <mutant id="mutant_908" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) * -1" />
    <mutant id="mutant_909" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex - startIndex" to="(endIndex - startIndex) - 1" />
    <mutant id="mutant_903" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_904" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(c1 != c2) &amp;&amp; ((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="!((c1 != c2) &amp;&amp; ((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))))" />
    <mutant id="mutant_905" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="(index &lt; 0) || (index &gt;= (length()))" to="!((index &lt; 0) || (index &gt;= (length())))" />
    <mutant id="mutant_906" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="(destination == null) || ((destination.length) &lt; len)" to="!((destination == null) || ((destination.length) &lt; len))" />
    <mutant id="mutant_1730" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(previous != null) &amp;&amp; (previous.getValue().equals(value))" to="!((previous != null) &amp;&amp; (previous.getValue().equals(value)))" />
    <mutant id="mutant_1737" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_1738" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;)" to="(((&quot;FastDateFormat[&quot; + (printer.getPattern())) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_1735" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) + 1)" />
    <mutant id="mutant_1736" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) - 1)" />
    <mutant id="mutant_1733" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="((&quot;Unmatched quote in format: &quot; + format) + 1)" />
    <mutant id="mutant_1734" viable="false" in="org.apache.commons.lang3.time.FastDateFormat.toString()" from="(&quot;FastDateFormat[&quot; + (printer.getPattern()))" to="((&quot;FastDateFormat[&quot; + (printer.getPattern())) * -1)" />
    <mutant id="mutant_1731" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="((&quot;Unmatched quote in format: &quot; + format) * -1)" />
    <mutant id="mutant_1732" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(&quot;Unmatched quote in format: &quot; + format)" to="((&quot;Unmatched quote in format: &quot; + format) - 1)" />
    <mutant id="mutant_910" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_911" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_912" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_913" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="((31 * hash) + 1)" />
    <mutant id="mutant_1728" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="(1000 * seconds) + 1" />
    <mutant id="mutant_1729" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="inLiteral &amp;&amp; (ch != '\'')" to="!(inLiteral &amp;&amp; (ch != '\''))" />
    <mutant id="mutant_918" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="((31 * hash) + (buf[i])) - 1" />
    <mutant id="mutant_919" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(str == null) || (startIndex &gt;= (size))" to="!((str == null) || (startIndex &gt;= (size)))" />
    <mutant id="mutant_914" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="((31 * hash) - 1)" />
    <mutant id="mutant_915" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash)" to="((31 * hash) * -1)" />
    <mutant id="mutant_916" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="((31 * hash) + (buf[i])) * -1" />
    <mutant id="mutant_917" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(31 * hash) + (buf[i])" to="((31 * hash) + (buf[i])) + 1" />
    <mutant id="mutant_1726" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="(1000 * seconds) * -1" />
    <mutant id="mutant_1727" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000 * seconds" to="(1000 * seconds) - 1" />
    <mutant id="mutant_1724" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="(60 * minutes) - 1" />
    <mutant id="mutant_1725" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="(60 * minutes) * -1" />
    <mutant id="mutant_1722" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="(60 * hours) + 1" />
    <mutant id="mutant_1723" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * minutes" to="(60 * minutes) + 1" />
    <mutant id="mutant_1720" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="(60 * hours) * -1" />
    <mutant id="mutant_1721" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60 * hours" to="(60 * hours) - 1" />
    <mutant id="mutant_921" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="(((size) - strLen) * -1)" />
    <mutant id="mutant_922" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="(((size) - strLen) + 1)" />
    <mutant id="mutant_923" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="(((size) - strLen) + 1) * -1" />
    <mutant id="mutant_924" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="(((size) - strLen) + 1) - 1" />
    <mutant id="mutant_920" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen)" to="(((size) - strLen) - 1)" />
    <mutant id="mutant_929" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher == null) || (startIndex &gt;= (size))" to="!((matcher == null) || (startIndex &gt;= (size)))" />
    <mutant id="mutant_925" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="((size) - strLen) + 1" to="(((size) - strLen) + 1) + 1" />
    <mutant id="mutant_926" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="((i + j) - 1)" />
    <mutant id="mutant_927" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="((i + j) * -1)" />
    <mutant id="mutant_928" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(i + j)" to="((i + j) + 1)" />
    <mutant id="mutant_1795" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="((centuryStartYear / 100) * 100) * -1" />
    <mutant id="mutant_1796" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="((centuryStartYear / 100) * 100) + 1" />
    <mutant id="mutant_1793" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="((centuryStartYear / 100) - 1)" />
    <mutant id="mutant_1794" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="((centuryStartYear / 100) + 1)" />
    <mutant id="mutant_1791" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="((definingCalendar.get(Calendar.YEAR)) - 80) - 1" />
    <mutant id="mutant_1792" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100)" to="((centuryStartYear / 100) * -1)" />
    <mutant id="mutant_1790" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="((definingCalendar.get(Calendar.YEAR)) - 80) + 1" />
    <mutant id="mutant_1799" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="(centuryStartYear - (century)) + 1" />
    <mutant id="mutant_1797" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(centuryStartYear / 100) * 100" to="((centuryStartYear / 100) * 100) - 1" />
    <mutant id="mutant_1798" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear - (century)" to="(centuryStartYear - (century)) * -1" />
    <mutant id="mutant_932" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="(((size) - 1) * -1)" />
    <mutant id="mutant_933" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_934" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_935" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_930" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="(((size) - 1) - 1)" />
    <mutant id="mutant_931" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="((size) - 1)" to="(((size) - 1) + 1)" />
    <mutant id="mutant_936" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="(((size) - 1) - 1)" />
    <mutant id="mutant_937" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="(((size) - 1) + 1)" />
    <mutant id="mutant_938" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="((size) - 1)" to="(((size) - 1) * -1)" />
    <mutant id="mutant_939" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_1784" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="((value + &quot; is not a supported timezone name&quot;) - 1)" />
    <mutant id="mutant_1785" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="((value + &quot; is not a supported timezone name&quot;) * -1)" />
    <mutant id="mutant_1782" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) * -1)" />
    <mutant id="mutant_1783" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(value + &quot; is not a supported timezone name&quot;)" to="((value + &quot; is not a supported timezone name&quot;) + 1)" />
    <mutant id="mutant_1780" viable="false" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) - 1)" />
    <mutant id="mutant_1781" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) + 1)" />
    <mutant id="mutant_1788" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="(iValue - 1) * -1" />
    <mutant id="mutant_1789" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR)) - 80" to="((definingCalendar.get(Calendar.YEAR)) - 80) * -1" />
    <mutant id="mutant_1786" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="(iValue - 1) - 1" />
    <mutant id="mutant_1787" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue - 1" to="(iValue - 1) + 1" />
    <mutant id="mutant_943" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(strLen &gt; 0) &amp;&amp; (strLen &lt;= (size))" to="!((strLen &gt; 0) &amp;&amp; (strLen &lt;= (size)))" />
    <mutant id="mutant_944" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="((startIndex - strLen) + 1)" />
    <mutant id="mutant_945" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="((startIndex - strLen) * -1)" />
    <mutant id="mutant_946" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen)" to="((startIndex - strLen) - 1)" />
    <mutant id="mutant_940" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_941" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_942" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(str == null) || (startIndex &lt; 0)" to="!((str == null) || (startIndex &lt; 0))" />
    <mutant id="mutant_947" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="((startIndex - strLen) + 1) + 1" />
    <mutant id="mutant_948" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="((startIndex - strLen) + 1) - 1" />
    <mutant id="mutant_949" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(startIndex - strLen) + 1" to="((startIndex - strLen) + 1) * -1" />
    <mutant id="mutant_1773" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) - 1)" />
    <mutant id="mutant_1774" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) * -1)" />
    <mutant id="mutant_1771" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + 1)" />
    <mutant id="mutant_1772" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) - 1)" />
    <mutant id="mutant_1770" viable="false" in="?" from="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;)" to="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) * -1)" />
    <mutant id="mutant_1779" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="((value.charAt(0)) == '+') || ((value.charAt(0)) == '-')" to="!(((value.charAt(0)) == '+') || ((value.charAt(0)) == '-'))" />
    <mutant id="mutant_1777" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;) - 1" />
    <mutant id="mutant_1778" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;) + 1" />
    <mutant id="mutant_1775" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE))" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + 1)" />
    <mutant id="mutant_1776" viable="false" in="?" from="(((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;" to="((((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.TZ_DATABASE)) + &quot;)&quot;) * -1" />
    <mutant id="mutant_954" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_955" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="((size) - 1) * -1" />
    <mutant id="mutant_956" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher == null) || (startIndex &lt; 0)" to="!((matcher == null) || (startIndex &lt; 0))" />
    <mutant id="mutant_957" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="(startIndex + 1) + 1" />
    <mutant id="mutant_950" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="((i + j) - 1)" />
    <mutant id="mutant_951" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="((i + j) * -1)" />
    <mutant id="mutant_952" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(i + j)" to="((i + j) + 1)" />
    <mutant id="mutant_953" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_958" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="(startIndex + 1) - 1" />
    <mutant id="mutant_959" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex + 1" to="(startIndex + 1) * -1" />
    <mutant id="mutant_1762" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + 1)" />
    <mutant id="mutant_1763" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) - 1)" />
    <mutant id="mutant_1760" viable="false" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(&quot;GMT&quot; + value)" to="((&quot;GMT&quot; + value) * -1)" />
    <mutant id="mutant_1761" viable="false" in="?" from="(&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE))" to="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) * -1)" />
    <mutant id="mutant_1768" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) + 1)" />
    <mutant id="mutant_1769" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) - 1)" />
    <mutant id="mutant_1766" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) * -1)" />
    <mutant id="mutant_1767" viable="false" in="?" from="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION))" to="((((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + (FastDateParser.TimeZoneStrategy.GMT_OPTION)) * -1)" />
    <mutant id="mutant_1764" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) + 1)" />
    <mutant id="mutant_1765" viable="false" in="?" from="((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;)" to="(((&quot;((?iu)&quot; + (FastDateParser.TimeZoneStrategy.RFC_822_TIME_ZONE)) + &quot;|&quot;) - 1)" />
    <mutant id="mutant_965" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) - 1)" />
    <mutant id="mutant_966" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) * -1)" />
    <mutant id="mutant_967" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) + 1)" />
    <mutant id="mutant_968" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) - 1)" />
    <mutant id="mutant_961" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) + 1)" />
    <mutant id="mutant_962" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) - 1)" />
    <mutant id="mutant_963" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) + 1)" />
    <mutant id="mutant_964" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) * -1)" />
    <mutant id="mutant_969" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="(((size) + remaining) * -1)" />
    <mutant id="mutant_2202" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3534" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) + 1)" />
    <mutant id="mutant_2203" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3533" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) - 1)" />
    <mutant id="mutant_2200" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3532" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) * -1)" />
    <mutant id="mutant_2201" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3531" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) + 1)" />
    <mutant id="mutant_3530" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) * -1)" />
    <mutant id="mutant_2208" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_960" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) * -1)" />
    <mutant id="mutant_2209" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3539" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_2206" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) + 1" />
    <mutant id="mutant_3538" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_2207" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_3537" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) * -1)" />
    <mutant id="mutant_2204" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3536" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) - 1)" />
    <mutant id="mutant_2205" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_3535" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) + 1)" />
    <mutant id="mutant_976" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) * -1)" />
    <mutant id="mutant_977" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) - 1)" />
    <mutant id="mutant_978" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="((size) - oldSize) - 1" />
    <mutant id="mutant_979" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="((size) - oldSize) + 1" />
    <mutant id="mutant_972" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) * -1)" />
    <mutant id="mutant_973" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) + 1)" />
    <mutant id="mutant_974" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + 1)" to="(((size) + 1) - 1)" />
    <mutant id="mutant_975" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((buffer.length) - (size))" to="(((buffer.length) - (size)) + 1)" />
    <mutant id="mutant_3523" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3522" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) * -1" />
    <mutant id="mutant_3521" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) - 1" />
    <mutant id="mutant_3520" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) + 1" />
    <mutant id="mutant_970" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="(((size) + remaining) - 1)" />
    <mutant id="mutant_3529" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) - 1)" />
    <mutant id="mutant_971" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="((size) + remaining)" to="(((size) + remaining) + 1)" />
    <mutant id="mutant_3528" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_3527" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_3526" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3525" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_3524" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_987" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="((index + length) * -1)" />
    <mutant id="mutant_988" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="(((size) - index) - 1)" />
    <mutant id="mutant_989" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="(((size) - index) + 1)" />
    <mutant id="mutant_983" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) - 1)" />
    <mutant id="mutant_984" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(length &lt;= 0) || (index &gt;= (size))" to="!((length &lt;= 0) || (index &gt;= (size)))" />
    <mutant id="mutant_985" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="((index + length) + 1)" />
    <mutant id="mutant_986" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(index + length)" to="((index + length) - 1)" />
    <mutant id="mutant_3512" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) - 1)" />
    <mutant id="mutant_3511" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) * -1)" />
    <mutant id="mutant_3510" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) + 1)" />
    <mutant id="mutant_980" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size) - oldSize" to="((size) - oldSize) * -1" />
    <mutant id="mutant_3519" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_981" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) + 1)" />
    <mutant id="mutant_3518" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_982" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) * -1)" />
    <mutant id="mutant_3517" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_3516" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) * -1)" />
    <mutant id="mutant_3515" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) - 1)" />
    <mutant id="mutant_3514" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(((nHexs - 1) * 4) + srcPos)" to="((((nHexs - 1) * 4) + srcPos) + 1)" />
    <mutant id="mutant_3513" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="((nHexs - 1) * 4)" to="(((nHexs - 1) * 4) + 1)" />
    <mutant id="mutant_998" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="(((size) + 4) - 1)" />
    <mutant id="mutant_999" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="(((size) + 4) + 1)" />
    <mutant id="mutant_994" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) + 1)" />
    <mutant id="mutant_995" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) * -1)" />
    <mutant id="mutant_996" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="(endIndex - startIndex)" to="((endIndex - startIndex) - 1)" />
    <mutant id="mutant_997" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="((size) + 4)" to="(((size) + 4) * -1)" />
    <mutant id="mutant_3501" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) * -1" />
    <mutant id="mutant_3500" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) - 1" />
    <mutant id="mutant_990" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="((size) - index)" to="(((size) - index) * -1)" />
    <mutant id="mutant_3509" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) * -1)" />
    <mutant id="mutant_991" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="(((size) - length) * -1)" />
    <mutant id="mutant_3508" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="(nHexs - 1)" to="((nHexs - 1) - 1)" />
    <mutant id="mutant_992" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="(((size) - length) + 1)" />
    <mutant id="mutant_3507" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_993" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="((size) - length)" to="(((size) - length) - 1)" />
    <mutant id="mutant_3506" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_3505" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3504" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_3503" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_3502" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_3581" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_2250" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3580" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) * -1)" />
    <mutant id="mutant_2246" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) - 1" />
    <mutant id="mutant_3578" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) + 1)" />
    <mutant id="mutant_2247" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) + 1" />
    <mutant id="mutant_3577" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_2244" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) + 1" />
    <mutant id="mutant_3576" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_2245" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) * -1" />
    <mutant id="mutant_3575" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_2242" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) - 1" />
    <mutant id="mutant_3574" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_2243" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) * -1" />
    <mutant id="mutant_3573" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_2240" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3572" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_2241" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3571" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes))" />
    <mutant id="mutant_2248" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="((array[i]) &gt;= min) &amp;&amp; ((array[i]) &lt;= max)" to="!(((array[i]) &gt;= min) &amp;&amp; ((array[i]) &lt;= max))" />
    <mutant id="mutant_2249" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3579" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) - 1)" />
    <mutant id="mutant_3570" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_2235" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3567" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2236" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3566" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="(i + dstPos) + 1" />
    <mutant id="mutant_2233" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3565" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="(i + dstPos) * -1" />
    <mutant id="mutant_2234" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3564" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i + dstPos" to="(i + dstPos) - 1" />
    <mutant id="mutant_2231" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3563" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) - 1)" />
    <mutant id="mutant_2232" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3562" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) + 1)" />
    <mutant id="mutant_3561" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) * -1)" />
    <mutant id="mutant_2230" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3560" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_2239" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_2237" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_3569" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2238" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3568" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2224" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) - 1" />
    <mutant id="mutant_3556" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_2225" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) + 1" />
    <mutant id="mutant_3555" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="((srcPos + 8) * -1)" />
    <mutant id="mutant_2222" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) + 1" />
    <mutant id="mutant_3554" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="((srcPos + 8) - 1)" />
    <mutant id="mutant_2223" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind + tolerance" to="(valueToFind + tolerance) * -1" />
    <mutant id="mutant_3553" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(srcPos + 8)" to="((srcPos + 8) + 1)" />
    <mutant id="mutant_2220" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) - 1" />
    <mutant id="mutant_3552" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) * -1)" />
    <mutant id="mutant_2221" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind - tolerance" to="(valueToFind - tolerance) * -1" />
    <mutant id="mutant_3551" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) + 1)" />
    <mutant id="mutant_3550" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) - 1)" />
    <mutant id="mutant_2228" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="((array.length) - 1) - 1" />
    <mutant id="mutant_2229" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="((array.length) - 1) + 1" />
    <mutant id="mutant_3559" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_2226" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="((array[i]) &gt;= min) &amp;&amp; ((array[i]) &lt;= max)" to="!(((array[i]) &gt;= min) &amp;&amp; ((array[i]) &lt;= max))" />
    <mutant id="mutant_3558" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_2227" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length) - 1" to="((array.length) - 1) * -1" />
    <mutant id="mutant_3557" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools))" />
    <mutant id="mutant_2213" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3545" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2214" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_3544" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_2211" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3543" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) * -1" />
    <mutant id="mutant_2212" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3542" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) - 1" />
    <mutant id="mutant_3541" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4) + srcPos" to="((i * 4) + srcPos) + 1" />
    <mutant id="mutant_2210" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3540" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_2219" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_2217" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3549" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_2218" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3548" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_2215" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_3547" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_2216" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3546" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_2051" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="((rc * 7) + (key.hashCode())) + 1" />
    <mutant id="mutant_3383" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_2052" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="((rc * 7) + (key.hashCode())) - 1" />
    <mutant id="mutant_3382" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_3381" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_2050" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="((rc * 7) * -1)" />
    <mutant id="mutant_3380" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_2048" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="((rc * 7) - 1)" />
    <mutant id="mutant_2049" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7)" to="((rc * 7) + 1)" />
    <mutant id="mutant_3379" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBytes))" />
    <mutant id="mutant_2046" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="(((char)(((value % 10) + '0'))) + 1)" />
    <mutant id="mutant_3378" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_2047" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="(((char)(((value % 10) + '0'))) - 1)" />
    <mutant id="mutant_3377" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2044" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) - 1)" />
    <mutant id="mutant_3376" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2045" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value % 10) + '0'))" to="(((char)(((value % 10) + '0'))) * -1)" />
    <mutant id="mutant_3375" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2042" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) * -1)" />
    <mutant id="mutant_3374" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="(i + dstPos) + 1" />
    <mutant id="mutant_2043" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value % 10)" to="((value % 10) + 1)" />
    <mutant id="mutant_3373" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="(i + dstPos) * -1" />
    <mutant id="mutant_2040" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="(((char)(((value / 10) + '0'))) + 1)" />
    <mutant id="mutant_3372" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i + dstPos" to="(i + dstPos) - 1" />
    <mutant id="mutant_2041" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="(((char)(((value / 10) + '0'))) - 1)" />
    <mutant id="mutant_3371" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) - 1)" />
    <mutant id="mutant_3370" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) + 1)" />
    <mutant id="mutant_2037" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="((value / 10) * -1)" />
    <mutant id="mutant_3369" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="((nBools - 1) + dstPos)" to="(((nBools - 1) + dstPos) * -1)" />
    <mutant id="mutant_2038" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="((value / 10) - 1)" />
    <mutant id="mutant_3368" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="((nBools - 1) * -1)" />
    <mutant id="mutant_4699" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="(((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;) - 1)" />
    <mutant id="mutant_2035" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) - 1)" />
    <mutant id="mutant_3367" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="((nBools - 1) + 1)" />
    <mutant id="mutant_4698" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="(((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;) * -1)" />
    <mutant id="mutant_2036" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="(value / 10)" to="((value / 10) + 1)" />
    <mutant id="mutant_3366" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_4697" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) * -1)" />
    <mutant id="mutant_2033" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) + 1)" />
    <mutant id="mutant_3365" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nBools))" />
    <mutant id="mutant_4696" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + 1)" />
    <mutant id="mutant_2034" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) * -1)" />
    <mutant id="mutant_3364" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_4695" viable="false" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="(&quot;Caught a SecurityException reading the system property \'&quot; + property)" to="((&quot;Caught a SecurityException reading the system property \'&quot; + property) - 1)" />
    <mutant id="mutant_2031" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="((&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName())) - 1)" />
    <mutant id="mutant_3363" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) * -1)" />
    <mutant id="mutant_4694" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.SystemUtils.isOSNameMatch(osName, osNamePrefix)) &amp;&amp; (org.apache.commons.lang3.SystemUtils.isOSVersionMatch(osVersion, osVersionPrefix))" to="!((org.apache.commons.lang3.SystemUtils.isOSNameMatch(osName, osNamePrefix)) &amp;&amp; (org.apache.commons.lang3.SystemUtils.isOSVersionMatch(osVersion, osVersionPrefix)))" />
    <mutant id="mutant_2032" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="((&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName())) * -1)" />
    <mutant id="mutant_3362" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) - 1)" />
    <mutant id="mutant_4693" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" from="(osName == null) || (osVersion == null)" to="!((osName == null) || (osVersion == null))" />
    <mutant id="mutant_2039" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="((char)((value / 10) + '0'))" to="(((char)(((value / 10) + '0'))) * -1)" />
    <mutant id="mutant_3361" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) + 1)" />
    <mutant id="mutant_4692" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;) * -1)" />
    <mutant id="mutant_2030" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="(&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName()))" to="((&quot;Unknown class: &quot; + (obj == null ? &quot;&lt;null&gt;&quot; : obj.getClass().getName())) + 1)" />
    <mutant id="mutant_3360" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) * -1)" />
    <mutant id="mutant_4691" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;) - 1)" />
    <mutant id="mutant_4690" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 8&quot;) + 1)" />
    <mutant id="mutant_2026" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) * -1)" />
    <mutant id="mutant_3358" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) + 1)" />
    <mutant id="mutant_4689" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;) + 1)" />
    <mutant id="mutant_2027" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_3357" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4688" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;) * -1)" />
    <mutant id="mutant_2024" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + 1)" />
    <mutant id="mutant_3356" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4687" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 7&quot;) - 1)" />
    <mutant id="mutant_2025" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID()))" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) - 1)" />
    <mutant id="mutant_3355" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4686" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;) + 1)" />
    <mutant id="mutant_2022" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_3354" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4685" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;) * -1)" />
    <mutant id="mutant_2023" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_3353" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4684" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Vista&quot;) - 1)" />
    <mutant id="mutant_2020" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + 1)" />
    <mutant id="mutant_3352" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4683" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;) + 1)" />
    <mutant id="mutant_2021" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;)" to="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_3351" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4682" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;) * -1)" />
    <mutant id="mutant_2028" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_2029" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;" to="((((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) + &quot;,&quot;) + (mTimeZone.getID())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_3359" viable="false" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="(&quot;nibble value not between 0 and 15: &quot; + nibble)" to="((&quot;nibble value not between 0 and 15: &quot; + nibble) - 1)" />
    <mutant id="mutant_3350" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4681" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; XP&quot;) - 1)" />
    <mutant id="mutant_4680" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;) - 1)" />
    <mutant id="mutant_2015" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) - 1)" />
    <mutant id="mutant_3347" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4678" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;) * -1)" />
    <mutant id="mutant_2016" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) * -1)" />
    <mutant id="mutant_3346" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4677" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;) - 1)" />
    <mutant id="mutant_2013" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="((&quot;FastDatePrinter[&quot; + (mPattern)) + 1)" />
    <mutant id="mutant_3345" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4676" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;) + 1)" />
    <mutant id="mutant_2014" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="((&quot;FastDatePrinter[&quot; + (mPattern)) - 1)" />
    <mutant id="mutant_3344" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4675" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Me&quot;) * -1)" />
    <mutant id="mutant_2011" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="!((!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))))" />
    <mutant id="mutant_3343" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4674" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;) + 1)" />
    <mutant id="mutant_2012" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(&quot;FastDatePrinter[&quot; + (mPattern))" to="((&quot;FastDatePrinter[&quot; + (mPattern)) * -1)" />
    <mutant id="mutant_3342" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4673" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;) * -1)" />
    <mutant id="mutant_3341" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4672" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 98&quot;) - 1)" />
    <mutant id="mutant_2010" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="(!(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))))" />
    <mutant id="mutant_3340" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4671" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;) * -1)" />
    <mutant id="mutant_2019" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) * -1)" />
    <mutant id="mutant_2017" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;)" to="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + 1)" />
    <mutant id="mutant_3349" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_2018" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.toString()" from="(((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale))" to="((((&quot;FastDatePrinter[&quot; + (mPattern)) + &quot;,&quot;) + (mLocale)) - 1)" />
    <mutant id="mutant_3348" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4679" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; NT&quot;) + 1)" />
    <mutant id="mutant_2095" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="((&quot;Cannot store &quot; + (type2.getName())) + 1)" />
    <mutant id="mutant_2096" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + 1)" />
    <mutant id="mutant_2093" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="((&quot;Cannot store &quot; + (type2.getName())) * -1)" />
    <mutant id="mutant_2094" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(&quot;Cannot store &quot; + (type2.getName()))" to="((&quot;Cannot store &quot; + (type2.getName())) - 1)" />
    <mutant id="mutant_2091" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="(((array1.length) + (array2.length)) - 1)" />
    <mutant id="mutant_2092" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="(((array1.length) + (array2.length)) + 1)" />
    <mutant id="mutant_2090" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((array1.length) + (array2.length))" to="(((array1.length) + (array2.length)) * -1)" />
    <mutant id="mutant_2088" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_2089" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_2086" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="((name.hashCode()) * 127) * -1" />
    <mutant id="mutant_2087" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_2084" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="((name.hashCode()) * 127) + 1" />
    <mutant id="mutant_2085" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode()) * 127" to="((name.hashCode()) * 127) - 1" />
    <mutant id="mutant_2082" viable="true" in="org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.Class)" from="((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (String.class.equals(type))) || (Class.class.equals(type))" to="!(((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (String.class.equals(type))) || (Class.class.equals(type)))" />
    <mutant id="mutant_2083" viable="true" in="org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.Class,java.lang.Object,java.lang.Object)" from="(o1 == null) || (o2 == null)" to="!((o1 == null) || (o2 == null))" />
    <mutant id="mutant_2080" viable="true" in="org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.Class)" from="(((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation()))" to="(!(((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())))" />
    <mutant id="mutant_2081" viable="true" in="org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.Class)" from="((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (String.class.equals(type)))" to="(!((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (String.class.equals(type))))" />
    <mutant id="mutant_2079" viable="true" in="org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.Class)" from="((type.isPrimitive()) || (type.isEnum()))" to="(!((type.isPrimitive()) || (type.isEnum())))" />
    <mutant id="mutant_2077" viable="true" in="org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)" from="(a1 == null) || (a2 == null)" to="!((a1 == null) || (a2 == null))" />
    <mutant id="mutant_2078" viable="true" in="org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)" from="((m.getParameterTypes().length) == 0) &amp;&amp; (org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(m.getReturnType()))" to="!(((m.getParameterTypes().length) == 0) &amp;&amp; (org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(m.getReturnType())))" />
    <mutant id="mutant_2075" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="((System.nanoTime()) - (this.stopTime)) - 1" />
    <mutant id="mutant_2076" viable="true" in="org.apache.commons.lang3.time.StopWatch.stop()" from="((this.runningState) != (StopWatch.State.RUNNING)) &amp;&amp; ((this.runningState) != (StopWatch.State.SUSPENDED))" to="!(((this.runningState) != (StopWatch.State.RUNNING)) &amp;&amp; ((this.runningState) != (StopWatch.State.SUSPENDED)))" />
    <mutant id="mutant_2073" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="((System.nanoTime()) - (this.stopTime)) + 1" />
    <mutant id="mutant_2074" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime()) - (this.stopTime)" to="((System.nanoTime()) - (this.stopTime)) * -1" />
    <mutant id="mutant_2071" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getNanoTime()) / (StopWatch.NANO_2_MILLIS)) - 1" />
    <mutant id="mutant_2072" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getNanoTime()) / (StopWatch.NANO_2_MILLIS)) * -1" />
    <mutant id="mutant_2070" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getNanoTime()) / (StopWatch.NANO_2_MILLIS)) + 1" />
    <mutant id="mutant_2068" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)) * -1" />
    <mutant id="mutant_2069" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)) - 1" />
    <mutant id="mutant_3399" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * -1)" />
    <mutant id="mutant_2066" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) * -1" />
    <mutant id="mutant_3398" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - 1)" />
    <mutant id="mutant_2067" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)" to="((getSplitNanoTime()) / (StopWatch.NANO_2_MILLIS)) + 1" />
    <mutant id="mutant_3397" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2064" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) + 1" />
    <mutant id="mutant_3396" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2065" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) - 1" />
    <mutant id="mutant_3395" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2062" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="((System.nanoTime()) - (this.startTime)) + 1" />
    <mutant id="mutant_3394" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) + 1" />
    <mutant id="mutant_2063" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="((System.nanoTime()) - (this.startTime)) - 1" />
    <mutant id="mutant_3393" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) - 1" />
    <mutant id="mutant_2060" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) * -1" />
    <mutant id="mutant_3392" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8) + dstPos" to="((i * 8) + dstPos) * -1" />
    <mutant id="mutant_2061" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime()) - (this.startTime)" to="((System.nanoTime()) - (this.startTime)) * -1" />
    <mutant id="mutant_3391" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_3390" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_2059" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) - 1" />
    <mutant id="mutant_2057" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="((this.runningState) == (StopWatch.State.STOPPED)) || ((this.runningState) == (StopWatch.State.SUSPENDED))" to="!(((this.runningState) == (StopWatch.State.STOPPED)) || ((this.runningState) == (StopWatch.State.SUSPENDED)))" />
    <mutant id="mutant_3389" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_2058" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime) - (this.startTime)" to="((this.stopTime) - (this.startTime)) + 1" />
    <mutant id="mutant_3388" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) * -1)" />
    <mutant id="mutant_2055" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="((&quot;No date time pattern for locale: &quot; + locale) + 1)" />
    <mutant id="mutant_3387" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) - 1)" />
    <mutant id="mutant_2056" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="((&quot;No date time pattern for locale: &quot; + locale) * -1)" />
    <mutant id="mutant_3386" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(((nBytes - 1) * 8) + dstPos)" to="((((nBytes - 1) * 8) + dstPos) + 1)" />
    <mutant id="mutant_2053" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(rc * 7) + (key.hashCode())" to="((rc * 7) + (key.hashCode())) * -1" />
    <mutant id="mutant_3385" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_2054" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="(&quot;No date time pattern for locale: &quot; + locale)" to="((&quot;No date time pattern for locale: &quot; + locale) - 1)" />
    <mutant id="mutant_3384" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_2099" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="((((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName())) * -1)" />
    <mutant id="mutant_2097" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) * -1)" />
    <mutant id="mutant_2098" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;)" to="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) - 1)" />
    <mutant id="mutant_2929" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass)))" to="(!((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))))" />
    <mutant id="mutant_2928" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass))" to="!((((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass)))" />
    <mutant id="mutant_2927" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass)))" to="(!(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))))" />
    <mutant id="mutant_2926" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass)))" to="(!((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))))" />
    <mutant id="mutant_2925" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass))" to="!((((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass)))" />
    <mutant id="mutant_2924" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass)))" to="(!(((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))))" />
    <mutant id="mutant_2923" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass)))" to="(!((Integer.TYPE.equals(toClass)) || (Long.TYPE.equals(toClass))))" />
    <mutant id="mutant_2922" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(Float.TYPE.equals(toClass)) || (Double.TYPE.equals(toClass))" to="!((Float.TYPE.equals(toClass)) || (Double.TYPE.equals(toClass)))" />
    <mutant id="mutant_2921" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((Long.TYPE.equals(toClass)) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass))" to="!(((Long.TYPE.equals(toClass)) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass)))" />
    <mutant id="mutant_2920" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((Long.TYPE.equals(toClass)) || (Float.TYPE.equals(toClass)))" to="(!((Long.TYPE.equals(toClass)) || (Float.TYPE.equals(toClass))))" />
    <mutant id="mutant_2919" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(toClass.isPrimitive()) &amp;&amp; (!(cls.isPrimitive()))" to="!((toClass.isPrimitive()) &amp;&amp; (!(cls.isPrimitive())))" />
    <mutant id="mutant_2918" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(cls.isPrimitive()) &amp;&amp; (!(toClass.isPrimitive()))" to="!((cls.isPrimitive()) &amp;&amp; (!(toClass.isPrimitive())))" />
    <mutant id="mutant_2917" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="(ch - 48) * -1" />
    <mutant id="mutant_2916" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="(ch - 48) + 1" />
    <mutant id="mutant_2915" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="ch - 48" to="(ch - 48) - 1" />
    <mutant id="mutant_2914" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="(ch - 48) * -1" />
    <mutant id="mutant_2913" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="(ch - 48) + 1" />
    <mutant id="mutant_2912" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="ch - 48" to="(ch - 48) - 1" />
    <mutant id="mutant_2911" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="(((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;) - 1)" />
    <mutant id="mutant_2910" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="(((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;) * -1)" />
    <mutant id="mutant_2909" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;)" to="(((&quot;The character &quot; + ch) + &quot; is not in the range \'0\' - \'9\'&quot;) + 1)" />
    <mutant id="mutant_2908" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="((&quot;The character &quot; + ch) + 1)" />
    <mutant id="mutant_2907" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="((&quot;The character &quot; + ch) * -1)" />
    <mutant id="mutant_2906" viable="false" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="(&quot;The character &quot; + ch)" to="((&quot;The character &quot; + ch) - 1)" />
    <mutant id="mutant_2905" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="(x - y) * -1" />
    <mutant id="mutant_2904" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="(x - y) - 1" />
    <mutant id="mutant_2903" viable="true" in="org.apache.commons.lang3.CharUtils.compare(char,char)" from="x - y" to="(x - y) + 1" />
    <mutant id="mutant_2902" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)" from="(ch &gt;= 32) &amp;&amp; (ch &lt; 127)" to="!((ch &gt;= 32) &amp;&amp; (ch &lt; 127))" />
    <mutant id="mutant_2901" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)" from="(ch &gt;= '0') &amp;&amp; (ch &lt;= '9')" to="!((ch &gt;= '0') &amp;&amp; (ch &lt;= '9'))" />
    <mutant id="mutant_2900" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiControl(char)" from="(ch &lt; 32) || (ch == 127)" to="!((ch &lt; 32) || (ch == 127))" />
    <mutant id="mutant_1630" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="((max - min) + 1)" />
    <mutant id="mutant_2962" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="(startIndex - 1) * -1" />
    <mutant id="mutant_1631" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="((max - min) * -1)" />
    <mutant id="mutant_2961" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="(startIndex - 1) + 1" />
    <mutant id="mutant_2960" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="((endIndex + 1) + 1)" />
    <mutant id="mutant_1638" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="(((val.get(aField[0])) - offset) + 1)" />
    <mutant id="mutant_1639" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="((&quot;The field &quot; + field) - 1)" />
    <mutant id="mutant_2969" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) - 1)" />
    <mutant id="mutant_1636" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="(((val.get(aField[0])) - offset) - 1)" />
    <mutant id="mutant_2968" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) * -1)" />
    <mutant id="mutant_1637" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((val.get(aField[0])) - offset)" to="(((val.get(aField[0])) - offset) * -1)" />
    <mutant id="mutant_2967" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) + 1)" />
    <mutant id="mutant_1634" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="(((max - min) / 2) - 1)" />
    <mutant id="mutant_2966" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="((className.length()) - 1) - 1" />
    <mutant id="mutant_1635" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="(((max - min) / 2) * -1)" />
    <mutant id="mutant_2965" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="((className.length()) - 1) * -1" />
    <mutant id="mutant_1632" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(max - min)" to="((max - min) - 1)" />
    <mutant id="mutant_2964" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length()) - 1" to="((className.length()) - 1) + 1" />
    <mutant id="mutant_1633" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((max - min) / 2)" to="(((max - min) / 2) + 1)" />
    <mutant id="mutant_2963" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex - 1" to="(startIndex - 1) - 1" />
    <mutant id="mutant_1629" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="((val.get(aField[0])) - min) + 1" />
    <mutant id="mutant_2951" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="(packageLevels + 1) * -1" />
    <mutant id="mutant_1620" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="(time - (minutes * 60000L)) - 1" />
    <mutant id="mutant_2950" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="(packageLevels + 1) - 1" />
    <mutant id="mutant_1627" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="((val.get(aField[0])) - min) - 1" />
    <mutant id="mutant_2959" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="((endIndex + 1) * -1)" />
    <mutant id="mutant_1628" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0])) - min" to="((val.get(aField[0])) - min) * -1" />
    <mutant id="mutant_2958" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(endIndex + 1)" to="((endIndex + 1) - 1)" />
    <mutant id="mutant_1625" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="((val.get(Calendar.DATE)) - 1) + 1" />
    <mutant id="mutant_2957" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="((startIndex + 1) * -1)" />
    <mutant id="mutant_1626" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="((val.get(Calendar.DATE)) - 1) - 1" />
    <mutant id="mutant_2956" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="((startIndex + 1) - 1)" />
    <mutant id="mutant_1623" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(modType == (DateUtils.ModifyType.CEILING)) || ((modType == (DateUtils.ModifyType.ROUND)) &amp;&amp; roundUp)" to="!((modType == (DateUtils.ModifyType.CEILING)) || ((modType == (DateUtils.ModifyType.ROUND)) &amp;&amp; roundUp))" />
    <mutant id="mutant_2955" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(startIndex + 1)" to="((startIndex + 1) + 1)" />
    <mutant id="mutant_1624" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE)) - 1" to="((val.get(Calendar.DATE)) - 1) * -1" />
    <mutant id="mutant_2954" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="((className.length()) - 1) - 1" />
    <mutant id="mutant_1621" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="(time - (minutes * 60000L)) * -1" />
    <mutant id="mutant_2953" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="((className.length()) - 1) * -1" />
    <mutant id="mutant_1622" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((modType == (DateUtils.ModifyType.ROUND)) &amp;&amp; roundUp)" to="(!((modType == (DateUtils.ModifyType.ROUND)) &amp;&amp; roundUp))" />
    <mutant id="mutant_2952" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length()) - 1" to="((className.length()) - 1) + 1" />
    <mutant id="mutant_1618" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="((minutes * 60000L) + 1)" />
    <mutant id="mutant_1619" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (minutes * 60000L)" to="(time - (minutes * 60000L)) + 1" />
    <mutant id="mutant_2949" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels + 1" to="(packageLevels + 1) + 1" />
    <mutant id="mutant_2940" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + 1)" />
    <mutant id="mutant_1616" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="((minutes * 60000L) * -1)" />
    <mutant id="mutant_2948" viable="true" in="org.apache.commons.lang3.ClassUtils$2$1.hasNext()" from="(interfaces.hasNext()) || (wrapped.hasNext())" to="!((interfaces.hasNext()) || (wrapped.hasNext()))" />
    <mutant id="mutant_1617" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(minutes * 60000L)" to="((minutes * 60000L) - 1)" />
    <mutant id="mutant_2947" viable="true" in="org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class)" from="(cls != null) &amp;&amp; (cls.isPrimitive())" to="!((cls != null) &amp;&amp; (cls.isPrimitive()))" />
    <mutant id="mutant_1614" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(((DateUtils.ModifyType.TRUNCATE) == modType) || (minutes &lt; 30))" to="(!(((DateUtils.ModifyType.TRUNCATE) == modType) || (minutes &lt; 30)))" />
    <mutant id="mutant_2946" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="((((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1)))) + 1)" />
    <mutant id="mutant_1615" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(!done) &amp;&amp; (((DateUtils.ModifyType.TRUNCATE) == modType) || (minutes &lt; 30))" to="!((!done) &amp;&amp; (((DateUtils.ModifyType.TRUNCATE) == modType) || (minutes &lt; 30)))" />
    <mutant id="mutant_2945" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="((((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1)))) - 1)" />
    <mutant id="mutant_1612" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="(time - (seconds * 1000L)) - 1" />
    <mutant id="mutant_2944" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1))))" to="((((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) + (className.substring((lastDotIndex + 1)))) * -1)" />
    <mutant id="mutant_1613" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="(time - (seconds * 1000L)) * -1" />
    <mutant id="mutant_2943" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="((lastDotIndex + 1) + 1)" />
    <mutant id="mutant_1610" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="((seconds * 1000L) + 1)" />
    <mutant id="mutant_2942" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="((lastDotIndex + 1) * -1)" />
    <mutant id="mutant_1611" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - (seconds * 1000L)" to="(time - (seconds * 1000L)) + 1" />
    <mutant id="mutant_2941" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="(lastDotIndex + 1)" to="((lastDotIndex + 1) - 1)" />
    <mutant id="mutant_1609" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="((seconds * 1000L) - 1)" />
    <mutant id="mutant_1607" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(!done) &amp;&amp; (((DateUtils.ModifyType.TRUNCATE) == modType) || (seconds &lt; 30))" to="!((!done) &amp;&amp; (((DateUtils.ModifyType.TRUNCATE) == modType) || (seconds &lt; 30)))" />
    <mutant id="mutant_2939" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) * -1)" />
    <mutant id="mutant_1608" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(seconds * 1000L)" to="((seconds * 1000L) * -1)" />
    <mutant id="mutant_2938" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(((className.substring(0, lastDotIndex)) + (ClassUtils.INNER_CLASS_SEPARATOR_CHAR)) - 1)" />
    <mutant id="mutant_1605" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="(time - millisecs) * -1" />
    <mutant id="mutant_2937" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="(&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))) - 1" />
    <mutant id="mutant_1606" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(((DateUtils.ModifyType.TRUNCATE) == modType) || (seconds &lt; 30))" to="(!(((DateUtils.ModifyType.TRUNCATE) == modType) || (seconds &lt; 30)))" />
    <mutant id="mutant_2936" viable="false" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="(&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))) * -1" />
    <mutant id="mutant_1603" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="(time - millisecs) + 1" />
    <mutant id="mutant_2935" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))" to="(&quot;[&quot; + (ClassUtils.abbreviationMap.get(className))) + 1" />
    <mutant id="mutant_1604" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time - millisecs" to="(time - millisecs) - 1" />
    <mutant id="mutant_2934" viable="true" in="org.apache.commons.lang3.ClassUtils.isPrimitiveOrWrapper(java.lang.Class)" from="(type.isPrimitive()) || (org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(type))" to="!((type.isPrimitive()) || (org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(type)))" />
    <mutant id="mutant_1601" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="(((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;) * -1)" />
    <mutant id="mutant_2933" viable="true" in="org.apache.commons.lang3.ClassUtils.isInnerClass(java.lang.Class)" from="(cls != null) &amp;&amp; ((cls.getEnclosingClass()) != null)" to="!((cls != null) &amp;&amp; ((cls.getEnclosingClass()) != null))" />
    <mutant id="mutant_1602" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((DateUtils.ModifyType.TRUNCATE) == modType) || (millisecs &lt; 500)" to="!(((DateUtils.ModifyType.TRUNCATE) == modType) || (millisecs &lt; 500))" />
    <mutant id="mutant_2932" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass))" to="!(((((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))) || (Double.TYPE.equals(toClass)))" />
    <mutant id="mutant_2931" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="((((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass)))" to="(!((((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass))) || (Float.TYPE.equals(toClass))))" />
    <mutant id="mutant_1600" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="(((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;) - 1)" />
    <mutant id="mutant_2930" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class,java.lang.Class,boolean)" from="(((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass)))" to="(!(((Short.TYPE.equals(toClass)) || (Integer.TYPE.equals(toClass))) || (Long.TYPE.equals(toClass))))" />
    <mutant id="mutant_800" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) * -1)" />
    <mutant id="mutant_801" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length())))" to="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) - 1)" />
    <mutant id="mutant_802" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="(((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;) - 1)" />
    <mutant id="mutant_803" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="(((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;) + 1)" />
    <mutant id="mutant_4709" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="(value &lt;= start) || (value &gt;= end)" to="!((value &lt;= start) || (value &gt;= end))" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) * -1)" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) + 1)" />
    <mutant id="mutant_804" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;)" to="(((&quot;Less than 4 hex digits in unicode value: \'&quot; + (input.subSequence(index, input.length()))) + &quot;\' due to end of CharSequence&quot;) * -1)" />
    <mutant id="mutant_805" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,java.io.Writer)" from="(codepoint &gt;= (Character.MIN_SURROGATE)) &amp;&amp; (codepoint &lt;= (Character.MAX_SURROGATE))" to="!((codepoint &gt;= (Character.MIN_SURROGATE)) &amp;&amp; (codepoint &lt;= (Character.MAX_SURROGATE)))" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.containsElements(java.util.Collection)" from="(coll == null) || (coll.isEmpty())" to="!((coll == null) || (coll.isEmpty()))" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) - 1)" />
    <mutant id="mutant_1674" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="(milliseconds / (DateUtils.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_4700" viable="true" in="org.apache.commons.lang3.SystemUtils.getSystemProperty(java.lang.String)" from="((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;)" to="(((&quot;Caught a SecurityException reading the system property \'&quot; + property) + &quot;\'; the SystemUtils property value will default to null.&quot;) + 1)" />
    <mutant id="mutant_1675" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="((seconds * (DateUtils.MILLIS_PER_SECOND)) - 1)" />
    <mutant id="mutant_1672" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="(milliseconds / (DateUtils.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_1673" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_SECOND)" to="(milliseconds / (DateUtils.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_1670" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))) * -1" />
    <mutant id="mutant_1671" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))) + 1" />
    <mutant id="mutant_4708" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="(value &lt;= start) || (value &gt;= end)" to="!((value &lt;= start) || (value &gt;= end))" />
    <mutant id="mutant_4707" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="((value.compareTo(start)) &lt; 0) || ((value.compareTo(end)) &gt; 0)" to="!(((value.compareTo(start)) &lt; 0) || ((value.compareTo(end)) &gt; 0))" />
    <mutant id="mutant_4706" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="((value.compareTo(start)) &lt; 0) || ((value.compareTo(end)) &gt; 0)" to="!(((value.compareTo(start)) &lt; 0) || ((value.compareTo(end)) &gt; 0))" />
    <mutant id="mutant_4705" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="((value.compareTo(start)) &lt;= 0) || ((value.compareTo(end)) &gt;= 0)" to="!(((value.compareTo(start)) &lt;= 0) || ((value.compareTo(end)) &gt;= 0))" />
    <mutant id="mutant_1678" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="(milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))) - 1" />
    <mutant id="mutant_4704" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="((value.compareTo(start)) &lt;= 0) || ((value.compareTo(end)) &gt;= 0)" to="!(((value.compareTo(start)) &lt;= 0) || ((value.compareTo(end)) &gt;= 0))" />
    <mutant id="mutant_1679" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="(milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))) + 1" />
    <mutant id="mutant_4703" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="(index &lt; 0) || (index &gt;= (array.length))" to="!((index &lt; 0) || (index &gt;= (array.length)))" />
    <mutant id="mutant_1676" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="((seconds * (DateUtils.MILLIS_PER_SECOND)) * -1)" />
    <mutant id="mutant_4702" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(index &lt; 0) || (index &gt;= (collection.size()))" to="!((index &lt; 0) || (index &gt;= (collection.size())))" />
    <mutant id="mutant_1677" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(seconds * (DateUtils.MILLIS_PER_SECOND))" to="((seconds * (DateUtils.MILLIS_PER_SECOND)) + 1)" />
    <mutant id="mutant_4701" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(index &lt; 0) || (index &gt;= (chars.length()))" to="!((index &lt; 0) || (index &gt;= (chars.length())))" />
    <mutant id="mutant_811" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))) * -1" />
    <mutant id="mutant_812" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))) - 1" />
    <mutant id="mutant_813" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) - 1)" />
    <mutant id="mutant_814" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) * -1)" />
    <mutant id="mutant_810" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(registry))) + 1" />
    <mutant id="mutant_819" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(!error) &amp;&amp; ((pos.getIndex()) &lt; (pattern.length()))" to="!((!error) &amp;&amp; ((pos.getIndex()) &lt; (pattern.length())))" />
    <mutant id="mutant_815" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result)" to="(((ExtendedMessageFormat.HASH_SEED) * result) + 1)" />
    <mutant id="mutant_816" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))) * -1" />
    <mutant id="mutant_817" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))) - 1" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))" to="(((ExtendedMessageFormat.HASH_SEED) * result) + (ObjectUtils.hashCode(toPattern))) + 1" />
    <mutant id="mutant_1663" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="(milliseconds / (DateUtils.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_2995" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + 1)" />
    <mutant id="mutant_1664" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="(milliseconds / (DateUtils.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_2994" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) * -1)" />
    <mutant id="mutant_1661" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="(milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_2993" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;)" to="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) - 1)" />
    <mutant id="mutant_1662" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="(milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_2992" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="((&quot;Can\'t find a public method for &quot; + methodName) * -1)" />
    <mutant id="mutant_2991" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="((&quot;Can\'t find a public method for &quot; + methodName) + 1)" />
    <mutant id="mutant_1660" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))" to="(milliseconds - (hours * (DateUtils.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_2990" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(&quot;Can\'t find a public method for &quot; + methodName)" to="((&quot;Can\'t find a public method for &quot; + methodName) - 1)" />
    <mutant id="mutant_1669" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))" to="(milliseconds - (minutes * (DateUtils.MILLIS_PER_MINUTE))) - 1" />
    <mutant id="mutant_1667" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="((minutes * (DateUtils.MILLIS_PER_MINUTE)) + 1)" />
    <mutant id="mutant_2999" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="(nBools - 1)" to="((nBools - 1) - 1)" />
    <mutant id="mutant_1668" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="((minutes * (DateUtils.MILLIS_PER_MINUTE)) - 1)" />
    <mutant id="mutant_2998" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="((((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes))) * -1)" />
    <mutant id="mutant_1665" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_MINUTE)" to="(milliseconds / (DateUtils.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_2997" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="((((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes))) + 1)" />
    <mutant id="mutant_1666" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(minutes * (DateUtils.MILLIS_PER_MINUTE))" to="((minutes * (DateUtils.MILLIS_PER_MINUTE)) * -1)" />
    <mutant id="mutant_2996" viable="false" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes)))" to="((((&quot;Can\'t find a public method for &quot; + methodName) + &quot; &quot;) + (ArrayUtils.toString(parameterTypes))) - 1)" />
    <mutant id="mutant_822" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((c == (ExtendedMessageFormat.START_FMT)) || (c == (ExtendedMessageFormat.END_FE))) &amp;&amp; ((result.length()) &gt; 0)" to="!(((c == (ExtendedMessageFormat.START_FMT)) || (c == (ExtendedMessageFormat.END_FE))) &amp;&amp; ((result.length()) &gt; 0))" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="((&quot;Invalid format argument index at position &quot; + start) + 1)" />
    <mutant id="mutant_824" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="((&quot;Invalid format argument index at position &quot; + start) - 1)" />
    <mutant id="mutant_825" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Invalid format argument index at position &quot; + start)" to="((&quot;Invalid format argument index at position &quot; + start) * -1)" />
    <mutant id="mutant_820" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(c != (ExtendedMessageFormat.START_FMT)) &amp;&amp; (c != (ExtendedMessageFormat.END_FE))" to="!((c != (ExtendedMessageFormat.START_FMT)) &amp;&amp; (c != (ExtendedMessageFormat.END_FE)))" />
    <mutant id="mutant_821" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((c == (ExtendedMessageFormat.START_FMT)) || (c == (ExtendedMessageFormat.END_FE)))" to="(!((c == (ExtendedMessageFormat.START_FMT)) || (c == (ExtendedMessageFormat.END_FE))))" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + 1)" />
    <mutant id="mutant_827" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) - 1)" />
    <mutant id="mutant_828" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;)" to="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) * -1)" />
    <mutant id="mutant_829" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="((((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex()))) + 1)" />
    <mutant id="mutant_1652" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="(milliseconds - (days * (DateUtils.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_2984" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="(out + arrayPrefix) * -1" />
    <mutant id="mutant_1653" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="(milliseconds - (days * (DateUtils.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_2983" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="((lastDotIdx + 1) - 1)" />
    <mutant id="mutant_1650" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="((days * (DateUtils.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2982" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="((lastDotIdx + 1) * -1)" />
    <mutant id="mutant_1651" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (days * (DateUtils.MILLIS_PER_DAY))" to="(milliseconds - (days * (DateUtils.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_2981" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(lastDotIdx + 1)" to="((lastDotIdx + 1) + 1)" />
    <mutant id="mutant_2980" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="(lastDotIdx + 1) - 1" />
    <mutant id="mutant_1658" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="((hours * (DateUtils.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_1659" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="((hours * (DateUtils.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_2989" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="(((className.length()) - 2) + 1)" />
    <mutant id="mutant_1656" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="(milliseconds / (DateUtils.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_2988" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="(((className.length()) - 2) - 1)" />
    <mutant id="mutant_1657" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(hours * (DateUtils.MILLIS_PER_HOUR))" to="((hours * (DateUtils.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_2987" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="((className.length()) - 2)" to="(((className.length()) - 2) * -1)" />
    <mutant id="mutant_1654" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="(milliseconds / (DateUtils.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_2986" viable="false" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="(out + arrayPrefix) - 1" />
    <mutant id="mutant_1655" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_HOUR)" to="(milliseconds / (DateUtils.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_2985" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="out + arrayPrefix" to="(out + arrayPrefix) + 1" />
    <mutant id="mutant_833" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) - 1)" />
    <mutant id="mutant_834" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) + 1)" />
    <mutant id="mutant_835" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="(((pattern.length()) * 2) + 1)" />
    <mutant id="mutant_836" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="(((pattern.length()) * 2) * -1)" />
    <mutant id="mutant_830" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="((((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex()))) - 1)" />
    <mutant id="mutant_831" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex())))" to="((((&quot;Invalid format argument index at position &quot; + start) + &quot;: &quot;) + (pattern.substring(start, pos.getIndex()))) * -1)" />
    <mutant id="mutant_832" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) * -1)" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="((pattern.length()) * 2)" to="(((pattern.length()) * 2) - 1)" />
    <mutant id="mutant_838" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) * -1)" />
    <mutant id="mutant_839" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) - 1)" />
    <mutant id="mutant_1641" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="((&quot;The field &quot; + field) + 1)" />
    <mutant id="mutant_2973" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) - 1)" />
    <mutant id="mutant_1642" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="(((&quot;The field &quot; + field) + &quot; is not supported&quot;) - 1)" />
    <mutant id="mutant_2972" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) * -1)" />
    <mutant id="mutant_2971" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) + 1)" />
    <mutant id="mutant_1640" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(&quot;The field &quot; + field)" to="((&quot;The field &quot; + field) * -1)" />
    <mutant id="mutant_2970" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="((className.charAt(0)) == 'L') &amp;&amp; ((className.charAt(((className.length()) - 1))) == ';')" to="!(((className.charAt(0)) == 'L') &amp;&amp; ((className.charAt(((className.length()) - 1))) == ';'))" />
    <mutant id="mutant_1649" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="((days * (DateUtils.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1647" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="(milliseconds / (DateUtils.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_2979" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="(lastDotIdx + 1) * -1" />
    <mutant id="mutant_1648" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(days * (DateUtils.MILLIS_PER_DAY))" to="((days * (DateUtils.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2978" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx + 1" to="(lastDotIdx + 1) + 1" />
    <mutant id="mutant_1645" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="(milliseconds / (DateUtils.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_2977" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) - 1)" />
    <mutant id="mutant_1646" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds / (DateUtils.MILLIS_PER_DAY)" to="(milliseconds / (DateUtils.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_2976" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) * -1)" />
    <mutant id="mutant_1643" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="(((&quot;The field &quot; + field) + &quot; is not supported&quot;) * -1)" />
    <mutant id="mutant_2975" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.length()) - 1)" to="(((className.length()) - 1) + 1)" />
    <mutant id="mutant_1644" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="((&quot;The field &quot; + field) + &quot; is not supported&quot;)" to="(((&quot;The field &quot; + field) + &quot; is not supported&quot;) + 1)" />
    <mutant id="mutant_2974" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="((className.charAt(0)) == 'L') &amp;&amp; ((className.charAt(((className.length()) - 1))) == ';')" to="!(((className.charAt(0)) == 'L') &amp;&amp; ((className.charAt(((className.length()) - 1))) == ';'))" />
    <mutant id="mutant_844" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="((&quot;Unterminated quoted string at position &quot; + start) + 1)" />
    <mutant id="mutant_845" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="((&quot;Unterminated quoted string at position &quot; + start) * -1)" />
    <mutant id="mutant_846" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(&quot;Unterminated quoted string at position &quot; + start)" to="((&quot;Unterminated quoted string at position &quot; + start) - 1)" />
    <mutant id="mutant_847" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_840" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(&quot;Unterminated format element at position &quot; + start)" to="((&quot;Unterminated format element at position &quot; + start) + 1)" />
    <mutant id="mutant_841" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="(((pos.getIndex()) - lastHold) + 1)" />
    <mutant id="mutant_842" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="(((pos.getIndex()) - lastHold) * -1)" />
    <mutant id="mutant_843" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="((pos.getIndex()) - lastHold)" to="(((pos.getIndex()) - lastHold) - 1)" />
    <mutant id="mutant_848" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_849" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3413" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) + 1)" />
    <mutant id="mutant_3412" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="((nHex - 1) - 1)" />
    <mutant id="mutant_3411" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="((nHex - 1) * -1)" />
    <mutant id="mutant_3410" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(nHex - 1)" to="((nHex - 1) + 1)" />
    <mutant id="mutant_3419" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="((i * 4) * -1)" />
    <mutant id="mutant_3418" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) * -1)" />
    <mutant id="mutant_3417" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) - 1)" />
    <mutant id="mutant_3416" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(((nHex - 1) * 4) + dstPos)" to="((((nHex - 1) * 4) + dstPos) + 1)" />
    <mutant id="mutant_3415" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) - 1)" />
    <mutant id="mutant_3414" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="((nHex - 1) * 4)" to="(((nHex - 1) * 4) * -1)" />
    <mutant id="mutant_855" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="((&quot;Unreadable format element at position &quot; + start) + 1)" />
    <mutant id="mutant_856" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(len &gt; 0) &amp;&amp; ((pos.getIndex()) &lt; (pattern.length()))" to="!((len &gt; 0) &amp;&amp; ((pos.getIndex()) &lt; (pattern.length())))" />
    <mutant id="mutant_857" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="(((pos.getIndex()) + len) + 1)" />
    <mutant id="mutant_858" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="(((pos.getIndex()) + len) * -1)" />
    <mutant id="mutant_851" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="(((pos.getIndex()) + 1) - 1)" />
    <mutant id="mutant_852" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="(((pos.getIndex()) + 1) * -1)" />
    <mutant id="mutant_853" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="((&quot;Unreadable format element at position &quot; + start) * -1)" />
    <mutant id="mutant_854" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(&quot;Unreadable format element at position &quot; + start)" to="((&quot;Unreadable format element at position &quot; + start) - 1)" />
    <mutant id="mutant_859" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="((pos.getIndex()) + len)" to="(((pos.getIndex()) + len) - 1)" />
    <mutant id="mutant_3402" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) * -1)" />
    <mutant id="mutant_3401" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) + 1)" />
    <mutant id="mutant_3400" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) + 1)" />
    <mutant id="mutant_3409" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) - 1)" />
    <mutant id="mutant_3408" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) * -1)" />
    <mutant id="mutant_850" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="((pos.getIndex()) + 1)" to="(((pos.getIndex()) + 1) + 1)" />
    <mutant id="mutant_3407" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) + 1)" />
    <mutant id="mutant_3406" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) + 1)" />
    <mutant id="mutant_3405" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) * -1)" />
    <mutant id="mutant_3404" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="(&quot;Cannot interpret \'&quot; + hexDigit)" to="((&quot;Cannot interpret \'&quot; + hexDigit) - 1)" />
    <mutant id="mutant_3403" viable="false" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;)" to="(((&quot;Cannot interpret \'&quot; + hexDigit) + &quot;\' as a hexadecimal digit&quot;) - 1)" />
    <mutant id="mutant_866" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((off &lt; 0) || (len &lt; 0))" to="(!((off &lt; 0) || (len &lt; 0)))" />
    <mutant id="mutant_867" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length)))" to="(!(((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length))))" />
    <mutant id="mutant_868" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) + 1)" />
    <mutant id="mutant_869" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) - 1)" />
    <mutant id="mutant_862" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision &gt;= 0) &amp;&amp; (precision &lt; (seq.length()))" to="!((precision &gt;= 0) &amp;&amp; (precision &lt; (seq.length())))" />
    <mutant id="mutant_863" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="((precision - (_ellipsis.length())) * -1)" />
    <mutant id="mutant_864" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="((precision - (_ellipsis.length())) - 1)" />
    <mutant id="mutant_865" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(precision - (_ellipsis.length()))" to="((precision - (_ellipsis.length())) + 1)" />
    <mutant id="mutant_1696" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="((end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))) - 1" />
    <mutant id="mutant_4722" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="((v - 1.0) * -1)" />
    <mutant id="mutant_1697" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="((end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))) * -1" />
    <mutant id="mutant_4721" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="((((toParse[0]) + '.') + (toParse[1])) * -1)" />
    <mutant id="mutant_1694" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="((end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))) * -1" />
    <mutant id="mutant_4720" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="((((toParse[0]) + '.') + (toParse[1])) - 1)" />
    <mutant id="mutant_1695" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="((end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))) + 1" />
    <mutant id="mutant_1692" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="((end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))) + 1" />
    <mutant id="mutant_1693" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))" to="((end.get(Calendar.MINUTE)) - (start.get(Calendar.MINUTE))) - 1" />
    <mutant id="mutant_1690" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="((end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))) - 1" />
    <mutant id="mutant_1691" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))" to="((end.get(Calendar.SECOND)) - (start.get(Calendar.SECOND))) * -1" />
    <mutant id="mutant_860" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="((ellipsis == null) || (precision &lt; 0))" to="(!((ellipsis == null) || (precision &lt; 0)))" />
    <mutant id="mutant_861" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(((ellipsis == null) || (precision &lt; 0)) || ((ellipsis.length()) &lt;= precision))" to="!(((ellipsis == null) || (precision &lt; 0)) || ((ellipsis.length()) &lt;= precision))" />
    <mutant id="mutant_4727" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="((firstComma + 1) + 1)" />
    <mutant id="mutant_4726" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="((firstComma + 1) - 1)" />
    <mutant id="mutant_4725" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(firstComma + 1)" to="((firstComma + 1) * -1)" />
    <mutant id="mutant_1698" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))" to="((end.get(Calendar.HOUR_OF_DAY)) - (start.get(Calendar.HOUR_OF_DAY))) + 1" />
    <mutant id="mutant_4724" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="((v - 1.0) + 1)" />
    <mutant id="mutant_1699" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))" to="((end.get(Calendar.DAY_OF_MONTH)) - (start.get(Calendar.DAY_OF_MONTH))) * -1" />
    <mutant id="mutant_4723" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(v - 1.0)" to="((v - 1.0) - 1)" />
    <mutant id="mutant_877" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) * -1)" />
    <mutant id="mutant_878" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) + 1)" />
    <mutant id="mutant_879" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) + 1" />
    <mutant id="mutant_873" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) - 1)" />
    <mutant id="mutant_874" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) * -1)" />
    <mutant id="mutant_875" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length))) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0)" to="!(((((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length))) || ((off + len) &gt; (b.length))) || ((off + len) &lt; 0))" />
    <mutant id="mutant_876" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) - 1)" />
    <mutant id="mutant_1685" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) + 1" />
    <mutant id="mutant_4711" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="(value &lt;= start) || (value &gt;= end)" to="!((value &lt;= start) || (value &gt;= end))" />
    <mutant id="mutant_1686" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) * -1" />
    <mutant id="mutant_4710" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="(value &lt;= start) || (value &gt;= end)" to="!((value &lt;= start) || (value &gt;= end))" />
    <mutant id="mutant_1683" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) * -1" />
    <mutant id="mutant_1684" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) - 1" />
    <mutant id="mutant_1681" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) - 1" />
    <mutant id="mutant_1682" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="&quot; &quot; + duration" to="(&quot; &quot; + duration) + 1" />
    <mutant id="mutant_1680" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))" to="(milliseconds - (seconds * (DateUtils.MILLIS_PER_SECOND))) * -1" />
    <mutant id="mutant_4719" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(((toParse[0]) + '.') + (toParse[1]))" to="((((toParse[0]) + '.') + (toParse[1])) + 1)" />
    <mutant id="mutant_870" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) * -1)" />
    <mutant id="mutant_4718" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="(((toParse[0]) + '.') + 1)" />
    <mutant id="mutant_871" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length))) || ((off + len) &gt; (b.length)))" to="(!((((off &lt; 0) || (len &lt; 0)) || (off &gt; (b.length))) || ((off + len) &gt; (b.length))))" />
    <mutant id="mutant_4717" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="(((toParse[0]) + '.') - 1)" />
    <mutant id="mutant_872" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(off + len)" to="((off + len) + 1)" />
    <mutant id="mutant_4716" viable="false" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="((toParse[0]) + '.')" to="(((toParse[0]) + '.') * -1)" />
    <mutant id="mutant_1689" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="((end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))) - 1" />
    <mutant id="mutant_4715" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="(value &lt; start) || (value &gt; end)" to="!((value &lt; start) || (value &gt; end))" />
    <mutant id="mutant_4714" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="(value &lt; start) || (value &gt; end)" to="!((value &lt; start) || (value &gt; end))" />
    <mutant id="mutant_1687" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="((end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))) + 1" />
    <mutant id="mutant_4713" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="(value &lt; start) || (value &gt; end)" to="!((value &lt; start) || (value &gt; end))" />
    <mutant id="mutant_1688" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))" to="((end.get(Calendar.MILLISECOND)) - (start.get(Calendar.MILLISECOND))) * -1" />
    <mutant id="mutant_4712" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="(value &lt; start) || (value &gt; end)" to="!((value &lt; start) || (value &gt; end))" />
    <mutant id="mutant_888" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) + 1" />
    <mutant id="mutant_889" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) * -1" />
    <mutant id="mutant_884" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) + 1)" />
    <mutant id="mutant_885" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="(((pos) + n) * -1)" />
    <mutant id="mutant_886" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="(((pos) + n) + 1)" />
    <mutant id="mutant_887" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="((pos) + n)" to="(((pos) + n) - 1)" />
    <mutant id="mutant_3460" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32) + srcPos" to="((i * 32) + srcPos) + 1" />
    <mutant id="mutant_2125" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) * -1)" />
    <mutant id="mutant_3457" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="((i * 32) - 1)" />
    <mutant id="mutant_2126" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) - 1)" />
    <mutant id="mutant_3456" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="((((nInts - 1) * 32) + srcPos) * -1)" />
    <mutant id="mutant_2123" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3455" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="((((nInts - 1) * 32) + srcPos) - 1)" />
    <mutant id="mutant_2124" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3454" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(((nInts - 1) * 32) + srcPos)" to="((((nInts - 1) * 32) + srcPos) + 1)" />
    <mutant id="mutant_2121" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3453" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) * -1)" />
    <mutant id="mutant_2122" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3452" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) + 1)" />
    <mutant id="mutant_3451" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="((nInts - 1) * 32)" to="(((nInts - 1) * 32) - 1)" />
    <mutant id="mutant_2120" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3450" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="((nInts - 1) + 1)" />
    <mutant id="mutant_880" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) * -1" />
    <mutant id="mutant_881" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) - 1" />
    <mutant id="mutant_882" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) - 1)" />
    <mutant id="mutant_883" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="((pos) + len)" to="(((pos) + len) * -1)" />
    <mutant id="mutant_2129" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) - 1" />
    <mutant id="mutant_2127" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="((newArray.length) - 1)" to="(((newArray.length) - 1) + 1)" />
    <mutant id="mutant_3459" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="((i * 32) + 1)" />
    <mutant id="mutant_2128" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length) + (array2.length)" to="((array1.length) + (array2.length)) * -1" />
    <mutant id="mutant_3458" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(i * 32)" to="((i * 32) * -1)" />
    <mutant id="mutant_899" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) + 1" />
    <mutant id="mutant_895" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="((size) - len) + 1" />
    <mutant id="mutant_896" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="((size) - len) - 1" />
    <mutant id="mutant_897" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size) - len" to="((size) - len) * -1" />
    <mutant id="mutant_898" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size) - 1" to="((size) - 1) - 1" />
    <mutant id="mutant_2114" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) + 1" />
    <mutant id="mutant_3446" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_2115" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3445" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_2112" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) * -1" />
    <mutant id="mutant_3444" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) * -1" />
    <mutant id="mutant_2113" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive - startIndexInclusive" to="(endIndexExclusive - startIndexInclusive) - 1" />
    <mutant id="mutant_3443" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) + 1" />
    <mutant id="mutant_2110" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) * -1)" />
    <mutant id="mutant_3442" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16) + dstPos" to="((i * 16) + dstPos) - 1" />
    <mutant id="mutant_2111" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))" to="!((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values)))" />
    <mutant id="mutant_3441" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="((i * 16) - 1)" />
    <mutant id="mutant_3440" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="((i * 16) * -1)" />
    <mutant id="mutant_891" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="((str.length()) + (StrBuilder.CAPACITY)) * -1" />
    <mutant id="mutant_892" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="((str.length()) + (StrBuilder.CAPACITY)) - 1" />
    <mutant id="mutant_893" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length()) + (StrBuilder.CAPACITY)" to="((str.length()) + (StrBuilder.CAPACITY)) + 1" />
    <mutant id="mutant_894" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendAll(T[])" from="(array != null) &amp;&amp; ((array.length) &gt; 0)" to="!((array != null) &amp;&amp; ((array.length) &gt; 0))" />
    <mutant id="mutant_2118" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_2119" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3449" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="((nInts - 1) - 1)" />
    <mutant id="mutant_2116" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameType(java.lang.Object,java.lang.Object)" from="(array1 == null) || (array2 == null)" to="!((array1 == null) || (array2 == null))" />
    <mutant id="mutant_3448" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="(nInts - 1)" to="((nInts - 1) * -1)" />
    <mutant id="mutant_890" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)" to="((org.apache.commons.lang3.text.StrBuilder.this.size()) - (pos)) - 1" />
    <mutant id="mutant_2117" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="(array == null) || ((array.length) &lt; 2)" to="!((array == null) || ((array.length) &lt; 2))" />
    <mutant id="mutant_3447" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_2103" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="((array.length) - index) - 1" />
    <mutant id="mutant_3435" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) - 1)" />
    <mutant id="mutant_2104" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="((array.length) - index) + 1" />
    <mutant id="mutant_3434" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) + 1)" />
    <mutant id="mutant_2101" viable="false" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="((((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName())) - 1)" />
    <mutant id="mutant_3433" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="((nShorts - 1) * 16)" to="(((nShorts - 1) * 16) * -1)" />
    <mutant id="mutant_2102" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length) - index" to="((array.length) - index) * -1" />
    <mutant id="mutant_3432" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="((nShorts - 1) * -1)" />
    <mutant id="mutant_3431" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="((nShorts - 1) - 1)" />
    <mutant id="mutant_2100" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName()))" to="((((&quot;Cannot store &quot; + (type2.getName())) + &quot; in an array of &quot;) + (type1.getName())) + 1)" />
    <mutant id="mutant_3430" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(nShorts - 1)" to="((nShorts - 1) + 1)" />
    <mutant id="mutant_2109" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) + 1)" />
    <mutant id="mutant_2107" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_3439" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(i * 16)" to="((i * 16) + 1)" />
    <mutant id="mutant_2108" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="((indices[(count - 1)]) + 1)" to="(((indices[(count - 1)]) + 1) - 1)" />
    <mutant id="mutant_3438" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) + 1)" />
    <mutant id="mutant_2105" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_3437" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) * -1)" />
    <mutant id="mutant_2106" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3436" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((nShorts - 1) * 16) + dstPos)" to="((((nShorts - 1) * 16) + dstPos) - 1)" />
    <mutant id="mutant_3424" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) * -1" />
    <mutant id="mutant_3423" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) + 1" />
    <mutant id="mutant_3422" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4) + dstPos" to="((i * 4) + dstPos) - 1" />
    <mutant id="mutant_3421" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="((i * 4) - 1)" />
    <mutant id="mutant_3420" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i * 4)" to="((i * 4) + 1)" />
    <mutant id="mutant_3429" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nShorts)" to="!((((src.length) == 0) &amp;&amp; (srcPos == 0)) || (0 == nShorts))" />
    <mutant id="mutant_3428" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(((src.length) == 0) &amp;&amp; (srcPos == 0))" to="(!(((src.length) == 0) &amp;&amp; (srcPos == 0)))" />
    <mutant id="mutant_3427" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) - 1)" />
    <mutant id="mutant_3426" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) + 1)" />
    <mutant id="mutant_3425" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(i + srcPos)" to="((i + srcPos) * -1)" />
    <mutant id="mutant_327" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) * -1)" />
    <mutant id="mutant_328" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) - 1)" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + 1)" />
    <mutant id="mutant_323" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="((&quot;add&quot; + (listenerType.getSimpleName())) + 1)" />
    <mutant id="mutant_324" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) * -1)" />
    <mutant id="mutant_325" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) - 1)" />
    <mutant id="mutant_326" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) + 1)" />
    <mutant id="mutant_3262" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4593" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) - 1)" />
    <mutant id="mutant_3261" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4592" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) * -1)" />
    <mutant id="mutant_3260" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4591" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) + 1)" />
    <mutant id="mutant_4590" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="((str == null) || (open == null)) || (close == null)" to="!(((str == null) || (open == null)) || (close == null))" />
    <mutant id="mutant_3259" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3258" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_4589" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="((str == null) || (open == null))" to="(!((str == null) || (open == null)))" />
    <mutant id="mutant_3257" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4588" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator)))" />
    <mutant id="mutant_3256" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4587" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null))" />
    <mutant id="mutant_3255" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4586" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) + 1)" />
    <mutant id="mutant_3254" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4585" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) - 1)" />
    <mutant id="mutant_3253" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4584" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) * -1)" />
    <mutant id="mutant_3252" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4583" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(pos == (StringUtils.INDEX_NOT_FOUND)) || (pos == ((str.length()) - (separator.length())))" to="!((pos == (StringUtils.INDEX_NOT_FOUND)) || (pos == ((str.length()) - (separator.length()))))" />
    <mutant id="mutant_320" viable="true" in="org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(eventTypes.isEmpty()) || (eventTypes.contains(method.getName()))" to="!((eventTypes.isEmpty()) || (eventTypes.contains(method.getName())))" />
    <mutant id="mutant_321" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="((&quot;add&quot; + (listenerType.getSimpleName())) * -1)" />
    <mutant id="mutant_322" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;add&quot; + (listenerType.getSimpleName()))" to="((&quot;add&quot; + (listenerType.getSimpleName())) - 1)" />
    <mutant id="mutant_338" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) * -1)" />
    <mutant id="mutant_339" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) * -1)" />
    <mutant id="mutant_334" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) - 1)" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + 1)" />
    <mutant id="mutant_336" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) - 1)" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + 1)" />
    <mutant id="mutant_3251" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4582" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="(((str.length()) - (separator.length())) - 1)" />
    <mutant id="mutant_3250" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4581" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="(((str.length()) - (separator.length())) + 1)" />
    <mutant id="mutant_4580" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="((str.length()) - (separator.length()))" to="(((str.length()) - (separator.length())) * -1)" />
    <mutant id="mutant_3248" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4579" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) + 1)" />
    <mutant id="mutant_3247" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4578" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) - 1)" />
    <mutant id="mutant_3246" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4577" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(pos + (separator.length()))" to="((pos + (separator.length())) * -1)" />
    <mutant id="mutant_3245" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4576" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="((str.length()) + start) * -1" />
    <mutant id="mutant_3244" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4575" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="((str.length()) + start) + 1" />
    <mutant id="mutant_3243" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4574" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + start" to="((str.length()) + start) - 1" />
    <mutant id="mutant_3242" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4573" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="((str.length()) + end) + 1" />
    <mutant id="mutant_3241" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4572" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="((str.length()) + end) - 1" />
    <mutant id="mutant_330" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) * -1)" />
    <mutant id="mutant_331" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + 1)" />
    <mutant id="mutant_332" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) - 1)" />
    <mutant id="mutant_333" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) * -1)" />
    <mutant id="mutant_3249" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_349" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) - 1)" />
    <mutant id="mutant_345" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) - 1)" />
    <mutant id="mutant_346" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) * -1)" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;)" to="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + 1)" />
    <mutant id="mutant_348" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) * -1)" />
    <mutant id="mutant_3240" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4571" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length()) + end" to="((str.length()) + end) * -1" />
    <mutant id="mutant_4570" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="((str.length()) + start) * -1" />
    <mutant id="mutant_3237" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_4568" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="((str.length()) + start) - 1" />
    <mutant id="mutant_3236" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4567" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(start != strLen) &amp;&amp; ((stripChars.indexOf(str.charAt(start))) != (StringUtils.INDEX_NOT_FOUND))" to="!((start != strLen) &amp;&amp; ((stripChars.indexOf(str.charAt(start))) != (StringUtils.INDEX_NOT_FOUND)))" />
    <mutant id="mutant_3235" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4566" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(start != strLen) &amp;&amp; (Character.isWhitespace(str.charAt(start)))" to="!((start != strLen) &amp;&amp; (Character.isWhitespace(str.charAt(start))))" />
    <mutant id="mutant_3234" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4565" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(str == null) || ((strLen = str.length()) == 0)" to="!((str == null) || ((strLen = str.length()) == 0))" />
    <mutant id="mutant_3233" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4564" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end != 0) &amp;&amp; ((stripChars.indexOf(str.charAt((end - 1)))) != (StringUtils.INDEX_NOT_FOUND))" to="!((end != 0) &amp;&amp; ((stripChars.indexOf(str.charAt((end - 1)))) != (StringUtils.INDEX_NOT_FOUND)))" />
    <mutant id="mutant_3232" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4563" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) - 1)" />
    <mutant id="mutant_3231" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4562" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) + 1)" />
    <mutant id="mutant_3230" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_4561" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) * -1)" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) + 1)" />
    <mutant id="mutant_342" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) * -1)" />
    <mutant id="mutant_343" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) - 1)" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(&quot;Class &quot; + (eventSource.getClass().getName()))" to="((&quot;Class &quot; + (eventSource.getClass().getName())) + 1)" />
    <mutant id="mutant_3239" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_340" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have a public add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) - 1)" />
    <mutant id="mutant_3238" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4569" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length()) + start" to="((str.length()) + start) + 1" />
    <mutant id="mutant_356" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + 1)" />
    <mutant id="mutant_357" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) + 1)" />
    <mutant id="mutant_358" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) * -1)" />
    <mutant id="mutant_359" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;)" to="(((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) + &quot;.&quot;) - 1)" />
    <mutant id="mutant_4560" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end != 0) &amp;&amp; (Character.isWhitespace(str.charAt((end - 1))))" to="!((end != 0) &amp;&amp; (Character.isWhitespace(str.charAt((end - 1)))))" />
    <mutant id="mutant_3226" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4557" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) * -1)" />
    <mutant id="mutant_3225" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4556" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(str == null) || ((end = str.length()) == 0)" to="!((str == null) || ((end = str.length()) == 0))" />
    <mutant id="mutant_3224" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4555" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) * -1)" />
    <mutant id="mutant_3223" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4554" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) + 1)" />
    <mutant id="mutant_3222" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4553" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) - 1)" />
    <mutant id="mutant_3221" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4552" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="((shift == 0) || (strLen == 0)) || ((shift % strLen) == 0)" to="!(((shift == 0) || (strLen == 0)) || ((shift % strLen) == 0))" />
    <mutant id="mutant_3220" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4551" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) * -1)" />
    <mutant id="mutant_4550" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) + 1)" />
    <mutant id="mutant_352" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) * -1)" />
    <mutant id="mutant_353" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) - 1)" />
    <mutant id="mutant_354" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) - 1)" />
    <mutant id="mutant_355" viable="false" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName()))" to="((((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + (listenerType.getName())) * -1)" />
    <mutant id="mutant_3229" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_350" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="(((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName()))" to="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + 1)" />
    <mutant id="mutant_3228" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4559" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) - 1)" />
    <mutant id="mutant_351" viable="true" in="org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object,java.lang.Class,L)" from="((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;)" to="(((((&quot;Class &quot; + (eventSource.getClass().getName())) + &quot; does not have an accessible add&quot;) + (listenerType.getSimpleName())) + &quot; method which takes a parameter of type &quot;) + 1)" />
    <mutant id="mutant_3227" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4558" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(end - 1)" to="((end - 1) + 1)" />
    <mutant id="mutant_367" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="((&quot;Not a checked exception: &quot; + ex) - 1)" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(java.util.concurrent.ExecutionException)" from="(ex == null) || ((ex.getCause()) == null)" to="!((ex == null) || ((ex.getCause()) == null))" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(java.util.concurrent.ExecutionException)" from="(ex == null) || ((ex.getCause()) == null)" to="!((ex == null) || ((ex.getCause()) == null))" />
    <mutant id="mutant_3299" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_3298" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3297" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_3296" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_363" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="((ex != null) &amp;&amp; (!(ex instanceof java.lang.RuntimeException)))" to="(!((ex != null) &amp;&amp; (!(ex instanceof java.lang.RuntimeException))))" />
    <mutant id="mutant_364" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(((ex != null) &amp;&amp; (!(ex instanceof java.lang.RuntimeException))) &amp;&amp; (!(ex instanceof java.lang.Error)))" to="!(((ex != null) &amp;&amp; (!(ex instanceof java.lang.RuntimeException))) &amp;&amp; (!(ex instanceof java.lang.Error)))" />
    <mutant id="mutant_365" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="((&quot;Not a checked exception: &quot; + ex) + 1)" />
    <mutant id="mutant_366" viable="false" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(java.lang.Throwable)" from="(&quot;Not a checked exception: &quot; + ex)" to="((&quot;Not a checked exception: &quot; + ex) * -1)" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="(obj instanceof org.apache.commons.lang3.mutable.MutableDouble) &amp;&amp; ((Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value)) == (Double.doubleToLongBits(value)))" to="!((obj instanceof org.apache.commons.lang3.mutable.MutableDouble) &amp;&amp; ((Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value)) == (Double.doubleToLongBits(value))))" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="(obj instanceof org.apache.commons.lang3.mutable.MutableFloat) &amp;&amp; ((Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value)) == (Float.floatToIntBits(value)))" to="!((obj instanceof org.apache.commons.lang3.mutable.MutableFloat) &amp;&amp; ((Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value)) == (Float.floatToIntBits(value))))" />
    <mutant id="mutant_362" viable="true" in="org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(java.util.concurrent.ConcurrentMap,K,org.apache.commons.lang3.concurrent.ConcurrentInitializer)" from="(map == null) || (init == null)" to="!((map == null) || (init == null))" />
    <mutant id="mutant_378" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="((getLimit()) - (getAcquireCount())) - 1" />
    <mutant id="mutant_379" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="((getLimit()) &lt;= (TimedSemaphore.NO_LIMIT)) || ((acquireCount) &lt; (getLimit()))" to="!(((getLimit()) &lt;= (TimedSemaphore.NO_LIMIT)) || ((acquireCount) &lt; (getLimit())))" />
    <mutant id="mutant_3295" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3294" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_3293" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_3292" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_3291" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3290" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_3289" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_3288" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3287" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_3286" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_3285" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_374" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="(((double)(totalAcquireCount)) / ((double)(periodCount))) - 1" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="(((double)(totalAcquireCount)) / ((double)(periodCount))) * -1" />
    <mutant id="mutant_376" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="((getLimit()) - (getAcquireCount())) * -1" />
    <mutant id="mutant_377" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit()) - (getAcquireCount())" to="((getLimit()) - (getAcquireCount())) + 1" />
    <mutant id="mutant_370" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="((&quot;No child initializer with name &quot; + name) + 1)" />
    <mutant id="mutant_371" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="((&quot;No child initializer with name &quot; + name) - 1)" />
    <mutant id="mutant_372" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults.checkName(java.lang.String)" from="(&quot;No child initializer with name &quot; + name)" to="((&quot;No child initializer with name &quot; + name) * -1)" />
    <mutant id="mutant_373" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount)) / ((double)(periodCount))" to="(((double)(totalAcquireCount)) / ((double)(periodCount))) + 1" />
    <mutant id="mutant_389" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_3284" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_3283" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_3282" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_3281" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_3280" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_3279" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_380" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="(lhs == null) || (rhs == null)" to="!((lhs == null) || (rhs == null))" />
    <mutant id="mutant_3278" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3277" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_3276" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3275" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3274" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_385" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_386" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_387" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_388" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="((lhsClazz.getSuperclass()) != null) &amp;&amp; (lhsClazz != reflectUpToClass)" to="!(((lhsClazz.getSuperclass()) != null) &amp;&amp; (lhsClazz != reflectUpToClass))" />
    <mutant id="mutant_382" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_383" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_384" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_3273" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3272" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_3271" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3270" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_3269" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_390" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0)" to="!((i &lt; (lhs.length)) &amp;&amp; ((comparison) == 0))" />
    <mutant id="mutant_3268" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4599" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="((wrapWith + str) * -1)" />
    <mutant id="mutant_391" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(i &lt; (fields.length)) &amp;&amp; ((builder.comparison) == 0)" to="!((i &lt; (fields.length)) &amp;&amp; ((builder.comparison) == 0))" />
    <mutant id="mutant_3267" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4598" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (wrapWith == '/0')" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (wrapWith == '/0'))" />
    <mutant id="mutant_3266" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4597" viable="false" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="(str == null) || ((strLen = str.length()) == 0)" to="!((str == null) || ((strLen = str.length()) == 0))" />
    <mutant id="mutant_3265" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4596" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) - 1)" />
    <mutant id="mutant_3264" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4595" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) * -1)" />
    <mutant id="mutant_3263" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4594" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(start + (open.length()))" to="((start + (open.length())) + 1)" />
    <mutant id="mutant_396" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object,java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean)" from="((lhs == rhs) || (lhs.equals(rhs)))" to="(!((lhs == rhs) || (lhs.equals(rhs))))" />
    <mutant id="mutant_397" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object,java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean)" from="testTriviallyEqual &amp;&amp; ((lhs == rhs) || (lhs.equals(rhs)))" to="!(testTriviallyEqual &amp;&amp; ((lhs == rhs) || (lhs.equals(rhs))))" />
    <mutant id="mutant_398" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,java.lang.Object,java.lang.Object)" from="(lhs != null) &amp;&amp; (lhs.equals(rhs))" to="!((lhs != null) &amp;&amp; (lhs.equals(rhs)))" />
    <mutant id="mutant_399" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(java.lang.Object,java.lang.Object)" from="((registry.contains(pair)) || (registry.contains(swappedPair)))" to="(!((registry.contains(pair)) || (registry.contains(swappedPair))))" />
    <mutant id="mutant_392" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;))))" to="(!((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))))" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(useTransients || (!(Modifier.isTransient(f.getModifiers()))))" to="(!(useTransients || (!(Modifier.isTransient(f.getModifiers())))))" />
    <mutant id="mutant_394" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers())))))" to="(!(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))))" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(f.getModifiers())))" to="!((((!(ArrayUtils.contains(excludeFields, f.getName()))) &amp;&amp; (!(f.getName().contains(&quot;$&quot;)))) &amp;&amp; (useTransients || (!(Modifier.isTransient(f.getModifiers()))))) &amp;&amp; (!(Modifier.isStatic(f.getModifiers()))))" />
    <mutant id="mutant_2809" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch2 == 'u') || (ch2 == 'U'))" to="(!((ch2 == 'u') || (ch2 == 'U')))" />
    <mutant id="mutant_2808" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R')))" to="(!(((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R'))))" />
    <mutant id="mutant_2807" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'r') || (ch1 == 'R'))" to="(!((ch1 == 'r') || (ch1 == 'R')))" />
    <mutant id="mutant_2806" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 't') || (ch0 == 'T'))" to="(!((ch0 == 't') || (ch0 == 'T')))" />
    <mutant id="mutant_2805" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'f') || (ch1 == 'F'))) &amp;&amp; ((ch2 == 'f') || (ch2 == 'F'))" to="!((((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'f') || (ch1 == 'F'))) &amp;&amp; ((ch2 == 'f') || (ch2 == 'F')))" />
    <mutant id="mutant_2804" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch2 == 'f') || (ch2 == 'F'))" to="(!((ch2 == 'f') || (ch2 == 'F')))" />
    <mutant id="mutant_2803" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'f') || (ch1 == 'F')))" to="(!(((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'f') || (ch1 == 'F'))))" />
    <mutant id="mutant_2802" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'f') || (ch1 == 'F'))" to="(!((ch1 == 'f') || (ch1 == 'F')))" />
    <mutant id="mutant_2801" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'o') || (ch0 == 'O'))" to="(!((ch0 == 'o') || (ch0 == 'O')))" />
    <mutant id="mutant_2800" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'y') || (ch0 == 'Y')) &amp;&amp; ((ch1 == 'e') || (ch1 == 'E'))) &amp;&amp; ((ch2 == 's') || (ch2 == 'S'))" to="!((((ch0 == 'y') || (ch0 == 'Y')) &amp;&amp; ((ch1 == 'e') || (ch1 == 'E'))) &amp;&amp; ((ch2 == 's') || (ch2 == 'S')))" />
    <mutant id="mutant_1519" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="(((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType) * -1)" />
    <mutant id="mutant_2841" viable="true" in="org.apache.commons.lang3.CharRange.contains(org.apache.commons.lang3.CharRange)" from="((start) &lt;= (range.start)) &amp;&amp; ((end) &gt;= (range.end))" to="!(((start) &lt;= (range.start)) &amp;&amp; ((end) &gt;= (range.end)))" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="(((bounds.length) == 1) &amp;&amp; (Object.class.equals(bounds[0])))" to="(!(((bounds.length) == 1) &amp;&amp; (Object.class.equals(bounds[0]))))" />
    <mutant id="mutant_2840" viable="true" in="org.apache.commons.lang3.CharRange.contains(org.apache.commons.lang3.CharRange)" from="((start) == 0) &amp;&amp; ((end) == (Character.MAX_VALUE))" to="!(((start) == 0) &amp;&amp; ((end) == (Character.MAX_VALUE)))" />
    <mutant id="mutant_1517" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) * -1)" />
    <mutant id="mutant_2849" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="((7 * (end)) - 1)" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + 1)" />
    <mutant id="mutant_2848" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="((7 * (end)) + 1)" />
    <mutant id="mutant_1515" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="((upperBounds.length) &gt; 1) || (((upperBounds.length) == 1) &amp;&amp; (!(Object.class.equals(upperBounds[0]))))" to="!(((upperBounds.length) &gt; 1) || (((upperBounds.length) == 1) &amp;&amp; (!(Object.class.equals(upperBounds[0])))))" />
    <mutant id="mutant_2847" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(7 * (end))" to="((7 * (end)) * -1)" />
    <mutant id="mutant_1516" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(&quot;Unexpected generic&quot; + &quot; interface type found: &quot;)" to="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) - 1)" />
    <mutant id="mutant_2846" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="((83 + (start)) - 1)" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="((lowerBounds.length) &gt; 1) || (((lowerBounds.length) == 1) &amp;&amp; ((lowerBounds[0]) != null))" to="!(((lowerBounds.length) &gt; 1) || (((lowerBounds.length) == 1) &amp;&amp; ((lowerBounds[0]) != null)))" />
    <mutant id="mutant_2845" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="((83 + (start)) * -1)" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(((upperBounds.length) == 1) &amp;&amp; (!(Object.class.equals(upperBounds[0]))))" to="(!(((upperBounds.length) == 1) &amp;&amp; (!(Object.class.equals(upperBounds[0])))))" />
    <mutant id="mutant_2844" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="(83 + (start))" to="((83 + (start)) + 1)" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="((bounds.length) &gt; 0) &amp;&amp; (!(((bounds.length) == 1) &amp;&amp; (Object.class.equals(bounds[0]))))" to="!(((bounds.length) &gt; 0) &amp;&amp; (!(((bounds.length) == 1) &amp;&amp; (Object.class.equals(bounds[0])))))" />
    <mutant id="mutant_2843" viable="true" in="org.apache.commons.lang3.CharRange.equals(java.lang.Object)" from="(((start) == (other.start)) &amp;&amp; ((end) == (other.end))) &amp;&amp; ((negated) == (other.negated))" to="!((((start) == (other.start)) &amp;&amp; ((end) == (other.end))) &amp;&amp; ((negated) == (other.negated)))" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(((lowerBounds.length) == 1) &amp;&amp; ((lowerBounds[0]) != null))" to="(!(((lowerBounds.length) == 1) &amp;&amp; ((lowerBounds[0]) != null)))" />
    <mutant id="mutant_2842" viable="true" in="org.apache.commons.lang3.CharRange.equals(java.lang.Object)" from="(((start) == (other.start)) &amp;&amp; ((end) == (other.end)))" to="(!(((start) == (other.start)) &amp;&amp; ((end) == (other.end))))" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="((&quot;unknown type: &quot; + type) + 1)" />
    <mutant id="mutant_1509" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="((&quot;unknown type: &quot; + type) - 1)" />
    <mutant id="mutant_2839" viable="true" in="org.apache.commons.lang3.CharRange.contains(org.apache.commons.lang3.CharRange)" from="((range.end) &lt; (start)) || ((range.start) &gt; (end))" to="!(((range.end) &lt; (start)) || ((range.start) &gt; (end)))" />
    <mutant id="mutant_2830" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) - 1" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="((&quot;Wait... What!? Type of rawType: &quot; + rawType) + 1)" />
    <mutant id="mutant_2838" viable="true" in="org.apache.commons.lang3.CharRange.contains(org.apache.commons.lang3.CharRange)" from="((start) &gt;= (range.start)) &amp;&amp; ((end) &lt;= (range.end))" to="!(((start) &gt;= (range.start)) &amp;&amp; ((end) &lt;= (range.end)))" />
    <mutant id="mutant_1507" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;unknown type: &quot; + type)" to="((&quot;unknown type: &quot; + type) * -1)" />
    <mutant id="mutant_2837" viable="true" in="org.apache.commons.lang3.CharRange.contains(char)" from="((ch &gt;= (start)) &amp;&amp; (ch &lt;= (end)))" to="(!((ch &gt;= (start)) &amp;&amp; (ch &lt;= (end))))" />
    <mutant id="mutant_1504" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="((&quot;Wait... What!? Type of rawType: &quot; + rawType) * -1)" />
    <mutant id="mutant_2836" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) * -1" />
    <mutant id="mutant_1505" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)" from="(&quot;Wait... What!? Type of rawType: &quot; + rawType)" to="((&quot;Wait... What!? Type of rawType: &quot; + rawType) - 1)" />
    <mutant id="mutant_2835" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) + 1" />
    <mutant id="mutant_1502" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) * -1)" />
    <mutant id="mutant_2834" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) - 1" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isInstance(java.lang.Object,java.lang.reflect.Type)" from="(!(type instanceof Class&lt;?&gt;)) || (!(((Class&lt;?&gt;)(type)).isPrimitive()))" to="!((!(type instanceof Class&lt;?&gt;)) || (!(((Class&lt;?&gt;)(type)).isPrimitive())))" />
    <mutant id="mutant_2833" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) * -1" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) + 1)" />
    <mutant id="mutant_2832" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) + 1" />
    <mutant id="mutant_1501" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) - 1)" />
    <mutant id="mutant_2831" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((current) + 1))" to="((char)(((current) + 1))) - 1" />
    <mutant id="mutant_2829" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) + 1" />
    <mutant id="mutant_2828" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) * -1" />
    <mutant id="mutant_2827" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="(((current) + 1) * -1)" />
    <mutant id="mutant_2826" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="(((current) + 1) + 1)" />
    <mutant id="mutant_2825" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="((current) + 1)" to="(((current) + 1) - 1)" />
    <mutant id="mutant_2824" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) - 1" />
    <mutant id="mutant_2823" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) + 1" />
    <mutant id="mutant_2822" viable="false" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="((char)((range.end) + 1))" to="((char)(((range.end) + 1))) * -1" />
    <mutant id="mutant_2821" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L'))) &amp;&amp; ((ch3 == 's') || (ch3 == 'S'))) &amp;&amp; ((ch4 == 'e') || (ch4 == 'E'))" to="!((((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L'))) &amp;&amp; ((ch3 == 's') || (ch3 == 'S'))) &amp;&amp; ((ch4 == 'e') || (ch4 == 'E')))" />
    <mutant id="mutant_2820" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch4 == 'e') || (ch4 == 'E'))" to="(!((ch4 == 'e') || (ch4 == 'E')))" />
    <mutant id="mutant_2819" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L'))) &amp;&amp; ((ch3 == 's') || (ch3 == 'S')))" to="(!(((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L'))) &amp;&amp; ((ch3 == 's') || (ch3 == 'S'))))" />
    <mutant id="mutant_2818" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch3 == 's') || (ch3 == 'S'))" to="(!((ch3 == 's') || (ch3 == 'S')))" />
    <mutant id="mutant_2817" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L')))" to="(!((((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))) &amp;&amp; ((ch2 == 'l') || (ch2 == 'L'))))" />
    <mutant id="mutant_2816" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch2 == 'l') || (ch2 == 'L'))" to="(!((ch2 == 'l') || (ch2 == 'L')))" />
    <mutant id="mutant_2815" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A')))" to="(!(((ch0 == 'f') || (ch0 == 'F')) &amp;&amp; ((ch1 == 'a') || (ch1 == 'A'))))" />
    <mutant id="mutant_2814" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'a') || (ch1 == 'A'))" to="(!((ch1 == 'a') || (ch1 == 'A')))" />
    <mutant id="mutant_2813" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'f') || (ch0 == 'F'))" to="(!((ch0 == 'f') || (ch0 == 'F')))" />
    <mutant id="mutant_2812" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R'))) &amp;&amp; ((ch2 == 'u') || (ch2 == 'U'))) &amp;&amp; ((ch3 == 'e') || (ch3 == 'E'))" to="!(((((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R'))) &amp;&amp; ((ch2 == 'u') || (ch2 == 'U'))) &amp;&amp; ((ch3 == 'e') || (ch3 == 'E')))" />
    <mutant id="mutant_2811" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch3 == 'e') || (ch3 == 'E'))" to="(!((ch3 == 'e') || (ch3 == 'E')))" />
    <mutant id="mutant_2810" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R'))) &amp;&amp; ((ch2 == 'u') || (ch2 == 'U')))" to="(!((((ch0 == 't') || (ch0 == 'T')) &amp;&amp; ((ch1 == 'r') || (ch1 == 'R'))) &amp;&amp; ((ch2 == 'u') || (ch2 == 'U'))))" />
    <mutant id="mutant_1553" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="((((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA))))" to="(!((((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA)))))" />
    <mutant id="mutant_2885" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(remainder &gt;= 2) &amp;&amp; ((str.charAt(pos)) == '^')" to="!((remainder &gt;= 2) &amp;&amp; ((str.charAt(pos)) == '^'))" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="((((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA)))) &amp;&amp; ((cal1.getClass()) == (cal2.getClass()))" to="!(((((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA)))) &amp;&amp; ((cal1.getClass()) == (cal2.getClass())))" />
    <mutant id="mutant_2884" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) + 1)" />
    <mutant id="mutant_1551" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR))))" to="(!((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))))" />
    <mutant id="mutant_2883" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) * -1)" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR))))" to="(!(((((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))))" />
    <mutant id="mutant_2882" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) - 1)" />
    <mutant id="mutant_2881" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(remainder &gt;= 3) &amp;&amp; ((str.charAt((pos + 1))) == '-')" to="!((remainder &gt;= 3) &amp;&amp; ((str.charAt((pos + 1))) == '-'))" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY))))" to="(!(((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))) &amp;&amp; ((cal1.get(Calendar.HOUR_OF_DAY)) == (cal2.get(Calendar.HOUR_OF_DAY)))))" />
    <mutant id="mutant_2880" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="(((pattern.length()) - 1) + 1)" />
    <mutant id="mutant_1557" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="((&quot;Could not find ceiling of for type: &quot; + (date.getClass())) * -1)" />
    <mutant id="mutant_2889" viable="true" in="org.apache.commons.lang3.CharSetUtils.containsAny(java.lang.String,java.lang.String[])" from="(StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))" to="!((StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set)))" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(str == null) || (parsePatterns == null)" to="!((str == null) || (parsePatterns == null))" />
    <mutant id="mutant_2888" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_1555" viable="false" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="((&quot;Could not find ceiling of for type: &quot; + (date.getClass())) - 1)" />
    <mutant id="mutant_2887" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="(&quot;Could not find ceiling of for type: &quot; + (date.getClass()))" to="((&quot;Could not find ceiling of for type: &quot; + (date.getClass())) + 1)" />
    <mutant id="mutant_2886" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR))))" to="(!(((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))))" />
    <mutant id="mutant_2874" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_1543" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR)))" to="!((((cal1.get(Calendar.ERA)) == (cal2.get(Calendar.ERA))) &amp;&amp; ((cal1.get(Calendar.YEAR)) == (cal2.get(Calendar.YEAR)))) &amp;&amp; ((cal1.get(Calendar.DAY_OF_YEAR)) == (cal2.get(Calendar.DAY_OF_YEAR))))" />
    <mutant id="mutant_2873" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_1540" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="(24 * (DateUtils.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_2872" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1 == null) || (cal2 == null)" to="!((cal1 == null) || (cal2 == null))" />
    <mutant id="mutant_2871" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="((remainder &gt;= 4) &amp;&amp; ((str.charAt(pos)) == '^')) &amp;&amp; ((str.charAt((pos + 2))) == '-')" to="!(((remainder &gt;= 4) &amp;&amp; ((str.charAt(pos)) == '^')) &amp;&amp; ((str.charAt((pos + 2))) == '-'))" />
    <mutant id="mutant_2870" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) + 1)" />
    <mutant id="mutant_1548" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND))))" to="(!(((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))))" />
    <mutant id="mutant_1549" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE))))" to="(!((((cal1.get(Calendar.MILLISECOND)) == (cal2.get(Calendar.MILLISECOND))) &amp;&amp; ((cal1.get(Calendar.SECOND)) == (cal2.get(Calendar.SECOND)))) &amp;&amp; ((cal1.get(Calendar.MINUTE)) == (cal2.get(Calendar.MINUTE)))))" />
    <mutant id="mutant_2879" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Date,java.util.Date)" from="(date1 == null) || (date2 == null)" to="!((date1 == null) || (date2 == null))" />
    <mutant id="mutant_2878" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1 == null) || (cal2 == null)" to="!((cal1 == null) || (cal2 == null))" />
    <mutant id="mutant_2877" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="((pos + 3) - 1)" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Date,java.util.Date)" from="(date1 == null) || (date2 == null)" to="!((date1 == null) || (date2 == null))" />
    <mutant id="mutant_2876" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="((pos + 3) * -1)" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Calendar,java.util.Calendar)" from="(cal1 == null) || (cal2 == null)" to="!((cal1 == null) || (cal2 == null))" />
    <mutant id="mutant_2875" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 3)" to="((pos + 3) + 1)" />
    <mutant id="mutant_1531" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) * -1)" />
    <mutant id="mutant_2863" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="(89 + (set.hashCode())) + 1" />
    <mutant id="mutant_1532" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="(60 * (DateUtils.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_2862" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="(89 + (set.hashCode())) - 1" />
    <mutant id="mutant_2861" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89 + (set.hashCode())" to="(89 + (set.hashCode())) * -1" />
    <mutant id="mutant_1530" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) - 1)" />
    <mutant id="mutant_2860" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="(sz - 1) * -1" />
    <mutant id="mutant_1539" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="(24 * (DateUtils.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_1537" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="(60 * (DateUtils.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_2869" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) * -1)" />
    <mutant id="mutant_1538" viable="false" in="?" from="24 * (DateUtils.MILLIS_PER_HOUR)" to="(24 * (DateUtils.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_2868" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="(pos + 2)" to="((pos + 2) - 1)" />
    <mutant id="mutant_1535" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="(60 * (DateUtils.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_2867" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="((remainder &gt;= 4) &amp;&amp; ((str.charAt(pos)) == '^'))" to="(!((remainder &gt;= 4) &amp;&amp; ((str.charAt(pos)) == '^')))" />
    <mutant id="mutant_1536" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_MINUTE)" to="(60 * (DateUtils.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_2866" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="(len - pos) + 1" />
    <mutant id="mutant_1533" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="(60 * (DateUtils.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_2865" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="(len - pos) * -1" />
    <mutant id="mutant_1534" viable="false" in="?" from="60 * (DateUtils.MILLIS_PER_SECOND)" to="(60 * (DateUtils.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_2864" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len - pos" to="(len - pos) - 1" />
    <mutant id="mutant_1520" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="(((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType) + 1)" />
    <mutant id="mutant_2852" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="(((83 + (start)) + (7 * (end))) * -1)" />
    <mutant id="mutant_1521" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType)" to="(((&quot;Unexpected generic&quot; + &quot; interface type found: &quot;) + midType) - 1)" />
    <mutant id="mutant_2851" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="(((83 + (start)) + (7 * (end))) - 1)" />
    <mutant id="mutant_2850" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end)))" to="(((83 + (start)) + (7 * (end))) + 1)" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="(type1 != type2) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type2, type1, null))" to="!((type1 != type2) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type2, type1, null)))" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) + 1)" />
    <mutant id="mutant_2859" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="(sz - 1) - 1" />
    <mutant id="mutant_1526" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="((&quot;missing assignment type for type variable &quot; + type) - 1)" />
    <mutant id="mutant_2858" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz - 1" to="(sz - 1) + 1" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map)" from="(result instanceof java.lang.reflect.TypeVariable&lt;?&gt;) &amp;&amp; (!(result.equals(var)))" to="!((result instanceof java.lang.reflect.TypeVariable&lt;?&gt;) &amp;&amp; (!(result.equals(var))))" />
    <mutant id="mutant_2857" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="!(((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2))))" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="((&quot;missing assignment type for type variable &quot; + type) + 1)" />
    <mutant id="mutant_2856" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="!((cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String))" />
    <mutant id="mutant_1525" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(&quot;missing assignment type for type variable &quot; + type)" to="((&quot;missing assignment type for type variable &quot; + type) * -1)" />
    <mutant id="mutant_2855" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="(((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)) - 1" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class,java.lang.Class)" from="(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(midClass, superClass)) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(genericInterface, ((java.lang.reflect.Type)(midClass))))" to="!((org.apache.commons.lang3.reflect.TypeUtils.isAssignable(midClass, superClass)) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(genericInterface, ((java.lang.reflect.Type)(midClass)))))" />
    <mutant id="mutant_2854" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="(((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)) * -1" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type,java.util.Map)" from="(type instanceof TypeVariable&lt;?&gt;) &amp;&amp; (typeVarAssigns != null)" to="!((type instanceof TypeVariable&lt;?&gt;) &amp;&amp; (typeVarAssigns != null))" />
    <mutant id="mutant_2853" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)" to="(((83 + (start)) + (7 * (end))) + (negated ? 1 : 0)) + 1" />
    <mutant id="mutant_1597" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="((&quot;The fragment &quot; + fragment) - 1)" />
    <mutant id="mutant_4623" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="(separator == null) || (StringUtils.EMPTY.equals(separator))" to="!((separator == null) || (StringUtils.EMPTY.equals(separator)))" />
    <mutant id="mutant_1598" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="((&quot;The fragment &quot; + fragment) + 1)" />
    <mutant id="mutant_4622" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="(((c.length) - tokenStart) - 1)" />
    <mutant id="mutant_1595" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="(((calendar.get(Calendar.DAY_OF_MONTH)) - offset) * -1)" />
    <mutant id="mutant_4621" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="(((c.length) - tokenStart) * -1)" />
    <mutant id="mutant_1596" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(&quot;The fragment &quot; + fragment)" to="((&quot;The fragment &quot; + fragment) * -1)" />
    <mutant id="mutant_4620" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="((c.length) - tokenStart)" to="(((c.length) - tokenStart) + 1)" />
    <mutant id="mutant_1593" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="(((calendar.get(Calendar.DAY_OF_MONTH)) - offset) - 1)" />
    <mutant id="mutant_1594" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_MONTH)) - offset)" to="(((calendar.get(Calendar.DAY_OF_MONTH)) - offset) + 1)" />
    <mutant id="mutant_1591" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="(((calendar.get(Calendar.DAY_OF_YEAR)) - offset) + 1)" />
    <mutant id="mutant_1592" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="(((calendar.get(Calendar.DAY_OF_YEAR)) - offset) - 1)" />
    <mutant id="mutant_4629" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) - 1" />
    <mutant id="mutant_4628" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) + 1" />
    <mutant id="mutant_4627" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) * -1" />
    <mutant id="mutant_4626" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) - 1" />
    <mutant id="mutant_1599" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;)" to="(((&quot;The fragment &quot; + fragment) + &quot; is not supported&quot;) + 1)" />
    <mutant id="mutant_4625" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) + 1" />
    <mutant id="mutant_4624" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end + separatorLength" to="(end + separatorLength) * -1" />
    <mutant id="mutant_1590" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="((calendar.get(Calendar.DAY_OF_YEAR)) - offset)" to="(((calendar.get(Calendar.DAY_OF_YEAR)) - offset) * -1)" />
    <mutant id="mutant_1586" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="((&quot;The range style &quot; + rangeStyle) * -1)" />
    <mutant id="mutant_4612" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="(pos - 1) * -1" />
    <mutant id="mutant_1587" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="(((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;) - 1)" />
    <mutant id="mutant_4611" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="(pos - 1) + 1" />
    <mutant id="mutant_1584" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="((&quot;The range style &quot; + rangeStyle) - 1)" />
    <mutant id="mutant_4610" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(camelCase &amp;&amp; (type == (Character.LOWERCASE_LETTER))) &amp;&amp; (currentType == (Character.UPPERCASE_LETTER))" to="!((camelCase &amp;&amp; (type == (Character.LOWERCASE_LETTER))) &amp;&amp; (currentType == (Character.UPPERCASE_LETTER)))" />
    <mutant id="mutant_1585" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(&quot;The range style &quot; + rangeStyle)" to="((&quot;The range style &quot; + rangeStyle) + 1)" />
    <mutant id="mutant_1582" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="((focus.get(Calendar.DAY_OF_WEEK)) + 3) - 1" />
    <mutant id="mutant_1583" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="((focus.get(Calendar.DAY_OF_WEEK)) + 3) * -1" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="((focus.get(Calendar.DAY_OF_WEEK)) - 3) * -1" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) + 3" to="((focus.get(Calendar.DAY_OF_WEEK)) + 3) + 1" />
    <mutant id="mutant_4619" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="((pos - tokenStart) * -1)" />
    <mutant id="mutant_4618" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="((pos - tokenStart) - 1)" />
    <mutant id="mutant_4617" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(pos - tokenStart)" to="((pos - tokenStart) + 1)" />
    <mutant id="mutant_4616" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="((newTokenStart - tokenStart) - 1)" />
    <mutant id="mutant_4615" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="((newTokenStart - tokenStart) + 1)" />
    <mutant id="mutant_1588" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="(((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;) + 1)" />
    <mutant id="mutant_4614" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(newTokenStart - tokenStart)" to="((newTokenStart - tokenStart) * -1)" />
    <mutant id="mutant_1589" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;)" to="(((&quot;The range style &quot; + rangeStyle) + &quot; is not valid.&quot;) * -1)" />
    <mutant id="mutant_4613" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos - 1" to="(pos - 1) - 1" />
    <mutant id="mutant_1575" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="(startCutoff - 1) - 1" />
    <mutant id="mutant_4601" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="((wrapWith + str) - 1)" />
    <mutant id="mutant_1576" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="(startCutoff - 1) * -1" />
    <mutant id="mutant_4600" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str)" to="((wrapWith + str) + 1)" />
    <mutant id="mutant_1573" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="((&quot;Could not iterate based on &quot; + focus) * -1)" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="((&quot;Could not iterate based on &quot; + focus) + 1)" />
    <mutant id="mutant_1571" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="((&quot;Could not truncate &quot; + date) - 1)" />
    <mutant id="mutant_1572" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="(&quot;Could not iterate based on &quot; + focus)" to="((&quot;Could not iterate based on &quot; + focus) - 1)" />
    <mutant id="mutant_1570" viable="false" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="((&quot;Could not truncate &quot; + date) * -1)" />
    <mutant id="mutant_4609" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(camelCase &amp;&amp; (type == (Character.LOWERCASE_LETTER)))" to="(!(camelCase &amp;&amp; (type == (Character.LOWERCASE_LETTER))))" />
    <mutant id="mutant_4608" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="(tokenStart + 1) - 1" />
    <mutant id="mutant_4607" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="(tokenStart + 1) + 1" />
    <mutant id="mutant_4606" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart + 1" to="(tokenStart + 1) * -1" />
    <mutant id="mutant_1579" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="((focus.get(Calendar.DAY_OF_WEEK)) - 3) - 1" />
    <mutant id="mutant_4605" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(wrapWith))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(wrapWith)))" />
    <mutant id="mutant_4604" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="((wrapWith + str) + wrapWith) - 1" />
    <mutant id="mutant_1577" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff - 1" to="(startCutoff - 1) + 1" />
    <mutant id="mutant_4603" viable="true" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="((wrapWith + str) + wrapWith) + 1" />
    <mutant id="mutant_1578" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK)) - 3" to="((focus.get(Calendar.DAY_OF_WEEK)) - 3) + 1" />
    <mutant id="mutant_4602" viable="false" in="org.apache.commons.lang3.StringUtils.wrap(java.lang.String,char)" from="(wrapWith + str) + wrapWith" to="((wrapWith + str) + wrapWith) * -1" />
    <mutant id="mutant_1564" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="((&quot;Unable to parse the date: &quot; + str) * -1)" />
    <mutant id="mutant_2896" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)" from="(org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(ch))" to="!((org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(ch)))" />
    <mutant id="mutant_1565" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="((&quot;Unable to parse the date: &quot; + str) + 1)" />
    <mutant id="mutant_2895" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="((ch == lastChar) &amp;&amp; (i != 0)) &amp;&amp; (chars.contains(ch))" to="!(((ch == lastChar) &amp;&amp; (i != 0)) &amp;&amp; (chars.contains(ch)))" />
    <mutant id="mutant_1562" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(date != null) &amp;&amp; ((pos.getIndex()) == (str2.length()))" to="!((date != null) &amp;&amp; ((pos.getIndex()) == (str2.length())))" />
    <mutant id="mutant_2894" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="((ch == lastChar) &amp;&amp; (i != 0))" to="(!((ch == lastChar) &amp;&amp; (i != 0)))" />
    <mutant id="mutant_1563" viable="false" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(&quot;Unable to parse the date: &quot; + str)" to="((&quot;Unable to parse the date: &quot; + str) - 1)" />
    <mutant id="mutant_2893" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="(StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))" to="!((StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set)))" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="(((pattern.length()) - 1) * -1)" />
    <mutant id="mutant_2892" viable="true" in="org.apache.commons.lang3.CharSetUtils.keep(java.lang.String,java.lang.String[])" from="(str.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))" to="!((str.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set)))" />
    <mutant id="mutant_1561" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="((pattern.length()) - 1)" to="(((pattern.length()) - 1) - 1)" />
    <mutant id="mutant_2891" viable="true" in="org.apache.commons.lang3.CharSetUtils.delete(java.lang.String,java.lang.String[])" from="(StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))" to="!((StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set)))" />
    <mutant id="mutant_2890" viable="true" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="(StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))" to="!((StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set)))" />
    <mutant id="mutant_1568" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="((&quot;Could not round &quot; + date) + 1)" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="(&quot;Could not truncate &quot; + date)" to="((&quot;Could not truncate &quot; + date) + 1)" />
    <mutant id="mutant_2899" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiAlphanumeric(char)" from="(org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch))" to="!((org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)))" />
    <mutant id="mutant_1566" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="((&quot;Could not round &quot; + date) - 1)" />
    <mutant id="mutant_2898" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)" from="(ch &gt;= 'A') &amp;&amp; (ch &lt;= 'Z')" to="!((ch &gt;= 'A') &amp;&amp; (ch &lt;= 'Z'))" />
    <mutant id="mutant_1567" viable="false" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="(&quot;Could not round &quot; + date)" to="((&quot;Could not round &quot; + date) * -1)" />
    <mutant id="mutant_2897" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char)" from="(ch &gt;= 'a') &amp;&amp; (ch &lt;= 'z')" to="!((ch &gt;= 'a') &amp;&amp; (ch &lt;= 'z'))" />
    <mutant id="mutant_4670" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;) - 1)" />
    <mutant id="mutant_2004" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3336" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="((((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos) * -1)" />
    <mutant id="mutant_4667" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;) + 1)" />
    <mutant id="mutant_2005" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3335" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="((((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos) - 1)" />
    <mutant id="mutant_4666" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;) * -1)" />
    <mutant id="mutant_2002" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3334" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos)" to="((((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + srcPos) + 1)" />
    <mutant id="mutant_4665" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;) + 1)" />
    <mutant id="mutant_2003" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3333" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) + 1)" />
    <mutant id="mutant_4664" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;) - 1)" />
    <mutant id="mutant_2000" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3332" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) - 1)" />
    <mutant id="mutant_4663" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2008&quot;) * -1)" />
    <mutant id="mutant_2001" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3331" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;)" to="(((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + &quot;, srcPos=&quot;) * -1)" />
    <mutant id="mutant_4662" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;) - 1)" />
    <mutant id="mutant_3330" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) * -1)" />
    <mutant id="mutant_4661" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;) + 1)" />
    <mutant id="mutant_4660" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2003&quot;) * -1)" />
    <mutant id="mutant_2008" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(!((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')))" />
    <mutant id="mutant_2009" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(!((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_3339" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_2006" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3338" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4669" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 95&quot;) + 1)" />
    <mutant id="mutant_2007" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="!(((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\''))" />
    <mutant id="mutant_3337" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4668" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; Server 2012&quot;) - 1)" />
    <mutant id="mutant_3325" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) - 1)" />
    <mutant id="mutant_4656" viable="false" in="?" from="(((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD)) || (SystemUtils.IS_OS_OPEN_BSD)) || (SystemUtils.IS_OS_NET_BSD)" to="!((((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD)) || (SystemUtils.IS_OS_OPEN_BSD)) || (SystemUtils.IS_OS_NET_BSD))" />
    <mutant id="mutant_3324" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="((&quot;src.length&gt;8: src.length=&quot; + (src.length)) * -1)" />
    <mutant id="mutant_4655" viable="false" in="?" from="(((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD)) || (SystemUtils.IS_OS_OPEN_BSD))" to="(!(((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD)) || (SystemUtils.IS_OS_OPEN_BSD)))" />
    <mutant id="mutant_3323" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="((&quot;src.length&gt;8: src.length=&quot; + (src.length)) - 1)" />
    <mutant id="mutant_4654" viable="false" in="?" from="((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD))" to="(!((((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)) || (SystemUtils.IS_OS_FREE_BSD)))" />
    <mutant id="mutant_3322" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length&gt;8: src.length=&quot; + (src.length))" to="((&quot;src.length&gt;8: src.length=&quot; + (src.length)) + 1)" />
    <mutant id="mutant_4653" viable="false" in="?" from="(((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS))" to="(!(((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)) || (SystemUtils.IS_OS_SUN_OS)))" />
    <mutant id="mutant_3321" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_4652" viable="false" in="?" from="((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS))" to="(!((((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)) || (SystemUtils.IS_OS_SOLARIS)))" />
    <mutant id="mutant_3320" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4651" viable="false" in="?" from="(((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX))" to="(!(((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)) || (SystemUtils.IS_OS_MAC_OSX)))" />
    <mutant id="mutant_4650" viable="false" in="?" from="((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX))" to="(!((((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)) || (SystemUtils.IS_OS_LINUX)))" />
    <mutant id="mutant_3329" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) + 1)" />
    <mutant id="mutant_3328" viable="false" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length))" to="((&quot;src.length-srcPos&lt;4: src.length=&quot; + (src.length)) - 1)" />
    <mutant id="mutant_4659" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;) * -1)" />
    <mutant id="mutant_3327" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) * -1)" />
    <mutant id="mutant_4658" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;) - 1)" />
    <mutant id="mutant_3326" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="((src.length) - srcPos)" to="(((src.length) - srcPos) + 1)" />
    <mutant id="mutant_4657" viable="false" in="?" from="((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;)" to="(((SystemUtils.OS_NAME_WINDOWS_PREFIX) + &quot; 2000&quot;) + 1)" />
    <mutant id="mutant_305" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(dec == null) &amp;&amp; (exp == null)" to="!((dec == null) &amp;&amp; (exp == null))" />
    <mutant id="mutant_306" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp))" to="!((org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp)))" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros))" to="(!(((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros)))" />
    <mutant id="mutant_308" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((f.isInfinite()) || (((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros)))" to="(!((f.isInfinite()) || (((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros))))" />
    <mutant id="mutant_301" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos &gt; (-1)) &amp;&amp; (expPos &lt; ((str.length()) - 1))" to="!((expPos &gt; (-1)) &amp;&amp; (expPos &lt; ((str.length()) - 1)))" />
    <mutant id="mutant_302" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) - 1)" />
    <mutant id="mutant_303" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) * -1)" />
    <mutant id="mutant_304" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) + 1)" />
    <mutant id="mutant_309" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(((d.doubleValue()) == 0.0) &amp;&amp; (!allZeros))" to="(!(((d.doubleValue()) == 0.0) &amp;&amp; (!allZeros)))" />
    <mutant id="mutant_3314" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_4645" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="(end + closeLen) - 1" />
    <mutant id="mutant_3313" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4644" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="(end + closeLen) + 1" />
    <mutant id="mutant_3312" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4643" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="((strLen - closeLen) - 1)" />
    <mutant id="mutant_3311" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4642" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="((strLen - closeLen) * -1)" />
    <mutant id="mutant_3310" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4641" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="(strLen - closeLen)" to="((strLen - closeLen) + 1)" />
    <mutant id="mutant_4640" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))" to="!(((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close)))" />
    <mutant id="mutant_300" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_3319" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3318" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4649" viable="false" in="?" from="(((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX))" to="(!(((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)) || (SystemUtils.IS_OS_IRIX)))" />
    <mutant id="mutant_3317" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_4648" viable="false" in="?" from="((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX))" to="(!((SystemUtils.IS_OS_AIX) || (SystemUtils.IS_OS_HP_UX)))" />
    <mutant id="mutant_3316" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_4647" viable="false" in="?" from="(org.apache.commons.lang3.SystemUtils.getOSMatchesName(&quot;Linux&quot;)) || (org.apache.commons.lang3.SystemUtils.getOSMatchesName(&quot;LINUX&quot;))" to="!((org.apache.commons.lang3.SystemUtils.getOSMatchesName(&quot;Linux&quot;)) || (org.apache.commons.lang3.SystemUtils.getOSMatchesName(&quot;LINUX&quot;)))" />
    <mutant id="mutant_3315" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4646" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end + closeLen" to="(end + closeLen) * -1" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="((pos + 1) * -1)" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="((pos + 1) + 1)" />
    <mutant id="mutant_318" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(pos + 1)" to="((pos + 1) - 1)" />
    <mutant id="mutant_319" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(str.startsWith(&quot;0&quot;, pos)) &amp;&amp; ((str.length()) &gt; (pos + 1))" to="!((str.startsWith(&quot;0&quot;, pos)) &amp;&amp; ((str.length()) &gt; (pos + 1)))" />
    <mutant id="mutant_312" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) * -1)" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) + 1)" />
    <mutant id="mutant_314" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) - 1)" />
    <mutant id="mutant_315" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(str.startsWith(&quot;0x&quot;, pos)) || (str.startsWith(&quot;0X&quot;, pos))" to="!((str.startsWith(&quot;0x&quot;, pos)) || (str.startsWith(&quot;0X&quot;, pos)))" />
    <mutant id="mutant_3303" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4634" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="match || preserveAllTokens" to="!(match || preserveAllTokens)" />
    <mutant id="mutant_3302" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4633" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="match || preserveAllTokens" to="!(match || preserveAllTokens)" />
    <mutant id="mutant_3301" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4632" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="match || (preserveAllTokens &amp;&amp; lastMatch)" to="!(match || (preserveAllTokens &amp;&amp; lastMatch))" />
    <mutant id="mutant_3300" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_4631" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="(preserveAllTokens &amp;&amp; lastMatch)" to="(!(preserveAllTokens &amp;&amp; lastMatch))" />
    <mutant id="mutant_4630" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="match || preserveAllTokens" to="!(match || preserveAllTokens)" />
    <mutant id="mutant_310" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((d.isInfinite()) || (((d.doubleValue()) == 0.0) &amp;&amp; (!allZeros)))" to="(!((d.isInfinite()) || (((d.doubleValue()) == 0.0) &amp;&amp; (!allZeros))))" />
    <mutant id="mutant_3309" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_311" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="(firstChar == '-') || (firstChar == '+')" to="!((firstChar == '-') || (firstChar == '+'))" />
    <mutant id="mutant_3308" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_4639" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open)))" to="(!((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))))" />
    <mutant id="mutant_3307" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_4638" viable="false" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="(strs == null) || ((strsLen = strs.length) == 0)" to="!((strs == null) || ((strsLen = strs.length) == 0))" />
    <mutant id="mutant_3306" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4637" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="match || (preserveAllTokens &amp;&amp; lastMatch)" to="!(match || (preserveAllTokens &amp;&amp; lastMatch))" />
    <mutant id="mutant_3305" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4636" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="(preserveAllTokens &amp;&amp; lastMatch)" to="(!(preserveAllTokens &amp;&amp; lastMatch))" />
    <mutant id="mutant_3304" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4635" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="match || preserveAllTokens" to="!(match || preserveAllTokens)" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((((chars[i]) &lt; '0') || ((chars[i]) &gt; '9')) &amp;&amp; (((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f')))" to="(!((((chars[i]) &lt; '0') || ((chars[i]) &gt; '9')) &amp;&amp; (((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f'))))" />
    <mutant id="mutant_207" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((chars[i]) &lt; 'A') || ((chars[i]) &gt; 'F'))" to="(!(((chars[i]) &lt; 'A') || ((chars[i]) &gt; 'F')))" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((((chars[i]) &lt; '0') || ((chars[i]) &gt; '9')) &amp;&amp; (((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f'))) &amp;&amp; (((chars[i]) &lt; 'A') || ((chars[i]) &gt; 'F'))" to="!(((((chars[i]) &lt; '0') || ((chars[i]) &gt; '9')) &amp;&amp; (((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f'))) &amp;&amp; (((chars[i]) &lt; 'A') || ((chars[i]) &gt; 'F')))" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) * -1)" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="(start + 2) * -1" />
    <mutant id="mutant_203" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="(start + 2) - 1" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((chars[i]) &lt; '0') || ((chars[i]) &gt; '9'))" to="(!(((chars[i]) &lt; '0') || ((chars[i]) &gt; '9')))" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f'))" to="(!(((chars[i]) &lt; 'a') || ((chars[i]) &gt; 'f')))" />
    <mutant id="mutant_3141" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) * -1)" />
    <mutant id="mutant_4472" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3140" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) - 1)" />
    <mutant id="mutant_4471" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4470" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="((repeat * 2) - 2) * -1" />
    <mutant id="mutant_3138" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_4469" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="((repeat * 2) - 2) + 1" />
    <mutant id="mutant_3137" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_4468" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2) - 2" to="((repeat * 2) - 2) - 1" />
    <mutant id="mutant_3136" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_4467" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="((repeat * 2) + 1)" />
    <mutant id="mutant_3135" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_4466" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="((repeat * 2) - 1)" />
    <mutant id="mutant_3134" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_4465" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat * 2)" to="((repeat * 2) * -1)" />
    <mutant id="mutant_3133" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_4464" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="(inputLength * repeat) * -1" />
    <mutant id="mutant_3132" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4463" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="(inputLength * repeat) - 1" />
    <mutant id="mutant_3131" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_4462" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength * repeat" to="(inputLength * repeat) + 1" />
    <mutant id="mutant_200" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[(start + 1)]) == 'x') || ((chars[(start + 1)]) == 'X')" to="!(((chars[(start + 1)]) == 'x') || ((chars[(start + 1)]) == 'X'))" />
    <mutant id="mutant_201" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 2" to="(start + 2) + 1" />
    <mutant id="mutant_3139" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) + 1)" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="((sz + 1) + 1)" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="((sz + 1) * -1)" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((i &lt; (sz + 1)) &amp;&amp; allowSigns)" to="(!((i &lt; (sz + 1)) &amp;&amp; allowSigns))" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="(start + 1) - 1" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="(start + 1) + 1" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) &lt; '0') || ((chars[i]) &gt; '7')" to="!(((chars[i]) &lt; '0') || ((chars[i]) &gt; '7'))" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(sz + 1)" to="((sz + 1) - 1)" />
    <mutant id="mutant_3130" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4461" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(inputLength == 1) &amp;&amp; (repeat &lt;= (StringUtils.PAD_LIMIT))" to="!((inputLength == 1) &amp;&amp; (repeat &lt;= (StringUtils.PAD_LIMIT)))" />
    <mutant id="mutant_4460" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(repeat == 1) || (inputLength == 0)" to="!((repeat == 1) || (inputLength == 0))" />
    <mutant id="mutant_3127" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) * -1" />
    <mutant id="mutant_4458" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="(repeat - 1) * -1" />
    <mutant id="mutant_3126" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_4457" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="(repeat - 1) - 1" />
    <mutant id="mutant_3125" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_4456" viable="true" in="org.apache.commons.lang3.StringUtils.removeStartIgnoreCase(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove)))" />
    <mutant id="mutant_3124" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_4455" viable="true" in="org.apache.commons.lang3.StringUtils.removeStart(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove)))" />
    <mutant id="mutant_3123" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) * -1)" />
    <mutant id="mutant_4454" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) - 1)" />
    <mutant id="mutant_3122" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) - 1)" />
    <mutant id="mutant_4453" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) + 1)" />
    <mutant id="mutant_3121" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) + 1)" />
    <mutant id="mutant_4452" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) * -1)" />
    <mutant id="mutant_3120" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_4451" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove)))" />
    <mutant id="mutant_210" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) - 1)" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(start + 1)" to="((start + 1) + 1)" />
    <mutant id="mutant_212" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start + 1" to="(start + 1) * -1" />
    <mutant id="mutant_3129" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) - 1" />
    <mutant id="mutant_3128" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) + 1" />
    <mutant id="mutant_4459" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat - 1" to="(repeat - 1) + 1" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="hasDecPoint || hasExp" to="!(hasDecPoint || hasExp)" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((chars[i]) == 'd') || ((chars[i]) == 'D'))" to="(!(((chars[i]) == 'd') || ((chars[i]) == 'D')))" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) == 'e') || ((chars[i]) == 'E')" to="!(((chars[i]) == 'e') || ((chars[i]) == 'E'))" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) == '+') || ((chars[i]) == '-')" to="!(((chars[i]) == '+') || ((chars[i]) == '-'))" />
    <mutant id="mutant_226" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) &gt;= '0') &amp;&amp; ((chars[i]) &lt;= '9')" to="!(((chars[i]) &gt;= '0') &amp;&amp; ((chars[i]) &lt;= '9'))" />
    <mutant id="mutant_227" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) == 'e') || ((chars[i]) == 'E')" to="!(((chars[i]) == 'e') || ((chars[i]) == 'E'))" />
    <mutant id="mutant_4450" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) - 1)" />
    <mutant id="mutant_3116" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) - 1)" />
    <mutant id="mutant_4447" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove)))" />
    <mutant id="mutant_3115" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) + 1)" />
    <mutant id="mutant_4446" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove)))" />
    <mutant id="mutant_3114" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4445" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(StringUtils.isEmpty(str)) || ((str.indexOf(remove)) == (StringUtils.INDEX_NOT_FOUND))" to="!((StringUtils.isEmpty(str)) || ((str.indexOf(remove)) == (StringUtils.INDEX_NOT_FOUND)))" />
    <mutant id="mutant_3113" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_4444" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="((prefix.toString()) + str) * -1" />
    <mutant id="mutant_3112" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4443" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="((prefix.toString()) + str) + 1" />
    <mutant id="mutant_3111" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) - 1" />
    <mutant id="mutant_4442" viable="false" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefix.toString()) + str" to="((prefix.toString()) + str) - 1" />
    <mutant id="mutant_3110" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) + 1" />
    <mutant id="mutant_4441" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefixes != null) &amp;&amp; ((prefixes.length) &gt; 0)" to="!((prefixes != null) &amp;&amp; ((prefixes.length) &gt; 0))" />
    <mutant id="mutant_4440" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase))" to="!(((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase)))" />
    <mutant id="mutant_220" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((i &lt; (sz + 1)) &amp;&amp; allowSigns) &amp;&amp; (!foundDigit))" to="(!(((i &lt; (sz + 1)) &amp;&amp; allowSigns) &amp;&amp; (!foundDigit)))" />
    <mutant id="mutant_221" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(i &lt; sz) || (((i &lt; (sz + 1)) &amp;&amp; allowSigns) &amp;&amp; (!foundDigit))" to="!((i &lt; sz) || (((i &lt; (sz + 1)) &amp;&amp; allowSigns) &amp;&amp; (!foundDigit)))" />
    <mutant id="mutant_222" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) &gt;= '0') &amp;&amp; ((chars[i]) &lt;= '9')" to="!(((chars[i]) &gt;= '0') &amp;&amp; ((chars[i]) &lt;= '9'))" />
    <mutant id="mutant_223" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="hasDecPoint || hasExp" to="!(hasDecPoint || hasExp)" />
    <mutant id="mutant_3119" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_3118" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_4449" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) + 1)" />
    <mutant id="mutant_3117" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="(nBytes - 1)" to="((nBytes - 1) * -1)" />
    <mutant id="mutant_4448" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="((str.length()) - (remove.length()))" to="(((str.length()) - (remove.length())) * -1)" />
    <mutant id="mutant_239" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="(x - y) * -1" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(foundDigit &amp;&amp; (!hasExp)) &amp;&amp; (!hasDecPoint)" to="!((foundDigit &amp;&amp; (!hasExp)) &amp;&amp; (!hasDecPoint))" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(!allowSigns) &amp;&amp; foundDigit" to="!((!allowSigns) &amp;&amp; foundDigit)" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="(x - y) + 1" />
    <mutant id="mutant_238" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)" from="x - y" to="(x - y) - 1" />
    <mutant id="mutant_3105" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) * -1)" />
    <mutant id="mutant_4436" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="(((((len + start) - end) + (overlay.length())) + 1) + 1)" />
    <mutant id="mutant_3104" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) - 1)" />
    <mutant id="mutant_4435" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="((((len + start) - end) + (overlay.length())) * -1)" />
    <mutant id="mutant_3103" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(((nBytes - 1) * 8) + srcPos)" to="((((nBytes - 1) * 8) + srcPos) + 1)" />
    <mutant id="mutant_4434" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="((((len + start) - end) + (overlay.length())) - 1)" />
    <mutant id="mutant_3102" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) - 1)" />
    <mutant id="mutant_4433" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(((len + start) - end) + (overlay.length()))" to="((((len + start) - end) + (overlay.length())) + 1)" />
    <mutant id="mutant_3101" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) * -1)" />
    <mutant id="mutant_4432" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="(((len + start) - end) - 1)" />
    <mutant id="mutant_3100" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="((nBytes - 1) * 8)" to="(((nBytes - 1) * 8) + 1)" />
    <mutant id="mutant_4431" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="(((len + start) - end) * -1)" />
    <mutant id="mutant_4430" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((len + start) - end)" to="(((len + start) - end) + 1)" />
    <mutant id="mutant_231" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')) || ((chars[i]) == 'F'))" to="(!(((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')) || ((chars[i]) == 'F')))" />
    <mutant id="mutant_232" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(!allowSigns) &amp;&amp; (((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')) || ((chars[i]) == 'F'))" to="!((!allowSigns) &amp;&amp; (((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')) || ((chars[i]) == 'F')))" />
    <mutant id="mutant_233" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((chars[i]) == 'l') || ((chars[i]) == 'L')" to="!(((chars[i]) == 'l') || ((chars[i]) == 'L'))" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(foundDigit &amp;&amp; (!hasExp))" to="(!(foundDigit &amp;&amp; (!hasExp)))" />
    <mutant id="mutant_3109" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) * -1" />
    <mutant id="mutant_3108" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_4439" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix)))" to="(!((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))))" />
    <mutant id="mutant_3107" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_4438" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="(((((len + start) - end) + (overlay.length())) + 1) - 1)" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f'))" to="(!((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')))" />
    <mutant id="mutant_3106" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_4437" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="((((len + start) - end) + (overlay.length())) + 1)" to="(((((len + start) - end) + (overlay.length())) + 1) * -1)" />
    <mutant id="mutant_246" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(hexDigits &gt; 8) || ((hexDigits == 8) &amp;&amp; (firstSigDigit &gt; '7'))" to="!((hexDigits &gt; 8) || ((hexDigits == 8) &amp;&amp; (firstSigDigit &gt; '7')))" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_3185" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_3184" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_3183" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_3182" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_3181" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)])" to="!(((src.length) &gt; (srcPos + 1)) &amp;&amp; (src[(srcPos + 1)]))" />
    <mutant id="mutant_3180" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_3179" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3178" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_3177" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) + 1)" />
    <mutant id="mutant_3176" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) - 1)" />
    <mutant id="mutant_3175" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 1)" to="((srcPos + 1) * -1)" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="((str.length()) - pfxLen) + 1" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((hexDigits == 16) &amp;&amp; (firstSigDigit &gt; '7'))" to="(!((hexDigits == 16) &amp;&amp; (firstSigDigit &gt; '7')))" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(hexDigits &gt; 16) || ((hexDigits == 16) &amp;&amp; (firstSigDigit &gt; '7'))" to="!((hexDigits &gt; 16) || ((hexDigits == 16) &amp;&amp; (firstSigDigit &gt; '7')))" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((hexDigits == 8) &amp;&amp; (firstSigDigit &gt; '7'))" to="(!((hexDigits == 8) &amp;&amp; (firstSigDigit &gt; '7')))" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="((str.length()) - pfxLen) * -1" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length()) - pfxLen" to="((str.length()) - pfxLen) - 1" />
    <mutant id="mutant_257" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) * -1)" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) + 1)" />
    <mutant id="mutant_259" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) - 1)" />
    <mutant id="mutant_3174" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="((4 - srcLen) - 1)" />
    <mutant id="mutant_3173" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="((4 - srcLen) + 1)" />
    <mutant id="mutant_3172" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(4 - srcLen)" to="((4 - srcLen) * -1)" />
    <mutant id="mutant_3171" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="(((beSrcPos + 1) - srcLen) - 1)" />
    <mutant id="mutant_3170" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="(((beSrcPos + 1) - srcLen) + 1)" />
    <mutant id="mutant_3169" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((beSrcPos + 1) - srcLen)" to="(((beSrcPos + 1) - srcLen) * -1)" />
    <mutant id="mutant_3168" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) * -1)" />
    <mutant id="mutant_4499" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) * -1)" />
    <mutant id="mutant_3167" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) - 1)" />
    <mutant id="mutant_4498" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="((&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;) + 1)" />
    <mutant id="mutant_3166" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) + 1)" />
    <mutant id="mutant_4497" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="((&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;) - 1)" />
    <mutant id="mutant_3165" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) * -1)" />
    <mutant id="mutant_4496" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;)" to="((&quot;Aborting to protect against StackOverflowError - &quot; + &quot;output of one loop is the input of another&quot;) * -1)" />
    <mutant id="mutant_3164" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) - 1)" />
    <mutant id="mutant_4495" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0)) || (replacementList == null)) || ((replacementList.length) == 0)" to="!((((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0)) || (replacementList == null)) || ((replacementList.length) == 0))" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="(((str.indexOf('e')) + (str.indexOf('E'))) + 1) + 1" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="(((str.indexOf('e')) + (str.indexOf('E'))) + 1) - 1" />
    <mutant id="mutant_255" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E'))) + 1" to="(((str.indexOf('e')) + (str.indexOf('E'))) + 1) * -1" />
    <mutant id="mutant_256" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos &lt; decPos) || (expPos &gt; (str.length()))" to="!((expPos &lt; decPos) || (expPos &gt; (str.length())))" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="(((str.indexOf('e')) + (str.indexOf('E'))) + 1)" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="(((str.indexOf('e')) + (str.indexOf('E'))) - 1)" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.indexOf('e')) + (str.indexOf('E')))" to="(((str.indexOf('e')) + (str.indexOf('E'))) * -1)" />
    <mutant id="mutant_268" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) - 1)" />
    <mutant id="mutant_269" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(!(Character.isDigit(lastChar))) &amp;&amp; (lastChar != '.')" to="!((!(Character.isDigit(lastChar))) &amp;&amp; (lastChar != '.'))" />
    <mutant id="mutant_3163" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(beSrcPos + 1)" to="((beSrcPos + 1) + 1)" />
    <mutant id="mutant_4494" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0)) || (replacementList == null))" to="(!(((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0)) || (replacementList == null)))" />
    <mutant id="mutant_3162" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="(((src.length) - 1) - srcPos) + 1" />
    <mutant id="mutant_4493" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0))" to="(!((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.length) == 0)))" />
    <mutant id="mutant_3161" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="(((src.length) - 1) - srcPos) * -1" />
    <mutant id="mutant_4492" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((text == null) || (text.isEmpty())) || (searchList == null))" to="(!(((text == null) || (text.isEmpty())) || (searchList == null)))" />
    <mutant id="mutant_3160" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1) - srcPos" to="(((src.length) - 1) - srcPos) - 1" />
    <mutant id="mutant_4491" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text == null) || (text.isEmpty()))" to="(!((text == null) || (text.isEmpty())))" />
    <mutant id="mutant_4490" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))" to="!((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars)))" />
    <mutant id="mutant_3159" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="(((src.length) - 1) + 1)" />
    <mutant id="mutant_3158" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="(((src.length) - 1) - 1)" />
    <mutant id="mutant_4489" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="(end + replLength) - 1" />
    <mutant id="mutant_3157" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) - 1)" to="(((src.length) - 1) * -1)" />
    <mutant id="mutant_4488" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="(end + replLength) + 1" />
    <mutant id="mutant_3156" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="((nBytes - 8) + 1)" />
    <mutant id="mutant_4487" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end + replLength" to="(end + replLength) * -1" />
    <mutant id="mutant_3155" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="((nBytes - 8) * -1)" />
    <mutant id="mutant_4486" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) * -1)" />
    <mutant id="mutant_3154" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(nBytes - 8)" to="((nBytes - 8) - 1)" />
    <mutant id="mutant_4485" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) + 1)" />
    <mutant id="mutant_3153" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="((dstPos + 8) + 1)" />
    <mutant id="mutant_4484" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) - 1)" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) * -1)" />
    <mutant id="mutant_265" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) + 1)" />
    <mutant id="mutant_266" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) * -1)" />
    <mutant id="mutant_267" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) + 1)" />
    <mutant id="mutant_260" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) - 1)" />
    <mutant id="mutant_261" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) * -1)" />
    <mutant id="mutant_262" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) + 1)" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(decPos + 1)" to="((decPos + 1) - 1)" />
    <mutant id="mutant_279" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_3152" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="((dstPos + 8) * -1)" />
    <mutant id="mutant_4483" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="((replacement.length()) - replLength) * -1" />
    <mutant id="mutant_3151" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="(dstPos + 8)" to="((dstPos + 8) - 1)" />
    <mutant id="mutant_4482" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="((replacement.length()) - replLength) + 1" />
    <mutant id="mutant_3150" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) + 1)" />
    <mutant id="mutant_4481" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length()) - replLength" to="((replacement.length()) - replLength) - 1" />
    <mutant id="mutant_4480" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0)" to="!((((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0))" />
    <mutant id="mutant_3149" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) - 1)" />
    <mutant id="mutant_3148" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(dstPos + i)" to="((dstPos + i) * -1)" />
    <mutant id="mutant_4479" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null))" to="(!(((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)))" />
    <mutant id="mutant_3147" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) - 1" />
    <mutant id="mutant_4478" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString)))" to="(!((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))))" />
    <mutant id="mutant_270" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_3146" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) + 1" />
    <mutant id="mutant_4477" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="((str + separator) * -1)" />
    <mutant id="mutant_3145" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8) + srcPos" to="((i * 8) + srcPos) * -1" />
    <mutant id="mutant_4476" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="((str + separator) - 1)" />
    <mutant id="mutant_3144" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="((i * 8) - 1)" />
    <mutant id="mutant_4475" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str + separator)" to="((str + separator) + 1)" />
    <mutant id="mutant_3143" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="((i * 8) + 1)" />
    <mutant id="mutant_4474" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="(str == null) || (separator == null)" to="!((str == null) || (separator == null))" />
    <mutant id="mutant_3142" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="(i * 8)" to="((i * 8) * -1)" />
    <mutant id="mutant_4473" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_275" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) * -1)" />
    <mutant id="mutant_276" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) + 1)" />
    <mutant id="mutant_277" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_272" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos &gt; (-1)) &amp;&amp; (expPos &lt; ((str.length()) - 1))" to="!((expPos &gt; (-1)) &amp;&amp; (expPos &lt; ((str.length()) - 1)))" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(expPos + 1)" to="((expPos + 1) - 1)" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_281" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_286" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))" to="(!((((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric))))" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((dec == null) &amp;&amp; (exp == null)) &amp;&amp; ((((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))" to="!(((dec == null) &amp;&amp; (exp == null)) &amp;&amp; ((((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric))))" />
    <mutant id="mutant_288" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) * -1)" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) + 1)" />
    <mutant id="mutant_282" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp))" to="!((org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp)))" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((dec == null) &amp;&amp; (exp == null))" to="(!((dec == null) &amp;&amp; (exp == null)))" />
    <mutant id="mutant_285" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1))))" to="(!(((numeric.charAt(0)) == '-') &amp;&amp; (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))))" />
    <mutant id="mutant_290" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) - 1)" />
    <mutant id="mutant_291" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros))" to="(!(((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros)))" />
    <mutant id="mutant_292" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((f.isInfinite()) || (((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros)))" to="(!((f.isInfinite()) || (((f.floatValue()) == 0.0F) &amp;&amp; (!allZeros))))" />
    <mutant id="mutant_297" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) - 1)" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_299" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(((d.floatValue()) == 0.0) &amp;&amp; (!allZeros))" to="(!(((d.floatValue()) == 0.0) &amp;&amp; (!allZeros)))" />
    <mutant id="mutant_294" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="((d.isInfinite()) || (((d.floatValue()) == 0.0) &amp;&amp; (!allZeros)))" to="(!((d.isInfinite()) || (((d.floatValue()) == 0.0) &amp;&amp; (!allZeros))))" />
    <mutant id="mutant_295" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) * -1)" />
    <mutant id="mutant_296" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str + &quot; is not a valid number.&quot;)" to="((str + &quot; is not a valid number.&quot;) + 1)" />
    <mutant id="mutant_3199" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3198" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3197" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_3196" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3195" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_3194" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3193" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_3192" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3191" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3190" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_3189" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_3188" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_3187" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_3186" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_2729" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2720" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2728" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2727" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2726" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_2725" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2724" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2723" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_2722" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_2721" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_2719" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_2718" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_2717" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2716" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2715" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2714" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_2713" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2712" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2711" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_2710" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_2709" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_2708" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2707" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_2706" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_2705" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2704" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2703" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2702" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_2701" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2700" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1432" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) - 1)" />
    <mutant id="mutant_2764" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1433" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) * -1)" />
    <mutant id="mutant_2763" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1430" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) * -1)" />
    <mutant id="mutant_2762" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1431" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + 1)" />
    <mutant id="mutant_2761" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2760" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1438" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) + 1)" />
    <mutant id="mutant_1439" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) * -1)" />
    <mutant id="mutant_2769" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1436" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) + 1)" />
    <mutant id="mutant_2768" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1437" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) - 1)" />
    <mutant id="mutant_2767" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1434" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) * -1)" />
    <mutant id="mutant_2766" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1435" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) - 1)" />
    <mutant id="mutant_2765" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1421" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(cls != destClass) &amp;&amp; (i &lt; (MemberUtils.ORDERED_PRIMITIVE_TYPES.length))" to="!((cls != destClass) &amp;&amp; (i &lt; (MemberUtils.ORDERED_PRIMITIVE_TYPES.length)))" />
    <mutant id="mutant_2753" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1422" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="(((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1) * -1)" />
    <mutant id="mutant_2752" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_2751" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1420" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="(destClass.isInterface()) &amp;&amp; (ClassUtils.isAssignable(srcClass, destClass))" to="!((destClass.isInterface()) &amp;&amp; (ClassUtils.isAssignable(srcClass, destClass)))" />
    <mutant id="mutant_2750" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1429" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) + 1)" />
    <mutant id="mutant_1427" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_2759" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1428" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) - 1)" />
    <mutant id="mutant_2758" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1425" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2757" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1426" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_2756" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1423" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="(((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1) - 1)" />
    <mutant id="mutant_2755" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1424" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1)" to="(((MemberUtils.ORDERED_PRIMITIVE_TYPES.length) - 1) + 1)" />
    <mutant id="mutant_2754" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1410" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="(child == null) || (parent == null)" to="!((child == null) || (parent == null))" />
    <mutant id="mutant_2742" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1411" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="(d + 1) * -1" />
    <mutant id="mutant_2741" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_2740" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1418" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="((!(o.isAccessible())) &amp;&amp; (Modifier.isPublic(m.getModifiers()))) &amp;&amp; (org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(m.getDeclaringClass().getModifiers()))" to="!(((!(o.isAccessible())) &amp;&amp; (Modifier.isPublic(m.getModifiers()))) &amp;&amp; (org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(m.getDeclaringClass().getModifiers())))" />
    <mutant id="mutant_1419" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="(srcClass != null) &amp;&amp; (!(destClass.equals(srcClass)))" to="!((srcClass != null) &amp;&amp; (!(destClass.equals(srcClass))))" />
    <mutant id="mutant_2749" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1416" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="(o == null) || (o.isAccessible())" to="!((o == null) || (o.isAccessible()))" />
    <mutant id="mutant_2748" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1417" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="((!(o.isAccessible())) &amp;&amp; (Modifier.isPublic(m.getModifiers())))" to="(!((!(o.isAccessible())) &amp;&amp; (Modifier.isPublic(m.getModifiers()))))" />
    <mutant id="mutant_2747" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1414" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Member)" from="((m != null) &amp;&amp; (Modifier.isPublic(m.getModifiers())))" to="(!((m != null) &amp;&amp; (Modifier.isPublic(m.getModifiers()))))" />
    <mutant id="mutant_2746" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1415" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Member)" from="((m != null) &amp;&amp; (Modifier.isPublic(m.getModifiers()))) &amp;&amp; (!(m.isSynthetic()))" to="!(((m != null) &amp;&amp; (Modifier.isPublic(m.getModifiers()))) &amp;&amp; (!(m.isSynthetic())))" />
    <mutant id="mutant_2745" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1412" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="(d + 1) - 1" />
    <mutant id="mutant_2744" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1413" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d + 1" to="(d + 1) + 1" />
    <mutant id="mutant_2743" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1409" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean)" from="forceAccess &amp;&amp; (!(field.isAccessible()))" to="!(forceAccess &amp;&amp; (!(field.isAccessible())))" />
    <mutant id="mutant_2731" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1400" viable="false" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) - 1)" />
    <mutant id="mutant_2730" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1407" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="((&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;) + 1)" />
    <mutant id="mutant_2739" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1408" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="forceAccess &amp;&amp; (!(modifiersField.isAccessible()))" to="!(forceAccess &amp;&amp; (!(modifiersField.isAccessible())))" />
    <mutant id="mutant_2738" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1405" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="((&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;) * -1)" />
    <mutant id="mutant_2737" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1406" viable="false" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="(&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;)" to="((&quot;Reference to field %s is ambiguous relative to %s&quot; + &quot;; a matching field exists on two or more implemented interfaces.&quot;) - 1)" />
    <mutant id="mutant_2736" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1403" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])" from="(result == null) || ((MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes)) &lt; 0)" to="!((result == null) || ((MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes)) &lt; 0))" />
    <mutant id="mutant_2735" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1404" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.readField(java.lang.reflect.Field,java.lang.Object,boolean)" from="forceAccess &amp;&amp; (!(field.isAccessible()))" to="!(forceAccess &amp;&amp; (!(field.isAccessible())))" />
    <mutant id="mutant_2734" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1401" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible constructor on object: &quot; + (cls.getName()))" to="((&quot;No such accessible constructor on object: &quot; + (cls.getName())) + 1)" />
    <mutant id="mutant_2733" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1402" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor)" from="(MemberUtils.isAccessible(ctor)) &amp;&amp; (org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(ctor.getDeclaringClass()))" to="!((MemberUtils.isAccessible(ctor)) &amp;&amp; (org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(ctor.getDeclaringClass())))" />
    <mutant id="mutant_2732" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1480" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(toClass == null) || (!(toClass.isPrimitive()))" to="!((toClass == null) || (!(toClass.isPrimitive())))" />
    <mutant id="mutant_1476" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType,java.lang.reflect.Type)" from="(org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))" to="!((org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType())))" />
    <mutant id="mutant_4502" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) * -1)" />
    <mutant id="mutant_1477" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.WildcardType,java.lang.reflect.Type)" from="(org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(w), org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(other))) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(w), org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(other)))" to="!((org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(w), org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(other))) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(w), org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(other))))" />
    <mutant id="mutant_4501" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) - 1)" />
    <mutant id="mutant_1474" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="(org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]))" to="!((org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0])))" />
    <mutant id="mutant_4500" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(&quot;Search and Replace array lengths don\'t match: &quot; + searchLength)" to="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + 1)" />
    <mutant id="mutant_1475" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.GenericArrayType,java.lang.reflect.Type)" from="(t instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(a.getGenericComponentType(), ((java.lang.reflect.GenericArrayType)(t)).getGenericComponentType()))" to="!((t instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.equals(a.getGenericComponentType(), ((java.lang.reflect.GenericArrayType)(t)).getGenericComponentType())))" />
    <mutant id="mutant_1472" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.equals(java.lang.Object)" from="(obj == (this)) || ((obj instanceof java.lang.reflect.WildcardType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(obj)))))" to="!((obj == (this)) || ((obj instanceof java.lang.reflect.WildcardType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(obj))))))" />
    <mutant id="mutant_1473" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="(typeVarList.contains(typeArg)) &amp;&amp; (typeVarAssigns.containsKey(typeVar))" to="!((typeVarList.contains(typeArg)) &amp;&amp; (typeVarAssigns.containsKey(typeVar)))" />
    <mutant id="mutant_1470" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.equals(java.lang.Object)" from="(obj == (this)) || ((obj instanceof java.lang.reflect.ParameterizedType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(obj)))))" to="!((obj == (this)) || ((obj instanceof java.lang.reflect.ParameterizedType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(obj))))))" />
    <mutant id="mutant_1471" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.equals(java.lang.Object)" from="((obj instanceof java.lang.reflect.WildcardType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(obj)))))" to="(!((obj instanceof java.lang.reflect.WildcardType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(obj))))))" />
    <mutant id="mutant_4509" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty()))" to="(!(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())))" />
    <mutant id="mutant_4508" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null))" to="(!((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)))" />
    <mutant id="mutant_4507" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="((((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength) * -1)" />
    <mutant id="mutant_4506" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="((((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength) + 1)" />
    <mutant id="mutant_4505" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength)" to="((((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + replacementLength) - 1)" />
    <mutant id="mutant_1478" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isArrayType(java.lang.reflect.Type)" from="((type instanceof Class&lt;?&gt;) &amp;&amp; (((Class&lt;?&gt;)(type)).isArray()))" to="(!((type instanceof Class&lt;?&gt;) &amp;&amp; (((Class&lt;?&gt;)(type)).isArray())))" />
    <mutant id="mutant_4504" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) + 1)" />
    <mutant id="mutant_1479" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isArrayType(java.lang.reflect.Type)" from="(type instanceof java.lang.reflect.GenericArrayType) || ((type instanceof Class&lt;?&gt;) &amp;&amp; (((Class&lt;?&gt;)(type)).isArray()))" to="!((type instanceof java.lang.reflect.GenericArrayType) || ((type instanceof Class&lt;?&gt;) &amp;&amp; (((Class&lt;?&gt;)(type)).isArray())))" />
    <mutant id="mutant_4503" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;)" to="(((&quot;Search and Replace array lengths don\'t match: &quot; + searchLength) + &quot; vs &quot;) - 1)" />
    <mutant id="mutant_1465" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="((bestMatch == null) || ((MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) &lt; 0))" to="(!((bestMatch == null) || ((MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) &lt; 0)))" />
    <mutant id="mutant_2797" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'e') || (ch1 == 'E'))" to="(!((ch1 == 'e') || (ch1 == 'E')))" />
    <mutant id="mutant_1466" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(accessibleMethod != null) &amp;&amp; ((bestMatch == null) || ((MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) &lt; 0))" to="!((accessibleMethod != null) &amp;&amp; ((bestMatch == null) || ((MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) &lt; 0)))" />
    <mutant id="mutant_2796" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'y') || (ch0 == 'Y'))" to="(!((ch0 == 'y') || (ch0 == 'Y')))" />
    <mutant id="mutant_1463" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) + 1)" />
    <mutant id="mutant_2795" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'n') || (ch0 == 'N')) &amp;&amp; ((ch1 == 'o') || (ch1 == 'O'))" to="!(((ch0 == 'n') || (ch0 == 'N')) &amp;&amp; ((ch1 == 'o') || (ch1 == 'O')))" />
    <mutant id="mutant_1464" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(method.getName().equals(methodName)) &amp;&amp; (ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true))" to="!((method.getName().equals(methodName)) &amp;&amp; (ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true)))" />
    <mutant id="mutant_2794" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'o') || (ch1 == 'O'))" to="(!((ch1 == 'o') || (ch1 == 'O')))" />
    <mutant id="mutant_1461" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) * -1)" />
    <mutant id="mutant_2793" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'n') || (ch0 == 'N'))" to="(!((ch0 == 'n') || (ch0 == 'N')))" />
    <mutant id="mutant_1462" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) - 1)" />
    <mutant id="mutant_2792" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'n') || (ch1 == 'N'))" to="!(((ch0 == 'o') || (ch0 == 'O')) &amp;&amp; ((ch1 == 'n') || (ch1 == 'N')))" />
    <mutant id="mutant_2791" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch1 == 'n') || (ch1 == 'N'))" to="(!((ch1 == 'n') || (ch1 == 'N')))" />
    <mutant id="mutant_1460" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) * -1)" />
    <mutant id="mutant_2790" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'o') || (ch0 == 'O'))" to="(!((ch0 == 'o') || (ch0 == 'O')))" />
    <mutant id="mutant_1469" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.equals(java.lang.Object)" from="((obj instanceof java.lang.reflect.ParameterizedType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(obj)))))" to="(!((obj instanceof java.lang.reflect.ParameterizedType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(obj))))))" />
    <mutant id="mutant_1467" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.equals(java.lang.Object)" from="((obj instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(obj)))))" to="(!((obj instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(obj))))))" />
    <mutant id="mutant_2799" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch2 == 's') || (ch2 == 'S'))" to="(!((ch2 == 's') || (ch2 == 'S')))" />
    <mutant id="mutant_1468" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.equals(java.lang.Object)" from="(obj == (this)) || ((obj instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(obj)))))" to="!((obj == (this)) || ((obj instanceof java.lang.reflect.GenericArrayType) &amp;&amp; (TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(obj))))))" />
    <mutant id="mutant_2798" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'y') || (ch0 == 'Y')) &amp;&amp; ((ch1 == 'e') || (ch1 == 'E')))" to="(!(((ch0 == 'y') || (ch0 == 'Y')) &amp;&amp; ((ch1 == 'e') || (ch1 == 'E'))))" />
    <mutant id="mutant_1454" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) + 1)" />
    <mutant id="mutant_2786" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')" to="!((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T'))" />
    <mutant id="mutant_1455" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) - 1)" />
    <mutant id="mutant_2785" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't'))" to="(!(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')))" />
    <mutant id="mutant_1452" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) * -1)" />
    <mutant id="mutant_2784" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'y') || (ch0 == 'Y'))" to="(!((ch0 == 'y') || (ch0 == 'Y')))" />
    <mutant id="mutant_1453" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + (object.getClass().getName())) - 1)" />
    <mutant id="mutant_2783" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Boolean)" from="(bool != null) &amp;&amp; (bool.booleanValue())" to="!((bool != null) &amp;&amp; (bool.booleanValue()))" />
    <mutant id="mutant_1450" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) - 1)" />
    <mutant id="mutant_2782" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1451" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) * -1)" />
    <mutant id="mutant_2781" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_2780" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1458" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) - 1)" />
    <mutant id="mutant_1459" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + 1)" />
    <mutant id="mutant_2789" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')" to="!((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F'))" />
    <mutant id="mutant_1456" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) + 1)" />
    <mutant id="mutant_2788" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="(((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f'))" to="(!(((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')))" />
    <mutant id="mutant_1457" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) * -1)" />
    <mutant id="mutant_2787" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="((ch0 == 'n') || (ch0 == 'N'))" to="(!((ch0 == 'n') || (ch0 == 'N')))" />
    <mutant id="mutant_1443" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) * -1)" />
    <mutant id="mutant_2775" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_1444" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) - 1)" />
    <mutant id="mutant_2774" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1441" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + 1)" />
    <mutant id="mutant_2773" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_1442" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) * -1)" />
    <mutant id="mutant_2772" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) - 1)" />
    <mutant id="mutant_2771" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) + 1)" />
    <mutant id="mutant_1440" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) - 1)" />
    <mutant id="mutant_2770" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1449" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;)" to="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on object: &quot;) + 1)" />
    <mutant id="mutant_1447" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) + 1)" />
    <mutant id="mutant_2779" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) - 1)" />
    <mutant id="mutant_1448" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) * -1)" />
    <mutant id="mutant_2778" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) + 1)" />
    <mutant id="mutant_1445" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName()))" to="((((&quot;No such accessible method: &quot; + methodName) + &quot;() on class: &quot;) + (cls.getName())) + 1)" />
    <mutant id="mutant_2777" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset2 + i)" to="((offset2 + i) * -1)" />
    <mutant id="mutant_1446" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[])" from="(&quot;No such accessible method: &quot; + methodName)" to="((&quot;No such accessible method: &quot; + methodName) - 1)" />
    <mutant id="mutant_2776" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="(offset1 + i)" to="((offset1 + i) * -1)" />
    <mutant id="mutant_3215" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4546" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) * -1)" />
    <mutant id="mutant_3214" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4545" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) - 1)" />
    <mutant id="mutant_3213" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4544" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(padLen == 1) &amp;&amp; (pads &lt;= (StringUtils.PAD_LIMIT))" to="!((padLen == 1) &amp;&amp; (pads &lt;= (StringUtils.PAD_LIMIT)))" />
    <mutant id="mutant_3212" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4543" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) - 1" />
    <mutant id="mutant_3211" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4542" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) * -1" />
    <mutant id="mutant_3210" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4541" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size - strLen" to="(size - strLen) + 1" />
    <mutant id="mutant_4540" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) - 1" />
    <mutant id="mutant_3219" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_3218" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4549" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="(shift % strLen)" to="((shift % strLen) - 1)" />
    <mutant id="mutant_3217" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) - 1)" />
    <mutant id="mutant_4548" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="((shift == 0) || (strLen == 0))" to="(!((shift == 0) || (strLen == 0)))" />
    <mutant id="mutant_3216" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4547" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(i % padLen)" to="((i % padLen) + 1)" />
    <mutant id="mutant_3204" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4535" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="(((str.length()) - len) * -1)" />
    <mutant id="mutant_3203" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4534" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="((timeToLive - 1) + 1)" />
    <mutant id="mutant_3202" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)])" to="!(((src.length) &gt; (srcPos + 3)) &amp;&amp; (src[(srcPos + 3)]))" />
    <mutant id="mutant_4533" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="((timeToLive - 1) * -1)" />
    <mutant id="mutant_3201" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) + 1)" />
    <mutant id="mutant_4532" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(timeToLive - 1)" to="((timeToLive - 1) - 1)" />
    <mutant id="mutant_3200" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 3)" to="((srcPos + 3) * -1)" />
    <mutant id="mutant_4531" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(textIndex == (-1)) || (tempIndex &lt; textIndex)" to="!((textIndex == (-1)) || (tempIndex &lt; textIndex))" />
    <mutant id="mutant_4530" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)" to="!((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null))" />
    <mutant id="mutant_3209" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)])" to="!(((src.length) &gt; (srcPos + 2)) &amp;&amp; (src[(srcPos + 2)]))" />
    <mutant id="mutant_3208" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4539" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) + 1" />
    <mutant id="mutant_3207" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) + 1)" />
    <mutant id="mutant_4538" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size - (str.length())" to="(size - (str.length())) * -1" />
    <mutant id="mutant_3206" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) * -1)" />
    <mutant id="mutant_4537" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="(((str.length()) - len) - 1)" />
    <mutant id="mutant_3205" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(srcPos + 2)" to="((srcPos + 2) - 1)" />
    <mutant id="mutant_4536" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="((str.length()) - len)" to="(((str.length()) - len) + 1)" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType))" to="(!(((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)))" />
    <mutant id="mutant_4524" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) * -1)" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="(((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)" to="!((((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType))" />
    <mutant id="mutant_4523" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) + 1)" />
    <mutant id="mutant_1496" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="((&quot;found an unhandled type: &quot; + toType) * -1)" />
    <mutant id="mutant_4522" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) + increase)" to="(((text.length()) + increase) - 1)" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)" from="((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType))" to="(!((type instanceof java.lang.Class&lt;?&gt;) || (type instanceof java.lang.reflect.ParameterizedType)))" />
    <mutant id="mutant_4521" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="(((text.length()) / 5) + 1)" />
    <mutant id="mutant_1494" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="((&quot;found an unhandled type: &quot; + toType) - 1)" />
    <mutant id="mutant_4520" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="(((text.length()) / 5) * -1)" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(&quot;found an unhandled type: &quot; + toType)" to="((&quot;found an unhandled type: &quot; + toType) + 1)" />
    <mutant id="mutant_1492" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" from="((fromTypeArg != null) &amp;&amp; (!(toTypeArg.equals(fromTypeArg)))) &amp;&amp; (!((toTypeArg instanceof java.lang.reflect.WildcardType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns))))" to="!(((fromTypeArg != null) &amp;&amp; (!(toTypeArg.equals(fromTypeArg)))) &amp;&amp; (!((toTypeArg instanceof java.lang.reflect.WildcardType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns)))))" />
    <mutant id="mutant_1493" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)" from="(toType == null) || (toType instanceof java.lang.Class&lt;?&gt;)" to="!((toType == null) || (toType instanceof java.lang.Class&lt;?&gt;))" />
    <mutant id="mutant_4529" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty()))" to="(!(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())))" />
    <mutant id="mutant_4528" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null))" to="(!((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)))" />
    <mutant id="mutant_4527" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="(textIndex + (searchList[replaceIndex].length())) * -1" />
    <mutant id="mutant_4526" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="(textIndex + (searchList[replaceIndex].length())) - 1" />
    <mutant id="mutant_4525" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex + (searchList[replaceIndex].length())" to="(textIndex + (searchList[replaceIndex].length())) + 1" />
    <mutant id="mutant_1490" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" from="((fromTypeArg != null) &amp;&amp; (!(toTypeArg.equals(fromTypeArg))))" to="(!((fromTypeArg != null) &amp;&amp; (!(toTypeArg.equals(fromTypeArg)))))" />
    <mutant id="mutant_1491" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)" from="((toTypeArg instanceof java.lang.reflect.WildcardType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns)))" to="(!((toTypeArg instanceof java.lang.reflect.WildcardType) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns))))" />
    <mutant id="mutant_1487" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) + 1)" />
    <mutant id="mutant_4513" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="((replacementList[i].length()) - (searchList[i].length())) * -1" />
    <mutant id="mutant_1488" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) - 1)" />
    <mutant id="mutant_4512" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((searchList[i]) == null) || ((replacementList[i]) == null)" to="!(((searchList[i]) == null) || ((replacementList[i]) == null))" />
    <mutant id="mutant_1485" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) * -1)" />
    <mutant id="mutant_4511" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(textIndex == (-1)) || (tempIndex &lt; textIndex)" to="!((textIndex == (-1)) || (tempIndex &lt; textIndex))" />
    <mutant id="mutant_1486" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(cls.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns))" to="!((cls.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns)))" />
    <mutant id="mutant_4510" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)" to="!((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null))" />
    <mutant id="mutant_1483" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) + 1)" />
    <mutant id="mutant_1484" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) - 1)" />
    <mutant id="mutant_1481" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="((toClass.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType())))" to="(!((toClass.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType()))))" />
    <mutant id="mutant_1482" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.Class)" from="(toClass.equals(java.lang.Object.class)) || ((toClass.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType())))" to="!((toClass.equals(java.lang.Object.class)) || ((toClass.isArray()) &amp;&amp; (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType()))))" />
    <mutant id="mutant_4519" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="((text.length()) / 5)" to="(((text.length()) / 5) - 1)" />
    <mutant id="mutant_4518" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="(3 * greater) - 1" />
    <mutant id="mutant_4517" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="(3 * greater) + 1" />
    <mutant id="mutant_4516" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3 * greater" to="(3 * greater) * -1" />
    <mutant id="mutant_1489" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)" from="(&quot;found an unhandled type: &quot; + type)" to="((&quot;found an unhandled type: &quot; + type) * -1)" />
    <mutant id="mutant_4515" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="((replacementList[i].length()) - (searchList[i].length())) - 1" />
    <mutant id="mutant_4514" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length()) - (searchList[i].length())" to="((replacementList[i].length()) - (searchList[i].length())) + 1" />
  </mutants>
</mutation>
