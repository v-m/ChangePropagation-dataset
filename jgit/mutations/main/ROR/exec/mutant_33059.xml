<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_33059" time="298140">
  <failing>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeTag</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testPushResult</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
