<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_34437" time="353268">
  <failing>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeTag</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeInItself</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testDefaultFilter</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testCull</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForward</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testLinear</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple</case>
    <case>org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMerged</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevert</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
