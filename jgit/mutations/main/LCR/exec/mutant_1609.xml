<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_1609" time="297041">
  <failing>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.annotatedTags</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testTagCommit</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1</case>
    <case>org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeTag</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeInItself</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.cherryPick</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testDefaultFilter</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommits</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testCull</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting</case>
    <case>org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1</case>
    <case>org.eclipse.jgit.transport.PackParserTest.test1</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testClose</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE</case>
    <case>org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testUpToDate</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1</case>
    <case>org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit</case>
    <case>org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL</case>
    <case>org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testTinyThinPack</case>
    <case>org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testTagTag</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps</case>
    <case>org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.prefix</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack</case>
    <case>org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.nameExact</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple</case>
    <case>org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory</case>
    <case>org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMerged</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMerge</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testTagBlob</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.ref</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
    <case>org.eclipse.jgit.revwalk.RevTagParseTest.testTagTree</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
