<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_1892" time="314317">
  <failing>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom</case>
    <case>org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches</case>
    <case>org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag</case>
    <case>org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree</case>
    <case>org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testValidHead</case>
    <case>org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin</case>
    <case>org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag</case>
    <case>org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput</case>
    <case>org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange</case>
    <case>org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testValidSpecialCharacterUnixs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testIsValidPath</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testWindowsReservedNames</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory</case>
    <case>org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTheirs</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack</case>
    <case>org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testDefaultFilter</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset</case>
    <case>org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort</case>
    <case>org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories</case>
    <case>org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testExact</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testCull</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs</case>
    <case>org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testOurs</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testJustCommonPrefixIsNotMatch</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage</case>
    <case>org.eclipse.jgit.treewalk.ForPathTest.testFindObjects</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames</case>
    <case>org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne</case>
    <case>org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1</case>
    <case>org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder</case>
    <case>org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom</case>
    <case>org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testNoMatchButClose</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoDirectorySuffix</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testFilterIsPrefixOfKey</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPath</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testStopWalk</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
