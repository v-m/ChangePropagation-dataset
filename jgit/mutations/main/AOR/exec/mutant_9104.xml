<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_9104" time="309696">
  <failing>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEndNoNewlineAtEnd</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
