<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_2890" time="307030">
  <failing>
    <case>org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoMatchingAttributes</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testClean</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot</case>
    <case>org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirs</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile</case>
    <case>org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testEditFlat</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace</case>
    <case>org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testEmptyGitAttributeFile</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups</case>
    <case>org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
