<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_5676" time="354701">
  <failing>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef</case>
    <case>org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTheirs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob</case>
    <case>org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch</case>
    <case>org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches</case>
    <case>org.eclipse.jgit.lib.RefTest.testGetShortRef</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testOurs</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_Mixed</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testClose</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadLooseRef</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch</case>
    <case>org.eclipse.jgit.lib.RefTest.testRefsUnderRefs</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo</case>
    <case>org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.lib.RefTest.testGetShortExactRef</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory</case>
  </hanging>
</mutation-execution>
