<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_5605" time="4956132">
  <failing />
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout</case>
    <case>org.eclipse.jgit.lib.IndexModificationTimesTest.testModify</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepository</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteFullName</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.nameExact</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testTagging</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckout</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testPushResult</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.ref</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.annotatedTags</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeTag</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommits</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testListNotes</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropAll</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForward</case>
    <case>org.eclipse.jgit.lib.RefTest.testRefsUnderRefs</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue</case>
    <case>org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked</case>
    <case>org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.testFetch</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateAndList</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.prefix</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPush</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadLooseRef</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMerge</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDelete</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </hanging>
</mutation-execution>
