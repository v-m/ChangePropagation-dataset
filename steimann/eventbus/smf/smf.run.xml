<?xml version="1.0" encoding="UTF-8"?>
<!--
This is an execution file generated with SMF.
-->
<smf>
  <config skip-mvn-cp="false">
    <global>
      <classpath />
      <state>FRESH</state>
    </global>
    <source>
      <bytecode>bytecode/source</bytecode>
      <include>
        <path>src/main/java</path>
      </include>
    </source>
    <tests>
      <bytecode>bytecode/tests</bytecode>
      <include>
        <path>src/test/java</path>
      </include>
      <ressources />
    </tests>
    <mutation basedir="mutations/{id}/{op}">
      <source>source</source>
      <bytecode>bytecode</bytecode>
      <executions>exec</executions>
    </mutation>
  </config>
  <tests>
    <classes>
      <class>org.bushe.swing.event.TestEventServiceLocato</class>
      <class>org.bushe.swing.event.TestEventServiceLocatorConfiguratio</class>
      <class>org.bushe.swing.event.TestEventServiceLocator</class>
      <class>org.bushe.swing.event.TestEventBu</class>
      <class>org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeak</class>
      <class>org.bushe.swing.event.annotation.TestAnnotationInAbstractClas</class>
      <class>org.bushe.swing.event.TestEventBusServiceClassBadTyp</class>
      <class>org.bushe.swing.event.TestEventActio</class>
      <class>org.bushe.swing.event.TestEventServiceLocatorConfiguration</class>
      <class>org.bushe.swing.event.TestPublicationState</class>
      <class>org.bushe.swing.event.TestEventBusServiceClas</class>
      <class>org.bushe.swing.event.TestContainerEventServic</class>
      <class>org.bushe.swing.event.annotation.TestSubscriberAnnotatio</class>
      <class>org.bushe.swing.event.TestPrioritizedSubscriber</class>
      <class>org.bushe.swing.event.TestDefaultEventServic</class>
    </classes>
    <cases>
      <case>org.bushe.swing.event.TestEventServiceLocator.testDefaultEventBusService()</case>
      <case>org.bushe.swing.event.TestContainerEventService.testContainerEventServiceRegistrar()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testEventsCache()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator2.testSetEventBusService()</case>
      <case>org.bushe.swing.event.TestEventBusServiceClass.testConfigurableEventService()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator.testNamedEventBusService2()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testSubscribeWeakly()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testNormalFIFO()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAnotherIssue15MultipleAnnotatedSubscribers()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testUnsubscribeTopic()</case>
      <case>org.bushe.swing.event.TestEventServiceLocatorConfiguration2.testConfigurableEventService1()</case>
      <case>org.bushe.swing.event.TestEventBus.testGeneric()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator.testDefaultEventBusService2()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testVetoTopicWeak()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAutoCreateEventServiceClass()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testMixedOfPrioritizedNonPrioritizedAndPrioritized0()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityTopicPatternAnnotation()</case>
      <case>org.bushe.swing.event.TestEventServiceLocatorConfiguration3.testConfigurableEventService3()</case>
      <case>org.bushe.swing.event.TestEventBusServiceClassBadType.testConfigurableEventService()</case>
      <case>org.bushe.swing.event.TestEventAction.testEventBusTopicActionEventServiceValueFirst()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testTopic()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testParameterizedEventMultiParams()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testParameterizedEvent()</case>
      <case>org.bushe.swing.event.TestContainerEventService.testContainerEventServiceFinder()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testWeakClassAnnotatedEventSubscriberUnsubscription()</case>
      <case>org.bushe.swing.event.TestEventBus.testSubscribeWeakly()</case>
      <case>org.bushe.swing.event.TestEventServiceLocatorConfiguration.testConfigurableEventService()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testSubscribeStrongly()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testStrongClassAnnotatedEventSubscriber()</case>
      <case>org.bushe.swing.event.TestEventBus.testVeto()</case>
      <case>org.bushe.swing.event.TestPublicationStates.testVetoStates()</case>
      <case>org.bushe.swing.event.TestEventBus.testPublish()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testWeakReference()</case>
      <case>org.bushe.swing.event.TestPublicationStates.testStates()</case>
      <case>org.bushe.swing.event.TestEventBus.testVetoWeak()</case>
      <case>org.bushe.swing.event.annotation.TestAnnotationInAbstractClass.testAbstract()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testTopicPattern()</case>
      <case>org.bushe.swing.event.TestEventServiceLocatorConfiguration4.testConfigurableEventService4()</case>
      <case>org.bushe.swing.event.TestEventBus.testVetoTopic()</case>
      <case>org.bushe.swing.event.TestEventAction.testEventBusTopicActionIDValueFirst()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testSimple()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testWeakClassAnnotatedEventSubscriber()</case>
      <case>org.bushe.swing.event.TestEventBus.testSwingThreading()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testIllegalArgs()</case>
      <case>org.bushe.swing.event.TestEventBus.testSubscribe()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testTimeHandling()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testVeto()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testTyping()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testIssue26OneNegOthersNormal()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator.testNamedEventBusService1()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testOnePosOthersNormal()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testWildcardSubscription()</case>
      <case>org.bushe.swing.event.TestEventBus.testVetoTopicWeak()</case>
      <case>org.bushe.swing.event.TestEventAction.testEventBusEventAction()</case>
      <case>org.bushe.swing.event.TestEventAction.testContainerEventAction()</case>
      <case>org.bushe.swing.event.TestEventBus.testIllegalArgs()</case>
      <case>org.bushe.swing.event.TestEventAction.testContainerEventActionException()</case>
      <case>org.bushe.swing.event.TestEventBus.testUnsubscribeTopic()</case>
      <case>org.bushe.swing.event.TestEventBus.testUnsubscribe()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityTopicAnnotation()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testVetoWeak()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testSimultaneousTopicAndClass()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testEventClass()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityAnnotation()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testIssue15MultipleAnnotatedSubscribers()</case>
      <case>org.bushe.swing.event.TestContainerEventService.testContainerEventServiceSupplier()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator7.testSetEventBusService()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testNoPrioritizedWithZeroPrioritized()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testSubscribeOrder()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testGenericGeneric()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testPublish()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testVetoTopic()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testRegex()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testTopicsCache()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator6.testSetEventBusService()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testTypeSubscription()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAutoCreateEventServiceTopic()</case>
      <case>org.bushe.swing.event.TestEventBus.testVetoException()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testVetoException()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator4.testSetEventBusService()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator5.testSetEventBusService()</case>
      <case>org.bushe.swing.event.TestEventAction.testEventBusTopicAction()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testStrongRef()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testUnsubscribe()</case>
      <case>org.bushe.swing.event.TestEventServiceLocator3.testSetEventBusService()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testYetAnotherIssue15MultipleAnnotatedSubscribers()</case>
      <case>org.bushe.swing.event.TestEventAction.testEventBusTopicActionNameWorks()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testSubscribe()</case>
      <case>org.bushe.swing.event.TestPrioritizedSubscribers.testOnlyPrioritized()</case>
      <case>org.bushe.swing.event.TestDefaultEventService.testEventLocator()</case>
      <case>org.bushe.swing.event.annotation.TestSubscriberAnnotation.testExactly()</case>
    </cases>
  </tests>
  <original-execution time="-1">
    <failing />
    <ignored />
    <hanging />
    <callings>
      <test name="org.bushe.swing.event.TestEventServiceLocator.testDefaultEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestContainerEventService.testContainerEventServiceRegistrar()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.ContainerEventServiceRegistrar(javax.swing.JComponent,org.bushe.swing.event.VetoEventListener,java.lang.Class[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.ContainerEventServiceRegistrar(javax.swing.JComponent,org.bushe.swing.event.EventTopicSubscriber,java.lang.String[])</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.TestContainerEventService.getLastEventObject()</node>
        <node>org.bushe.swing.event.ContainerEventServiceFinder.getEventService(java.awt.Component)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.ContainerEventServiceRegistrar(javax.swing.JComponent,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener,java.lang.Class[],org.bushe.swing.event.EventTopicSubscriber,org.bushe.swing.event.VetoTopicEventListener,java.lang.String[])</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.getContainerEventService()</node>
        <node>org.bushe.swing.event.TestContainerEventService.ContainerEventServiceSupplierPanel.getContainerEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.ContainerEventServiceRegistrar(javax.swing.JComponent,org.bushe.swing.event.VetoTopicEventListener,java.lang.String[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.updateContainerEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.1.hierarchyChanged(java.awt.event.HierarchyEvent)</node>
        <node>org.bushe.swing.event.ContainerEventServiceRegistrar.ContainerEventServiceRegistrar(javax.swing.JComponent,org.bushe.swing.event.EventSubscriber,java.lang.Class[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testEventsCache()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.25.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearCache(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCachedEvents(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setCacheSizeForEventClass(java.lang.Class,int)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setDefaultCacheSizePerClassOrTopic(int)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getLastEvent(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearCache()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator2.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceExistsException.EventServiceExistsException(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBusServiceClass.testConfigurableEventService()">
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator.testNamedEventBusService2()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testSubscribeWeakly()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testNormalFIFO()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.OrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAnotherIssue15MultipleAnnotatedSubscribers()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.annotation.Issue15Subscriber2.getTimesCalled()</node>
        <node>org.bushe.swing.event.annotation.Issue15Subscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearAllSubscribers()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeAllInMap(java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.Issue15Subscriber.Issue15Subscriber()</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.clearAllSubscribers()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.Issue15Subscriber2.Issue15Subscriber2()</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testUnsubscribeTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocatorConfiguration2.testConfigurableEventService1()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testGeneric()">
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator.testDefaultEventBusService2()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testVetoTopicWeak()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.4.shouldVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAutoCreateEventServiceClass()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.shouldVeto(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedVetoSubscriber.autoCreateEventServiceClass(java.util.Iterator)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.Logger.getLogger(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.autoCreateEventServiceClass(java.util.Iterator)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.Logger(java.util.logging.Logger)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testMixedOfPrioritizedNonPrioritizedAndPrioritized0()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.PrioritizedOrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.OrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.startCleanup()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PrioritizedSubscriberComparator.compare(org.bushe.swing.event.Prioritized,org.bushe.swing.event.Prioritized)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityTopicPatternAnnotation()">
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.retryReflectiveCallUsingAccessibleObject(java.lang.Object[],java.lang.reflect.Method,java.lang.Object,java.lang.IllegalAccessException,java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderTopicSubscriber.OrderRecorderTopicSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.32.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.34.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.37.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.36.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.29.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderTopicSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.30.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.31.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.33.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.38.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.35.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.matches(java.lang.CharSequence)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PrioritizedSubscriberComparator.compare(org.bushe.swing.event.Prioritized,org.bushe.swing.event.Prioritized)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderTopicSubscriber.PrioritizedOrderRecorderTopicSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocatorConfiguration3.testConfigurableEventService3()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBusServiceClassBadType.testConfigurableEventService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testEventBusTopicActionEventServiceValueFirst()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicValue(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicName(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testParameterizedEventMultiParams()">
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToType(java.util.Map,java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.14.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.generics.TypeReference.getType()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.reflect.Type,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.reflect.Type,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.TestDefaultEventService.13.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.generics.TypeReference.TypeReference()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testParameterizedEvent()">
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToType(java.util.Map,java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.generics.TypeReference.getType()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.reflect.Type,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.reflect.Type,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.9.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.generics.TypeReference.TypeReference()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestContainerEventService.testContainerEventServiceFinder()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ContainerEventServiceFinder.getEventService(java.awt.Component)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testWeakClassAnnotatedEventSubscriberUnsubscription()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.EventBus.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.WeakClassAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.WeakClassAnnotatedEventSubscriber.setTimesCalled(int)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testSubscribeWeakly()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber(boolean)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocatorConfiguration.testConfigurableEventService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testSubscribeStrongly()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testStrongClassAnnotatedEventSubscriber()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.StrongClassAnnotatedEventSubscriber.setTimesCalled(int)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.StrongClassAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testVeto()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPublicationStates.testVetoStates()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPublicationStates.4.shouldVeto(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPublicationStates.3.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPublicationStates.1.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testPublish()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ObjectEvent.ObjectEvent(java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ObjectEvent.getEventObject()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testWeakReference()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesColorChanged()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.setTimesColorChanged(int)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeProxySubscriber(org.bushe.swing.event.ProxySubscriber,java.util.Iterator)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPublicationStates.testStates()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPublicationStates.3.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPublicationStates.2.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPublicationStates.1.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testVetoWeak()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestAnnotationInAbstractClass.testAbstract()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.ConcreteSubscriber.isInitialized()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testTopicPattern()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.shouldVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.doIceCream(java.lang.String,java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedVetoSubscriber.doIceCream(java.lang.String,java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.matches(java.lang.CharSequence)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocatorConfiguration4.testConfigurableEventService4()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testVetoTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.TestEventBus.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testEventBusTopicActionIDValueFirst()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicValue(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicName(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testSimple()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesColorChanged()</node>
        <node>org.bushe.swing.event.EventBus.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.setTimesColorChanged(int)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotationMemoryLeaks.testWeakClassAnnotatedEventSubscriber()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.WeakClassAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.WeakClassAnnotatedEventSubscriber.setTimesCalled(int)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeProxySubscriber(org.bushe.swing.event.ProxySubscriber,java.util.Iterator)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testSwingThreading()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testIllegalArgs()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.VetoTopicEventListenerForTest.VetoTopicEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.VetoTopicEventListenerForTest.VetoTopicEventListenerForTest()</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testSubscribe()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber(boolean)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testTimeHandling()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.SubscriberTimingEvent(java.lang.Object,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.isVetoExceeded()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getTimeLimitMilliseconds()</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getStart()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.6.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getEnd()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.isEventHandlingExceeded()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getVetoEventListener()</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeTiming(org.bushe.swing.event.SubscriberTimingEvent)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,java.lang.Long)</node>
        <node>org.bushe.swing.event.Logger.log(org.bushe.swing.event.Logger.Level,java.lang.String,java.lang.Throwable)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.toString()</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.getSource()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.1.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(java.lang.Long)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.SubscriberTimingEvent.getSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.Logger.log(org.bushe.swing.event.Logger.Level,java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testVeto()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.shouldVeto(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testTyping()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testIssue26OneNegOthersNormal()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.13.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.15.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.14.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.14.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator.testNamedEventBusService1()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testOnePosOthersNormal()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.17.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.16.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.17.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.18.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testWildcardSubscription()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.20.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearAllSubscribers()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.generics.TypeReference.getType()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.reflect.Type,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.reflect.Type,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeAllInMap(java.util.Map)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToType(java.util.Map,java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.16.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.generics.TypeReference.TypeReference()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testVetoTopicWeak()">
        <node>org.bushe.swing.event.EventBus.subscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.TestEventBus.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testEventBusEventAction()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.EventServiceAction.setPublishesOnTopic(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestEventAction.5.getEventServiceEvent(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventBusAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.TestEventAction.MyEventServiceEvent.MyEventServiceEvent(org.bushe.swing.event.TestEventAction,java.lang.Object,java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testContainerEventAction()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ContainerEventServiceFinder.getEventService(java.awt.Component)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicValue(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ContainerEventServiceAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicName(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ContainerEventServiceAction.ContainerEventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testIllegalArgs()">
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.VetoTopicEventListenerForTest.VetoTopicEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.VetoTopicEventListenerForTest.VetoTopicEventListenerForTest()</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testContainerEventActionException()">
        <node>org.bushe.swing.event.ContainerEventServiceAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventServiceAction.setThrowsExceptionOnNullEventService(boolean)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ContainerEventServiceAction.ContainerEventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getName()</node>
        <node>org.bushe.swing.event.EventServiceAction.getThrowsExceptionOnNullEventService()</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testUnsubscribeTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.TestEventBus.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testUnsubscribe()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestEventBus.getEventSubscriber(boolean)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityTopicAnnotation()">
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.retryReflectiveCallUsingAccessibleObject(java.lang.Object[],java.lang.reflect.Method,java.lang.Object,java.lang.IllegalAccessException,java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderTopicSubscriber.OrderRecorderTopicSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderTopicSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.21.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.27.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.23.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.25.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.20.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.28.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.22.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.26.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PrioritizedSubscriberComparator.compare(org.bushe.swing.event.Prioritized,org.bushe.swing.event.Prioritized)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.19.annotateMe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderTopicSubscriber.PrioritizedOrderRecorderTopicSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.24.annotateMe(java.lang.String,java.lang.Object)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testVetoWeak()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.3.shouldVeto(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testSimultaneousTopicAndClass()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ObjectEvent.ObjectEvent(java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.DoubleSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.DoubleSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ObjectEvent.getEventObject()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testEventClass()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.setLastCall(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testPriorityAnnotation()">
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.5.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.retryReflectiveCallUsingAccessibleObject(java.lang.Object[],java.lang.reflect.Method,java.lang.Object,java.lang.IllegalAccessException,java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.6.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.7.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.PrioritizedOrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.4.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.9.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.8.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.11.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.10.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.OrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.12.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.3.annotateMe(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PrioritizedSubscriberComparator.compare(org.bushe.swing.event.Prioritized,org.bushe.swing.event.Prioritized)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testIssue15MultipleAnnotatedSubscribers()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnotherAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestContainerEventService.testContainerEventServiceSupplier()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.TestContainerEventService.ContainerEventServiceSupplierPanel.getContainerEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ContainerEventServiceFinder.getEventService(java.awt.Component)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator7.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventServiceExistsException.EventServiceExistsException(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testNoPrioritizedWithZeroPrioritized()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.PrioritizedOrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.OrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testSubscribeOrder()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(java.lang.Long)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testGenericGeneric()">
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.22.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToType(java.util.Map,java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.generics.TypeReference.getType()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.reflect.Type,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.reflect.Type,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.reflect.Type)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.generics.TypeReference.TypeReference()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testPublish()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleException(java.lang.Object,java.lang.Throwable,java.lang.StackTraceElement[],org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ObjectEvent.getEventObject()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.exception.SwingException.printStackTrace(java.io.PrintWriter)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.log(org.bushe.swing.event.Logger.Level,java.lang.String,java.lang.Throwable)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ObjectEvent.ObjectEvent(java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleException(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Throwable,java.lang.StackTraceElement[],java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.exception.SwingException.setCallingStack(java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.exception.SwingException.SwingException(java.lang.String,java.lang.Throwable,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testVetoTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventTopicSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.2.shouldVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TopicSubscriberForTest.TopicSubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testRegex()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.DoubleSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.matches(java.lang.CharSequence)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testTopicsCache()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setCacheSizeForTopic(java.lang.String,int)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearCache(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearCache(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCachedTopicData(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.matches(java.lang.CharSequence)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getLastTopicData(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setDefaultCacheSizePerClassOrTopic(int)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setCacheSizeForTopic(java.util.regex.Pattern,int)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.24.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearCache()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator6.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventServiceExistsException.EventServiceExistsException(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testTypeSubscription()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.DerivedEvent.DerivedEvent(org.bushe.swing.event.TestDefaultEventService,java.lang.Object)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.setPublicationStatus(org.bushe.swing.event.PublicationStatus)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.DoubleSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.TopLevelEvent.TopLevelEvent(org.bushe.swing.event.TestDefaultEventService,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.AbstractEventServiceEvent.AbstractEventServiceEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testAutoCreateEventServiceTopic()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.onEvent(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleVeto(org.bushe.swing.event.VetoEventListener,java.lang.Object,org.bushe.swing.event.VetoTopicEventListener,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.autoCreateEventServiceTopic(java.lang.String,java.util.Iterator)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedVetoSubscriber.autoCreateEventServiceTopic(java.lang.String,java.util.Iterator)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.shouldVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getSubscriptionMethod()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventBus.testVetoException()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestEventBus.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.EventBus.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestEventBus.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.TestEventBus.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testVetoException()">
        <node>org.bushe.swing.event.Logger.log(org.bushe.swing.event.Logger.Level,java.lang.String,java.lang.Throwable)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.shouldVeto(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.VetoEventListenerForTest.VetoEventListenerForTest(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.handleException(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Throwable,java.lang.StackTraceElement[],java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.exception.SwingException.setCallingStack(java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.exception.SwingException.printStackTrace(java.io.PrintWriter)</node>
        <node>org.bushe.swing.exception.SwingException.SwingException(java.lang.String,java.lang.Throwable,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoException(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Throwable,java.lang.StackTraceElement[],org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator4.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator5.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testEventBusTopicAction()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicValue(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicName(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testStrongRef()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.StrongAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.StrongAnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testUnsubscribe()">
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestEventServiceLocator3.testSetEventBusService()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventServiceExistsException.EventServiceExistsException(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testYetAnotherIssue15MultipleAnnotatedSubscribers()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.clearAllSubscribers()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnotherDoubleAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeAllInMap(java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.EventBus.clearAllSubscribers()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.DoubleAnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
      </test>
      <test name="org.bushe.swing.event.TestEventAction.testEventBusTopicActionNameWorks()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoEventListeners(java.lang.String)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicValue(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBus.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.isPublishesOnTopic()</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.EventServiceAction.EventServiceAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.EventServiceAction.getTopicName(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.getEventService(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.EventBusAction.EventBusAction(java.lang.String,javax.swing.ImageIcon)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.EventServiceAction.actionPerformed(java.awt.event.ActionEvent)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testSubscribe()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.SubscriberForTest.SubscriberForTest(org.bushe.swing.event.EBTestCounter,boolean)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestDefaultEventService.createEvent()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventSubscriber(boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestDefaultEventService.getEventClass()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestPrioritizedSubscribers.testOnlyPrioritized()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getRealSubscriberAndCleanStaleSubscriberIfNecessary(java.util.Iterator,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.setStatus(org.bushe.swing.event.PublicationStatus,java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.OrderRecorder(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.PrioritizedOrderRecorderSubscriber.PrioritizedOrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,int,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkVetoSubscribers(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.OrderRecorderSubscriber(org.bushe.swing.event.TestPrioritizedSubscribers,java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.checkTimeLimit(long,java.lang.Object,org.bushe.swing.event.EventSubscriber,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.addEventToCache(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.logEvent(java.lang.Object,java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getCacheSizeForEventClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PrioritizedSubscriberComparator.compare(org.bushe.swing.event.Prioritized,org.bushe.swing.event.Prioritized)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getDefaultCacheSizePerClassOrTopic()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorder.record()</node>
        <node>org.bushe.swing.event.TestPrioritizedSubscribers.OrderRecorderSubscriber.onEvent(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
      <test name="org.bushe.swing.event.TestDefaultEventService.testEventLocator()">
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getSwingEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocatorTestCase.clearEventServiceLocator()</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean)</node>
        <node>org.bushe.swing.event.EventBus.getGlobalEventService()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.EventServiceLocator.clearAll()</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.EventServiceExistsException.EventServiceExistsException(java.lang.String)</node>
        <node>org.bushe.swing.event.SwingEventService.SwingEventService()</node>
      </test>
      <test name="org.bushe.swing.event.annotation.TestSubscriberAnnotation.testExactly()">
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService(java.lang.Long,boolean,java.lang.Integer,java.lang.Integer,java.lang.Long)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.SwingEventService.publish(java.lang.Object,java.lang.String,java.lang.Object,java.util.List,java.util.List,java.lang.StackTraceElement[])</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.createCopyOfContentsRemoveWeakRefs(java.util.Collection)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.PatternWrapper(org.bushe.swing.event.ThreadSafeEventService,java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToPattern(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventBusService()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.processOrUnprocess(java.lang.Object,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.removeFromSetResolveWeakReferences(java.util.Map,java.lang.Object,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getLastCall()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.hashCode()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.EventServiceLocator.setEventService(java.lang.String,org.bushe.swing.event.EventService)</node>
        <node>org.bushe.swing.event.EventServiceLocator.getEventService(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToExactClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.getEventServiceFromAnnotation(java.lang.String,java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.List,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.ThreadSafeEventService()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Object,java.util.Map)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicPatternSubscriber.ProxyTopicPatternSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,java.util.regex.Pattern,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoExactly(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.EDTUtil.waitForEDT()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotatedEventSubscriber.getTimesCalled()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.PatternWrapper.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribers(java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getReferenceStrength()</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.ProxyTopicSubscriber.ProxyTopicSubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.String,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeExactly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToTopic(java.lang.String)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.proxyUnsubscribed()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerExactlyStrongly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.AbstractProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribe(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.util.regex.Pattern)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.unprocess(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.BaseProxySubscriber(java.lang.Object,java.lang.reflect.Method,org.bushe.swing.event.annotation.ReferenceStrength,int,org.bushe.swing.event.EventService,java.lang.Class,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeExactlyStrongly(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVeto(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListener(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribeVetoListenerExactly(java.lang.Class,org.bushe.swing.event.VetoEventListener)</node>
        <node>org.bushe.swing.event.Logger.isLoggable(org.bushe.swing.event.Logger.Level)</node>
        <node>org.bushe.swing.event.EventBus.publish(java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.lang.Class,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.lang.String,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.Class,org.bushe.swing.event.EventSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getProxySubscriber(java.util.regex.Pattern,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getEventOrVetoSubscribersToClass(java.util.Map,java.lang.Class)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getPriority()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeStrongly(java.util.regex.Pattern,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.sortSubscribers(java.util.List)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoSubscribers(java.lang.String)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersToClass(java.lang.Class)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListenerStrongly(java.util.regex.Pattern,org.bushe.swing.event.VetoTopicEventListener)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.decWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getSubscribersByPattern(java.lang.String,java.util.Map)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.BaseProxySubscriber.equals(java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.EventTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.unsubscribe(java.lang.String,org.bushe.swing.event.EventTopicSubscriber)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.subscribeVetoListener(java.lang.Object,java.util.Map,java.lang.Object)</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.incWeakRefPlusProxySubscriberCount()</node>
        <node>org.bushe.swing.event.ThreadSafeEventService.getVetoProxySubscriber(java.lang.String,java.lang.Object)</node>
        <node>org.bushe.swing.event.annotation.AnnotationProcessor.process(org.bushe.swing.event.annotation.VetoTopicPatternSubscriber,java.lang.Object,java.lang.reflect.Method,boolean)</node>
        <node>org.bushe.swing.event.annotation.AbstractProxySubscriber.getProxiedSubscriber()</node>
        <node>org.bushe.swing.event.Logger.getJavaLevelFor(org.bushe.swing.event.Logger.Level)</node>
      </test>
    </callings>
  </original-execution>
</smf>
