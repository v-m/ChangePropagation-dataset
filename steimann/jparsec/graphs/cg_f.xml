<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="sourcecode" attr.type="string" />
  <key id="type" for="node" attr.name="formaltype" attr.type="string" />
  <key id="type" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="884">
    <node id="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.mock(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3426-3550;96-99;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest#control">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest#mockFields">
      <data key="type">FIELD</data>
    </node>
    <node id="junit.framework.TestCase#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Object#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest$Mock#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3555-3632;101-104;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest#replayed">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.runBare()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest#verified">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.runTest()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3289-3421;89-94;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.easymock.BaseMockTest.verify()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3639-3716;106-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporter()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParseErrorDetails.getFailureMessage()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParseErrorDetails.java;[1782-1944;39-43;3-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParseErrorDetails.getExpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParseErrorDetails.java;[1598-1674;33-34;3-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporter.reportList(java.lang.StringBuilder,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[2218-2676;52-67;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParseErrorDetails.getEncountered()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParseErrorDetails.java;[1495-1591;30-31;3-26];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParseErrorDetails.getUnexpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParseErrorDetails.java;[1681-1775;36-37;3-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location#line">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location#column">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.reportList(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1974-2173;59-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testReportList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1584-1967;50-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1486-1698;31-40;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest#error">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testToString_null()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[325-419;18-20;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testToString_nullError()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[426-555;22-24;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1705-1910;42-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1915-1982;50-52;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.Location.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1987-2073;54-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.LocationTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.LocationTest.testEquals()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1527-1719;34-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectTester.java;[274-479;13-18;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectTester.java;[486-736;20-26;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.LocationTest.testToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1421-1520;30-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2058-2619;44-58;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException.toErrorMessage(java.lang.String,java.lang.String,org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2777-3213;65-76;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException#error">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException#location">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException#module">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[1580-2053;30-42;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException.getModuleName()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[3220-3332;78-81;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[3339-3438;83-86;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParserException.getErrorDetails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2624-2770;60-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.error.ParseErrorDetails.getIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParseErrorDetails.java;[1399-1488;27-28;3-17];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$1.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1606-1674;32-34;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1680-1745;35-37;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#TO_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#TO_LOWER_CASE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toLowerCase(java.util.Locale)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1919-2284;43-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#TO_UPPER_CASE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toUpperCase(java.util.Locale)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2453-2818;58-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4500-4562;127-129;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$2.map(java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4420-4494;124-126;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1469-1648;28-31;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A,B</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#ID2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4752-4815;137-139;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$3.map(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4656-4746;134-136;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1831-1985;38-41;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A,B,C</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#ID3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5018-5081;147-149;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$4.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4909-5012;144-146;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1992-2163;43-46;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A,B,C,D</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#ID4">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5301-5364;157-159;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$5.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5179-5295;154-156;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[2170-2358;48-51;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A,B,C,D,E</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#ID5">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$6.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6272-6322;187-189;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$6.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6328-6382;190-190;5-59];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#ID">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$7.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6496-6566;195-197;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$7.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6572-6638;198-200;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps#TO_STRING">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6650-6666;203-203;3-19];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toTuple5()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5984-6199;180-184;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toTuple4()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5771-5977;174-178;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toTuple3()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5567-5764;168-172;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toPair()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5376-5560;162-166;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$10.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3370-3449;85-87;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$10.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3457-3543;88-90;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.toEnum(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3076-3554;79-92;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$11()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$11.map(F)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3896-3929;103-103;7-40];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">F</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$11.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3937-4014;104-106;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.constant(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3733-4025;100-108;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$12()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$12.map(K)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4189-4240;113-115;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">K</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$12.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4248-4320;116-118;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.map(java.util.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4032-4331;110-120;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.mapToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2825-3069;70-77;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps.identity()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3561-3726;94-98;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$8.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2118-2192;46-48;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2200-2273;49-51;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$9.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2652-2726;61-63;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Maps$9.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2734-2807;64-66;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest$MyEnum#FOO">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest$MyEnum()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest$MyEnum#BAR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testConstant()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1115-1300;44-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Map.java;[1363-1429;25-26;3-20];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testIdentity()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[926-1108;38-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testJmap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1307-1616;50-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testMapToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1623-1847;59-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToEnum()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[734-919;33-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest$MyEnum#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[208-361;14-17;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToLowerCase()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[368-522;19-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToPair()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1854-2005;65-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Map2.java;[1391-1466;25-26;3-18];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToTuple3()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2012-2175;70-73;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Map3.map(A,B,C)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Map3.java;[1406-1497;26-27;3-23];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToTuple4()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2182-2353;75-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Map4.map(A,B,C,D)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Map4.java;[1420-1527;26-27;3-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToTuple5()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2360-2539;80-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Map5.map(A,B,C,D,E)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Map5.java;[1434-1557;26-27;3-33];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.MapsTest.testToUpperCase()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[529-683;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair(A,B)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1410-1468;30-33;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
      <data key="formaltype">A,B</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1588-1736;39-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1475-1581;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Objects.java;[1489-1731;29-35;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1743-1838;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Objects.java;[1319-1482;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Pair.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1845-1921;50-52;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3(A,B,C)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1416-1482;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
      <data key="formaltype">A,B,C</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1600-1758;38-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1489-1593;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1765-1857;45-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1864-1951;49-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4(A,B,C,D)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1424-1498;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
      <data key="formaltype">A,B,C,D</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1619-1783;38-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1505-1612;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1790-1882;45-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1889-1987;49-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5(A,B,C,D,E)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1429-1511;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
      <data key="formaltype">A,B,C,D,E</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5#e">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1635-1807;38-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5.equals(org.codehaus.jparsec.functors.Tuple5)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1518-1628;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1814-1908;46-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuple5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Tuples.tuple(A,B)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1655-1824;33-36;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A,B</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest.testPair()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest.testTuple2()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest.testTuple3()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest.testTuple4()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.TuplesTest.testTuple5()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry(java.lang.Object,org.codehaus.jparsec.misc.Invokable,java.lang.Object[],int[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2185-2386;59-64;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper(java.lang.Object,org.codehaus.jparsec.misc.Invokable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3960-4065;89-92;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry#curryArgs">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry#curryIndexes">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[1359-1899;25-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.findCurryIndex(java.lang.reflect.Constructor,java.lang.Class[],int,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5098-5546;136-144;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.checkDup(int[],int,int,java.lang.Object,java.lang.reflect.Constructor)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4652-5093;124-134;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="int#length">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4255-4543;109-118;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.valueList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4550-4645;120-122;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.expectedParams()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6561-6650;178-180;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.expectedParams()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18682-18753;446-448;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.find(int[],int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6377-6554;169-176;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.isInstance(java.lang.Class,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1209-1313;43-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.getClassName(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[192-375;13-16;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4053-4248;101-107;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokable.parameterTypes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokable.java;[152-179;10-10;3-30];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23348-23691;599-606;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokable.invoke(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokable.java;[183-229;11-11;3-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(int,java.lang.Class,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18283-18675;438-444;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$AbstractBar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8376-8398;304-304;5-27];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$AmbiguousConstructor(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9070-9106;331-331;5-41];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$AmbiguousConstructor(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9112-9151;332-332;5-44];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Bar(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[848-936;36-39;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Bar#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Bar#size">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz#b">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz#s">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz#i">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz#l">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Baz#c">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Foo(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[672-760;26-29;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Foo#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Foo#size">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2995-3122;133-137;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr#left">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr#right">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3268-3430;146-151;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#left">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#size">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#right">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$NoPublicConstructor()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8698-8721;317-317;5-28];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2527-2618;110-113;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#expr">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,int,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2744-2870;121-125;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#expr">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#size">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr(java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2082-2172;88-91;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#expr">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2(java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2297-2422;99-103;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#size">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#expr">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowCheckedException(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7350-7454;272-274;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowError(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6432-6513;239-241;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowUncheckedException(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6851-6955;255-257;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$VarargConstructor(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9500-9543;346-346;5-48];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testAbstractClass()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8409-8652;307-314;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$AbstractBar#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testAmbiguousConstructor()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9162-9456;335-343;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$AmbiguousConstructor#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testAmbiguousCurryArg()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10204-10416;375-382;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testAsBinary_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10859-11046;401-407;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.asBinary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testAsUnary_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10670-10852;393-399;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.asUnary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testBinary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.binary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6424-6736;151-158;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20502-20612;549-552;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testCurryArgTypeMismatch()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9983-10197;366-373;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testEquals()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$Bar#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5237-5660;138-151;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12999-13395;464-473;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17371-17985;415-427;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7854-8066;182-190;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInfix_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12625-12992;453-462;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testInvoke_wrongParameterNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[13402-13706;475-482;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testName()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7916-8010;292-294;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18760-18829;450-452;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testNoPublicConstructor()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8732-9023;320-328;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$NoPublicConstructor#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPostfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12218-12618;442-451;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPostfix_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11837-12211;431-440;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPrefix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11432-11830;420-429;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testPrefix_wrongParamNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11053-11425;409-418;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testSequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowCheckedException#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowError#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$ThrowUncheckedException#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7807-7909;288-290;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17992-18120;429-432;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testTooManyCurryArgs()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9829-9976;359-364;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testUnary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.unary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6120-6419;142-149;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testVarargConstructor()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9554-9822;349-357;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest$VarargConstructor#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.CurryTest.testWrongArgumentType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10423-10663;384-391;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1367-1428;48-50;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$ValueInvokable#value">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$ValueInvokable.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1511-1691;56-61;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$ValueInvokable.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1435-1504;52-54;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$ValueInvokable.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1702-1774;63-65;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$1(java.lang.Object)">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$1.returnType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[670-733;23-25;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$1.parameterTypes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[588-662;20-22;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$1.invoke(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[473-580;17-19;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables.constructor(net.sf.cglib.reflect.FastConstructor)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[223-744;13-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$2(java.lang.Object)">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$2.returnType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1180-1244;39-41;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$2.parameterTypes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1098-1172;36-38;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables$2.invoke(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[987-1090;33-35;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokables.method(java.lang.Object,net.sf.cglib.reflect.FastMethod)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[751-1255;29-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$1.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23881-23931;612-614;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23937-24000;615-617;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#SKIPPED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#SKIP">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3708-3953;82-87;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.mapMethod(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20814-21047;528-535;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#source">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[4072-5511;94-126;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20160-20328;501-508;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.invoke(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20692-20807;523-526;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.propagate(java.lang.Throwable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20335-20687;510-521;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.isSkipped(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24012-24108;620-622;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.getRawClass(java.lang.reflect.Type)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22145-22403;562-570;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21609-22138;550-560;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22928-23343;588-597;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Invokable.returnType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokable.java;[127-148;9-9;3-24];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.findMapMethod(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22408-22923;572-586;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[1906-2424;40-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Lists.java;[1498-1718;33-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11042-11259;292-295;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5071-5347;119-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2431-2860;55-65;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.wrapperClass(java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1010-1202;37-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper#mapMethods">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8009-8240;213-219;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$6$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$6$1.map(T,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[14888-14973;357-359;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$6.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[14805-14992;355-361;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24249-24399;628-630;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18125-18278;434-436;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Binary#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$7$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$7$1.map(T,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17067-17333;403-409;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$7.map(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[16979-17352;401-411;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.toArray(java.util.Collection)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24113-24244;624-626;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8533-8766;224-230;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$4$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$4$1.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11135-11200;268-270;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$4.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11052-11219;266-272;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$5$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$5$1.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13253-13461;315-320;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$5.map(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13167-13480;313-322;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$2$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$2$1.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8011-8075;190-192;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$2.map(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[7929-8094;188-194;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$3$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$3$1.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9722-9819;229-232;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$3.map(java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9633-9838;227-234;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.list(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8773-9052;232-238;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19741-20153;486-499;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$9.map(T,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19578-19651;477-479;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$9.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19659-19725;480-482;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$10.map(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20004-20068;492-494;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$10.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20076-20142;495-497;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$8.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19128-19179;461-463;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Mapper$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19187-19253;464-466;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.isAssignable(java.lang.Class,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1320-1449;47-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap.map(java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[720-810;33-36;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$CharSequenceSubMap()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$CharSequenceSubMap.map(java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13738-13847;466-469;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Foo(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[583-637;27-29;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Foo#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#s">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#i">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#l">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#b">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#c">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$12()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$12.map(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5950-6055;214-217;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5879-6066;212-219;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$14()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$14.map(int,boolean,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6955-7088;257-260;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.thingMapper()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6869-7099;255-262;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.assertFoo(java.lang.String,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[11591-11730;385-388;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.assertWrongParameters(org.codehaus.jparsec.misc.Mapper,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[11737-12260;390-404;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.always()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2900-3039;68-72;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$16()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$16.map()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12990-13072;432-435;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$16.map(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12893-12980;428-431;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testAmbiguousMapperMethods()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12802-13140;425-439;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testAsMap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1337-1642;57-62;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.String#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$2.map(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2099-2197;78-81;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testBinary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$18()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$18.map()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13491-13601;456-459;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testIncompatibleGenericReturnType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13388-13669;453-463;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$17()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$17.map()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13237-13313;444-447;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testIncompatibleReturnType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13147-13381;441-451;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$7.map(java.lang.String,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3599-3708;130-133;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testInfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$8.map(java.lang.String,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3889-4009;140-143;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$9.map(java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4251-4346;151-154;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMap_errorPropagated()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4114-4490;148-162;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$11()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$11.map(java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5089-5205;183-186;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMap_exceptionPropagated()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4936-5375;180-194;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$10.map(java.lang.String,java.lang.Integer)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4671-4770;167-170;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMap_runtimeExceptionPropagated()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4497-4929;164-178;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSubclass()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13973-14084;476-478;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$19()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSuperclass()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13858-13966;472-474;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$15()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testMissingMapperMethod()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12656-12795;418-423;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testName()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[898-982;41-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$13()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$13.map(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6335-6438;228-231;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$Thing#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$5.map(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3027-3125;110-113;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testPostfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$6.map(java.lang.String,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3305-3414;120-123;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$3.map(java.lang.String,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2457-2555;90-93;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testPrefix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$4.map(java.lang.String,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2733-2842;100-103;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testSequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[989-1127;45-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest$1.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1739-1841;66-69;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testUnary()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testWrongParameters()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5382-5647;196-204;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testWrongParametersForSequencing()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5654-5874;206-210;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.MapperTest.testWrongType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Integer#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.{static}">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection.primitive(java.lang.Class,java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[499-613;21-23;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="byte#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Byte#class">
      <data key="type">FIELD</data>
    </node>
    <node id="short#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Short#class">
      <data key="type">FIELD</data>
    </node>
    <node id="int#class">
      <data key="type">FIELD</data>
    </node>
    <node id="long#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Long#class">
      <data key="type">FIELD</data>
    </node>
    <node id="boolean#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Boolean#class">
      <data key="type">FIELD</data>
    </node>
    <node id="float#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Float#class">
      <data key="type">FIELD</data>
    </node>
    <node id="double#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Double#class">
      <data key="type">FIELD</data>
    </node>
    <node id="char#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Character#class">
      <data key="type">FIELD</data>
    </node>
    <node id="void#class">
      <data key="type">FIELD</data>
    </node>
    <node id="java.lang.Void#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.Reflection#WRAPPERS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.ReflectionTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.misc.ReflectionTest.testGetClassName()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[189-353;12-15;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.ReflectionTest.testIsAssignable()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[689-1022;25-31;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.ReflectionTest.testIsInstance()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[360-682;17-23;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$1.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1558-1602;31-31;5-49];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1608-1670;32-34;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$2.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1810-1853;39-39;5-48];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1859-1930;40-42;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$3.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2166-2283;50-52;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2291-2364;53-55;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_HEX_DIGIT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$4.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2573-2652;63-65;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2660-2731;66-68;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_UPPER_CASE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$5.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2940-3019;76-78;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3027-3098;79-81;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_LOWER_CASE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$6.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3308-3388;89-91;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$6.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3396-3468;92-94;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_WHITESPACE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$7.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3646-3741;99-101;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$7.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3749-3819;102-104;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$8.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4038-4145;112-114;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4153-4224;115-117;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$9.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4426-4502;125-127;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$9.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4510-4578;128-130;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_LETTER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$10.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4801-4914;138-140;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$10.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4922-4995;141-143;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$11()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$11.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5219-5344;151-153;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$11.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5352-5426;154-156;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC_">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates#IS_DIGIT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.range(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6149-6545;183-196;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1397-1423;27-27;3-29];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$16()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$16.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7332-7408;222-224;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$16.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7416-7493;225-227;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7112-7504;216-229;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$19()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$19.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8559-8658;264-266;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicate.java;[1326-1406;25-26;3-25];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$19.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8666-8759;267-269;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8289-8770;258-271;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$21()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$21.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9617-9791;297-302;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$21.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9799-9892;303-305;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Strings.java;[1334-1636;25-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$12()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$12.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5621-5682;162-164;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$12.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5690-5771;165-167;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5440-5782;159-169;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$18()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$18.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8113-8188;249-251;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$18.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8196-8271;252-254;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.not(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7917-8282;246-256;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$17()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$17.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7738-7813;237-239;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$17.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7821-7899;240-242;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7511-7910;231-244;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$13()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$13.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5975-6036;174-176;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$13.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6044-6131;177-179;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5789-6142;171-181;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$15()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$15.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6928-7002;207-209;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$15.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7010-7094;210-212;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.notRange(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6698-7105;201-214;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$20()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$20.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9047-9146;279-281;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$20.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9154-9246;282-284;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8777-9257;273-286;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$22()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$22.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[10262-10435;318-323;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$22.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[10443-10535;324-326;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$14()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$14.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6372-6443;189-191;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicates$14.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6451-6534;192-194;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testAlways()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5870-6061;172-177;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testAmong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1951-2203;60-66;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4122-4457;122-130;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4808-5160;142-150;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric_()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5167-5521;152-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha_()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4464-4801;132-140;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[519-730;17-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsDigit()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1301-1593;41-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsHexDigit()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2477-3016;76-89;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLetter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5528-5863;162-170;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLowerCase()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3375-3720;101-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsUpperCase()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3023-3368;91-99;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsWhitespace()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3727-4115;111-120;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testNever()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6068-6248;179-184;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testNot()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6255-6423;186-190;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotAmong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2210-2470;68-74;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[737-951;24-29;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotRange()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1600-1944;50-58;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.CharPredicatesTest.testRange()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[958-1294;31-39;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[1675-2120;30-39;3-66];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4568-4914;124-131;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18947-19573;528-542;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2696-2898;59-65;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15257-15474;419-425;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.many(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2905-3225;67-76;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.many1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3232-3423;78-84;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2127-2500;41-50;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12442-13041;338-354;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.not()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4189-4377;109-115;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10805-11066;286-293;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.optional()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2507-2689;52-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20407-20660;566-573;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.or(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[5117-5290;140-143;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11919-12437;322-336;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.peek()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4384-4561;117-122;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11071-11333;295-302;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.repeat(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4921-5110;133-138;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13529-13934;369-380;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.some(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3430-3747;86-95;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16913-17166;466-473;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern.some(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3754-4182;97-107;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testIfElse()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6345-6645;162-168;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8095-8398;208-215;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testMany()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5531-5932;136-147;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testMany1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testMany_throwsForNegativeMin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3865-4056;104-111;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testMismatch()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[363-424;14-16;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testNext()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testNot()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testOptional()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testOr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testPeek()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testRepeat()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testRepeat_throwsForNegativeNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2004-2200;56-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testSome()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMax()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4841-5032;130-137;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMinMax()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[5039-5382;139-152;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$1.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1571-1673;33-35;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$2.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1816-1903;40-42;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#ANY_CHAR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#EOF">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5939-6338;149-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$3.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2512-2732;59-63;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#ESCAPED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19580-19767;544-547;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#STRICT_DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#FRACTION">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#WORD">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#OCT_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#DEC_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#HEX_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#SCIENTIFIC_NOTATION">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#REGEXP_PATTERN">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns#REGEXP_MODIFIERS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.getModifiersPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22900-23006;641-643;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1415-1435;29-29;3-23];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.compareIgnoreCase(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9867-9993;256-258;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21964-22216;616-622;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22223-22605;624-632;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20667-20992;575-583;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20999-21316;585-594;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21323-21619;596-603;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21626-21957;605-614;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9998-10380;260-271;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10385-10800;273-284;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.among(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6965-7262;178-184;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7269-7790;186-198;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$13()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$13.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11608-11903;310-318;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11338-11914;304-320;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$4.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5771-5921;142-145;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$5.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6176-6327;155-158;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$28()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$28.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19078-19562;530-540;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$6.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7552-7779;192-196;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7795-8088;200-206;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14515-14856;397-406;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.longer(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17173-17450;475-481;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17457-18005;483-498;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$26()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$26.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17746-17994;489-496;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$18()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$18.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14234-14497;389-393;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3100-3243;74-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$20()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$20.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14982-15241;411-415;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$19()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$19.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14715-14845;402-404;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$21()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$21.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15335-15463;421-423;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$11()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$11.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10877-11055;288-291;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$9.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9033-9269;232-237;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8754-9280;226-239;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$10.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9600-9851;247-252;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9287-9862;241-254;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$30()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$30.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20484-20649;568-571;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$14()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$14.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12186-12426;328-334;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$12()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$12.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11144-11322;297-300;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.range(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6652-6958;170-176;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.regex(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20232-20402;561-564;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.regex(java.util.regex.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19774-20225;549-559;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$29()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$29.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19937-20214;552-557;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$16()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$16.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13376-13511;363-365;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13046-13522;356-367;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3398-3638;86-93;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$17()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$17.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13790-13923;376-378;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$15()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$15.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12702-13030;344-352;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.shorter(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18012-18292;500-506;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$27()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$27.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18590-18931;514-524;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$22()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$22.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15793-16067;434-438;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2865-3095;67-72;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$24()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$24.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16637-16897;458-462;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$23()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$23.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16349-16484;449-451;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16085-16495;442-453;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks.checkMax(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3248-3391;80-84;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$25()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$25.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17027-17155;469-471;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$7.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8261-8387;211-213;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns$8.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8595-8736;220-222;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8405-8747;217-224;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testAlways()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[368-538;15-19;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testAmong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3439-3815;85-93;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testAnd()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testAnyChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[739-1066;27-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testDecInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15289-15577;348-353;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testDecimal()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13952-14279;316-322;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testDecimalL()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12957-13467;296-304;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testDecimalR()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13474-13945;306-314;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1853-2038;52-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testEscaped()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3822-4164;95-101;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testHasAtLeast()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1073-1493;35-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testHasExact()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1500-1846;44-50;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testHexInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15584-16009;355-362;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14656-14925;333-338;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testIsChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2045-2330;58-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testLineComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4171-4577;103-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testLonger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testLongest()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testMany()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8068-8325;182-186;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testMany1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testMany_negativeNumberThrows()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9083-9299;202-209;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testNever()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[545-732;21-25;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testNotString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5430-5749;127-132;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testNotStringCaseInsensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5756-6237;134-140;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testOctInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14932-15282;340-346;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testOr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRange()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2797-3432;73-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRegex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16638-17058;378-385;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRegexpModifiers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17604-17840;397-401;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRegexpPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17065-17597;387-395;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testRepeat_negativeNumberThrows()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7843-8061;173-180;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testScientificNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16016-16631;364-376;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testShorter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testShortest()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSome()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9306-9653;211-216;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSome_minBiggerThanMaxThrows()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10669-10891;249-256;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMaxThrows()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10055-10439;225-238;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMinThrows()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10446-10662;240-247;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4584-4882;111-116;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testStringCaseInsensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4889-5423;118-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.pattern.PatternsTest.testWord()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14286-14649;324-331;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Checks()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.checkNotNullState_noThrowIfObjectIsntNull()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[1130-1352;44-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.testCheckArgument_noThrowIfConditionIsTrue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[233-447;14-18;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.testCheckArgument_throwsIfConditionIsFalse()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[454-685;20-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.testCheckNotNullState_throwsIfObjectIsNull()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[1359-1604;50-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.testCheckState_noThrowIfConditionIsTrue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[692-894;29-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ChecksTest.testCheckState_throwsIfConditionIsFalse()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[901-1123;35-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1827-1912;45-48;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1661-1820;40-43;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.calcSize(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2781-2949;86-89;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2131-2410;60-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.checkIndex(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2011-2124;55-58;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.set(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2417-2774;71-84;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.size()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1919-2004;50-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList#len">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.toArray()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1454-1654;31-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3422-3627;111-121;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.ensureCapacity(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2956-3249;91-101;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntList.grow(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3256-3415;103-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[2360-2561;95-100;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testCalcSize()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[183-439;12-18;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testConstructor()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[446-554;20-23;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testConstructor_withCapacity()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[561-683;25-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testGet()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testGet_throwsForIndexOutOfBounds()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1369-1554;55-61;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testGet_throwsForNegativeIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1179-1362;47-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testSet()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testSet_throwsForIndexOutOfBounds()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[2165-2353;87-93;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testSet_throwsForNegativeIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1972-2158;79-85;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.IntListTest.testToArray()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[690-927;30-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Lists()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Lists.java;[1371-1491;28-31;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Lists.capacity(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Lists.java;[1725-1874;38-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Integer#MAX_VALUE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectTester$AnotherType()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectTester()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.Objects()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.Objects.in(java.lang.Object,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Objects.java;[1738-1991;37-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectsTest.testEquals()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[183-382;12-17;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectsTest.testHashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[389-520;19-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.ObjectsTest.testIn()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[527-649;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Strings()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.Strings.join(java.lang.StringBuilder,java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Strings.java;[1641-1944;32-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.StringsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.StringsTest.testJoin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/StringsTest.java;[189-399;12-16;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.StringsTest.testJoin_withStringBuilder()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/StringsTest.java;[406-730;18-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.util.Utils()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.util.Utils.readFile(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/Utils.java;[219-781;18-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ActionParser(java.lang.Runnable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1305-1365;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[3354-3364;65-65;3-13];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ActionParser#action">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ActionParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1372-1454;25-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ActionParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1461-1530;30-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.AllTests()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.AllTests.suite()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/AllTests.java;[1372-1459;28-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.AllTests#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.AnyCharScanner(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1362-1416;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.AnyCharScanner#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5224-5248;156-156;3-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6491-6565;204-206;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.next()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7314-7360;237-240;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#result">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.AnyCharScanner.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1610-1666;40-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ArrayParser(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1438-1503;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ArrayParser#parsers">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21888-22049;595-602;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21527-21629;584-587;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ArrayParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1821-1880;41-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertArrayEquals(java.lang.Object[],java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2300-2444;78-80;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[377-668;21-29;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1581-1963;57-67;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[675-1073;31-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1080-1574;43-55;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20169-20495;538-547;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1970-2100;69-71;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2107-2293;73-76;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2621-2727;86-88;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2451-2614;82-84;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2981-3105;95-97;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2734-2974;90-93;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.AtomicParser(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1297-1343;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.AtomicParser#p">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7228-7307;232-235;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#at">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#step">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.AtomicParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1557-1621;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1346-1460;23-26;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.BestParser#parsers">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.BestParser#order">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6657-6769;212-216;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.BestParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1968-2036;44-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.BindNextParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1635-1795;30-34;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.BindNextParser#map">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.BindNextParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.BindNextParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1800-1933;36-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.runNext(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20292-20508;545-549;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.BindNextParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1940-2006;42-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[6257-6437;163-170;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5910-6250;152-161;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5386-5903;136-150;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#source">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#lineBreakChar">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#startLineNumber">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#startColumnNumber">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2350-2929;54-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakColumnIndex(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[4653-5003;114-122;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakLocation(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5010-5135;124-126;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5142-5270;128-130;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.locate(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5277-5379;132-134;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5868-6026;168-174;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5711-5861;162-166;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_allSmaller()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1750-1874;54-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsBigger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1052-1185;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsEqual()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[913-1045;30-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsBigger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1611-1743;50-52;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsEqual()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1473-1604;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_noElement()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2271-2386;70-72;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneBiggerElement()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2010-2133;62-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneEqualElement()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1881-2003;58-60;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneSmallerElement()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2140-2264;66-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsBigger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1332-1466;42-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsEqual()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1192-1325;38-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5453-5704;156-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_emptySource()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[662-906;23-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_onlyOneLineBreakCharacter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[338-655;15-21;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInLastLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3950-4172;115-119;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInSecondLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3030-3254;91-95;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInThirdLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3491-3714;103-107;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstLineBreak()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2806-3023;85-89;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_inFirstLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2585-2799;79-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInSecondLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3261-3484;97-101;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInThirdLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3721-3943;109-113;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_noLineBreaksScanned()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2393-2578;74-77;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_secondCharInLastLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4179-4402;121-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOutOfBounds()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4409-4636;127-133;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedListParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.ListFactory)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1494-1633;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1463-1558;28-31;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedListParser#listFactory">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedListParser.begin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1638-1702;34-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactory.newList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactory.java;[1329-1375;27-28;3-20];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedListParser.element(org.codehaus.jparsec.ParseContext,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1707-1805;38-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser#delim">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser.begin()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[2342-2373;60-62;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4990-5248;138-144;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3771-4063;105-112;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser.element(org.codehaus.jparsec.ParseContext,R)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[2378-2421;64-64;3-46];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">R</data>
    </node>
    <node id="org.codehaus.jparsec.DelimitedParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[2428-2491;66-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyListParser#singleton">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyListParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1627-1654;35-35;3-30];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyListParser.instance()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1523-1620;30-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyListParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1661-1764;37-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyListParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1771-1827;42-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1560-1671;34-37;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError#index">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError#encountered">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError.getIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1887-1937;51-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError.getEncountered()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1678-1743;39-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError.getFailureMessage()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1827-1882;47-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError.getUnexpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1942-1993;55-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseError.getExpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1748-1822;43-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseErrorTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EofParser(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1340-1389;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.EofParser#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.EofParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1394-1519;30-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.EofParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1526-1582;36-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ExpectParser(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1387-1439;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ExpectParser#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ExpectParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1444-1534;30-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ExpectParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1541-1597;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.FailureParser(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1369-1423;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.FailureParser#message">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.FailureParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1428-1517;30-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.fail(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6409-6484;200-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.FailureParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1524-1583;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.GetIndexParser()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.GetIndexParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/GetIndexParser.java;[1360-1465;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5255-5363;158-161;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.GetIndexParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/GetIndexParser.java;[1472-1534;29-31;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1470-1695;25-30;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser#cond">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser#consequence">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser#alternative">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.runWithoutRecordingError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[5253-5529;146-152;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IfElseParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[2088-2148;44-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$Punctuation()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$Punctuation#LF">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$1.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[2023-2112;43-45;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[2118-2186;46-48;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#INLINE_WHITESPACE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#LINE_CONTINUATION">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#INLINE_WHITESPACES">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#WHITESPACES">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8406-8768;203-212;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3754-3926;90-93;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation(java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3480-3747;81-88;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#indent">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation#outdent">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.index()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1831-1933;47-50;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.value()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1940-2018;52-55;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[6487-7218;168-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.length()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1742-1824;42-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.pseudoToken(int,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[7225-7326;195-197;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.indent()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3933-4071;95-98;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.token(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4975-5098;123-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4889-4956;117-119;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation$2.map(java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4770-4881;114-116;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10557-10828;268-276;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.retn(R)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4314-4494;98-101;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">R</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11267-11538;298-305;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18841-19714;508-524;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Indentation.outdent()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4078-4219;100-103;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18489-18962;495-505;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1925-2224;45-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1483-1735;31-40;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.analyze(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5644-5776;122-124;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5781-6312;126-143;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testAnalyzeIndentations()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3330-4612;77-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testIndent()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18118-18484;488-496;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testInlineWhitespace()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[1903-2217;41-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testInlineWhitespaces()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2650-3053;60-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testLexer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.optional()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8542-8786;231-237;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testLineContinuation()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2224-2643;50-58;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testOutdent()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IndentationTest.testWhitespaces()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3060-3323;70-75;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$1.compare(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1529-1582;31-31;5-58];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1588-1654;32-34;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders#LT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$2.compare(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1883-1934;44-44;5-56];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1940-2005;45-47;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders#GT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrders()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$1.map(java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2322-2390;58-60;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2396-2464;61-63;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors#FIRST_OF_TWO">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$2.map(java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2566-2632;68-70;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2638-2704;71-73;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors#LAST_OF_TWO">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$3.map(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2808-2884;78-80;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2890-2956;81-83;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors#LAST_OF_THREE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$4.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3059-3145;88-90;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3151-3217;91-93;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors#LAST_OF_FOUR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$5.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3320-3416;98-100;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3422-3488;101-103;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors#LAST_OF_FIVE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.lastOfFive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3955-4075;126-129;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.lastOfFour()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3834-3948;121-124;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.lastOfThree()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3717-3827;116-119;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.lastOfTwo()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3610-3710;111-114;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$8.map(F)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4366-4485;138-141;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">F</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4493-4563;142-144;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.fallback(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4080-4574;131-146;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.firstOfTwo()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3500-3603;106-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$6.map(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1669-1835;33-38;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$6.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1843-1907;39-41;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors.isTokenType(java.lang.Class,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1549-1918;31-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$7.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2132-2213;50-52;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctors$7.map(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2030-2124;47-49;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3265-3363;97-99;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map1">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNonNull()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2554-2724;73-77;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3166-3254;93-95;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testFirstOfTwo()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1304-1500;39-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testIsTokenType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[506-855;20-26;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenMap.java;[1381-1538;26-30;3-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2163-2407;63-67;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFour()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1928-2156;57-61;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testLastOfThree()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1706-1921;51-55;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testLastOfTwo()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1507-1699;45-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.InternalFunctorsTest.testTokenWithSameValue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[862-1297;28-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsCharScanner(java.lang.String,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1453-1563;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IsCharScanner#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IsCharScanner#predicate">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.peekChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5477-5582;166-167;3-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsCharScanner.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1873-1929;49-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsFragment()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IsFragment.isExpectedTag(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1704-1782;37-38;3-46];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsFragment.map(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1449-1697;27-35;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.tag()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3327-3418;101-104;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.text()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3222-3316;96-99;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsTokenParser(org.codehaus.jparsec.TokenMap)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1318-1401;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.IsTokenParser#fromToken">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.getToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5370-5470;163-164;3-28];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IsTokenParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1754-1826;41-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive$1.compare(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2681-2881;65-70;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive#COMPARATOR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive$2.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3222-3300;81-83;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive.toMap(java.util.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3042-3315;78-85;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive.toKey(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2970-3036;75-77;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseInsensitive.comparator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2894-2964;72-74;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive$1.compare(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2066-2256;45-50;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive#COMPARATOR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive.toMap(java.util.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2403-2525;58-60;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive.toKey(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2345-2397;55-57;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$CaseSensitive.comparator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2269-2339;52-54;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$StringCase.toMap(java.util.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1679-1761;37-37;5-87];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$StringCase.toKey(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1651-1673;36-36;5-27];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$StringCase.comparator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1614-1645;35-35;5-36];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords#CASE_SENSITIVE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords#CASE_INSENSITIVE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords$1.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[4257-4412;110-114;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords.getStringCase(boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3326-3455;88-90;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Keywords.unique(java.util.Comparator,java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3462-3673;92-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1652-1890;38-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[1739-1855;37-40;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.KeywordsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3179-3581;77-88;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.identifier(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1897-2138;48-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.KeywordsTest.testUnique()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[1501-1668;42-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.String#CASE_INSENSITIVE_ORDER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.LazyParser(java.util.concurrent.atomic.AtomicReference)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1548-1615;31-33;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.LazyParser#ref">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.LazyParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1622-1701;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.LazyParser.deref()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1706-1907;39-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[22056-22097;604-604;3-44];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.LazyParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1914-1972;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon#words">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.token(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2960-3174;72-75;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10834-11035;287-290;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.atomic()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9664-9817;265-268;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11125-11370;309-315;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.never()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3046-3180;74-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11859-12277;317-325;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[1862-2033;42-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.LexiconTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.LexiconTest.testWord()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories$1.newList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[2149-2217;51-53;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories#ARRAY_LIST_FACTORY">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories.arrayListFactory()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1423-1623;30-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories$2.newList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1889-2015;42-46;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1630-2026;36-48;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactoriesTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactory()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[241-715;14-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactoryWithFirstElement()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[722-989;24-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListParser(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1549-1623;32-34;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ListParser#parsers">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ListParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1918-1976;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.MapParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1404-1516;24-27;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.MapParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.MapParser#m">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.MapParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1705-1769;37-39;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1468-1662;29-33;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner#openQuote">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner#closeQuote">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner#commented">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NestableBlockCommentScanner.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[2673-2749;68-70;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1351-1459;22-25;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.NestedParser#lexer">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState(java.lang.String,java.lang.CharSequence,org.codehaus.jparsec.Token[],int,org.codehaus.jparsec.SourceLocator,int,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1760-1995;44-49;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#module">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#source">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#locator">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1805-1874;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1457-1566;27-30;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.NestedScanner#outer">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedScanner#inner">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,int,org.codehaus.jparsec.SourceLocator,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1522-2074;32-44;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.characters()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7909-8027;263-264;3-37];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NestedScanner.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1893-1961;40-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NeverParser()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.NeverParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NeverParser.java;[1269-1351;20-23;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.trap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6347-6402;196-198;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NeverParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NeverParser.java;[1358-1417;25-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.toDecDigit(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1441-1503;26-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.toHexDigit(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1579-1748;34-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.toOctDigit(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1510-1572;30-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeDecimalAsLong(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1753-1951;40-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeHexAsLong(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[2156-2422;58-66;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeOctalAsLong(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1956-2151;49-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2223-2395;49-53;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Operator#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Operator#precedence">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Operator#associativity">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Operator.compareTo(org.codehaus.jparsec.OperatorTable$Operator)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2406-2676;55-60;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14623-15125;409-419;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15130-15630;421-431;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[16190-16912;445-458;2-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[16917-17578;460-471;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.infixn(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15635-16186;433-443;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.cast()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11377-11634;317-324;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.slice(org.codehaus.jparsec.OperatorTable$Operator[],int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6219-6447;181-187;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3432-3826;89-100;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4232-4625;114-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3833-4228;102-113;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3058-3425;76-87;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2687-3051;63-74;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.operators()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4932-5045;138-141;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4633-4925;128-136;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15152-15594;407-417;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest.op(java.lang.String,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2494-2591;67-69;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest.parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.source()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[17947-18111;483-486;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#negate">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#percent">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#power">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#plus">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#subtract">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#multiply">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest#point">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableExpressionTest.testEmptyOperatorTable()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1937-2101;50-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest#OP">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest#UNARY_OP">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest#BINARY_OP">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.assertOrder(T,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[2049-2282;62-65;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T:java.lang.Comparable</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.assertSameOrder(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[2289-2439;67-69;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T:java.lang.Comparable</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1767-2042;53-60;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T:java.lang.Comparable</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.operator(int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[2446-2584;71-73;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.testGetOperators()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suite#list">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suite(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[3734-3795;80-82;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suite.add(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[3806-4154;84-95;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suites#list">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suites()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suites.toArray()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4813-5386;117-131;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$Suites.add(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4443-4802;105-115;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Operators$1.compare(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[2906-2989;59-61;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators#LONGER_STRING_FIRST">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Operators.sort(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[5397-5929;134-147;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorsTest.testLexicon()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OperatorsTest.testSort()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[183-600;13-20;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OrParser(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1316-1404;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.OrParser#alternatives">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.OrParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1804-1860;40-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#NONE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2514-2583;68-70;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#TRAP">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#UNEXPECTED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#EXPECTED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#FAILURE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#EXPECT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$ErrorType#mergeable">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7437-7624;247-250;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#currentErrorAt">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.suppressError(boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3071-3269;84-89;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#errorSuppressed">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.errorIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3276-3416;91-94;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#currentErrorIndex">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.toIndex(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5589-5701;169-170;3-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.getEncountered()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4743-4881;138-143;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.getInputName(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5096-5219;153-154;3-40];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#encountered">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.errors()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3543-3658;101-104;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.errorType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3421-3536;96-99;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#currentErrorType">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$1(int,java.lang.String)">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$1.getUnexpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4172-4260;117-119;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$2(int,java.lang.String)">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$2.getFailureMessage()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4362-4454;123-125;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$3(int,java.lang.String)">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext$3.getExpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4573-4658;130-132;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.renderError()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.next(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7367-7430;242-245;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.setEncountered(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4888-5089;145-151;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6776-6966;218-222;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext.unexpected(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6572-6650;208-210;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$Reference#lazy">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$Reference()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$Reference.lazy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[3981-4161;84-90;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10478-10778;291-298;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10785-11118;300-307;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4501-4751;103-109;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5665-5948;153-159;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.newReference()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4172-4307;93-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4758-5064;111-117;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[19721-20162;526-536;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.parse(java.lang.Readable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20620-20769;555-558;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.parse(java.lang.Readable,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20774-21195;560-571;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.copy(java.lang.Readable,java.lang.Appendable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21202-21520;573-582;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.atLeast(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6380-6671;163-169;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1418-1539;25-27;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11642-12087;326-335;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.endBy(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12970-13254;362-370;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.many()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5597-5800;135-141;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.endBy1(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13259-13545;372-380;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.many1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5982-6187;148-154;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10282-10471;286-289;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#FALSE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#TRUE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9326-9647;248-255;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.nested(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4698-5232;124-136;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tokens(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4239-4691;112-122;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18491-18834;498-506;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23166-23965;623-641;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18105-18289;485-488;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.token()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[17585-17940;473-481;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14173-14618;398-407;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.not()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9028-9185;246-249;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.not(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9192-9485;251-258;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.peek()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9492-9657;260-263;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.unexpected(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18294-18484;490-493;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.notFollowedBy(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5354-5590;127-133;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.optional(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8793-9021;239-244;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.or(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8245-8535;221-229;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12284-12524;327-333;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.PeekParser(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1300-1359;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#POSTFIX_OPERATOR_MAP2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#PREFIX_OPERATOR_MAP2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.sepBy(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12671-12965;353-360;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$1.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12448-12628;345-348;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1544-1715;29-33;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.step(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9824-10065;270-277;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13550-14168;382-396;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser$2.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13981-14156;391-394;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.skipAtLeast(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6678-6931;171-177;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1332-1427;22-25;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.skipMany()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5807-5975;143-146;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.skipMany1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6194-6372;156-161;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.skipTimes(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6938-7139;179-185;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.skipTimes(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7697-8002;204-211;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1355-1477;23-27;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ReturnSourceParser(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1415-1482;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.StepParser(org.codehaus.jparsec.Parser,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1324-1406;23-26;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.succeeds()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10072-10275;279-284;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.times(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7146-7348;187-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parser.times(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7355-7690;195-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1443-1576;26-28;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ToTokenParser(org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[238-300;11-13;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.SourceLocator.locate(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SourceLocator.java;[1395-1503;27-28;3-29];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7886-8488;190-204;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.longer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16023-16340;431-438;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.shorter(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17059-17379;458-465;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest$1.map(java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7006-7398;171-180;11-11];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9101-9935;217-231;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5953-6187;161-164;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6192-6458;166-170;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[222-454;14-20;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectMerged()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2974-3303;80-87;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectedMerged()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3310-3467;89-93;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3364-3525;85-88;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstFailureWins()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2828-2967;75-78;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNeverWins()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2560-2663;66-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNotWins()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2670-2821;70-73;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testOuterExpectWins()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5486-5623;142-144;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2769-3032;74-81;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2034-2204;49-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2504-2764;65-72;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.IntOrder.compare(int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrder.java;[1311-1466;24-31;3-32];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserReferenceTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserReferenceTest.testLazy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[311-674;15-24;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserReferenceTest.testUninitializedLazy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[681-886;26-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState#input">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState#endIndex">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.isEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1515-1576;31-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.peekChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2002-2106;51-53;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.toIndex(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1583-1695;35-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.characters()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2113-2227;55-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.getInputName(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2232-2350;59-62;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2025-2161;57-60;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParseContext#EOF">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserState.getToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1700-1753;40-42;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.assertList(java.lang.Object,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21967-22088;569-571;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21795-21960;564-567;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.skipTimes_range()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[132-215;10-12;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testAtomic()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testBetween()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11883-11988;301-303;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testCast()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11680-11876;295-299;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testCopy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21570-21788;557-562;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testEmptyListParser_toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16567-16677;424-426;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testEndBy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testEndBy1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testFails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10876-11078;270-274;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testFollowedBy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testFrom()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$CharLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#ANY_TOKEN">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$IntegerLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testIfElse()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testIfElse_withNext()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#next">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixl()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixl_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixn()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixr_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testLabel()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testLexer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral#DEC_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testMany()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testMany1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testMap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#map">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testMap_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNext()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNext_withMap()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNot()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testNotFollowedBy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testOptional()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testOr()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testParse()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testPeek()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testPostfix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest#unaryOp">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testPrefix()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testRetn()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSepBy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSepBy1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSepEndBy()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSepEndBy1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSkipMany()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSkipMany1()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSkipTimes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSource()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18967-19397;507-517;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testStep()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testStep_negativeStep()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10446-10647;255-262;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testSucceeds()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10654-10869;264-268;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testTimes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testTimes_range()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParserTest.testToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$Rhs(org.codehaus.jparsec.functors.Map2,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25597-25700;697-700;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$Rhs#op">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$Rhs#rhs">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$Rhs.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25711-25781;702-704;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.eof(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3185-3359;80-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$1.map(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2291-2356;48-50;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2364-2435;51-53;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#INDEX">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#ALWAYS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#NEVER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.prefixOperatorMap2(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23970-24376;643-653;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.postfixOperatorMap2(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24841-25249;672-682;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#INFIXR_OPERATOR_MAP2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.toInfixRhs()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25889-26278;710-719;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#APPLY_INFIXR_OPERATORS">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.applyInfixrOperators()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26394-26983;724-741;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers#MAP_OPERATOR_AND_RHS_TO_CLOSURE">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.fromOperatorAndRhsToClosure()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27107-27648;746-762;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27655-27674;764-764;3-22];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10403-10827;277-285;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8124-8526;214-222;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10010-10398;267-275;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7752-8119;204-212;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9652-10005;257-265;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7421-7747;195-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27549-27637;758-760;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10$1.map(A)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27358-27421;750-752;11-11];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">A</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27433-27522;753-755;11-11];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$10.map(org.codehaus.jparsec.functors.Map2,B)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27257-27541;748-757;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">B</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1441-1587;25-29;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.pair(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6768-7103;179-185;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7108-7416;187-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.applyInfixOperators(T,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24381-24583;655-661;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.applyPostfixOperators(T,java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25254-25458;684-690;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.applyPrefixOperators(T,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24588-24836;663-670;3-3];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,org.codehaus.jparsec.SourceLocator)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1355-1515;27-30;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9059-9321;240-246;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$3.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5467-5564;143-146;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5572-5649;147-149;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23057-23125;616-618;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5$1.map(java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22841-22941;608-610;11-11];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22953-23029;611-613;11-11];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$5.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22724-23049;606-615;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21770-21838;582-584;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4$1.map(org.codehaus.jparsec.functors.Map2,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21469-21584;573-575;15-15];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21600-21697;576-578;15-15];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$4.map(T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19402-19821;519-529;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.longest(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16751-17054;450-456;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15601-15822;419-424;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15829-16018;426-429;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12531-12806;335-342;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12813-13122;344-352;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13129-13467;354-362;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13474-13840;364-372;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13847-14247;374-383;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14254-14682;385-394;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14689-15145;396-405;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1317-1406;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11545-11852;307-315;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6463-6763;172-177;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.shortest(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17792-18098;477-483;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.UnexpectedParser(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1301-1357;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.toArray(java.util.Collection)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20110-20285;540-543;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.toArrayWithIteration(java.lang.Iterable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19826-20105;531-538;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$9()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$9.map(T,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26519-26896;726-736;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$9.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26904-26972;737-739;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$7.map(T,java.util.List)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25045-25166;675-677;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$7.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25174-25238;678-680;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$6.map(java.util.List,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24173-24293;646-648;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$6.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24301-24365;649-651;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26179-26267;715-717;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$8.map(org.codehaus.jparsec.functors.Map2,T)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26062-26171;712-714;7-7];</data>
      <data key="type">METHOD</data>
      <data key="formaltype">T</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers.runnable(java.lang.Runnable)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4018-4234;104-110;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SequenceParser(org.codehaus.jparsec.Parser[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1309-1377;21-23;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4602-4679;118-120;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Parsers$2.map(java.util.Collection)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4490-4594;115-117;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testAlways()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[789-856;27-29;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testAnyToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testArray()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6357-6658;182-188;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testBetween()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[999-1129;36-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testConstant()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1386-1570;48-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1136-1379;40-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testExpect()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17076-17232;452-455;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testFail()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7012-7154;199-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21386-21529;571-574;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testList()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6665-7005;190-197;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testLonger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14162-14579;386-392;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testLongest()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testLongest_0Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15181-15271;406-408;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testLongest_1Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15278-15442;410-414;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testNever()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[863-992;31-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_0Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8166-8246;232-234;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_10Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[13325-14155;365-384;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_1Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8253-8407;236-240;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_3Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9364-9713;263-270;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_4Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9720-10139;272-281;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_5Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10146-10647;283-295;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_6Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10654-11217;297-310;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_7Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11224-11850;312-326;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_8Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11857-12553;328-344;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_9Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[12560-13318;346-363;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testOr_withIterable()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testPair()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testPlus_0Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7161-7245;204-206;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testPlus_1Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7252-7410;208-212;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testRunnable()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.Runnable#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3461-3815;103-111;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_0Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4181-4348;123-127;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_1Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4355-4543;129-133;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_2Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1829-2122;61-67;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_3Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2129-2495;69-77;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_4Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2502-2936;79-88;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_5Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2943-3454;90-101;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withIterable()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3822-4174;113-121;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest#map2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest#map3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest#map4">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest#map5">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testShorter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testShortest()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testShortest_0Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16020-16112;426-428;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testShortest_1Parser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16119-16285;430-434;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testToArray()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21536-21858;576-584;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testToArrayWithIteration()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21865-22213;586-594;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest#fromToken">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testTokenType()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testToken_fails()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ParsersTest.testUnexpected()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17239-17409;457-460;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.PatternScanner(java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1438-1537;29-32;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.PatternScanner#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.PatternScanner#pattern">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.PatternScanner.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1875-1931;47-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.PeekParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.PeekParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1550-1608;33-35;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser#min">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser#listFactory">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatAtLeastParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[2023-2084;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser#min">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser#max">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser#listFactory">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.RepeatTimesParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[2113-2172;49-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ReturnSourceParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ReturnSourceParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1726-1786;39-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState#end">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.isEof()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2148-2200;50-52;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.peekChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2081-2141;46-48;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.toIndex(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2207-2258;54-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.characters()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2398-2457;63-65;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.getInputName(int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2265-2391;58-61;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannerState.getToken()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2462-2559;67-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#JAVA_LINE_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13015-13354;343-350;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SQL_LINE_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#HASKELL_LINE_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#JAVA_BLOCK_COMMENTED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#JAVA_BLOCK_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SQL_BLOCK_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#HASKELL_BLOCK_COMMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_STRING">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#DOUBLE_QUOTE_STRING">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_CHAR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#JAVA_DELIMITER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#HASKELL_DELIMITER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SQL_DELIMITER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#DEC_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#OCT_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#HEX_INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners#SCIENTIFIC_NOTATION">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[18142-18162;482-482;3-23];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.among(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11884-12239;311-319;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9447-9761;234-243;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.among(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11482-11877;299-309;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9768-10172;245-255;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14255-14737;376-387;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.isChar(char,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10179-10550;257-266;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6453-6780;140-148;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7114-7477;160-169;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6787-7107;150-158;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7484-7849;171-180;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14744-15150;389-399;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15157-15672;401-413;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15679-16173;415-427;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.nestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17024-17399;451-459;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12660-13008;333-341;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.notChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11214-11475;289-297;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.notAmong(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12246-12653;321-331;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.notChar(char,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10835-11207;278-287;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.quoted(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16587-17017;439-449;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.quotedBy(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[18015-18135;478-480;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.string(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8073-8399;192-201;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9172-9442;225-232;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8775-9165;214-223;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners$1.match(java.lang.CharSequence,int,int)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17730-17997;469-474;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Scanners.notChar2(char,char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17406-18008;461-476;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testAmong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6380-6707;181-188;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testAmong_noChars()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6714-6942;190-194;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testAnyChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5450-5835;154-163;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12339-12755;346-354;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_emptyQuotes()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12762-12941;356-360;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withEmptyQuotedPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13330-13623;372-378;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPatternThatMismatches()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13630-13931;380-386;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testDecInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1248-1457;42-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testDecimal()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1002-1241;34-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testDoubleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8884-9288;255-264;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testHaskellBlockComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11911-12332;336-344;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testHaskellDelimiter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10711-11062;306-314;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testHaskellLineComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8739-8877;250-253;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testHexInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1759-2055;56-62;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testIdentifier()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[516-783;19-25;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[790-995;27-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testIsChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testJavaBlockComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11069-11484;316-324;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testJavaDelimiter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10009-10354;286-294;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testJavaLineComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8463-8595;240-243;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testLineComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8027-8456;228-238;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany1_withCharPredicate()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2800-3116;82-87;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany1_withPatternThatConsumesNoInput()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4013-4207;113-117;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany_withCharPredicate()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2594-2793;76-80;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany_withPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3123-3422;89-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testMany_withPatternThatConsumesNoInput()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3429-3621;98-102;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14984-15434;415-424;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="java.lang.IllegalStateException#class">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_quotedConsumesNoChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17399-17628;469-472;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15441-15890;426-434;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNestedScanner()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNotAmong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNotAmong_noChars()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7531-7774;213-218;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNotAmong_oneChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7781-8020;220-226;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testNotChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testOctInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1464-1752;48-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testPattern()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testQuoted()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testQuoted_byChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18181-18359;486-490;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testScientificNotation()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2062-2587;64-74;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testSingleQuoteChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9575-10002;274-284;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testSingleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9295-9568;266-272;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testSqlBlockComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11491-11904;326-334;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testSqlDelimiter()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10361-10704;296-304;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testSqlLineComment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8602-8732;245-248;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testStringCaseInsensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5122-5443;145-152;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ScannersTest.testWhitespaces()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4521-4814;128-135;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser#p1">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser#p2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser#m2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence2Parser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1875-1940;42-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser#p1">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser#p2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser#p3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser#m3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence3Parser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[2061-2126;48-50;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser#p1">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser#p2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser#p3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser#p4">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser#m4">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence4Parser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[2241-2306;53-55;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#p1">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#p2">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#p3">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#p4">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#p5">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser#m5">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Sequence5Parser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[2421-2486;58-60;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SequenceParser#parsers">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SequenceParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1382-1524;25-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SequenceParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1531-1593;32-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipAtLeastParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipAtLeastParser#min">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipAtLeastParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1667-1732;36-38;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser#min">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser#max">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SkipTimesParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1736-1799;38-40;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.StepParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.StepParser#n">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.StepParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1575-1644;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.StringLiteralsTranslator()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.StringLiteralsTranslator.escapedChar(char)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StringLiteralsTranslator.java;[1356-1573;25-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.StringLiteralsTranslator.tokenizeDoubleQuote(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StringLiteralsTranslator.java;[1580-1969;38-52;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.StringLiteralsTranslator.tokenizeSingleQuote(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StringLiteralsTranslator.java;[1974-2317;54-68;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SumParser#alternatives">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.SumParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1771-1829;39-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$CharLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2119-2142;44-44;5-28];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$DecimalLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13729-13973;312-318;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$DecimalLiteral#TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$DecimalLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[6072-6098;143-143;5-31];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$Identifier#TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$Identifier()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[7417-7439;178-178;5-27];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$IntegerLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[5390-5416;125-125;5-31];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral#OCT_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral#HEX_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral#TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$LongLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[3794-3817;84-84;5-28];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$ScientificNumberLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$ScientificNumberLiteral#TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$ScientificNumberLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[6750-6785;161-161;5-40];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$StringLiteral#PARSER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$StringLiteral#DOUBLE_QUOTE_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$StringLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$StringLiteral()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2774-2799;61-61;5-30];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals#RESERVED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8166-8250;198-200;3-3];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.equals(java.lang.String,java.lang.String,boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14945-15087;346-348;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseInsensitive(java.lang.String[],java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8254-9094;201-215;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9942-10735;233-247;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[11536-12435;265-281;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[10742-11529;249-263;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[12442-13336;283-299;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[15094-15326;350-356;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals.operators(java.lang.String[])">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13343-13722;301-310;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$1.isExpectedTag(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14224-14316;326-328;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Terminals$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14324-14523;329-333;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.assertDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12923-13132;273-278;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testCheckDup()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12511-12916;265-271;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1033-1806;34-43;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.decimalLiteral(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2145-2394;58-66;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testDoubleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[597-816;24-27;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testEquals()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12220-12504;257-263;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testFromFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6579-7185;151-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1338-1645;27-36;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testIdentifierTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4937-5467;107-114;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Tag#INTEGER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testLongLiteralDecTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2876-3220;64-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testLongLiteralHexTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3227-3794;71-80;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testLongLiteralOctTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3994-4476;89-96;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testLongLiteralTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4483-4930;98-105;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testPhrase()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testScientificNumberLiteralTokenizer()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2346-2869;53-62;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.scientificNotation(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2657-2942;78-84;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testSingleQuoteChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[397-590;19-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testSingleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[823-1026;29-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TerminalsTest.testTokenizeHexAsLong_throwsIfStringIsTooShort()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3801-3987;82-87;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TestParsers()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.ToTokenParser#parser">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.ToTokenParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[584-653;26-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token#ind">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Token#len">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Token#value">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2420-2547;73-75;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2271-2413;66-71;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Token.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2168-2264;62-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest.testEquals()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[656-1020;31-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest.testIndex()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[311-391;18-20;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest.testLength()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[222-304;14-16;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest.testToString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[494-649;26-29;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenTest.testValue()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[398-487;22-24;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#RESERVED_FRAGMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5930-6360;147-160;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#INTEGER_FRAGMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#DECIMAL_FRAGMENT">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$1()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$1.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[2964-3049;58-60;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$1.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[2484-2954;48-57;9-9];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#SCIENTIFIC_NOTATION">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$2()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$2.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3368-3470;69-71;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$2.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3476-3553;72-74;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#DOUBLE_QUOTE_STRING">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$3()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$3.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3906-4014;83-85;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$3.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4020-4097;86-88;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_STRING">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$4()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$4.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4421-4638;97-102;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$4.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4644-4719;103-105;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_CHAR">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$5()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$5.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4943-5045;113-115;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$5.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5051-5120;116-118;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#DEC_AS_LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$6()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$6.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5342-5442;126-128;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$6.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5448-5517;129-131;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#OCT_AS_LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$7()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$7.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5745-5843;139-141;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$7.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5849-5918;142-144;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps#HEX_AS_LONG">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$8()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$8.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[6270-6349;156-158;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMaps$8.map(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[6178-6262;153-155;7-7];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2980-3222;85-90;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testDecAsLong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1285-1464;46-49;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testDecimalFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[756-859;32-34;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Tag#DECIMAL">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testDoubleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1843-2057;61-64;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[318-407;16-18;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testHexAsLong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1656-1836;56-59;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testIdentifierFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[527-639;24-26;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Tag#IDENTIFIER">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testIntegerFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[646-749;28-30;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testOctAsLong()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1471-1649;51-54;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testReservedFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[414-520;20-22;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Tag#RESERVED">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testScientificNotation()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2273-2975;71-83;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation(java.lang.String,java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4347-4470;138-141;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteChar()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[866-1278;36-44;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2064-2266;66-69;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment(java.lang.String,java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3118-3211;91-94;5-5];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment#text">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment#tag">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.equalFragment(org.codehaus.jparsec.Tokens$Fragment)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3429-3533;106-108;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3544-3710;110-115;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3717-3807;117-119;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Fragment.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3818-3878;121-123;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation#significand">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation#exponent">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation.equals(java.lang.Object)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4576-4848;147-153;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation.hashCode()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4859-4961;155-157;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$ScientificNotation.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4481-4565;143-145;5-5];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens$Tag()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1313-1331;25-25;3-21];</data>
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.Tokens.integerLiteral(java.lang.String)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2401-2650;68-76;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest()">
      <data key="type">CONSTRUCTOR</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1649-1805;53-56;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testDecimal()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[976-1076;35-37;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testFragment()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testInteger()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1083-1183;39-41;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testReserved()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[768-864;27-29;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testScientificNumber()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.TokensTest.testWord()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[871-969;31-33;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.UnexpectedParser#name">
      <data key="type">FIELD</data>
    </node>
    <node id="org.codehaus.jparsec.UnexpectedParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1362-1460;25-28;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <node id="org.codehaus.jparsec.UnexpectedParser.toString()">
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1467-1523;30-32;3-3];</data>
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="org.codehaus.jparsec.easymock.BaseMockTest.mock(java.lang.Class)" target="org.codehaus.jparsec.easymock.BaseMockTest#control">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3426-3550;96-99;3-3];</data>
    </edge>
    <edge id="e2" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e3" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="org.codehaus.jparsec.easymock.BaseMockTest#mockFields">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3/2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e4" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="junit.framework.TestCase#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e5" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="org.codehaus.jparsec.easymock.BaseMockTest#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e6" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e7" source="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)" target="org.codehaus.jparsec.easymock.BaseMockTest$Mock#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[2137-2921;51-73;3-3];</data>
    </edge>
    <edge id="e8" source="org.codehaus.jparsec.easymock.BaseMockTest.replay()" target="org.codehaus.jparsec.easymock.BaseMockTest#control">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3555-3632;101-104;3-3];</data>
    </edge>
    <edge id="e9" source="org.codehaus.jparsec.easymock.BaseMockTest#replayed" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3555-3632;101-104;3-3];</data>
    </edge>
    <edge id="e10" source="org.codehaus.jparsec.easymock.BaseMockTest.runBare()" target="org.codehaus.jparsec.easymock.BaseMockTest.getMockFields(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
    </edge>
    <edge id="e11" source="org.codehaus.jparsec.easymock.BaseMockTest.runBare()" target="org.codehaus.jparsec.easymock.BaseMockTest.mock(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
    </edge>
    <edge id="e12" source="org.codehaus.jparsec.easymock.BaseMockTest#replayed" target="org.codehaus.jparsec.easymock.BaseMockTest.runBare()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
    </edge>
    <edge id="e13" source="org.codehaus.jparsec.easymock.BaseMockTest#verified" target="org.codehaus.jparsec.easymock.BaseMockTest.runBare()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
    </edge>
    <edge id="e14" source="org.codehaus.jparsec.easymock.BaseMockTest#control" target="org.codehaus.jparsec.easymock.BaseMockTest.runBare()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3020-3282;79-87;3-3];</data>
    </edge>
    <edge id="e15" source="org.codehaus.jparsec.easymock.BaseMockTest.runTest()" target="org.codehaus.jparsec.easymock.BaseMockTest.verify()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3289-3421;89-94;3-3];</data>
    </edge>
    <edge id="e16" source="org.codehaus.jparsec.easymock.BaseMockTest.runTest()" target="org.codehaus.jparsec.easymock.BaseMockTest#replayed">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3289-3421;89-94;3-3];</data>
    </edge>
    <edge id="e17" source="org.codehaus.jparsec.easymock.BaseMockTest.runTest()" target="org.codehaus.jparsec.easymock.BaseMockTest#verified">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3289-3421;89-94;3-3];</data>
    </edge>
    <edge id="e18" source="org.codehaus.jparsec.easymock.BaseMockTest#verified" target="org.codehaus.jparsec.easymock.BaseMockTest.verify()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3639-3716;106-109;3-3];</data>
    </edge>
    <edge id="e19" source="org.codehaus.jparsec.easymock.BaseMockTest.verify()" target="org.codehaus.jparsec.easymock.BaseMockTest#control">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/easymock/BaseMockTest.java;[3639-3716;106-109;3-3];</data>
    </edge>
    <edge id="e20" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParseErrorDetails.getFailureMessage()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3/1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e21" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParseErrorDetails.getExpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3/1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e22" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ErrorReporter.reportList(java.lang.StringBuilder,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e23" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParseErrorDetails.getEncountered()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e24" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParseErrorDetails.getUnexpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3/1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e25" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e26" source="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ErrorReporter.java;[1444-2211;30-50;3-3];</data>
    </edge>
    <edge id="e27" source="org.codehaus.jparsec.error.ErrorReporterTest()" target="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e28" source="org.codehaus.jparsec.error.ErrorReporterTest.reportList(java.lang.String[])" target="org.codehaus.jparsec.error.ErrorReporter.reportList(java.lang.StringBuilder,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1974-2173;59-63;3-3];</data>
    </edge>
    <edge id="e29" source="org.codehaus.jparsec.error.ErrorReporterTest.testReportList()" target="org.codehaus.jparsec.error.ErrorReporterTest.reportList(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1584-1967;50-57;3-3/1584-1967;50-57;3-3/1584-1967;50-57;3-3/1584-1967;50-57;3-3/1584-1967;50-57;3-3/1584-1967;50-57;3-3];</data>
    </edge>
    <edge id="e30" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getFailureMessage()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e31" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getExpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e32" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getEncountered()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e33" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e34" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e35" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e36" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_expected()" target="org.codehaus.jparsec.error.ErrorReporterTest#error">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[795-1195;32-39;3-3/795-1195;32-39;3-3/795-1195;32-39;3-3/795-1195;32-39;3-3];</data>
    </edge>
    <edge id="e37" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()" target="org.codehaus.jparsec.error.ParseErrorDetails.getFailureMessage()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3];</data>
    </edge>
    <edge id="e38" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3];</data>
    </edge>
    <edge id="e39" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3];</data>
    </edge>
    <edge id="e40" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3];</data>
    </edge>
    <edge id="e41" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_failure()" target="org.codehaus.jparsec.error.ErrorReporterTest#error">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[562-788;26-30;3-3/562-788;26-30;3-3];</data>
    </edge>
    <edge id="e42" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_null()" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[325-419;18-20;3-3];</data>
    </edge>
    <edge id="e43" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_nullError()" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[426-555;22-24;3-3];</data>
    </edge>
    <edge id="e44" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_nullError()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[426-555;22-24;3-3];</data>
    </edge>
    <edge id="e45" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getFailureMessage()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e46" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getExpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e47" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.ParseErrorDetails.getUnexpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e48" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e49" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e50" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e51" source="org.codehaus.jparsec.error.ErrorReporterTest.testToString_unexpected()" target="org.codehaus.jparsec.error.ErrorReporterTest#error">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/ErrorReporterTest.java;[1202-1577;41-48;3-3/1202-1577;41-48;3-3/1202-1577;41-48;3-3/1202-1577;41-48;3-3];</data>
    </edge>
    <edge id="e52" source="org.codehaus.jparsec.error.Location#line" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1486-1698;31-40;3-3];</data>
    </edge>
    <edge id="e53" source="org.codehaus.jparsec.error.Location#column" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1486-1698;31-40;3-3];</data>
    </edge>
    <edge id="e54" source="org.codehaus.jparsec.error.Location.equals(java.lang.Object)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1705-1910;42-48;3-3/1705-1910;42-48;3-3];</data>
    </edge>
    <edge id="e55" source="org.codehaus.jparsec.error.Location.equals(java.lang.Object)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1705-1910;42-48;3-3/1705-1910;42-48;3-3];</data>
    </edge>
    <edge id="e56" source="org.codehaus.jparsec.error.Location.hashCode()" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1915-1982;50-52;3-3];</data>
    </edge>
    <edge id="e57" source="org.codehaus.jparsec.error.Location.hashCode()" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1915-1982;50-52;3-3];</data>
    </edge>
    <edge id="e58" source="org.codehaus.jparsec.error.Location.toString()" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1987-2073;54-56;3-3];</data>
    </edge>
    <edge id="e59" source="org.codehaus.jparsec.error.Location.toString()" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/Location.java;[1987-2073;54-56;3-3];</data>
    </edge>
    <edge id="e60" source="org.codehaus.jparsec.error.LocationTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1527-1719;34-37;3-3];</data>
    </edge>
    <edge id="e61" source="org.codehaus.jparsec.error.LocationTest.testEquals()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1527-1719;34-37;3-3/1527-1719;34-37;3-3/1527-1719;34-37;3-3/1527-1719;34-37;3-3/1527-1719;34-37;3-3];</data>
    </edge>
    <edge id="e62" source="org.codehaus.jparsec.error.LocationTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1527-1719;34-37;3-3];</data>
    </edge>
    <edge id="e63" source="org.codehaus.jparsec.error.LocationTest.testToString()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1421-1520;30-32;3-3];</data>
    </edge>
    <edge id="e64" source="org.codehaus.jparsec.error.LocationTest.testToString()" target="org.codehaus.jparsec.error.Location.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/error/LocationTest.java;[1421-1520;30-32;3-3];</data>
    </edge>
    <edge id="e65" source="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParserException.toErrorMessage(java.lang.String,java.lang.String,org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2058-2619;44-58;3-3];</data>
    </edge>
    <edge id="e66" source="org.codehaus.jparsec.error.ParserException#error" target="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2058-2619;44-58;3-3];</data>
    </edge>
    <edge id="e67" source="org.codehaus.jparsec.error.ParserException#location" target="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2058-2619;44-58;3-3];</data>
    </edge>
    <edge id="e68" source="org.codehaus.jparsec.error.ParserException#module" target="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2058-2619;44-58;3-3];</data>
    </edge>
    <edge id="e69" source="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ParserException.toErrorMessage(java.lang.String,java.lang.String,org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[1580-2053;30-42;3-3];</data>
    </edge>
    <edge id="e70" source="org.codehaus.jparsec.error.ParserException#error" target="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[1580-2053;30-42;3-3];</data>
    </edge>
    <edge id="e71" source="org.codehaus.jparsec.error.ParserException#module" target="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[1580-2053;30-42;3-3];</data>
    </edge>
    <edge id="e72" source="org.codehaus.jparsec.error.ParserException#location" target="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[1580-2053;30-42;3-3];</data>
    </edge>
    <edge id="e73" source="org.codehaus.jparsec.error.ParserException.getModuleName()" target="org.codehaus.jparsec.error.ParserException#module">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[3220-3332;78-81;3-3];</data>
    </edge>
    <edge id="e74" source="org.codehaus.jparsec.error.ParserException.toErrorMessage(java.lang.String,java.lang.String,org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)" target="org.codehaus.jparsec.error.ErrorReporter.toString(org.codehaus.jparsec.error.ParseErrorDetails,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2777-3213;65-76;3-3];</data>
    </edge>
    <edge id="e75" source="org.codehaus.jparsec.error.ParserException.getLocation()" target="org.codehaus.jparsec.error.ParserException#location">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[3339-3438;83-86;3-3];</data>
    </edge>
    <edge id="e76" source="org.codehaus.jparsec.error.ParserException.getErrorDetails()" target="org.codehaus.jparsec.error.ParserException#error">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/error/ParserException.java;[2624-2770;60-63;3-3];</data>
    </edge>
    <edge id="e77" source="org.codehaus.jparsec.functors.Maps#TO_INTEGER" target="org.codehaus.jparsec.functors.Maps$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1391-1750;27-38;3-4];</data>
    </edge>
    <edge id="e78" source="org.codehaus.jparsec.functors.Maps#TO_LOWER_CASE" target="org.codehaus.jparsec.functors.Maps.toLowerCase(java.util.Locale)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1755-1914;40-41;3-69];</data>
    </edge>
    <edge id="e79" source="org.codehaus.jparsec.functors.Maps#TO_UPPER_CASE" target="org.codehaus.jparsec.functors.Maps.toUpperCase(java.util.Locale)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2289-2448;55-56;3-69];</data>
    </edge>
    <edge id="e80" source="org.codehaus.jparsec.functors.Maps$2.map(java.lang.Object,java.lang.Object)" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4420-4494;124-126;5-5];</data>
    </edge>
    <edge id="e81" source="org.codehaus.jparsec.functors.Maps#ID2" target="org.codehaus.jparsec.functors.Maps$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4338-4567;122-130;3-4];</data>
    </edge>
    <edge id="e82" source="org.codehaus.jparsec.functors.Maps$3.map(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4656-4746;134-136;5-5];</data>
    </edge>
    <edge id="e83" source="org.codehaus.jparsec.functors.Maps#ID3" target="org.codehaus.jparsec.functors.Maps$3()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4574-4820;132-140;3-4];</data>
    </edge>
    <edge id="e84" source="org.codehaus.jparsec.functors.Maps$4.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4909-5012;144-146;5-5];</data>
    </edge>
    <edge id="e85" source="org.codehaus.jparsec.functors.Maps#ID4" target="org.codehaus.jparsec.functors.Maps$4()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4827-5086;142-150;3-4];</data>
    </edge>
    <edge id="e86" source="org.codehaus.jparsec.functors.Maps$5.map(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5179-5295;154-156;5-5];</data>
    </edge>
    <edge id="e87" source="org.codehaus.jparsec.functors.Maps#ID5" target="org.codehaus.jparsec.functors.Maps$5()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5097-5369;152-160;3-4];</data>
    </edge>
    <edge id="e88" source="org.codehaus.jparsec.functors.Maps#ID" target="org.codehaus.jparsec.functors.Maps$6()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6206-6387;186-191;3-4];</data>
    </edge>
    <edge id="e89" source="org.codehaus.jparsec.functors.Maps#TO_STRING" target="org.codehaus.jparsec.functors.Maps$7()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[6394-6643;193-201;3-4];</data>
    </edge>
    <edge id="e90" source="org.codehaus.jparsec.functors.Maps.toTuple5()" target="org.codehaus.jparsec.functors.Maps#ID5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5984-6199;180-184;3-3];</data>
    </edge>
    <edge id="e91" source="org.codehaus.jparsec.functors.Maps.toTuple4()" target="org.codehaus.jparsec.functors.Maps#ID4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5771-5977;174-178;3-3];</data>
    </edge>
    <edge id="e92" source="org.codehaus.jparsec.functors.Maps.toTuple3()" target="org.codehaus.jparsec.functors.Maps#ID3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5567-5764;168-172;3-3];</data>
    </edge>
    <edge id="e93" source="org.codehaus.jparsec.functors.Maps.toPair()" target="org.codehaus.jparsec.functors.Maps#ID2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[5376-5560;162-166;3-3];</data>
    </edge>
    <edge id="e94" source="org.codehaus.jparsec.functors.Maps.toEnum(java.lang.Class)" target="org.codehaus.jparsec.functors.Maps$10()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3076-3554;79-92;3-3];</data>
    </edge>
    <edge id="e95" source="org.codehaus.jparsec.functors.Maps.constant(T)" target="org.codehaus.jparsec.functors.Maps$11()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3733-4025;100-108;3-3];</data>
    </edge>
    <edge id="e96" source="org.codehaus.jparsec.functors.Maps.map(java.util.Map)" target="org.codehaus.jparsec.functors.Maps$12()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[4032-4331;110-120;3-3];</data>
    </edge>
    <edge id="e97" source="org.codehaus.jparsec.functors.Maps.mapToString()" target="org.codehaus.jparsec.functors.Maps#TO_STRING">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2825-3069;70-77;3-3];</data>
    </edge>
    <edge id="e98" source="org.codehaus.jparsec.functors.Maps.identity()" target="org.codehaus.jparsec.functors.Maps#ID">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[3561-3726;94-98;3-3];</data>
    </edge>
    <edge id="e99" source="org.codehaus.jparsec.functors.Maps.toLowerCase(java.util.Locale)" target="org.codehaus.jparsec.functors.Maps$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[1919-2284;43-53;3-3];</data>
    </edge>
    <edge id="e100" source="org.codehaus.jparsec.functors.Maps.toUpperCase(java.util.Locale)" target="org.codehaus.jparsec.functors.Maps$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Maps.java;[2453-2818;58-68;3-3];</data>
    </edge>
    <edge id="e101" source="org.codehaus.jparsec.functors.MapsTest$MyEnum#FOO" target="org.codehaus.jparsec.functors.MapsTest$MyEnum()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[716-718;30-30;5-7];</data>
    </edge>
    <edge id="e102" source="org.codehaus.jparsec.functors.MapsTest$MyEnum#BAR" target="org.codehaus.jparsec.functors.MapsTest$MyEnum()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[721-723;30-30;10-12];</data>
    </edge>
    <edge id="e103" source="org.codehaus.jparsec.functors.MapsTest.testConstant()" target="org.codehaus.jparsec.functors.Maps.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1115-1300;44-48;3-3/1115-1300;44-48;3-3];</data>
    </edge>
    <edge id="e104" source="org.codehaus.jparsec.functors.MapsTest.testConstant()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1115-1300;44-48;3-3];</data>
    </edge>
    <edge id="e105" source="org.codehaus.jparsec.functors.MapsTest.testIdentity()" target="org.codehaus.jparsec.functors.Maps.identity()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[926-1108;38-42;3-3/926-1108;38-42;3-3];</data>
    </edge>
    <edge id="e106" source="org.codehaus.jparsec.functors.MapsTest.testIdentity()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[926-1108;38-42;3-3];</data>
    </edge>
    <edge id="e107" source="org.codehaus.jparsec.functors.MapsTest.testJmap()" target="org.codehaus.jparsec.functors.Maps.map(java.util.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1307-1616;50-57;3-3];</data>
    </edge>
    <edge id="e108" source="org.codehaus.jparsec.functors.MapsTest.testJmap()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1307-1616;50-57;3-3/1307-1616;50-57;3-3];</data>
    </edge>
    <edge id="e109" source="org.codehaus.jparsec.functors.MapsTest.testMapToString()" target="org.codehaus.jparsec.functors.Maps.mapToString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1623-1847;59-63;3-3/1623-1847;59-63;3-3/1623-1847;59-63;3-3];</data>
    </edge>
    <edge id="e110" source="org.codehaus.jparsec.functors.MapsTest.testMapToString()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1623-1847;59-63;3-3/1623-1847;59-63;3-3];</data>
    </edge>
    <edge id="e111" source="org.codehaus.jparsec.functors.MapsTest.testToEnum()" target="org.codehaus.jparsec.functors.Maps.toEnum(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[734-919;33-36;3-3/734-919;33-36;3-3];</data>
    </edge>
    <edge id="e112" source="org.codehaus.jparsec.functors.MapsTest.testToEnum()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[734-919;33-36;3-3];</data>
    </edge>
    <edge id="e113" source="org.codehaus.jparsec.functors.MapsTest.testToEnum()" target="org.codehaus.jparsec.functors.MapsTest$MyEnum#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[734-919;33-36;3-3];</data>
    </edge>
    <edge id="e114" source="org.codehaus.jparsec.functors.MapsTest.testToEnum()" target="org.codehaus.jparsec.functors.MapsTest$MyEnum#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[734-919;33-36;3-3/734-919;33-36;3-3/734-919;33-36;3-3];</data>
    </edge>
    <edge id="e115" source="org.codehaus.jparsec.functors.MapsTest.testToInteger()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[208-361;14-17;3-3];</data>
    </edge>
    <edge id="e116" source="org.codehaus.jparsec.functors.MapsTest.testToInteger()" target="org.codehaus.jparsec.functors.Maps#TO_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[208-361;14-17;3-3/208-361;14-17;3-3];</data>
    </edge>
    <edge id="e117" source="org.codehaus.jparsec.functors.MapsTest.testToLowerCase()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[368-522;19-22;3-3];</data>
    </edge>
    <edge id="e118" source="org.codehaus.jparsec.functors.MapsTest.testToLowerCase()" target="org.codehaus.jparsec.functors.Maps#TO_LOWER_CASE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[368-522;19-22;3-3/368-522;19-22;3-3];</data>
    </edge>
    <edge id="e119" source="org.codehaus.jparsec.functors.MapsTest.testToPair()" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1854-2005;65-68;3-3];</data>
    </edge>
    <edge id="e120" source="org.codehaus.jparsec.functors.MapsTest.testToPair()" target="org.codehaus.jparsec.functors.Maps.toPair()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1854-2005;65-68;3-3/1854-2005;65-68;3-3];</data>
    </edge>
    <edge id="e121" source="org.codehaus.jparsec.functors.MapsTest.testToPair()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[1854-2005;65-68;3-3];</data>
    </edge>
    <edge id="e122" source="org.codehaus.jparsec.functors.MapsTest.testToTuple3()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2012-2175;70-73;3-3];</data>
    </edge>
    <edge id="e123" source="org.codehaus.jparsec.functors.MapsTest.testToTuple3()" target="org.codehaus.jparsec.functors.Maps.toTuple3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2012-2175;70-73;3-3/2012-2175;70-73;3-3];</data>
    </edge>
    <edge id="e124" source="org.codehaus.jparsec.functors.MapsTest.testToTuple3()" target="org.codehaus.jparsec.functors.Map3.map(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2012-2175;70-73;3-3];</data>
    </edge>
    <edge id="e125" source="org.codehaus.jparsec.functors.MapsTest.testToTuple4()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2182-2353;75-78;3-3];</data>
    </edge>
    <edge id="e126" source="org.codehaus.jparsec.functors.MapsTest.testToTuple4()" target="org.codehaus.jparsec.functors.Maps.toTuple4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2182-2353;75-78;3-3/2182-2353;75-78;3-3];</data>
    </edge>
    <edge id="e127" source="org.codehaus.jparsec.functors.MapsTest.testToTuple4()" target="org.codehaus.jparsec.functors.Map4.map(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2182-2353;75-78;3-3];</data>
    </edge>
    <edge id="e128" source="org.codehaus.jparsec.functors.MapsTest.testToTuple5()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2360-2539;80-83;3-3];</data>
    </edge>
    <edge id="e129" source="org.codehaus.jparsec.functors.MapsTest.testToTuple5()" target="org.codehaus.jparsec.functors.Maps.toTuple5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2360-2539;80-83;3-3/2360-2539;80-83;3-3];</data>
    </edge>
    <edge id="e130" source="org.codehaus.jparsec.functors.MapsTest.testToTuple5()" target="org.codehaus.jparsec.functors.Map5.map(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[2360-2539;80-83;3-3];</data>
    </edge>
    <edge id="e131" source="org.codehaus.jparsec.functors.MapsTest.testToUpperCase()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[529-683;24-27;3-3];</data>
    </edge>
    <edge id="e132" source="org.codehaus.jparsec.functors.MapsTest.testToUpperCase()" target="org.codehaus.jparsec.functors.Maps#TO_UPPER_CASE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/MapsTest.java;[529-683;24-27;3-3/529-683;24-27;3-3];</data>
    </edge>
    <edge id="e133" source="org.codehaus.jparsec.functors.Pair#a" target="org.codehaus.jparsec.functors.Pair(A,B)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1410-1468;30-33;3-3];</data>
    </edge>
    <edge id="e134" source="org.codehaus.jparsec.functors.Pair#b" target="org.codehaus.jparsec.functors.Pair(A,B)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1410-1468;30-33;3-3];</data>
    </edge>
    <edge id="e135" source="org.codehaus.jparsec.functors.Pair.equals(java.lang.Object)" target="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1588-1736;39-44;3-3];</data>
    </edge>
    <edge id="e136" source="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1475-1581;35-37;3-3/1475-1581;35-37;3-3];</data>
    </edge>
    <edge id="e137" source="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1475-1581;35-37;3-3/1475-1581;35-37;3-3];</data>
    </edge>
    <edge id="e138" source="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1475-1581;35-37;3-3/1475-1581;35-37;3-3];</data>
    </edge>
    <edge id="e139" source="org.codehaus.jparsec.functors.Pair.hashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1743-1838;46-48;3-3/1743-1838;46-48;3-3];</data>
    </edge>
    <edge id="e140" source="org.codehaus.jparsec.functors.Pair.hashCode()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1743-1838;46-48;3-3];</data>
    </edge>
    <edge id="e141" source="org.codehaus.jparsec.functors.Pair.hashCode()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1743-1838;46-48;3-3];</data>
    </edge>
    <edge id="e142" source="org.codehaus.jparsec.functors.Pair.toString()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1845-1921;50-52;3-3];</data>
    </edge>
    <edge id="e143" source="org.codehaus.jparsec.functors.Pair.toString()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Pair.java;[1845-1921;50-52;3-3];</data>
    </edge>
    <edge id="e144" source="org.codehaus.jparsec.functors.Tuple3(A,B,C)" target="org.codehaus.jparsec.functors.Pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1416-1482;29-32;3-3];</data>
    </edge>
    <edge id="e145" source="org.codehaus.jparsec.functors.Tuple3#c" target="org.codehaus.jparsec.functors.Tuple3(A,B,C)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1416-1482;29-32;3-3];</data>
    </edge>
    <edge id="e146" source="org.codehaus.jparsec.functors.Tuple3.equals(java.lang.Object)" target="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1600-1758;38-43;3-3];</data>
    </edge>
    <edge id="e147" source="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)" target="org.codehaus.jparsec.functors.Pair.equals(org.codehaus.jparsec.functors.Pair)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1489-1593;34-36;3-3];</data>
    </edge>
    <edge id="e148" source="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1489-1593;34-36;3-3];</data>
    </edge>
    <edge id="e149" source="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1489-1593;34-36;3-3/1489-1593;34-36;3-3];</data>
    </edge>
    <edge id="e150" source="org.codehaus.jparsec.functors.Tuple3.hashCode()" target="org.codehaus.jparsec.functors.Pair.hashCode()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1765-1857;45-47;3-3];</data>
    </edge>
    <edge id="e151" source="org.codehaus.jparsec.functors.Tuple3.hashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1765-1857;45-47;3-3];</data>
    </edge>
    <edge id="e152" source="org.codehaus.jparsec.functors.Tuple3.hashCode()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1765-1857;45-47;3-3];</data>
    </edge>
    <edge id="e153" source="org.codehaus.jparsec.functors.Tuple3.toString()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1864-1951;49-51;3-3];</data>
    </edge>
    <edge id="e154" source="org.codehaus.jparsec.functors.Tuple3.toString()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1864-1951;49-51;3-3];</data>
    </edge>
    <edge id="e155" source="org.codehaus.jparsec.functors.Tuple3.toString()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple3.java;[1864-1951;49-51;3-3];</data>
    </edge>
    <edge id="e156" source="org.codehaus.jparsec.functors.Tuple4(A,B,C,D)" target="org.codehaus.jparsec.functors.Tuple3(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1424-1498;29-32;3-3];</data>
    </edge>
    <edge id="e157" source="org.codehaus.jparsec.functors.Tuple4#d" target="org.codehaus.jparsec.functors.Tuple4(A,B,C,D)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1424-1498;29-32;3-3];</data>
    </edge>
    <edge id="e158" source="org.codehaus.jparsec.functors.Tuple4.equals(java.lang.Object)" target="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1619-1783;38-43;3-3];</data>
    </edge>
    <edge id="e159" source="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)" target="org.codehaus.jparsec.functors.Tuple3.equals(org.codehaus.jparsec.functors.Tuple3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1505-1612;34-36;3-3];</data>
    </edge>
    <edge id="e160" source="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1505-1612;34-36;3-3];</data>
    </edge>
    <edge id="e161" source="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1505-1612;34-36;3-3/1505-1612;34-36;3-3];</data>
    </edge>
    <edge id="e162" source="org.codehaus.jparsec.functors.Tuple4.hashCode()" target="org.codehaus.jparsec.functors.Tuple3.hashCode()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1790-1882;45-47;3-3];</data>
    </edge>
    <edge id="e163" source="org.codehaus.jparsec.functors.Tuple4.hashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1790-1882;45-47;3-3];</data>
    </edge>
    <edge id="e164" source="org.codehaus.jparsec.functors.Tuple4.hashCode()" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1790-1882;45-47;3-3];</data>
    </edge>
    <edge id="e165" source="org.codehaus.jparsec.functors.Tuple4.toString()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1889-1987;49-51;3-3];</data>
    </edge>
    <edge id="e166" source="org.codehaus.jparsec.functors.Tuple4.toString()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1889-1987;49-51;3-3];</data>
    </edge>
    <edge id="e167" source="org.codehaus.jparsec.functors.Tuple4.toString()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1889-1987;49-51;3-3];</data>
    </edge>
    <edge id="e168" source="org.codehaus.jparsec.functors.Tuple4.toString()" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple4.java;[1889-1987;49-51;3-3];</data>
    </edge>
    <edge id="e169" source="org.codehaus.jparsec.functors.Tuple5(A,B,C,D,E)" target="org.codehaus.jparsec.functors.Tuple4(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1429-1511;29-32;3-3];</data>
    </edge>
    <edge id="e170" source="org.codehaus.jparsec.functors.Tuple5#e" target="org.codehaus.jparsec.functors.Tuple5(A,B,C,D,E)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1429-1511;29-32;3-3];</data>
    </edge>
    <edge id="e171" source="org.codehaus.jparsec.functors.Tuple5.equals(java.lang.Object)" target="org.codehaus.jparsec.functors.Tuple5.equals(org.codehaus.jparsec.functors.Tuple5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1635-1807;38-44;3-3];</data>
    </edge>
    <edge id="e172" source="org.codehaus.jparsec.functors.Tuple5.equals(org.codehaus.jparsec.functors.Tuple5)" target="org.codehaus.jparsec.functors.Tuple4.equals(org.codehaus.jparsec.functors.Tuple4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1518-1628;34-36;3-3];</data>
    </edge>
    <edge id="e173" source="org.codehaus.jparsec.functors.Tuple5.equals(org.codehaus.jparsec.functors.Tuple5)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1518-1628;34-36;3-3];</data>
    </edge>
    <edge id="e174" source="org.codehaus.jparsec.functors.Tuple5.equals(org.codehaus.jparsec.functors.Tuple5)" target="org.codehaus.jparsec.functors.Tuple5#e">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1518-1628;34-36;3-3/1518-1628;34-36;3-3];</data>
    </edge>
    <edge id="e175" source="org.codehaus.jparsec.functors.Tuple5.hashCode()" target="org.codehaus.jparsec.functors.Tuple4.hashCode()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1814-1908;46-49;3-3];</data>
    </edge>
    <edge id="e176" source="org.codehaus.jparsec.functors.Tuple5.hashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1814-1908;46-49;3-3];</data>
    </edge>
    <edge id="e177" source="org.codehaus.jparsec.functors.Tuple5.hashCode()" target="org.codehaus.jparsec.functors.Tuple5#e">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1814-1908;46-49;3-3];</data>
    </edge>
    <edge id="e178" source="org.codehaus.jparsec.functors.Tuple5.toString()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
    </edge>
    <edge id="e179" source="org.codehaus.jparsec.functors.Tuple5.toString()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
    </edge>
    <edge id="e180" source="org.codehaus.jparsec.functors.Tuple5.toString()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
    </edge>
    <edge id="e181" source="org.codehaus.jparsec.functors.Tuple5.toString()" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
    </edge>
    <edge id="e182" source="org.codehaus.jparsec.functors.Tuple5.toString()" target="org.codehaus.jparsec.functors.Tuple5#e">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuple5.java;[1915-2026;51-54;3-3];</data>
    </edge>
    <edge id="e183" source="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)" target="org.codehaus.jparsec.functors.Tuple5(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[2170-2358;48-51;3-3];</data>
    </edge>
    <edge id="e184" source="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)" target="org.codehaus.jparsec.functors.Tuple4(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1992-2163;43-46;3-3];</data>
    </edge>
    <edge id="e185" source="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)" target="org.codehaus.jparsec.functors.Tuple3(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1831-1985;38-41;3-3];</data>
    </edge>
    <edge id="e186" source="org.codehaus.jparsec.functors.Tuples.pair(A,B)" target="org.codehaus.jparsec.functors.Pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1469-1648;28-31;3-3];</data>
    </edge>
    <edge id="e187" source="org.codehaus.jparsec.functors.Tuples.tuple(A,B)" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/functors/Tuples.java;[1655-1824;33-36;3-3];</data>
    </edge>
    <edge id="e188" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3/233-593;14-21;3-3/233-593;14-21;3-3/233-593;14-21;3-3];</data>
    </edge>
    <edge id="e189" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.functors.Pair.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
    </edge>
    <edge id="e190" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
    </edge>
    <edge id="e191" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
    </edge>
    <edge id="e192" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
    </edge>
    <edge id="e193" source="org.codehaus.jparsec.functors.TuplesTest.testPair()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[233-593;14-21;3-3];</data>
    </edge>
    <edge id="e194" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e195" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.functors.Pair.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e196" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e197" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3/600-963;23-30;3-3/600-963;23-30;3-3];</data>
    </edge>
    <edge id="e198" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e199" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e200" source="org.codehaus.jparsec.functors.TuplesTest.testTuple2()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[600-963;23-30;3-3];</data>
    </edge>
    <edge id="e201" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3/970-1438;32-41;3-3/970-1438;32-41;3-3/970-1438;32-41;3-3/970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e202" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.functors.Tuple3.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e203" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e204" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e205" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e206" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e207" source="org.codehaus.jparsec.functors.TuplesTest.testTuple3()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[970-1438;32-41;3-3];</data>
    </edge>
    <edge id="e208" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3/1445-2025;43-54;3-3/1445-2025;43-54;3-3/1445-2025;43-54;3-3/1445-2025;43-54;3-3/1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e209" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Tuple4.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e210" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e211" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e212" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e213" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e214" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e215" source="org.codehaus.jparsec.functors.TuplesTest.testTuple4()" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[1445-2025;43-54;3-3];</data>
    </edge>
    <edge id="e216" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3/2032-2733;56-69;3-3/2032-2733;56-69;3-3/2032-2733;56-69;3-3/2032-2733;56-69;3-3/2032-2733;56-69;3-3/2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e217" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Tuple5.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e218" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e219" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e220" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Pair#a">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e221" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Pair#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e222" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Tuple3#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e223" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Tuple4#d">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e224" source="org.codehaus.jparsec.functors.TuplesTest.testTuple5()" target="org.codehaus.jparsec.functors.Tuple5#e">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/functors/TuplesTest.java;[2032-2733;56-69;3-3];</data>
    </edge>
    <edge id="e225" source="org.codehaus.jparsec.misc.Curry(java.lang.Object,org.codehaus.jparsec.misc.Invokable,java.lang.Object[],int[])" target="org.codehaus.jparsec.misc.Mapper(java.lang.Object,org.codehaus.jparsec.misc.Invokable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2185-2386;59-64;3-3];</data>
    </edge>
    <edge id="e226" source="org.codehaus.jparsec.misc.Curry#curryArgs" target="org.codehaus.jparsec.misc.Curry(java.lang.Object,org.codehaus.jparsec.misc.Invokable,java.lang.Object[],int[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2185-2386;59-64;3-3];</data>
    </edge>
    <edge id="e227" source="org.codehaus.jparsec.misc.Curry#curryIndexes" target="org.codehaus.jparsec.misc.Curry(java.lang.Object,org.codehaus.jparsec.misc.Invokable,java.lang.Object[],int[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2185-2386;59-64;3-3];</data>
    </edge>
    <edge id="e228" source="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3/2393-3721;66-92;3-3/2393-3721;66-92;3-3];</data>
    </edge>
    <edge id="e229" source="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry.findCurryIndex(java.lang.reflect.Constructor,java.lang.Class[],int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3];</data>
    </edge>
    <edge id="e230" source="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry.checkDup(int[],int,int,java.lang.Object,java.lang.reflect.Constructor)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3];</data>
    </edge>
    <edge id="e231" source="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry(java.lang.Object,org.codehaus.jparsec.misc.Invokable,java.lang.Object[],int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3];</data>
    </edge>
    <edge id="e232" source="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[2393-3721;66-92;3-3/2393-3721;66-92;3-3/2393-3721;66-92;3-3];</data>
    </edge>
    <edge id="e233" source="org.codehaus.jparsec.misc.Curry.equals(java.lang.Object)" target="org.codehaus.jparsec.misc.Curry.valueList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4255-4543;109-118;3-3/4255-4543;109-118;3-3];</data>
    </edge>
    <edge id="e234" source="org.codehaus.jparsec.misc.Curry.expectedParams()" target="org.codehaus.jparsec.misc.Mapper.expectedParams()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6561-6650;178-180;3-3];</data>
    </edge>
    <edge id="e235" source="org.codehaus.jparsec.misc.Curry.expectedParams()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6561-6650;178-180;3-3];</data>
    </edge>
    <edge id="e236" source="org.codehaus.jparsec.misc.Curry.expectedParams()" target="org.codehaus.jparsec.misc.Curry#curryArgs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6561-6650;178-180;3-3];</data>
    </edge>
    <edge id="e237" source="org.codehaus.jparsec.misc.Curry.find(int[],int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[6377-6554;169-176;3-3];</data>
    </edge>
    <edge id="e238" source="org.codehaus.jparsec.misc.Curry.findCurryIndex(java.lang.reflect.Constructor,java.lang.Class[],int,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.isInstance(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5098-5546;136-144;3-3];</data>
    </edge>
    <edge id="e239" source="org.codehaus.jparsec.misc.Curry.findCurryIndex(java.lang.reflect.Constructor,java.lang.Class[],int,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.getClassName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5098-5546;136-144;3-3];</data>
    </edge>
    <edge id="e240" source="org.codehaus.jparsec.misc.Curry.findCurryIndex(java.lang.reflect.Constructor,java.lang.Class[],int,java.lang.Object)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5098-5546;136-144;3-3];</data>
    </edge>
    <edge id="e241" source="org.codehaus.jparsec.misc.Curry.hashCode()" target="org.codehaus.jparsec.misc.Curry.valueList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4053-4248;101-107;3-3];</data>
    </edge>
    <edge id="e242" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry.expectedParams()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3/5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e243" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Invokable.parameterTypes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e244" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry.find(int[],int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e245" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e246" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Invokable.invoke(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e247" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3/5553-6370;146-167;3-3/5553-6370;146-167;3-3/5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e248" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3/5553-6370;146-167;3-3/5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e249" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry#curryIndexes">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e250" source="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry#curryArgs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[5553-6370;146-167;3-3];</data>
    </edge>
    <edge id="e251" source="org.codehaus.jparsec.misc.Curry.valueList()" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4550-4645;120-122;3-3];</data>
    </edge>
    <edge id="e252" source="org.codehaus.jparsec.misc.Curry.valueList()" target="org.codehaus.jparsec.misc.Curry#curryArgs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[4550-4645;120-122;3-3];</data>
    </edge>
    <edge id="e253" source="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Invokable.parameterTypes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3];</data>
    </edge>
    <edge id="e254" source="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(int,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3];</data>
    </edge>
    <edge id="e255" source="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3/3729-4046;95-99;3-3];</data>
    </edge>
    <edge id="e256" source="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Curry#curryArgs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3];</data>
    </edge>
    <edge id="e257" source="org.codehaus.jparsec.misc.Curry.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Curry.java;[3729-4046;95-99;3-3];</data>
    </edge>
    <edge id="e258" source="org.codehaus.jparsec.misc.CurryTest$Bar#name" target="org.codehaus.jparsec.misc.CurryTest$Bar(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[848-936;36-39;5-5];</data>
    </edge>
    <edge id="e259" source="org.codehaus.jparsec.misc.CurryTest$Bar#size" target="org.codehaus.jparsec.misc.CurryTest$Bar(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[848-936;36-39;5-5];</data>
    </edge>
    <edge id="e260" source="org.codehaus.jparsec.misc.CurryTest$Baz#b" target="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
    </edge>
    <edge id="e261" source="org.codehaus.jparsec.misc.CurryTest$Baz#s" target="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
    </edge>
    <edge id="e262" source="org.codehaus.jparsec.misc.CurryTest$Baz#i" target="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
    </edge>
    <edge id="e263" source="org.codehaus.jparsec.misc.CurryTest$Baz#l" target="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
    </edge>
    <edge id="e264" source="org.codehaus.jparsec.misc.CurryTest$Baz#c" target="org.codehaus.jparsec.misc.CurryTest$Baz(byte,short,int,long,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1070-1217;49-55;5-5];</data>
    </edge>
    <edge id="e265" source="org.codehaus.jparsec.misc.CurryTest$Foo#name" target="org.codehaus.jparsec.misc.CurryTest$Foo(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[672-760;26-29;5-5];</data>
    </edge>
    <edge id="e266" source="org.codehaus.jparsec.misc.CurryTest$Foo#size" target="org.codehaus.jparsec.misc.CurryTest$Foo(java.lang.String,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[672-760;26-29;5-5];</data>
    </edge>
    <edge id="e267" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr#left" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2995-3122;133-137;5-5];</data>
    </edge>
    <edge id="e268" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr#op" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2995-3122;133-137;5-5];</data>
    </edge>
    <edge id="e269" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr#right" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2995-3122;133-137;5-5];</data>
    </edge>
    <edge id="e270" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#left" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3268-3430;146-151;5-5];</data>
    </edge>
    <edge id="e271" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#op" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3268-3430;146-151;5-5];</data>
    </edge>
    <edge id="e272" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#size" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3268-3430;146-151;5-5];</data>
    </edge>
    <edge id="e273" source="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#right" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3268-3430;146-151;5-5];</data>
    </edge>
    <edge id="e274" source="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#expr" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2527-2618;110-113;5-5];</data>
    </edge>
    <edge id="e275" source="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#op" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr(org.codehaus.jparsec.misc.CurryTest$Expr,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2527-2618;110-113;5-5];</data>
    </edge>
    <edge id="e276" source="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#expr" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,int,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2744-2870;121-125;5-5];</data>
    </edge>
    <edge id="e277" source="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#size" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,int,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2744-2870;121-125;5-5];</data>
    </edge>
    <edge id="e278" source="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#op" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2(org.codehaus.jparsec.misc.CurryTest$Expr,int,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2744-2870;121-125;5-5];</data>
    </edge>
    <edge id="e279" source="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#op" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr(java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2082-2172;88-91;5-5];</data>
    </edge>
    <edge id="e280" source="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#expr" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr(java.lang.String,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2082-2172;88-91;5-5];</data>
    </edge>
    <edge id="e281" source="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#op" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2(java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2297-2422;99-103;5-5];</data>
    </edge>
    <edge id="e282" source="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#size" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2(java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2297-2422;99-103;5-5];</data>
    </edge>
    <edge id="e283" source="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#expr" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2(java.lang.String,int,org.codehaus.jparsec.misc.CurryTest$Expr)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[2297-2422;99-103;5-5];</data>
    </edge>
    <edge id="e284" source="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR" target="org.codehaus.jparsec.misc.CurryTest$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1931-1982;82-82;3-54];</data>
    </edge>
    <edge id="e285" source="org.codehaus.jparsec.misc.CurryTest.testAbstractClass()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8409-8652;307-314;3-3];</data>
    </edge>
    <edge id="e286" source="org.codehaus.jparsec.misc.CurryTest.testAbstractClass()" target="org.codehaus.jparsec.misc.CurryTest$AbstractBar#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8409-8652;307-314;3-3/8409-8652;307-314;3-3];</data>
    </edge>
    <edge id="e287" source="org.codehaus.jparsec.misc.CurryTest.testAmbiguousConstructor()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9162-9456;335-343;3-3];</data>
    </edge>
    <edge id="e288" source="org.codehaus.jparsec.misc.CurryTest.testAmbiguousConstructor()" target="org.codehaus.jparsec.misc.CurryTest$AmbiguousConstructor#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9162-9456;335-343;3-3/9162-9456;335-343;3-3];</data>
    </edge>
    <edge id="e289" source="org.codehaus.jparsec.misc.CurryTest.testAmbiguousCurryArg()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10204-10416;375-382;3-3];</data>
    </edge>
    <edge id="e290" source="org.codehaus.jparsec.misc.CurryTest.testAmbiguousCurryArg()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10204-10416;375-382;3-3];</data>
    </edge>
    <edge id="e291" source="org.codehaus.jparsec.misc.CurryTest.testAsBinary_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10859-11046;401-407;3-3];</data>
    </edge>
    <edge id="e292" source="org.codehaus.jparsec.misc.CurryTest.testAsBinary_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.asBinary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10859-11046;401-407;3-3];</data>
    </edge>
    <edge id="e293" source="org.codehaus.jparsec.misc.CurryTest.testAsBinary_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10859-11046;401-407;3-3];</data>
    </edge>
    <edge id="e294" source="org.codehaus.jparsec.misc.CurryTest.testAsUnary_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10670-10852;393-399;3-3];</data>
    </edge>
    <edge id="e295" source="org.codehaus.jparsec.misc.CurryTest.testAsUnary_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.asUnary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10670-10852;393-399;3-3];</data>
    </edge>
    <edge id="e296" source="org.codehaus.jparsec.misc.CurryTest.testAsUnary_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10670-10852;393-399;3-3];</data>
    </edge>
    <edge id="e297" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e298" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.misc.Mapper.binary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e299" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e300" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e301" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e302" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e303" source="org.codehaus.jparsec.misc.CurryTest.testBinary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1688-1901;73-78;3-3];</data>
    </edge>
    <edge id="e304" source="org.codehaus.jparsec.misc.CurryTest.testCurryArgTypeMismatch()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9983-10197;366-373;3-3];</data>
    </edge>
    <edge id="e305" source="org.codehaus.jparsec.misc.CurryTest.testCurryArgTypeMismatch()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9983-10197;366-373;3-3];</data>
    </edge>
    <edge id="e306" source="org.codehaus.jparsec.misc.CurryTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3/8017-8329;296-301;3-3];</data>
    </edge>
    <edge id="e307" source="org.codehaus.jparsec.misc.CurryTest.testEquals()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3];</data>
    </edge>
    <edge id="e308" source="org.codehaus.jparsec.misc.CurryTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3];</data>
    </edge>
    <edge id="e309" source="org.codehaus.jparsec.misc.CurryTest.testEquals()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3/8017-8329;296-301;3-3];</data>
    </edge>
    <edge id="e310" source="org.codehaus.jparsec.misc.CurryTest.testEquals()" target="org.codehaus.jparsec.misc.CurryTest$Bar#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8017-8329;296-301;3-3];</data>
    </edge>
    <edge id="e311" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e312" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e313" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e314" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e315" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e316" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e317" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e318" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e319" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e320" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#left">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e321" source="org.codehaus.jparsec.misc.CurryTest.testInfix()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#right">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5252-5592;204-213;3-3];</data>
    </edge>
    <edge id="e322" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e323" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e324" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e325" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3/5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e326" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e327" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e328" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e329" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e330" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e331" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e332" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#left">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e333" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr2#right">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5992-6389;226-236;3-3];</data>
    </edge>
    <edge id="e334" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12999-13395;464-473;3-3];</data>
    </edge>
    <edge id="e335" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12999-13395;464-473;3-3];</data>
    </edge>
    <edge id="e336" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12999-13395;464-473;3-3/12999-13395;464-473;3-3];</data>
    </edge>
    <edge id="e337" source="org.codehaus.jparsec.misc.CurryTest.testInfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12999-13395;464-473;3-3];</data>
    </edge>
    <edge id="e338" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e339" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e340" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e341" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e342" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e343" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e344" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e345" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e346" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e347" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e348" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e349" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#left">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e350" source="org.codehaus.jparsec.misc.CurryTest.testInfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$InfixExpr#right">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[5599-5985;215-224;3-3];</data>
    </edge>
    <edge id="e351" source="org.codehaus.jparsec.misc.CurryTest.testInfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12625-12992;453-462;3-3];</data>
    </edge>
    <edge id="e352" source="org.codehaus.jparsec.misc.CurryTest.testInfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12625-12992;453-462;3-3];</data>
    </edge>
    <edge id="e353" source="org.codehaus.jparsec.misc.CurryTest.testInfix_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12625-12992;453-462;3-3];</data>
    </edge>
    <edge id="e354" source="org.codehaus.jparsec.misc.CurryTest.testInfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12625-12992;453-462;3-3];</data>
    </edge>
    <edge id="e355" source="org.codehaus.jparsec.misc.CurryTest.testInvoke_wrongParameterNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[13402-13706;475-482;3-3];</data>
    </edge>
    <edge id="e356" source="org.codehaus.jparsec.misc.CurryTest.testInvoke_wrongParameterNumber()" target="org.codehaus.jparsec.misc.Curry.invoke(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[13402-13706;475-482;3-3];</data>
    </edge>
    <edge id="e357" source="org.codehaus.jparsec.misc.CurryTest.testInvoke_wrongParameterNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[13402-13706;475-482;3-3];</data>
    </edge>
    <edge id="e358" source="org.codehaus.jparsec.misc.CurryTest.testName()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7916-8010;292-294;3-3];</data>
    </edge>
    <edge id="e359" source="org.codehaus.jparsec.misc.CurryTest.testName()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7916-8010;292-294;3-3];</data>
    </edge>
    <edge id="e360" source="org.codehaus.jparsec.misc.CurryTest.testName()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7916-8010;292-294;3-3/7916-8010;292-294;3-3];</data>
    </edge>
    <edge id="e361" source="org.codehaus.jparsec.misc.CurryTest.testNoPublicConstructor()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8732-9023;320-328;3-3];</data>
    </edge>
    <edge id="e362" source="org.codehaus.jparsec.misc.CurryTest.testNoPublicConstructor()" target="org.codehaus.jparsec.misc.CurryTest$NoPublicConstructor#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[8732-9023;320-328;3-3/8732-9023;320-328;3-3];</data>
    </edge>
    <edge id="e363" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e364" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e365" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e366" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e367" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e368" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e369" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3/4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e370" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e371" source="org.codehaus.jparsec.misc.CurryTest.testPostfix()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4334-4598;179-185;3-3];</data>
    </edge>
    <edge id="e372" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e373" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e374" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3/4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e375" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e376" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e377" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e378" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3/4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e379" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e380" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e381" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr2#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4922-5245;195-202;3-3];</data>
    </edge>
    <edge id="e382" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12218-12618;442-451;3-3];</data>
    </edge>
    <edge id="e383" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12218-12618;442-451;3-3];</data>
    </edge>
    <edge id="e384" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12218-12618;442-451;3-3/12218-12618;442-451;3-3];</data>
    </edge>
    <edge id="e385" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[12218-12618;442-451;3-3];</data>
    </edge>
    <edge id="e386" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e387" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e388" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e389" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e390" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e391" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e392" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e393" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e394" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3/4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e395" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e396" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PostfixExpr#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4605-4915;187-193;3-3];</data>
    </edge>
    <edge id="e397" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11837-12211;431-440;3-3];</data>
    </edge>
    <edge id="e398" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11837-12211;431-440;3-3];</data>
    </edge>
    <edge id="e399" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11837-12211;431-440;3-3];</data>
    </edge>
    <edge id="e400" source="org.codehaus.jparsec.misc.CurryTest.testPostfix_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11837-12211;431-440;3-3];</data>
    </edge>
    <edge id="e401" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e402" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e403" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e404" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e405" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e406" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e407" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3/3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e408" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e409" source="org.codehaus.jparsec.misc.CurryTest.testPrefix()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3441-3697;154-160;3-3];</data>
    </edge>
    <edge id="e410" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e411" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e412" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3/4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e413" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e414" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e415" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e416" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3/4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e417" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e418" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e419" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr2#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[4013-4327;170-177;3-3];</data>
    </edge>
    <edge id="e420" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11432-11830;420-429;3-3];</data>
    </edge>
    <edge id="e421" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11432-11830;420-429;3-3];</data>
    </edge>
    <edge id="e422" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11432-11830;420-429;3-3/11432-11830;420-429;3-3];</data>
    </edge>
    <edge id="e423" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_multiOp_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11432-11830;420-429;3-3];</data>
    </edge>
    <edge id="e424" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e425" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e426" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e427" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e428" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e429" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e430" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e431" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e432" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest#FAKE_EXPR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3/3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e433" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e434" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_onlyOneUnskippedOperator()" target="org.codehaus.jparsec.misc.CurryTest$PrefixExpr#expr">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[3704-4006;162-168;3-3];</data>
    </edge>
    <edge id="e435" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11053-11425;409-418;3-3];</data>
    </edge>
    <edge id="e436" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_wrongParamNumber()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11053-11425;409-418;3-3];</data>
    </edge>
    <edge id="e437" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_wrongParamNumber()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11053-11425;409-418;3-3];</data>
    </edge>
    <edge id="e438" source="org.codehaus.jparsec.misc.CurryTest.testPrefix_wrongParamNumber()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[11053-11425;409-418;3-3];</data>
    </edge>
    <edge id="e439" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e440" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e441" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3/1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e442" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e443" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e444" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.misc.CurryTest$Foo#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e445" source="org.codehaus.jparsec.misc.CurryTest.testSequence()" target="org.codehaus.jparsec.misc.CurryTest$Foo#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1228-1466;58-64;3-3];</data>
    </edge>
    <edge id="e446" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
    </edge>
    <edge id="e447" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
    </edge>
    <edge id="e448" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
    </edge>
    <edge id="e449" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
    </edge>
    <edge id="e450" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesCheckedException()" target="org.codehaus.jparsec.misc.CurryTest$ThrowCheckedException#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7465-7800;277-286;3-3];</data>
    </edge>
    <edge id="e451" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
    </edge>
    <edge id="e452" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
    </edge>
    <edge id="e453" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
    </edge>
    <edge id="e454" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
    </edge>
    <edge id="e455" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesError()" target="org.codehaus.jparsec.misc.CurryTest$ThrowError#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6524-6795;244-252;3-3];</data>
    </edge>
    <edge id="e456" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
    </edge>
    <edge id="e457" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
    </edge>
    <edge id="e458" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
    </edge>
    <edge id="e459" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
    </edge>
    <edge id="e460" source="org.codehaus.jparsec.misc.CurryTest.testSequence_propagatesUncheckedException()" target="org.codehaus.jparsec.misc.CurryTest$ThrowUncheckedException#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[6966-7296;260-269;3-3];</data>
    </edge>
    <edge id="e461" source="org.codehaus.jparsec.misc.CurryTest.testToString()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7807-7909;288-290;3-3];</data>
    </edge>
    <edge id="e462" source="org.codehaus.jparsec.misc.CurryTest.testToString()" target="org.codehaus.jparsec.misc.Mapper.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7807-7909;288-290;3-3];</data>
    </edge>
    <edge id="e463" source="org.codehaus.jparsec.misc.CurryTest.testToString()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[7807-7909;288-290;3-3/7807-7909;288-290;3-3];</data>
    </edge>
    <edge id="e464" source="org.codehaus.jparsec.misc.CurryTest.testTooManyCurryArgs()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9829-9976;359-364;3-3];</data>
    </edge>
    <edge id="e465" source="org.codehaus.jparsec.misc.CurryTest.testTooManyCurryArgs()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9829-9976;359-364;3-3];</data>
    </edge>
    <edge id="e466" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e467" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.misc.Mapper.unary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e468" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e469" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e470" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e471" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e472" source="org.codehaus.jparsec.misc.CurryTest.testUnary()" target="org.codehaus.jparsec.misc.CurryTest$Foo#size">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[1473-1681;66-71;3-3];</data>
    </edge>
    <edge id="e473" source="org.codehaus.jparsec.misc.CurryTest.testVarargConstructor()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9554-9822;349-357;3-3];</data>
    </edge>
    <edge id="e474" source="org.codehaus.jparsec.misc.CurryTest.testVarargConstructor()" target="org.codehaus.jparsec.misc.CurryTest$VarargConstructor#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[9554-9822;349-357;3-3];</data>
    </edge>
    <edge id="e475" source="org.codehaus.jparsec.misc.CurryTest.testWrongArgumentType()" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10423-10663;384-391;3-3];</data>
    </edge>
    <edge id="e476" source="org.codehaus.jparsec.misc.CurryTest.testWrongArgumentType()" target="org.codehaus.jparsec.misc.Mapper.asBinary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10423-10663;384-391;3-3];</data>
    </edge>
    <edge id="e477" source="org.codehaus.jparsec.misc.CurryTest.testWrongArgumentType()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10423-10663;384-391;3-3];</data>
    </edge>
    <edge id="e478" source="org.codehaus.jparsec.misc.CurryTest.testWrongArgumentType()" target="org.codehaus.jparsec.misc.CurryTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/CurryTest.java;[10423-10663;384-391;3-3];</data>
    </edge>
    <edge id="e479" source="org.codehaus.jparsec.misc.Invokables$ValueInvokable#value" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1367-1428;48-50;5-5];</data>
    </edge>
    <edge id="e480" source="org.codehaus.jparsec.misc.Invokables$ValueInvokable.equals(java.lang.Object)" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1511-1691;56-61;5-5/1511-1691;56-61;5-5];</data>
    </edge>
    <edge id="e481" source="org.codehaus.jparsec.misc.Invokables$ValueInvokable.hashCode()" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1435-1504;52-54;5-5];</data>
    </edge>
    <edge id="e482" source="org.codehaus.jparsec.misc.Invokables$ValueInvokable.toString()" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[1702-1774;63-65;5-5];</data>
    </edge>
    <edge id="e483" source="org.codehaus.jparsec.misc.Invokables$1(java.lang.Object)" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e484" source="org.codehaus.jparsec.misc.Invokables.constructor(net.sf.cglib.reflect.FastConstructor)" target="org.codehaus.jparsec.misc.Invokables$1(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[223-744;13-27;3-3];</data>
    </edge>
    <edge id="e485" source="org.codehaus.jparsec.misc.Invokables.constructor(net.sf.cglib.reflect.FastConstructor)" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[223-744;13-27;3-3];</data>
    </edge>
    <edge id="e486" source="org.codehaus.jparsec.misc.Invokables$2(java.lang.Object)" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e487" source="org.codehaus.jparsec.misc.Invokables.method(java.lang.Object,net.sf.cglib.reflect.FastMethod)" target="org.codehaus.jparsec.misc.Invokables$2(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[751-1255;29-43;3-3];</data>
    </edge>
    <edge id="e488" source="org.codehaus.jparsec.misc.Invokables.method(java.lang.Object,net.sf.cglib.reflect.FastMethod)" target="org.codehaus.jparsec.misc.Invokables$ValueInvokable(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Invokables.java;[751-1255;29-43;3-3];</data>
    </edge>
    <edge id="e489" source="org.codehaus.jparsec.misc.Mapper$1.toString()" target="org.codehaus.jparsec.misc.Mapper#SKIPPED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23937-24000;615-617;5-5];</data>
    </edge>
    <edge id="e490" source="org.codehaus.jparsec.misc.Mapper#SKIP" target="org.codehaus.jparsec.misc.Mapper$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23813-24005;611-618;3-4];</data>
    </edge>
    <edge id="e491" source="org.codehaus.jparsec.misc.Mapper()" target="org.codehaus.jparsec.misc.Mapper.mapMethod(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3708-3953;82-87;3-3];</data>
    </edge>
    <edge id="e492" source="org.codehaus.jparsec.misc.Mapper()" target="org.codehaus.jparsec.misc.Invokables.method(java.lang.Object,net.sf.cglib.reflect.FastMethod)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3708-3953;82-87;3-3];</data>
    </edge>
    <edge id="e493" source="org.codehaus.jparsec.misc.Mapper#source" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3708-3953;82-87;3-3];</data>
    </edge>
    <edge id="e494" source="org.codehaus.jparsec.misc.Mapper#invokable" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3708-3953;82-87;3-3];</data>
    </edge>
    <edge id="e495" source="org.codehaus.jparsec.misc.Mapper#source" target="org.codehaus.jparsec.misc.Mapper(java.lang.Object,org.codehaus.jparsec.misc.Invokable)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3960-4065;89-92;3-3];</data>
    </edge>
    <edge id="e496" source="org.codehaus.jparsec.misc.Mapper#invokable" target="org.codehaus.jparsec.misc.Mapper(java.lang.Object,org.codehaus.jparsec.misc.Invokable)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[3960-4065;89-92;3-3];</data>
    </edge>
    <edge id="e497" source="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])" target="org.codehaus.jparsec.misc.Curry.of(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[4072-5511;94-126;3-3];</data>
    </edge>
    <edge id="e498" source="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.invoke(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20160-20328;501-508;3-3];</data>
    </edge>
    <edge id="e499" source="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20160-20328;501-508;3-3];</data>
    </edge>
    <edge id="e500" source="org.codehaus.jparsec.misc.Mapper.isSkipped(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper#SKIPPED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24012-24108;620-622;3-3];</data>
    </edge>
    <edge id="e501" source="org.codehaus.jparsec.misc.Mapper.expectedParams()" target="org.codehaus.jparsec.misc.Invokable.parameterTypes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18682-18753;446-448;3-3];</data>
    </edge>
    <edge id="e502" source="org.codehaus.jparsec.misc.Mapper.expectedParams()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18682-18753;446-448;3-3];</data>
    </edge>
    <edge id="e503" source="org.codehaus.jparsec.misc.Mapper.expectedParams()" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18682-18753;446-448;3-3];</data>
    </edge>
    <edge id="e504" source="org.codehaus.jparsec.misc.Mapper.getRawClass(java.lang.reflect.Type)" target="org.codehaus.jparsec.misc.Mapper.getRawClass(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22145-22403;562-570;3-3];</data>
    </edge>
    <edge id="e505" source="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.getRawClass(java.lang.reflect.Type)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21609-22138;550-560;3-3];</data>
    </edge>
    <edge id="e506" source="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21609-22138;550-560;3-3];</data>
    </edge>
    <edge id="e507" source="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21609-22138;550-560;3-3];</data>
    </edge>
    <edge id="e508" source="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)" target="java.lang.Object#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21609-22138;550-560;3-3];</data>
    </edge>
    <edge id="e509" source="org.codehaus.jparsec.misc.Mapper.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20692-20807;523-526;3-3];</data>
    </edge>
    <edge id="e510" source="org.codehaus.jparsec.misc.Mapper.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Invokable.invoke(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20692-20807;523-526;3-3];</data>
    </edge>
    <edge id="e511" source="org.codehaus.jparsec.misc.Mapper.invoke(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20692-20807;523-526;3-3];</data>
    </edge>
    <edge id="e512" source="org.codehaus.jparsec.misc.Mapper.propagate(java.lang.Throwable)" target="org.codehaus.jparsec.misc.Mapper.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20335-20687;510-521;3-3];</data>
    </edge>
    <edge id="e513" source="org.codehaus.jparsec.misc.Mapper.name()" target="org.codehaus.jparsec.misc.Invokable.returnType()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18760-18829;450-452;3-3];</data>
    </edge>
    <edge id="e514" source="org.codehaus.jparsec.misc.Mapper.name()" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18760-18829;450-452;3-3];</data>
    </edge>
    <edge id="e515" source="org.codehaus.jparsec.misc.Mapper.toString()" target="org.codehaus.jparsec.misc.Mapper#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17992-18120;429-432;3-3];</data>
    </edge>
    <edge id="e516" source="org.codehaus.jparsec.misc.Mapper.findMapMethod(java.lang.Class)" target="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22408-22923;572-586;3-3];</data>
    </edge>
    <edge id="e517" source="org.codehaus.jparsec.misc.Mapper.findMapMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.findMapMethod(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22408-22923;572-586;3-3];</data>
    </edge>
    <edge id="e518" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e519" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.isSkipped(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3/24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e520" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e521" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.sequence(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3/24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e522" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e523" source="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24406-25478;632-657;3-3/24406-25478;632-657;3-3/24406-25478;632-657;3-3/24406-25478;632-657;3-3];</data>
    </edge>
    <edge id="e524" source="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.findMapMethod(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
    </edge>
    <edge id="e525" source="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)" target="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
    </edge>
    <edge id="e526" source="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.getTargetType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
    </edge>
    <edge id="e527" source="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)" target="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
    </edge>
    <edge id="e528" source="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Reflection.wrapperClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[21054-21602;537-548;3-3];</data>
    </edge>
    <edge id="e529" source="org.codehaus.jparsec.misc.Mapper.mapMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper.introspectMapperMethod(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20814-21047;528-535;3-3];</data>
    </edge>
    <edge id="e530" source="org.codehaus.jparsec.misc.Mapper.mapMethod(java.lang.Class)" target="org.codehaus.jparsec.misc.Mapper#mapMethods">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20814-21047;528-535;3-3/20814-21047;528-535;3-3];</data>
    </edge>
    <edge id="e531" source="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17371-17985;415-427;3-3];</data>
    </edge>
    <edge id="e532" source="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper#SKIP">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17371-17985;415-427;3-3];</data>
    </edge>
    <edge id="e533" source="org.codehaus.jparsec.misc.Mapper.binary()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6424-6736;151-158;3-3];</data>
    </edge>
    <edge id="e534" source="org.codehaus.jparsec.misc.Mapper.binary()" target="org.codehaus.jparsec.misc.Mapper.asBinary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6424-6736;151-158;3-3];</data>
    </edge>
    <edge id="e535" source="org.codehaus.jparsec.misc.Mapper$6$1.map(T,T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[14888-14973;357-359;11-11];</data>
    </edge>
    <edge id="e536" source="org.codehaus.jparsec.misc.Mapper$6.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper$6$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[14805-14992;355-361;7-7];</data>
    </edge>
    <edge id="e537" source="org.codehaus.jparsec.misc.Mapper$6.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[14805-14992;355-361;7-7];</data>
    </edge>
    <edge id="e538" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e539" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e540" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e541" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e542" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$6$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e543" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e544" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Binary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13499-15004;326-363;3-3];</data>
    </edge>
    <edge id="e545" source="org.codehaus.jparsec.misc.Mapper$7$1.map(T,T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17067-17333;403-409;11-11];</data>
    </edge>
    <edge id="e546" source="org.codehaus.jparsec.misc.Mapper$7$1.map(T,T)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[17067-17333;403-409;11-11/17067-17333;403-409;11-11/17067-17333;403-409;11-11];</data>
    </edge>
    <edge id="e547" source="org.codehaus.jparsec.misc.Mapper$7.map(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper$7$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[16979-17352;401-411;7-7];</data>
    </edge>
    <edge id="e548" source="org.codehaus.jparsec.misc.Mapper$7.map(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[16979-17352;401-411;7-7];</data>
    </edge>
    <edge id="e549" source="org.codehaus.jparsec.misc.Mapper$7.map(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[16979-17352;401-411;7-7/16979-17352;401-411;7-7/16979-17352;401-411;7-7];</data>
    </edge>
    <edge id="e550" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e551" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e552" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e553" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e554" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e555" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e556" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e557" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$7$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e558" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e559" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3/15011-17364;365-413;3-3/15011-17364;365-413;3-3/15011-17364;365-413;3-3/15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e560" source="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.functors.Binary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[15011-17364;365-413;3-3];</data>
    </edge>
    <edge id="e561" source="org.codehaus.jparsec.misc.Mapper$4$1.map(T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11135-11200;268-270;11-11];</data>
    </edge>
    <edge id="e562" source="org.codehaus.jparsec.misc.Mapper$4.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper$4$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11052-11219;266-272;7-7];</data>
    </edge>
    <edge id="e563" source="org.codehaus.jparsec.misc.Mapper$4.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11052-11219;266-272;7-7];</data>
    </edge>
    <edge id="e564" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e565" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e566" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e567" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e568" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$4$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e569" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e570" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9857-11231;238-274;3-3];</data>
    </edge>
    <edge id="e571" source="org.codehaus.jparsec.misc.Mapper$5$1.map(T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13253-13461;315-320;11-11];</data>
    </edge>
    <edge id="e572" source="org.codehaus.jparsec.misc.Mapper$5$1.map(T)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13253-13461;315-320;11-11/13253-13461;315-320;11-11];</data>
    </edge>
    <edge id="e573" source="org.codehaus.jparsec.misc.Mapper$5.map(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper$5$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13167-13480;313-322;7-7];</data>
    </edge>
    <edge id="e574" source="org.codehaus.jparsec.misc.Mapper$5.map(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13167-13480;313-322;7-7];</data>
    </edge>
    <edge id="e575" source="org.codehaus.jparsec.misc.Mapper$5.map(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[13167-13480;313-322;7-7/13167-13480;313-322;7-7];</data>
    </edge>
    <edge id="e576" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e577" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e578" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e579" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e580" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e581" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e582" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e583" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$5$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e584" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e585" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3/11238-13492;276-324;3-3/11238-13492;276-324;3-3/11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e586" source="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[11238-13492;276-324;3-3];</data>
    </edge>
    <edge id="e587" source="org.codehaus.jparsec.misc.Mapper$2$1.map(T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8011-8075;190-192;11-11];</data>
    </edge>
    <edge id="e588" source="org.codehaus.jparsec.misc.Mapper$2.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper$2$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[7929-8094;188-194;7-7];</data>
    </edge>
    <edge id="e589" source="org.codehaus.jparsec.misc.Mapper$2.map(java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[7929-8094;188-194;7-7];</data>
    </edge>
    <edge id="e590" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e591" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e592" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e593" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e594" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper$2$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e595" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e596" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6743-8106;160-196;3-3];</data>
    </edge>
    <edge id="e597" source="org.codehaus.jparsec.misc.Mapper$3$1.map(T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9722-9819;229-232;11-11];</data>
    </edge>
    <edge id="e598" source="org.codehaus.jparsec.misc.Mapper$3.map(java.util.List)" target="org.codehaus.jparsec.misc.Mapper$3$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9633-9838;227-234;7-7];</data>
    </edge>
    <edge id="e599" source="org.codehaus.jparsec.misc.Mapper$3.map(java.util.List)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[9633-9838;227-234;7-7];</data>
    </edge>
    <edge id="e600" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e601" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e602" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e603" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.list(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e604" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e605" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e606" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper$3$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e607" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e608" source="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[8113-9850;198-236;3-3];</data>
    </edge>
    <edge id="e609" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e610" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.mergeSkipped(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e611" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.expectedParams()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e612" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e613" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e614" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e615" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e616" source="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[5518-6115;128-140;3-3];</data>
    </edge>
    <edge id="e617" source="org.codehaus.jparsec.misc.Mapper.unary()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6120-6419;142-149;3-3];</data>
    </edge>
    <edge id="e618" source="org.codehaus.jparsec.misc.Mapper.unary()" target="org.codehaus.jparsec.misc.Mapper.asUnary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[6120-6419;142-149;3-3];</data>
    </edge>
    <edge id="e619" source="org.codehaus.jparsec.misc.Mapper$9.map(T,T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19578-19651;477-479;7-7];</data>
    </edge>
    <edge id="e620" source="org.codehaus.jparsec.misc.Mapper$9.toString()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19659-19725;480-482;7-7];</data>
    </edge>
    <edge id="e621" source="org.codehaus.jparsec.misc.Mapper.asBinary()" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
    </edge>
    <edge id="e622" source="org.codehaus.jparsec.misc.Mapper.asBinary()" target="org.codehaus.jparsec.misc.Mapper$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
    </edge>
    <edge id="e623" source="org.codehaus.jparsec.misc.Mapper.asBinary()" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
    </edge>
    <edge id="e624" source="org.codehaus.jparsec.misc.Mapper.asBinary()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
    </edge>
    <edge id="e625" source="org.codehaus.jparsec.misc.Mapper.asBinary()" target="org.codehaus.jparsec.functors.Binary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19269-19736;470-484;3-3];</data>
    </edge>
    <edge id="e626" source="org.codehaus.jparsec.misc.Mapper$10.map(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20004-20068;492-494;7-7];</data>
    </edge>
    <edge id="e627" source="org.codehaus.jparsec.misc.Mapper$10.toString()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[20076-20142;495-497;7-7];</data>
    </edge>
    <edge id="e628" source="org.codehaus.jparsec.misc.Mapper.asMap()" target="org.codehaus.jparsec.misc.Mapper$10()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19741-20153;486-499;3-3];</data>
    </edge>
    <edge id="e629" source="org.codehaus.jparsec.misc.Mapper.asMap()" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19741-20153;486-499;3-3];</data>
    </edge>
    <edge id="e630" source="org.codehaus.jparsec.misc.Mapper.asMap()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19741-20153;486-499;3-3];</data>
    </edge>
    <edge id="e631" source="org.codehaus.jparsec.misc.Mapper$8.map(T)" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19128-19179;461-463;7-7];</data>
    </edge>
    <edge id="e632" source="org.codehaus.jparsec.misc.Mapper$8.toString()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[19187-19253;464-466;7-7];</data>
    </edge>
    <edge id="e633" source="org.codehaus.jparsec.misc.Mapper.asUnary()" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
    </edge>
    <edge id="e634" source="org.codehaus.jparsec.misc.Mapper.asUnary()" target="org.codehaus.jparsec.misc.Mapper$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
    </edge>
    <edge id="e635" source="org.codehaus.jparsec.misc.Mapper.asUnary()" target="org.codehaus.jparsec.misc.Mapper.apply(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
    </edge>
    <edge id="e636" source="org.codehaus.jparsec.misc.Mapper.asUnary()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
    </edge>
    <edge id="e637" source="org.codehaus.jparsec.misc.Mapper.asUnary()" target="org.codehaus.jparsec.functors.Unary#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18834-19264;454-468;3-3];</data>
    </edge>
    <edge id="e638" source="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.isAssignable(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23348-23691;599-606;3-3];</data>
    </edge>
    <edge id="e639" source="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.getClassName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23348-23691;599-606;3-3];</data>
    </edge>
    <edge id="e640" source="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[23348-23691;599-606;3-3];</data>
    </edge>
    <edge id="e641" source="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])" target="org.codehaus.jparsec.misc.Invokable.parameterTypes()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22928-23343;588-597;3-3];</data>
    </edge>
    <edge id="e642" source="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper.checkArgumentType(int,java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22928-23343;588-597;3-3];</data>
    </edge>
    <edge id="e643" source="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22928-23343;588-597;3-3/22928-23343;588-597;3-3];</data>
    </edge>
    <edge id="e644" source="org.codehaus.jparsec.misc.Mapper.checkArgumentTypes(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[22928-23343;588-597;3-3/22928-23343;588-597;3-3/22928-23343;588-597;3-3/22928-23343;588-597;3-3/22928-23343;588-597;3-3];</data>
    </edge>
    <edge id="e645" source="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(int,java.lang.Class,int)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18283-18675;438-444;3-3];</data>
    </edge>
    <edge id="e646" source="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(int,java.lang.Class,int)" target="org.codehaus.jparsec.misc.Mapper#invokable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18283-18675;438-444;3-3];</data>
    </edge>
    <edge id="e647" source="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(int,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18125-18278;434-436;3-3];</data>
    </edge>
    <edge id="e648" source="org.codehaus.jparsec.misc.Mapper.checkFutureParameters(java.lang.Class,int)" target="org.codehaus.jparsec.misc.Mapper.expectedParams()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[18125-18278;434-436;3-3];</data>
    </edge>
    <edge id="e649" source="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24249-24399;628-630;3-3];</data>
    </edge>
    <edge id="e650" source="org.codehaus.jparsec.misc.Mapper.checkNotSkipped(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.misc.Mapper.isSkipped(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Mapper.java;[24249-24399;628-630;3-3];</data>
    </edge>
    <edge id="e651" source="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e652" source="org.codehaus.jparsec.misc.MapperTest$CharSequenceSubMap()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e653" source="org.codehaus.jparsec.misc.MapperTest$Foo#name" target="org.codehaus.jparsec.misc.MapperTest$Foo(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[583-637;27-29;5-5];</data>
    </edge>
    <edge id="e654" source="org.codehaus.jparsec.misc.MapperTest$Thing#s" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
    </edge>
    <edge id="e655" source="org.codehaus.jparsec.misc.MapperTest$Thing#i" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
    </edge>
    <edge id="e656" source="org.codehaus.jparsec.misc.MapperTest$Thing#l" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
    </edge>
    <edge id="e657" source="org.codehaus.jparsec.misc.MapperTest$Thing#b" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
    </edge>
    <edge id="e658" source="org.codehaus.jparsec.misc.MapperTest$Thing#c" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6621-6774;242-248;5-5];</data>
    </edge>
    <edge id="e659" source="org.codehaus.jparsec.misc.MapperTest$Thing.toString()" target="org.codehaus.jparsec.misc.MapperTest$Thing#s">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
    </edge>
    <edge id="e660" source="org.codehaus.jparsec.misc.MapperTest$Thing.toString()" target="org.codehaus.jparsec.misc.MapperTest$Thing#i">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
    </edge>
    <edge id="e661" source="org.codehaus.jparsec.misc.MapperTest$Thing.toString()" target="org.codehaus.jparsec.misc.MapperTest$Thing#l">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
    </edge>
    <edge id="e662" source="org.codehaus.jparsec.misc.MapperTest$Thing.toString()" target="org.codehaus.jparsec.misc.MapperTest$Thing#b">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
    </edge>
    <edge id="e663" source="org.codehaus.jparsec.misc.MapperTest$Thing.toString()" target="org.codehaus.jparsec.misc.MapperTest$Thing#c">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6785-6858;250-252;5-5];</data>
    </edge>
    <edge id="e664" source="org.codehaus.jparsec.misc.MapperTest#MAPPER" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[819-891;39-39;3-75];</data>
    </edge>
    <edge id="e665" source="org.codehaus.jparsec.misc.MapperTest$12()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e666" source="org.codehaus.jparsec.misc.MapperTest$12.map(java.lang.String,int)" target="org.codehaus.jparsec.misc.MapperTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5950-6055;214-217;7-7];</data>
    </edge>
    <edge id="e667" source="org.codehaus.jparsec.misc.MapperTest.fooMapper()" target="org.codehaus.jparsec.misc.MapperTest$12()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5879-6066;212-219;3-3];</data>
    </edge>
    <edge id="e668" source="org.codehaus.jparsec.misc.MapperTest.fooMapper()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5879-6066;212-219;3-3];</data>
    </edge>
    <edge id="e669" source="org.codehaus.jparsec.misc.MapperTest.fooMapper()" target="org.codehaus.jparsec.misc.MapperTest$Foo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5879-6066;212-219;3-3];</data>
    </edge>
    <edge id="e670" source="org.codehaus.jparsec.misc.MapperTest$14()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e671" source="org.codehaus.jparsec.misc.MapperTest$14.map(int,boolean,char)" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6955-7088;257-260;7-7];</data>
    </edge>
    <edge id="e672" source="org.codehaus.jparsec.misc.MapperTest.thingMapper()" target="org.codehaus.jparsec.misc.MapperTest$14()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6869-7099;255-262;3-3];</data>
    </edge>
    <edge id="e673" source="org.codehaus.jparsec.misc.MapperTest.thingMapper()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6869-7099;255-262;3-3];</data>
    </edge>
    <edge id="e674" source="org.codehaus.jparsec.misc.MapperTest.thingMapper()" target="org.codehaus.jparsec.misc.MapperTest$Thing(java.lang.String,int,long,boolean,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6869-7099;255-262;3-3];</data>
    </edge>
    <edge id="e675" source="org.codehaus.jparsec.misc.MapperTest.assertFoo(java.lang.String,java.lang.Object)" target="org.codehaus.jparsec.misc.MapperTest$Foo#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[11591-11730;385-388;3-3];</data>
    </edge>
    <edge id="e676" source="org.codehaus.jparsec.misc.MapperTest.assertWrongParameters(org.codehaus.jparsec.misc.Mapper,int,int)" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[11737-12260;390-404;3-3];</data>
    </edge>
    <edge id="e677" source="org.codehaus.jparsec.misc.MapperTest.assertWrongParameters(org.codehaus.jparsec.misc.Mapper,int,int)" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[11737-12260;390-404;3-3];</data>
    </edge>
    <edge id="e678" source="org.codehaus.jparsec.misc.MapperTest$16()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e679" source="org.codehaus.jparsec.misc.MapperTest.testAmbiguousMapperMethods()" target="org.codehaus.jparsec.misc.MapperTest$16()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12802-13140;425-439;3-3];</data>
    </edge>
    <edge id="e680" source="org.codehaus.jparsec.misc.MapperTest.testAmbiguousMapperMethods()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12802-13140;425-439;3-3];</data>
    </edge>
    <edge id="e681" source="org.codehaus.jparsec.misc.MapperTest.testAsMap()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1337-1642;57-62;3-3/1337-1642;57-62;3-3/1337-1642;57-62;3-3/1337-1642;57-62;3-3];</data>
    </edge>
    <edge id="e682" source="org.codehaus.jparsec.misc.MapperTest.testAsMap()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1337-1642;57-62;3-3/1337-1642;57-62;3-3/1337-1642;57-62;3-3];</data>
    </edge>
    <edge id="e683" source="org.codehaus.jparsec.misc.MapperTest.testAsMap()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1337-1642;57-62;3-3];</data>
    </edge>
    <edge id="e684" source="org.codehaus.jparsec.misc.MapperTest.testAsMap()" target="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1337-1642;57-62;3-3/1337-1642;57-62;3-3/1337-1642;57-62;3-3/1337-1642;57-62;3-3];</data>
    </edge>
    <edge id="e685" source="org.codehaus.jparsec.misc.MapperTest$2()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e686" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="org.codehaus.jparsec.misc.MapperTest$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e687" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e688" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="org.codehaus.jparsec.misc.Mapper.binary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e689" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e690" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e691" source="org.codehaus.jparsec.misc.MapperTest.testBinary()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2007-2368;76-86;3-3];</data>
    </edge>
    <edge id="e692" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e693" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e694" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e695" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e696" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e697" source="org.codehaus.jparsec.misc.MapperTest.testCurry_sequence()" target="org.codehaus.jparsec.misc.MapperTest$Foo#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1134-1330;50-55;3-3];</data>
    </edge>
    <edge id="e698" source="org.codehaus.jparsec.misc.MapperTest$18()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e699" source="org.codehaus.jparsec.misc.MapperTest.testIncompatibleGenericReturnType()" target="org.codehaus.jparsec.misc.MapperTest$18()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13388-13669;453-463;3-3];</data>
    </edge>
    <edge id="e700" source="org.codehaus.jparsec.misc.MapperTest.testIncompatibleGenericReturnType()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13388-13669;453-463;3-3];</data>
    </edge>
    <edge id="e701" source="org.codehaus.jparsec.misc.MapperTest$17()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e702" source="org.codehaus.jparsec.misc.MapperTest.testIncompatibleReturnType()" target="org.codehaus.jparsec.misc.MapperTest$17()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13147-13381;441-451;3-3];</data>
    </edge>
    <edge id="e703" source="org.codehaus.jparsec.misc.MapperTest.testIncompatibleReturnType()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13147-13381;441-451;3-3];</data>
    </edge>
    <edge id="e704" source="org.codehaus.jparsec.misc.MapperTest$7()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e705" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.misc.MapperTest$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e706" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e707" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e708" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e709" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e710" source="org.codehaus.jparsec.misc.MapperTest.testInfix()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3517-3792;128-136;3-3];</data>
    </edge>
    <edge id="e711" source="org.codehaus.jparsec.misc.MapperTest$8()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e712" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.MapperTest$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e713" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e714" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e715" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3/3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e716" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e717" source="org.codehaus.jparsec.misc.MapperTest.testInfix_multiOp()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3799-4107;138-146;3-3];</data>
    </edge>
    <edge id="e718" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e719" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e720" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e721" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e722" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e723" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e724" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForInfix()" target="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[10698-11584;358-383;3-3/10698-11584;358-383;3-3];</data>
    </edge>
    <edge id="e725" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e726" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e727" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e728" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e729" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e730" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e731" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPostfix()" target="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[9795-10691;331-356;3-3/9795-10691;331-356;3-3];</data>
    </edge>
    <edge id="e732" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e733" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e734" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e735" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e736" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e737" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e738" source="org.codehaus.jparsec.misc.MapperTest.testInvalidSkipForPrefix()" target="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8897-9788;304-329;3-3/8897-9788;304-329;3-3];</data>
    </edge>
    <edge id="e739" source="org.codehaus.jparsec.misc.MapperTest$9()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e740" source="org.codehaus.jparsec.misc.MapperTest.testMap_errorPropagated()" target="org.codehaus.jparsec.misc.MapperTest$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4114-4490;148-162;3-3];</data>
    </edge>
    <edge id="e741" source="org.codehaus.jparsec.misc.MapperTest.testMap_errorPropagated()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4114-4490;148-162;3-3];</data>
    </edge>
    <edge id="e742" source="org.codehaus.jparsec.misc.MapperTest.testMap_errorPropagated()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4114-4490;148-162;3-3];</data>
    </edge>
    <edge id="e743" source="org.codehaus.jparsec.misc.MapperTest.testMap_errorPropagated()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4114-4490;148-162;3-3];</data>
    </edge>
    <edge id="e744" source="org.codehaus.jparsec.misc.MapperTest$11()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e745" source="org.codehaus.jparsec.misc.MapperTest.testMap_exceptionPropagated()" target="org.codehaus.jparsec.misc.MapperTest$11()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4936-5375;180-194;3-3];</data>
    </edge>
    <edge id="e746" source="org.codehaus.jparsec.misc.MapperTest.testMap_exceptionPropagated()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4936-5375;180-194;3-3];</data>
    </edge>
    <edge id="e747" source="org.codehaus.jparsec.misc.MapperTest.testMap_exceptionPropagated()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4936-5375;180-194;3-3];</data>
    </edge>
    <edge id="e748" source="org.codehaus.jparsec.misc.MapperTest.testMap_exceptionPropagated()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4936-5375;180-194;3-3];</data>
    </edge>
    <edge id="e749" source="org.codehaus.jparsec.misc.MapperTest$10()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e750" source="org.codehaus.jparsec.misc.MapperTest.testMap_runtimeExceptionPropagated()" target="org.codehaus.jparsec.misc.MapperTest$10()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4497-4929;164-178;3-3];</data>
    </edge>
    <edge id="e751" source="org.codehaus.jparsec.misc.MapperTest.testMap_runtimeExceptionPropagated()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4497-4929;164-178;3-3];</data>
    </edge>
    <edge id="e752" source="org.codehaus.jparsec.misc.MapperTest.testMap_runtimeExceptionPropagated()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4497-4929;164-178;3-3];</data>
    </edge>
    <edge id="e753" source="org.codehaus.jparsec.misc.MapperTest.testMap_runtimeExceptionPropagated()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[4497-4929;164-178;3-3];</data>
    </edge>
    <edge id="e754" source="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSubclass()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceSubMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13973-14084;476-478;3-3];</data>
    </edge>
    <edge id="e755" source="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSubclass()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceSubMap.map(java.lang.String,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13973-14084;476-478;3-3];</data>
    </edge>
    <edge id="e756" source="org.codehaus.jparsec.misc.MapperTest$19()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e757" source="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSuperclass()" target="org.codehaus.jparsec.misc.MapperTest$19()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13858-13966;472-474;3-3];</data>
    </edge>
    <edge id="e758" source="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSuperclass()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13858-13966;472-474;3-3];</data>
    </edge>
    <edge id="e759" source="org.codehaus.jparsec.misc.MapperTest.testMapperMethodInSuperclass()" target="org.codehaus.jparsec.misc.MapperTest$CharSequenceMap.map(java.lang.String,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[13858-13966;472-474;3-3];</data>
    </edge>
    <edge id="e760" source="org.codehaus.jparsec.misc.MapperTest$15()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e761" source="org.codehaus.jparsec.misc.MapperTest.testMissingMapperMethod()" target="org.codehaus.jparsec.misc.MapperTest$15()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12656-12795;418-423;3-3];</data>
    </edge>
    <edge id="e762" source="org.codehaus.jparsec.misc.MapperTest.testMissingMapperMethod()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12656-12795;418-423;3-3];</data>
    </edge>
    <edge id="e763" source="org.codehaus.jparsec.misc.MapperTest.testName()" target="org.codehaus.jparsec.misc.Mapper.name()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[898-982;41-43;3-3];</data>
    </edge>
    <edge id="e764" source="org.codehaus.jparsec.misc.MapperTest.testName()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[898-982;41-43;3-3];</data>
    </edge>
    <edge id="e765" source="org.codehaus.jparsec.misc.MapperTest.testName()" target="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[898-982;41-43;3-3];</data>
    </edge>
    <edge id="e766" source="org.codehaus.jparsec.misc.MapperTest$13()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e767" source="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()" target="org.codehaus.jparsec.misc.MapperTest$13()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
    </edge>
    <edge id="e768" source="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
    </edge>
    <edge id="e769" source="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
    </edge>
    <edge id="e770" source="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
    </edge>
    <edge id="e771" source="org.codehaus.jparsec.misc.MapperTest.testNonGenericMapper()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6222-6482;225-233;3-3];</data>
    </edge>
    <edge id="e772" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e773" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.misc.Mapper.infix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3/8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e774" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3/8523-8890;295-302;3-3/8523-8890;295-302;3-3/8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e775" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3/8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e776" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3/8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e777" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3/8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e778" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.misc.MapperTest.thingMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e779" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForInfix()" target="org.codehaus.jparsec.misc.MapperTest$Thing#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8523-8890;295-302;3-3];</data>
    </edge>
    <edge id="e780" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e781" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3/8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e782" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3/8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e783" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3/8123-8516;286-293;3-3/8123-8516;286-293;3-3/8123-8516;286-293;3-3/8123-8516;286-293;3-3/8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e784" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3/8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e785" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3/8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e786" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.misc.MapperTest.thingMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e787" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPostfix()" target="org.codehaus.jparsec.misc.MapperTest$Thing#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[8123-8516;286-293;3-3];</data>
    </edge>
    <edge id="e788" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e789" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3/7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e790" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3/7726-8116;277-284;3-3/7726-8116;277-284;3-3/7726-8116;277-284;3-3/7726-8116;277-284;3-3/7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e791" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3/7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e792" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3/7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e793" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3/7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e794" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.misc.MapperTest.thingMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e795" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForPrefix()" target="org.codehaus.jparsec.misc.MapperTest$Thing#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7726-8116;277-284;3-3];</data>
    </edge>
    <edge id="e796" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e797" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e798" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.Mapper._(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e799" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e800" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e801" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.MapperTest$Thing.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e802" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.MapperTest.assertFoo(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e803" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e804" source="org.codehaus.jparsec.misc.MapperTest.testParametersSkippedForSequence()" target="org.codehaus.jparsec.misc.MapperTest$Thing#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[7106-7719;264-275;3-3/7106-7719;264-275;3-3];</data>
    </edge>
    <edge id="e805" source="org.codehaus.jparsec.misc.MapperTest$5()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e806" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.misc.MapperTest$5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e807" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e808" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e809" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e810" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e811" source="org.codehaus.jparsec.misc.MapperTest.testPostfix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2944-3207;108-116;3-3];</data>
    </edge>
    <edge id="e812" source="org.codehaus.jparsec.misc.MapperTest$6()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e813" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.MapperTest$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e814" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e815" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.postfix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e816" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3/3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e817" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e818" source="org.codehaus.jparsec.misc.MapperTest.testPostfix_multiOp()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[3214-3510;118-126;3-3];</data>
    </edge>
    <edge id="e819" source="org.codehaus.jparsec.misc.MapperTest$3()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e820" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.misc.MapperTest$3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e821" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e822" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e823" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e824" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e825" source="org.codehaus.jparsec.misc.MapperTest.testPrefix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2375-2636;88-96;3-3];</data>
    </edge>
    <edge id="e826" source="org.codehaus.jparsec.misc.MapperTest$4()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e827" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.MapperTest$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e828" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e829" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.misc.Mapper.prefix(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e830" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3/2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e831" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e832" source="org.codehaus.jparsec.misc.MapperTest.testPrefix_multiOp()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[2643-2937;98-106;3-3];</data>
    </edge>
    <edge id="e833" source="org.codehaus.jparsec.misc.MapperTest.testSequence()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[989-1127;45-48;3-3];</data>
    </edge>
    <edge id="e834" source="org.codehaus.jparsec.misc.MapperTest.testSequence()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[989-1127;45-48;3-3/989-1127;45-48;3-3];</data>
    </edge>
    <edge id="e835" source="org.codehaus.jparsec.misc.MapperTest.testSequence()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[989-1127;45-48;3-3];</data>
    </edge>
    <edge id="e836" source="org.codehaus.jparsec.misc.MapperTest.testSequence()" target="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[989-1127;45-48;3-3];</data>
    </edge>
    <edge id="e837" source="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()" target="org.codehaus.jparsec.misc.MapperTest.assertFoo(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3];</data>
    </edge>
    <edge id="e838" source="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3];</data>
    </edge>
    <edge id="e839" source="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()" target="org.codehaus.jparsec.misc.Mapper.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3];</data>
    </edge>
    <edge id="e840" source="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3/6073-6215;221-223;3-3];</data>
    </edge>
    <edge id="e841" source="org.codehaus.jparsec.misc.MapperTest.testTargetTypeUnknownAtConstructionTime()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[6073-6215;221-223;3-3];</data>
    </edge>
    <edge id="e842" source="org.codehaus.jparsec.misc.MapperTest$1()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e843" source="org.codehaus.jparsec.misc.MapperTest.testUnary()" target="org.codehaus.jparsec.misc.MapperTest$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
    </edge>
    <edge id="e844" source="org.codehaus.jparsec.misc.MapperTest.testUnary()" target="org.codehaus.jparsec.misc.Mapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
    </edge>
    <edge id="e845" source="org.codehaus.jparsec.misc.MapperTest.testUnary()" target="org.codehaus.jparsec.misc.Mapper.unary()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
    </edge>
    <edge id="e846" source="org.codehaus.jparsec.misc.MapperTest.testUnary()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
    </edge>
    <edge id="e847" source="org.codehaus.jparsec.misc.MapperTest.testUnary()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[1649-2000;64-74;3-3];</data>
    </edge>
    <edge id="e848" source="org.codehaus.jparsec.misc.MapperTest.testWrongParameters()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5382-5647;196-204;3-3];</data>
    </edge>
    <edge id="e849" source="org.codehaus.jparsec.misc.MapperTest.testWrongParameters()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5382-5647;196-204;3-3];</data>
    </edge>
    <edge id="e850" source="org.codehaus.jparsec.misc.MapperTest.testWrongParameters()" target="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5382-5647;196-204;3-3];</data>
    </edge>
    <edge id="e851" source="org.codehaus.jparsec.misc.MapperTest.testWrongParametersForSequencing()" target="org.codehaus.jparsec.misc.MapperTest.assertWrongParameters(org.codehaus.jparsec.misc.Mapper,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5654-5874;206-210;3-3/5654-5874;206-210;3-3/5654-5874;206-210;3-3];</data>
    </edge>
    <edge id="e852" source="org.codehaus.jparsec.misc.MapperTest.testWrongParametersForSequencing()" target="org.codehaus.jparsec.misc.Mapper.curry(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5654-5874;206-210;3-3/5654-5874;206-210;3-3];</data>
    </edge>
    <edge id="e853" source="org.codehaus.jparsec.misc.MapperTest.testWrongParametersForSequencing()" target="org.codehaus.jparsec.misc.MapperTest.fooMapper()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5654-5874;206-210;3-3];</data>
    </edge>
    <edge id="e854" source="org.codehaus.jparsec.misc.MapperTest.testWrongParametersForSequencing()" target="org.codehaus.jparsec.misc.MapperTest$Foo#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[5654-5874;206-210;3-3/5654-5874;206-210;3-3];</data>
    </edge>
    <edge id="e855" source="org.codehaus.jparsec.misc.MapperTest.testWrongType()" target="org.codehaus.jparsec.misc.Mapper.asMap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
    </edge>
    <edge id="e856" source="org.codehaus.jparsec.misc.MapperTest.testWrongType()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
    </edge>
    <edge id="e857" source="org.codehaus.jparsec.misc.MapperTest.testWrongType()" target="org.codehaus.jparsec.misc.MapperTest#MAPPER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
    </edge>
    <edge id="e858" source="org.codehaus.jparsec.misc.MapperTest.testWrongType()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
    </edge>
    <edge id="e859" source="org.codehaus.jparsec.misc.MapperTest.testWrongType()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/MapperTest.java;[12267-12649;406-416;3-3];</data>
    </edge>
    <edge id="e860" source="org.codehaus.jparsec.misc.Reflection.{static}" target="org.codehaus.jparsec.misc.Reflection.primitive(java.lang.Class,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3/620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e861" source="org.codehaus.jparsec.misc.Reflection.{static}" target="byte#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e862" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e863" source="org.codehaus.jparsec.misc.Reflection.{static}" target="short#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e864" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e865" source="org.codehaus.jparsec.misc.Reflection.{static}" target="int#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e866" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e867" source="org.codehaus.jparsec.misc.Reflection.{static}" target="long#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e868" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e869" source="org.codehaus.jparsec.misc.Reflection.{static}" target="boolean#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e870" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e871" source="org.codehaus.jparsec.misc.Reflection.{static}" target="float#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e872" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e873" source="org.codehaus.jparsec.misc.Reflection.{static}" target="double#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e874" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e875" source="org.codehaus.jparsec.misc.Reflection.{static}" target="char#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e876" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e877" source="org.codehaus.jparsec.misc.Reflection.{static}" target="void#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e878" source="org.codehaus.jparsec.misc.Reflection.{static}" target="java.lang.Void#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[620-1003;25-35;3-3];</data>
    </edge>
    <edge id="e879" source="org.codehaus.jparsec.misc.Reflection.wrapperClass(java.lang.Class)" target="org.codehaus.jparsec.misc.Reflection#WRAPPERS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1010-1202;37-41;3-3];</data>
    </edge>
    <edge id="e880" source="org.codehaus.jparsec.misc.Reflection.primitive(java.lang.Class,java.lang.Class)" target="org.codehaus.jparsec.misc.Reflection#WRAPPERS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[499-613;21-23;3-3];</data>
    </edge>
    <edge id="e881" source="org.codehaus.jparsec.misc.Reflection.isAssignable(java.lang.Class,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.isInstance(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1320-1449;47-49;3-3];</data>
    </edge>
    <edge id="e882" source="org.codehaus.jparsec.misc.Reflection.isInstance(java.lang.Class,java.lang.Object)" target="org.codehaus.jparsec.misc.Reflection.wrapperClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/misc/Reflection.java;[1209-1313;43-45;3-3];</data>
    </edge>
    <edge id="e883" source="org.codehaus.jparsec.misc.ReflectionTest.testGetClassName()" target="org.codehaus.jparsec.misc.Reflection.getClassName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[189-353;12-15;3-3/189-353;12-15;3-3];</data>
    </edge>
    <edge id="e884" source="org.codehaus.jparsec.misc.ReflectionTest.testGetClassName()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[189-353;12-15;3-3];</data>
    </edge>
    <edge id="e885" source="org.codehaus.jparsec.misc.ReflectionTest.testIsAssignable()" target="org.codehaus.jparsec.misc.Reflection.isAssignable(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[689-1022;25-31;3-3/689-1022;25-31;3-3/689-1022;25-31;3-3/689-1022;25-31;3-3/689-1022;25-31;3-3];</data>
    </edge>
    <edge id="e886" source="org.codehaus.jparsec.misc.ReflectionTest.testIsAssignable()" target="int#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[689-1022;25-31;3-3/689-1022;25-31;3-3];</data>
    </edge>
    <edge id="e887" source="org.codehaus.jparsec.misc.ReflectionTest.testIsAssignable()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[689-1022;25-31;3-3/689-1022;25-31;3-3];</data>
    </edge>
    <edge id="e888" source="org.codehaus.jparsec.misc.ReflectionTest.testIsAssignable()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[689-1022;25-31;3-3];</data>
    </edge>
    <edge id="e889" source="org.codehaus.jparsec.misc.ReflectionTest.testIsInstance()" target="org.codehaus.jparsec.misc.Reflection.isInstance(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[360-682;17-23;3-3/360-682;17-23;3-3/360-682;17-23;3-3/360-682;17-23;3-3/360-682;17-23;3-3];</data>
    </edge>
    <edge id="e890" source="org.codehaus.jparsec.misc.ReflectionTest.testIsInstance()" target="int#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[360-682;17-23;3-3/360-682;17-23;3-3];</data>
    </edge>
    <edge id="e891" source="org.codehaus.jparsec.misc.ReflectionTest.testIsInstance()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[360-682;17-23;3-3/360-682;17-23;3-3];</data>
    </edge>
    <edge id="e892" source="org.codehaus.jparsec.misc.ReflectionTest.testIsInstance()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[360-682;17-23;3-3];</data>
    </edge>
    <edge id="e893" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="org.codehaus.jparsec.misc.Reflection.wrapperClass(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3/1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e894" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Byte#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e895" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="byte#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e896" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Short#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e897" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="short#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e898" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e899" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="int#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e900" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Long#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e901" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="long#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e902" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Boolean#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e903" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="boolean#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e904" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e905" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="char#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e906" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Float#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e907" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="float#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e908" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Double#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e909" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="double#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e910" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.Void#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e911" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="void#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e912" source="org.codehaus.jparsec.misc.ReflectionTest.testWrapperClass()" target="java.lang.String#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/misc/ReflectionTest.java;[1029-1759;33-44;3-3/1029-1759;33-44;3-3];</data>
    </edge>
    <edge id="e913" source="org.codehaus.jparsec.pattern.CharPredicates#NEVER" target="org.codehaus.jparsec.pattern.CharPredicates$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1430-1675;29-35;3-4];</data>
    </edge>
    <edge id="e914" source="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS" target="org.codehaus.jparsec.pattern.CharPredicates$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1682-1935;37-43;3-4];</data>
    </edge>
    <edge id="e915" source="org.codehaus.jparsec.pattern.CharPredicates#IS_HEX_DIGIT" target="org.codehaus.jparsec.pattern.CharPredicates$3()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[1942-2371;45-56;3-6];</data>
    </edge>
    <edge id="e916" source="org.codehaus.jparsec.pattern.CharPredicates#IS_UPPER_CASE" target="org.codehaus.jparsec.pattern.CharPredicates$4()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2378-2738;58-69;3-6];</data>
    </edge>
    <edge id="e917" source="org.codehaus.jparsec.pattern.CharPredicates#IS_LOWER_CASE" target="org.codehaus.jparsec.pattern.CharPredicates$5()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[2745-3105;71-82;3-6];</data>
    </edge>
    <edge id="e918" source="org.codehaus.jparsec.pattern.CharPredicates#IS_WHITESPACE" target="org.codehaus.jparsec.pattern.CharPredicates$6()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3112-3475;84-95;3-6];</data>
    </edge>
    <edge id="e919" source="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA" target="org.codehaus.jparsec.pattern.CharPredicates$7()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3482-3826;97-105;3-6];</data>
    </edge>
    <edge id="e920" source="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_" target="org.codehaus.jparsec.pattern.CharPredicates$8()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[3833-4231;107-118;3-6];</data>
    </edge>
    <edge id="e921" source="org.codehaus.jparsec.pattern.CharPredicates#IS_LETTER" target="org.codehaus.jparsec.pattern.CharPredicates$9()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4238-4585;120-131;3-6];</data>
    </edge>
    <edge id="e922" source="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC" target="org.codehaus.jparsec.pattern.CharPredicates$10()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[4592-5002;133-144;3-6];</data>
    </edge>
    <edge id="e923" source="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC_" target="org.codehaus.jparsec.pattern.CharPredicates$11()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5009-5433;146-157;3-6];</data>
    </edge>
    <edge id="e924" source="org.codehaus.jparsec.pattern.CharPredicates#IS_DIGIT" target="org.codehaus.jparsec.pattern.CharPredicates.range(char,char)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6552-6691;198-199;3-62];</data>
    </edge>
    <edge id="e925" source="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates$16()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7112-7504;216-229;3-3];</data>
    </edge>
    <edge id="e926" source="org.codehaus.jparsec.pattern.CharPredicates$19.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8559-8658;264-266;7-7/8559-8658;264-266;7-7];</data>
    </edge>
    <edge id="e927" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicates$19()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8289-8770;258-271;3-3];</data>
    </edge>
    <edge id="e928" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8289-8770;258-271;3-3/8289-8770;258-271;3-3];</data>
    </edge>
    <edge id="e929" source="org.codehaus.jparsec.pattern.CharPredicates$21.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9617-9791;297-302;7-7];</data>
    </edge>
    <edge id="e930" source="org.codehaus.jparsec.pattern.CharPredicates$21.isChar(char)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9617-9791;297-302;7-7];</data>
    </edge>
    <edge id="e931" source="org.codehaus.jparsec.pattern.CharPredicates$21.toString()" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9799-9892;303-305;7-7];</data>
    </edge>
    <edge id="e932" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicates$21()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3];</data>
    </edge>
    <edge id="e933" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3];</data>
    </edge>
    <edge id="e934" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3];</data>
    </edge>
    <edge id="e935" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3/9264-9903;288-307;3-3/9264-9903;288-307;3-3];</data>
    </edge>
    <edge id="e936" source="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9264-9903;288-307;3-3];</data>
    </edge>
    <edge id="e937" source="org.codehaus.jparsec.pattern.CharPredicates.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicates$12()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5440-5782;159-169;3-3];</data>
    </edge>
    <edge id="e938" source="org.codehaus.jparsec.pattern.CharPredicates$18.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8113-8188;249-251;7-7];</data>
    </edge>
    <edge id="e939" source="org.codehaus.jparsec.pattern.CharPredicates.not(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicates$18()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7917-8282;246-256;3-3];</data>
    </edge>
    <edge id="e940" source="org.codehaus.jparsec.pattern.CharPredicates.not(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7917-8282;246-256;3-3];</data>
    </edge>
    <edge id="e941" source="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates$17()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[7511-7910;231-244;3-3];</data>
    </edge>
    <edge id="e942" source="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)" target="org.codehaus.jparsec.pattern.CharPredicates$13()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[5789-6142;171-181;3-3];</data>
    </edge>
    <edge id="e943" source="org.codehaus.jparsec.pattern.CharPredicates.notRange(char,char)" target="org.codehaus.jparsec.pattern.CharPredicates$15()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6698-7105;201-214;3-3];</data>
    </edge>
    <edge id="e944" source="org.codehaus.jparsec.pattern.CharPredicates$20.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9047-9146;279-281;7-7/9047-9146;279-281;7-7];</data>
    </edge>
    <edge id="e945" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicates$20()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8777-9257;273-286;3-3];</data>
    </edge>
    <edge id="e946" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[8777-9257;273-286;3-3/8777-9257;273-286;3-3];</data>
    </edge>
    <edge id="e947" source="org.codehaus.jparsec.pattern.CharPredicates$22.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[10262-10435;318-323;7-7];</data>
    </edge>
    <edge id="e948" source="org.codehaus.jparsec.pattern.CharPredicates$22.isChar(char)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[10262-10435;318-323;7-7];</data>
    </edge>
    <edge id="e949" source="org.codehaus.jparsec.pattern.CharPredicates$22.toString()" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[10443-10535;324-326;7-7];</data>
    </edge>
    <edge id="e950" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicates$22()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3];</data>
    </edge>
    <edge id="e951" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3];</data>
    </edge>
    <edge id="e952" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3];</data>
    </edge>
    <edge id="e953" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3/9910-10546;309-328;3-3/9910-10546;309-328;3-3];</data>
    </edge>
    <edge id="e954" source="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[9910-10546;309-328;3-3];</data>
    </edge>
    <edge id="e955" source="org.codehaus.jparsec.pattern.CharPredicates.range(char,char)" target="org.codehaus.jparsec.pattern.CharPredicates$14()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/CharPredicates.java;[6149-6545;183-196;3-3];</data>
    </edge>
    <edge id="e956" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAlways()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5870-6061;172-177;3-3/5870-6061;172-177;3-3/5870-6061;172-177;3-3];</data>
    </edge>
    <edge id="e957" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAlways()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5870-6061;172-177;3-3/5870-6061;172-177;3-3/5870-6061;172-177;3-3/5870-6061;172-177;3-3];</data>
    </edge>
    <edge id="e958" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAmong()" target="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1951-2203;60-66;3-3];</data>
    </edge>
    <edge id="e959" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAmong()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1951-2203;60-66;3-3/1951-2203;60-66;3-3/1951-2203;60-66;3-3];</data>
    </edge>
    <edge id="e960" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e961" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicates.and(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e962" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e963" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e964" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e965" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testAnd()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3/6430-7155;192-205;3-3];</data>
    </edge>
    <edge id="e966" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4122-4457;122-130;3-3/4122-4457;122-130;3-3/4122-4457;122-130;3-3/4122-4457;122-130;3-3/4122-4457;122-130;3-3];</data>
    </edge>
    <edge id="e967" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4122-4457;122-130;3-3];</data>
    </edge>
    <edge id="e968" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4808-5160;142-150;3-3/4808-5160;142-150;3-3/4808-5160;142-150;3-3/4808-5160;142-150;3-3/4808-5160;142-150;3-3];</data>
    </edge>
    <edge id="e969" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4808-5160;142-150;3-3];</data>
    </edge>
    <edge id="e970" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric_()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5167-5521;152-160;3-3/5167-5521;152-160;3-3/5167-5521;152-160;3-3/5167-5521;152-160;3-3/5167-5521;152-160;3-3];</data>
    </edge>
    <edge id="e971" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlphaNumeric_()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_NUMERIC_">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5167-5521;152-160;3-3];</data>
    </edge>
    <edge id="e972" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha_()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4464-4801;132-140;3-3/4464-4801;132-140;3-3/4464-4801;132-140;3-3/4464-4801;132-140;3-3/4464-4801;132-140;3-3];</data>
    </edge>
    <edge id="e973" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsAlpha_()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA_">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[4464-4801;132-140;3-3];</data>
    </edge>
    <edge id="e974" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsChar()" target="org.codehaus.jparsec.pattern.CharPredicates.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[519-730;17-22;3-3];</data>
    </edge>
    <edge id="e975" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsChar()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[519-730;17-22;3-3/519-730;17-22;3-3];</data>
    </edge>
    <edge id="e976" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsDigit()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1301-1593;41-48;3-3/1301-1593;41-48;3-3/1301-1593;41-48;3-3/1301-1593;41-48;3-3];</data>
    </edge>
    <edge id="e977" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsDigit()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_DIGIT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1301-1593;41-48;3-3];</data>
    </edge>
    <edge id="e978" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsHexDigit()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3/2477-3016;76-89;3-3];</data>
    </edge>
    <edge id="e979" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsHexDigit()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_HEX_DIGIT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2477-3016;76-89;3-3];</data>
    </edge>
    <edge id="e980" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLetter()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5528-5863;162-170;3-3/5528-5863;162-170;3-3/5528-5863;162-170;3-3/5528-5863;162-170;3-3/5528-5863;162-170;3-3];</data>
    </edge>
    <edge id="e981" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLetter()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_LETTER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[5528-5863;162-170;3-3];</data>
    </edge>
    <edge id="e982" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLowerCase()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3375-3720;101-109;3-3/3375-3720;101-109;3-3/3375-3720;101-109;3-3/3375-3720;101-109;3-3/3375-3720;101-109;3-3];</data>
    </edge>
    <edge id="e983" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsLowerCase()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_LOWER_CASE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3375-3720;101-109;3-3];</data>
    </edge>
    <edge id="e984" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsUpperCase()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3023-3368;91-99;3-3/3023-3368;91-99;3-3/3023-3368;91-99;3-3/3023-3368;91-99;3-3/3023-3368;91-99;3-3];</data>
    </edge>
    <edge id="e985" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsUpperCase()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_UPPER_CASE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3023-3368;91-99;3-3];</data>
    </edge>
    <edge id="e986" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsWhitespace()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3727-4115;111-120;3-3/3727-4115;111-120;3-3/3727-4115;111-120;3-3/3727-4115;111-120;3-3/3727-4115;111-120;3-3/3727-4115;111-120;3-3];</data>
    </edge>
    <edge id="e987" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testIsWhitespace()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_WHITESPACE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[3727-4115;111-120;3-3];</data>
    </edge>
    <edge id="e988" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNever()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6068-6248;179-184;3-3/6068-6248;179-184;3-3/6068-6248;179-184;3-3];</data>
    </edge>
    <edge id="e989" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNever()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6068-6248;179-184;3-3/6068-6248;179-184;3-3/6068-6248;179-184;3-3/6068-6248;179-184;3-3];</data>
    </edge>
    <edge id="e990" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNot()" target="org.codehaus.jparsec.pattern.CharPredicates.not(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6255-6423;186-190;3-3/6255-6423;186-190;3-3/6255-6423;186-190;3-3];</data>
    </edge>
    <edge id="e991" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNot()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6255-6423;186-190;3-3/6255-6423;186-190;3-3];</data>
    </edge>
    <edge id="e992" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNot()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6255-6423;186-190;3-3/6255-6423;186-190;3-3];</data>
    </edge>
    <edge id="e993" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNot()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[6255-6423;186-190;3-3];</data>
    </edge>
    <edge id="e994" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotAmong()" target="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2210-2470;68-74;3-3];</data>
    </edge>
    <edge id="e995" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotAmong()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[2210-2470;68-74;3-3/2210-2470;68-74;3-3/2210-2470;68-74;3-3];</data>
    </edge>
    <edge id="e996" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotChar()" target="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[737-951;24-29;3-3];</data>
    </edge>
    <edge id="e997" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotChar()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[737-951;24-29;3-3/737-951;24-29;3-3];</data>
    </edge>
    <edge id="e998" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotRange()" target="org.codehaus.jparsec.pattern.CharPredicates.notRange(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1600-1944;50-58;3-3];</data>
    </edge>
    <edge id="e999" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testNotRange()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[1600-1944;50-58;3-3/1600-1944;50-58;3-3/1600-1944;50-58;3-3/1600-1944;50-58;3-3/1600-1944;50-58;3-3];</data>
    </edge>
    <edge id="e1000" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1001" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicates.or(org.codehaus.jparsec.pattern.CharPredicate,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1002" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1003" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1004" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1005" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testOr()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3/7162-7864;207-220;3-3];</data>
    </edge>
    <edge id="e1006" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testRange()" target="org.codehaus.jparsec.pattern.CharPredicates.range(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[958-1294;31-39;3-3];</data>
    </edge>
    <edge id="e1007" source="org.codehaus.jparsec.pattern.CharPredicatesTest.testRange()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/CharPredicatesTest.java;[958-1294;31-39;3-3/958-1294;31-39;3-3/958-1294;31-39;3-3/958-1294;31-39;3-3/958-1294;31-39;3-3];</data>
    </edge>
    <edge id="e1008" source="org.codehaus.jparsec.pattern.Pattern.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4568-4914;124-131;3-3];</data>
    </edge>
    <edge id="e1009" source="org.codehaus.jparsec.pattern.Pattern.many()" target="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2696-2898;59-65;3-3];</data>
    </edge>
    <edge id="e1010" source="org.codehaus.jparsec.pattern.Pattern.many(int)" target="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2905-3225;67-76;3-3];</data>
    </edge>
    <edge id="e1011" source="org.codehaus.jparsec.pattern.Pattern.many1()" target="org.codehaus.jparsec.pattern.Pattern.many(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3232-3423;78-84;3-3];</data>
    </edge>
    <edge id="e1012" source="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2127-2500;41-50;3-3];</data>
    </edge>
    <edge id="e1013" source="org.codehaus.jparsec.pattern.Pattern.not()" target="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4189-4377;109-115;3-3];</data>
    </edge>
    <edge id="e1014" source="org.codehaus.jparsec.pattern.Pattern.optional()" target="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[2507-2689;52-57;3-3];</data>
    </edge>
    <edge id="e1015" source="org.codehaus.jparsec.pattern.Pattern.or(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[5117-5290;140-143;3-3];</data>
    </edge>
    <edge id="e1016" source="org.codehaus.jparsec.pattern.Pattern.peek()" target="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4384-4561;117-122;3-3];</data>
    </edge>
    <edge id="e1017" source="org.codehaus.jparsec.pattern.Pattern.repeat(int)" target="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[4921-5110;133-138;3-3];</data>
    </edge>
    <edge id="e1018" source="org.codehaus.jparsec.pattern.Pattern.some(int)" target="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3430-3747;86-95;3-3];</data>
    </edge>
    <edge id="e1019" source="org.codehaus.jparsec.pattern.Pattern.some(int,int)" target="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Pattern.java;[3754-4182;97-107;3-3];</data>
    </edge>
    <edge id="e1020" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Patterns.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1021" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Pattern.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1022" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1023" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1024" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Patterns#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1025" source="org.codehaus.jparsec.pattern.PatternTest.testIfElse()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2207-2776;65-78;3-3/2207-2776;65-78;3-3];</data>
    </edge>
    <edge id="e1026" source="org.codehaus.jparsec.pattern.PatternTest.testMany()" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3/2783-3063;80-85;3-3/2783-3063;80-85;3-3/2783-3063;80-85;3-3];</data>
    </edge>
    <edge id="e1027" source="org.codehaus.jparsec.pattern.PatternTest.testMany()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3/2783-3063;80-85;3-3/2783-3063;80-85;3-3/2783-3063;80-85;3-3];</data>
    </edge>
    <edge id="e1028" source="org.codehaus.jparsec.pattern.PatternTest.testMany()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3/2783-3063;80-85;3-3];</data>
    </edge>
    <edge id="e1029" source="org.codehaus.jparsec.pattern.PatternTest.testMany()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3];</data>
    </edge>
    <edge id="e1030" source="org.codehaus.jparsec.pattern.PatternTest.testMany()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2783-3063;80-85;3-3];</data>
    </edge>
    <edge id="e1031" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Pattern.many1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3/3070-3362;87-92;3-3/3070-3362;87-92;3-3/3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1032" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3/3070-3362;87-92;3-3/3070-3362;87-92;3-3/3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1033" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3/3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1034" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1035" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1036" source="org.codehaus.jparsec.pattern.PatternTest.testMany1()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3070-3362;87-92;3-3];</data>
    </edge>
    <edge id="e1037" source="org.codehaus.jparsec.pattern.PatternTest.testMany_throwsForNegativeMin()" target="org.codehaus.jparsec.pattern.Pattern.many(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3865-4056;104-111;3-3];</data>
    </edge>
    <edge id="e1038" source="org.codehaus.jparsec.pattern.PatternTest.testMany_throwsForNegativeMin()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3865-4056;104-111;3-3];</data>
    </edge>
    <edge id="e1039" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Pattern.many(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1040" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1041" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1042" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1043" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1044" source="org.codehaus.jparsec.pattern.PatternTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[3369-3858;94-102;3-3/3369-3858;94-102;3-3];</data>
    </edge>
    <edge id="e1045" source="org.codehaus.jparsec.pattern.PatternTest.testMismatch()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[363-424;14-16;3-3];</data>
    </edge>
    <edge id="e1046" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1047" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1048" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1049" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1050" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1051" source="org.codehaus.jparsec.pattern.PatternTest.testNext()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[431-685;18-22;3-3/431-685;18-22;3-3];</data>
    </edge>
    <edge id="e1052" source="org.codehaus.jparsec.pattern.PatternTest.testNot()" target="org.codehaus.jparsec.pattern.Pattern.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3/692-832;24-27;3-3];</data>
    </edge>
    <edge id="e1053" source="org.codehaus.jparsec.pattern.PatternTest.testNot()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3/692-832;24-27;3-3];</data>
    </edge>
    <edge id="e1054" source="org.codehaus.jparsec.pattern.PatternTest.testNot()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3];</data>
    </edge>
    <edge id="e1055" source="org.codehaus.jparsec.pattern.PatternTest.testNot()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3];</data>
    </edge>
    <edge id="e1056" source="org.codehaus.jparsec.pattern.PatternTest.testNot()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[692-832;24-27;3-3];</data>
    </edge>
    <edge id="e1057" source="org.codehaus.jparsec.pattern.PatternTest.testOptional()" target="org.codehaus.jparsec.pattern.Pattern.optional()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3/1172-1389;36-40;3-3/1172-1389;36-40;3-3];</data>
    </edge>
    <edge id="e1058" source="org.codehaus.jparsec.pattern.PatternTest.testOptional()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3/1172-1389;36-40;3-3/1172-1389;36-40;3-3];</data>
    </edge>
    <edge id="e1059" source="org.codehaus.jparsec.pattern.PatternTest.testOptional()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3];</data>
    </edge>
    <edge id="e1060" source="org.codehaus.jparsec.pattern.PatternTest.testOptional()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3];</data>
    </edge>
    <edge id="e1061" source="org.codehaus.jparsec.pattern.PatternTest.testOptional()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1172-1389;36-40;3-3];</data>
    </edge>
    <edge id="e1062" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1063" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Pattern.or(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1064" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1065" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3/839-1165;29-34;3-3/839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1066" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1067" source="org.codehaus.jparsec.pattern.PatternTest.testOr()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[839-1165;29-34;3-3];</data>
    </edge>
    <edge id="e1068" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1069" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Pattern.peek()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3/1396-1610;42-46;3-3/1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1070" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3/1396-1610;42-46;3-3/1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1071" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1072" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1073" source="org.codehaus.jparsec.pattern.PatternTest.testPeek()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1396-1610;42-46;3-3];</data>
    </edge>
    <edge id="e1074" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Pattern.repeat(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1075" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1076" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3/1617-1997;48-54;3-3/1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1077" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1078" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3/1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1079" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[1617-1997;48-54;3-3];</data>
    </edge>
    <edge id="e1080" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat_throwsForNegativeNumber()" target="org.codehaus.jparsec.pattern.Pattern.repeat(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2004-2200;56-63;3-3];</data>
    </edge>
    <edge id="e1081" source="org.codehaus.jparsec.pattern.PatternTest.testRepeat_throwsForNegativeNumber()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[2004-2200;56-63;3-3];</data>
    </edge>
    <edge id="e1082" source="org.codehaus.jparsec.pattern.PatternTest.testSome()" target="org.codehaus.jparsec.pattern.Pattern.some(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3];</data>
    </edge>
    <edge id="e1083" source="org.codehaus.jparsec.pattern.PatternTest.testSome()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3/4063-4458;113-120;3-3];</data>
    </edge>
    <edge id="e1084" source="org.codehaus.jparsec.pattern.PatternTest.testSome()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3/4063-4458;113-120;3-3];</data>
    </edge>
    <edge id="e1085" source="org.codehaus.jparsec.pattern.PatternTest.testSome()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3/4063-4458;113-120;3-3];</data>
    </edge>
    <edge id="e1086" source="org.codehaus.jparsec.pattern.PatternTest.testSome()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4063-4458;113-120;3-3/4063-4458;113-120;3-3];</data>
    </edge>
    <edge id="e1087" source="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMax()" target="org.codehaus.jparsec.pattern.Pattern.some(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4841-5032;130-137;3-3];</data>
    </edge>
    <edge id="e1088" source="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMax()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4841-5032;130-137;3-3];</data>
    </edge>
    <edge id="e1089" source="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMinMax()" target="org.codehaus.jparsec.pattern.Pattern.some(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[5039-5382;139-152;3-3/5039-5382;139-152;3-3];</data>
    </edge>
    <edge id="e1090" source="org.codehaus.jparsec.pattern.PatternTest.testSome_throwsForNegativeMinMax()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[5039-5382;139-152;3-3/5039-5382;139-152;3-3];</data>
    </edge>
    <edge id="e1091" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Pattern.some(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1092" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3/4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1093" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3/4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1094" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1095" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3/4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1096" source="org.codehaus.jparsec.pattern.PatternTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternTest.java;[4465-4834;122-128;3-3];</data>
    </edge>
    <edge id="e1097" source="org.codehaus.jparsec.pattern.Patterns$1()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1098" source="org.codehaus.jparsec.pattern.Patterns$1.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1571-1673;33-35;5-5];</data>
    </edge>
    <edge id="e1099" source="org.codehaus.jparsec.pattern.Patterns#NEVER" target="org.codehaus.jparsec.pattern.Patterns$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1442-1678;31-36;3-4];</data>
    </edge>
    <edge id="e1100" source="org.codehaus.jparsec.pattern.Patterns$2()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1101" source="org.codehaus.jparsec.pattern.Patterns#ALWAYS" target="org.codehaus.jparsec.pattern.Patterns$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1683-1908;38-43;3-4];</data>
    </edge>
    <edge id="e1102" source="org.codehaus.jparsec.pattern.Patterns#ANY_CHAR" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[1915-2062;45-46;3-55];</data>
    </edge>
    <edge id="e1103" source="org.codehaus.jparsec.pattern.Patterns#EOF" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2069-2248;48-52;3-48];</data>
    </edge>
    <edge id="e1104" source="org.codehaus.jparsec.pattern.Patterns$3()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1105" source="org.codehaus.jparsec.pattern.Patterns$3.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2512-2732;59-63;7-7/2512-2732;59-63;7-7];</data>
    </edge>
    <edge id="e1106" source="org.codehaus.jparsec.pattern.Patterns#ESCAPED" target="org.codehaus.jparsec.pattern.Patterns$3()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2255-2737;54-64;3-4];</data>
    </edge>
    <edge id="e1107" source="org.codehaus.jparsec.pattern.Patterns#INTEGER" target="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2744-2871;66-67;3-71];</data>
    </edge>
    <edge id="e1108" source="org.codehaus.jparsec.pattern.Patterns#STRICT_DECIMAL" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[2878-3282;69-76;3-79];</data>
    </edge>
    <edge id="e1109" source="org.codehaus.jparsec.pattern.Patterns#FRACTION" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[3289-3449;78-79;3-67];</data>
    </edge>
    <edge id="e1110" source="org.codehaus.jparsec.pattern.Patterns#DECIMAL" target="org.codehaus.jparsec.pattern.Pattern.or(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[3456-3648;81-85;3-68];</data>
    </edge>
    <edge id="e1111" source="org.codehaus.jparsec.pattern.Patterns#WORD" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[3655-3977;87-92;3-61];</data>
    </edge>
    <edge id="e1112" source="org.codehaus.jparsec.pattern.Patterns#OCT_INTEGER" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[3984-4248;94-99;3-60];</data>
    </edge>
    <edge id="e1113" source="org.codehaus.jparsec.pattern.Patterns#DEC_INTEGER" target="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[4255-4510;101-106;3-63];</data>
    </edge>
    <edge id="e1114" source="org.codehaus.jparsec.pattern.Patterns#HEX_INTEGER" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[4517-4799;108-113;3-77];</data>
    </edge>
    <edge id="e1115" source="org.codehaus.jparsec.pattern.Patterns#SCIENTIFIC_NOTATION" target="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[4806-5052;115-120;3-61];</data>
    </edge>
    <edge id="e1116" source="org.codehaus.jparsec.pattern.Patterns#REGEXP_PATTERN" target="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5060-5319;123-127;3-77];</data>
    </edge>
    <edge id="e1117" source="org.codehaus.jparsec.pattern.Patterns#REGEXP_MODIFIERS" target="org.codehaus.jparsec.pattern.Patterns.getModifiersPattern()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5327-5524;130-134;3-71];</data>
    </edge>
    <edge id="e1118" source="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21964-22216;616-622;3-3];</data>
    </edge>
    <edge id="e1119" source="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22223-22605;624-632;3-3];</data>
    </edge>
    <edge id="e1120" source="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22223-22605;624-632;3-3];</data>
    </edge>
    <edge id="e1121" source="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20667-20992;575-583;3-3];</data>
    </edge>
    <edge id="e1122" source="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20667-20992;575-583;3-3/20667-20992;575-583;3-3];</data>
    </edge>
    <edge id="e1123" source="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20999-21316;585-594;3-3];</data>
    </edge>
    <edge id="e1124" source="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20999-21316;585-594;3-3/20999-21316;585-594;3-3];</data>
    </edge>
    <edge id="e1125" source="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21323-21619;596-603;3-3];</data>
    </edge>
    <edge id="e1126" source="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21626-21957;605-614;3-3];</data>
    </edge>
    <edge id="e1127" source="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[21626-21957;605-614;3-3];</data>
    </edge>
    <edge id="e1128" source="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9998-10380;260-271;3-3/9998-10380;260-271;3-3];</data>
    </edge>
    <edge id="e1129" source="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.compareIgnoreCase(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10385-10800;273-284;3-3];</data>
    </edge>
    <edge id="e1130" source="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10385-10800;273-284;3-3/10385-10800;273-284;3-3];</data>
    </edge>
    <edge id="e1131" source="org.codehaus.jparsec.pattern.Patterns.among(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6965-7262;178-184;3-3];</data>
    </edge>
    <edge id="e1132" source="org.codehaus.jparsec.pattern.Patterns.among(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6965-7262;178-184;3-3];</data>
    </edge>
    <edge id="e1133" source="org.codehaus.jparsec.pattern.Patterns$13()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1134" source="org.codehaus.jparsec.pattern.Patterns$13.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11608-11903;310-318;7-7];</data>
    </edge>
    <edge id="e1135" source="org.codehaus.jparsec.pattern.Patterns$13.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11608-11903;310-318;7-7/11608-11903;310-318;7-7];</data>
    </edge>
    <edge id="e1136" source="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Patterns$13()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11338-11914;304-320;3-3];</data>
    </edge>
    <edge id="e1137" source="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11338-11914;304-320;3-3];</data>
    </edge>
    <edge id="e1138" source="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11338-11914;304-320;3-3];</data>
    </edge>
    <edge id="e1139" source="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11338-11914;304-320;3-3/11338-11914;304-320;3-3];</data>
    </edge>
    <edge id="e1140" source="org.codehaus.jparsec.pattern.Patterns.getModifiersPattern()" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22900-23006;641-643;3-3];</data>
    </edge>
    <edge id="e1141" source="org.codehaus.jparsec.pattern.Patterns.getModifiersPattern()" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22900-23006;641-643;3-3];</data>
    </edge>
    <edge id="e1142" source="org.codehaus.jparsec.pattern.Patterns.getModifiersPattern()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22900-23006;641-643;3-3];</data>
    </edge>
    <edge id="e1143" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Patterns.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3/22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1144" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3/22612-22893;634-639;3-3/22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1145" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1146" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1147" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1148" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1149" source="org.codehaus.jparsec.pattern.Patterns.getRegularExpressionPattern()" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[22612-22893;634-639;3-3];</data>
    </edge>
    <edge id="e1150" source="org.codehaus.jparsec.pattern.Patterns$4()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1151" source="org.codehaus.jparsec.pattern.Patterns$4.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5771-5921;142-145;7-7];</data>
    </edge>
    <edge id="e1152" source="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)" target="org.codehaus.jparsec.pattern.Patterns$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5531-5932;136-147;3-3];</data>
    </edge>
    <edge id="e1153" source="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5531-5932;136-147;3-3];</data>
    </edge>
    <edge id="e1154" source="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5531-5932;136-147;3-3];</data>
    </edge>
    <edge id="e1155" source="org.codehaus.jparsec.pattern.Patterns$5()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1156" source="org.codehaus.jparsec.pattern.Patterns$5.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6176-6327;155-158;7-7];</data>
    </edge>
    <edge id="e1157" source="org.codehaus.jparsec.pattern.Patterns.hasExact(int)" target="org.codehaus.jparsec.pattern.Patterns$5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5939-6338;149-160;3-3];</data>
    </edge>
    <edge id="e1158" source="org.codehaus.jparsec.pattern.Patterns.hasExact(int)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5939-6338;149-160;3-3];</data>
    </edge>
    <edge id="e1159" source="org.codehaus.jparsec.pattern.Patterns.hasExact(int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[5939-6338;149-160;3-3];</data>
    </edge>
    <edge id="e1160" source="org.codehaus.jparsec.pattern.Patterns$28()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1161" source="org.codehaus.jparsec.pattern.Patterns$28.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19078-19562;530-540;7-7/19078-19562;530-540;7-7/19078-19562;530-540;7-7];</data>
    </edge>
    <edge id="e1162" source="org.codehaus.jparsec.pattern.Patterns$28.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19078-19562;530-540;7-7/19078-19562;530-540;7-7/19078-19562;530-540;7-7];</data>
    </edge>
    <edge id="e1163" source="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$28()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18947-19573;528-542;3-3];</data>
    </edge>
    <edge id="e1164" source="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18947-19573;528-542;3-3];</data>
    </edge>
    <edge id="e1165" source="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18947-19573;528-542;3-3/18947-19573;528-542;3-3/18947-19573;528-542;3-3];</data>
    </edge>
    <edge id="e1166" source="org.codehaus.jparsec.pattern.Patterns.ifelse(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18947-19573;528-542;3-3/18947-19573;528-542;3-3/18947-19573;528-542;3-3];</data>
    </edge>
    <edge id="e1167" source="org.codehaus.jparsec.pattern.Patterns.isChar(char)" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6345-6645;162-168;3-3];</data>
    </edge>
    <edge id="e1168" source="org.codehaus.jparsec.pattern.Patterns.isChar(char)" target="org.codehaus.jparsec.pattern.CharPredicates.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6345-6645;162-168;3-3];</data>
    </edge>
    <edge id="e1169" source="org.codehaus.jparsec.pattern.Patterns$6()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1170" source="org.codehaus.jparsec.pattern.Patterns$6.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7552-7779;192-196;7-7];</data>
    </edge>
    <edge id="e1171" source="org.codehaus.jparsec.pattern.Patterns$6.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7552-7779;192-196;7-7/7552-7779;192-196;7-7];</data>
    </edge>
    <edge id="e1172" source="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7269-7790;186-198;3-3];</data>
    </edge>
    <edge id="e1173" source="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7269-7790;186-198;3-3];</data>
    </edge>
    <edge id="e1174" source="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7269-7790;186-198;3-3];</data>
    </edge>
    <edge id="e1175" source="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7269-7790;186-198;3-3/7269-7790;186-198;3-3];</data>
    </edge>
    <edge id="e1176" source="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7795-8088;200-206;3-3];</data>
    </edge>
    <edge id="e1177" source="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7795-8088;200-206;3-3];</data>
    </edge>
    <edge id="e1178" source="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7795-8088;200-206;3-3];</data>
    </edge>
    <edge id="e1179" source="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[7795-8088;200-206;3-3];</data>
    </edge>
    <edge id="e1180" source="org.codehaus.jparsec.pattern.Patterns.longer(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17173-17450;475-481;3-3];</data>
    </edge>
    <edge id="e1181" source="org.codehaus.jparsec.pattern.Patterns$26()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1182" source="org.codehaus.jparsec.pattern.Patterns$26.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17746-17994;489-496;7-7];</data>
    </edge>
    <edge id="e1183" source="org.codehaus.jparsec.pattern.Patterns$26.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17746-17994;489-496;7-7];</data>
    </edge>
    <edge id="e1184" source="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Patterns$26()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17457-18005;483-498;3-3];</data>
    </edge>
    <edge id="e1185" source="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17457-18005;483-498;3-3];</data>
    </edge>
    <edge id="e1186" source="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17457-18005;483-498;3-3];</data>
    </edge>
    <edge id="e1187" source="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17457-18005;483-498;3-3];</data>
    </edge>
    <edge id="e1188" source="org.codehaus.jparsec.pattern.Patterns$18()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1189" source="org.codehaus.jparsec.pattern.Patterns$18.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14234-14497;389-393;7-7];</data>
    </edge>
    <edge id="e1190" source="org.codehaus.jparsec.pattern.Patterns$18.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14234-14497;389-393;7-7];</data>
    </edge>
    <edge id="e1191" source="org.codehaus.jparsec.pattern.Patterns$18.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14234-14497;389-393;7-7/14234-14497;389-393;7-7];</data>
    </edge>
    <edge id="e1192" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1193" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$18()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1194" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1195" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1196" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1197" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13941-14508;382-395;3-3/13941-14508;382-395;3-3];</data>
    </edge>
    <edge id="e1198" source="org.codehaus.jparsec.pattern.Patterns$20()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1199" source="org.codehaus.jparsec.pattern.Patterns$20.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14982-15241;411-415;7-7];</data>
    </edge>
    <edge id="e1200" source="org.codehaus.jparsec.pattern.Patterns$20.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14982-15241;411-415;7-7];</data>
    </edge>
    <edge id="e1201" source="org.codehaus.jparsec.pattern.Patterns$20.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14982-15241;411-415;7-7/14982-15241;411-415;7-7];</data>
    </edge>
    <edge id="e1202" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1203" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$20()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1204" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1205" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1206" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1207" source="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14863-15252;408-417;3-3/14863-15252;408-417;3-3];</data>
    </edge>
    <edge id="e1208" source="org.codehaus.jparsec.pattern.Patterns$19()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1209" source="org.codehaus.jparsec.pattern.Patterns$19.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14715-14845;402-404;7-7];</data>
    </edge>
    <edge id="e1210" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$19()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14515-14856;397-406;3-3];</data>
    </edge>
    <edge id="e1211" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14515-14856;397-406;3-3];</data>
    </edge>
    <edge id="e1212" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[14515-14856;397-406;3-3];</data>
    </edge>
    <edge id="e1213" source="org.codehaus.jparsec.pattern.Patterns$21()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1214" source="org.codehaus.jparsec.pattern.Patterns$21.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15335-15463;421-423;7-7];</data>
    </edge>
    <edge id="e1215" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$21()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15257-15474;419-425;3-3];</data>
    </edge>
    <edge id="e1216" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15257-15474;419-425;3-3];</data>
    </edge>
    <edge id="e1217" source="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchMany(org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15257-15474;419-425;3-3];</data>
    </edge>
    <edge id="e1218" source="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19580-19767;544-547;3-3];</data>
    </edge>
    <edge id="e1219" source="org.codehaus.jparsec.pattern.Patterns$11()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1220" source="org.codehaus.jparsec.pattern.Patterns$11.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10877-11055;288-291;7-7];</data>
    </edge>
    <edge id="e1221" source="org.codehaus.jparsec.pattern.Patterns$11.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10877-11055;288-291;7-7/10877-11055;288-291;7-7];</data>
    </edge>
    <edge id="e1222" source="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$11()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10805-11066;286-293;3-3];</data>
    </edge>
    <edge id="e1223" source="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10805-11066;286-293;3-3];</data>
    </edge>
    <edge id="e1224" source="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10805-11066;286-293;3-3];</data>
    </edge>
    <edge id="e1225" source="org.codehaus.jparsec.pattern.Patterns.not(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[10805-11066;286-293;3-3/10805-11066;286-293;3-3];</data>
    </edge>
    <edge id="e1226" source="org.codehaus.jparsec.pattern.Patterns$9()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1227" source="org.codehaus.jparsec.pattern.Patterns$9.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9033-9269;232-237;7-7];</data>
    </edge>
    <edge id="e1228" source="org.codehaus.jparsec.pattern.Patterns$9.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9033-9269;232-237;7-7/9033-9269;232-237;7-7/9033-9269;232-237;7-7];</data>
    </edge>
    <edge id="e1229" source="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8754-9280;226-239;3-3];</data>
    </edge>
    <edge id="e1230" source="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8754-9280;226-239;3-3];</data>
    </edge>
    <edge id="e1231" source="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8754-9280;226-239;3-3];</data>
    </edge>
    <edge id="e1232" source="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8754-9280;226-239;3-3/8754-9280;226-239;3-3/8754-9280;226-239;3-3];</data>
    </edge>
    <edge id="e1233" source="org.codehaus.jparsec.pattern.Patterns$10()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1234" source="org.codehaus.jparsec.pattern.Patterns$10.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9600-9851;247-252;7-7];</data>
    </edge>
    <edge id="e1235" source="org.codehaus.jparsec.pattern.Patterns$10.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9600-9851;247-252;7-7/9600-9851;247-252;7-7/9600-9851;247-252;7-7];</data>
    </edge>
    <edge id="e1236" source="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns$10()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9287-9862;241-254;3-3];</data>
    </edge>
    <edge id="e1237" source="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9287-9862;241-254;3-3];</data>
    </edge>
    <edge id="e1238" source="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9287-9862;241-254;3-3];</data>
    </edge>
    <edge id="e1239" source="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[9287-9862;241-254;3-3/9287-9862;241-254;3-3/9287-9862;241-254;3-3];</data>
    </edge>
    <edge id="e1240" source="org.codehaus.jparsec.pattern.Patterns$30()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1241" source="org.codehaus.jparsec.pattern.Patterns$30.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20484-20649;568-571;7-7];</data>
    </edge>
    <edge id="e1242" source="org.codehaus.jparsec.pattern.Patterns$30.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20484-20649;568-571;7-7];</data>
    </edge>
    <edge id="e1243" source="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$30()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20407-20660;566-573;3-3];</data>
    </edge>
    <edge id="e1244" source="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20407-20660;566-573;3-3];</data>
    </edge>
    <edge id="e1245" source="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20407-20660;566-573;3-3];</data>
    </edge>
    <edge id="e1246" source="org.codehaus.jparsec.pattern.Patterns.optional(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20407-20660;566-573;3-3];</data>
    </edge>
    <edge id="e1247" source="org.codehaus.jparsec.pattern.Patterns$14()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1248" source="org.codehaus.jparsec.pattern.Patterns$14.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12186-12426;328-334;7-7];</data>
    </edge>
    <edge id="e1249" source="org.codehaus.jparsec.pattern.Patterns$14.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12186-12426;328-334;7-7/12186-12426;328-334;7-7];</data>
    </edge>
    <edge id="e1250" source="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Patterns$14()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11919-12437;322-336;3-3];</data>
    </edge>
    <edge id="e1251" source="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11919-12437;322-336;3-3];</data>
    </edge>
    <edge id="e1252" source="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11919-12437;322-336;3-3];</data>
    </edge>
    <edge id="e1253" source="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11919-12437;322-336;3-3/11919-12437;322-336;3-3];</data>
    </edge>
    <edge id="e1254" source="org.codehaus.jparsec.pattern.Patterns$12()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1255" source="org.codehaus.jparsec.pattern.Patterns$12.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11144-11322;297-300;7-7];</data>
    </edge>
    <edge id="e1256" source="org.codehaus.jparsec.pattern.Patterns$12.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11144-11322;297-300;7-7/11144-11322;297-300;7-7];</data>
    </edge>
    <edge id="e1257" source="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$12()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11071-11333;295-302;3-3];</data>
    </edge>
    <edge id="e1258" source="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11071-11333;295-302;3-3];</data>
    </edge>
    <edge id="e1259" source="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11071-11333;295-302;3-3];</data>
    </edge>
    <edge id="e1260" source="org.codehaus.jparsec.pattern.Patterns.peek(org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[11071-11333;295-302;3-3/11071-11333;295-302;3-3];</data>
    </edge>
    <edge id="e1261" source="org.codehaus.jparsec.pattern.Patterns.range(char,char)" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6652-6958;170-176;3-3];</data>
    </edge>
    <edge id="e1262" source="org.codehaus.jparsec.pattern.Patterns.range(char,char)" target="org.codehaus.jparsec.pattern.CharPredicates.range(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[6652-6958;170-176;3-3];</data>
    </edge>
    <edge id="e1263" source="org.codehaus.jparsec.pattern.Patterns.regex(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.regex(java.util.regex.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[20232-20402;561-564;3-3];</data>
    </edge>
    <edge id="e1264" source="org.codehaus.jparsec.pattern.Patterns$29()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1265" source="org.codehaus.jparsec.pattern.Patterns$29.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19937-20214;552-557;7-7/19937-20214;552-557;7-7];</data>
    </edge>
    <edge id="e1266" source="org.codehaus.jparsec.pattern.Patterns.regex(java.util.regex.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$29()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19774-20225;549-559;3-3];</data>
    </edge>
    <edge id="e1267" source="org.codehaus.jparsec.pattern.Patterns.regex(java.util.regex.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19774-20225;549-559;3-3];</data>
    </edge>
    <edge id="e1268" source="org.codehaus.jparsec.pattern.Patterns.regex(java.util.regex.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[19774-20225;549-559;3-3/19774-20225;549-559;3-3];</data>
    </edge>
    <edge id="e1269" source="org.codehaus.jparsec.pattern.Patterns$16()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1270" source="org.codehaus.jparsec.pattern.Patterns$16.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13376-13511;363-365;7-7];</data>
    </edge>
    <edge id="e1271" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13046-13522;356-367;3-3];</data>
    </edge>
    <edge id="e1272" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$16()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13046-13522;356-367;3-3];</data>
    </edge>
    <edge id="e1273" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13046-13522;356-367;3-3];</data>
    </edge>
    <edge id="e1274" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13046-13522;356-367;3-3];</data>
    </edge>
    <edge id="e1275" source="org.codehaus.jparsec.pattern.Patterns$17()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1276" source="org.codehaus.jparsec.pattern.Patterns$17.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13790-13923;376-378;7-7];</data>
    </edge>
    <edge id="e1277" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13529-13934;369-380;3-3];</data>
    </edge>
    <edge id="e1278" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$17()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13529-13934;369-380;3-3];</data>
    </edge>
    <edge id="e1279" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13529-13934;369-380;3-3];</data>
    </edge>
    <edge id="e1280" source="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[13529-13934;369-380;3-3];</data>
    </edge>
    <edge id="e1281" source="org.codehaus.jparsec.pattern.Patterns$15()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1282" source="org.codehaus.jparsec.pattern.Patterns$15.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12702-13030;344-352;7-7];</data>
    </edge>
    <edge id="e1283" source="org.codehaus.jparsec.pattern.Patterns$15.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12702-13030;344-352;7-7];</data>
    </edge>
    <edge id="e1284" source="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Patterns$15()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12442-13041;338-354;3-3];</data>
    </edge>
    <edge id="e1285" source="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12442-13041;338-354;3-3];</data>
    </edge>
    <edge id="e1286" source="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12442-13041;338-354;3-3];</data>
    </edge>
    <edge id="e1287" source="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[12442-13041;338-354;3-3];</data>
    </edge>
    <edge id="e1288" source="org.codehaus.jparsec.pattern.Patterns.shorter(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18012-18292;500-506;3-3];</data>
    </edge>
    <edge id="e1289" source="org.codehaus.jparsec.pattern.Patterns$27()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1290" source="org.codehaus.jparsec.pattern.Patterns$27.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18590-18931;514-524;7-7];</data>
    </edge>
    <edge id="e1291" source="org.codehaus.jparsec.pattern.Patterns$27.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18590-18931;514-524;7-7/18590-18931;514-524;7-7/18590-18931;514-524;7-7];</data>
    </edge>
    <edge id="e1292" source="org.codehaus.jparsec.pattern.Patterns$27.match(java.lang.CharSequence,int,int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18590-18931;514-524;7-7];</data>
    </edge>
    <edge id="e1293" source="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Patterns$27()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3];</data>
    </edge>
    <edge id="e1294" source="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3];</data>
    </edge>
    <edge id="e1295" source="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3];</data>
    </edge>
    <edge id="e1296" source="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3/18299-18942;508-526;3-3/18299-18942;508-526;3-3];</data>
    </edge>
    <edge id="e1297" source="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[18299-18942;508-526;3-3];</data>
    </edge>
    <edge id="e1298" source="org.codehaus.jparsec.pattern.Patterns$22()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1299" source="org.codehaus.jparsec.pattern.Patterns$22.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15793-16067;434-438;7-7];</data>
    </edge>
    <edge id="e1300" source="org.codehaus.jparsec.pattern.Patterns$22.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15793-16067;434-438;7-7];</data>
    </edge>
    <edge id="e1301" source="org.codehaus.jparsec.pattern.Patterns$22.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15793-16067;434-438;7-7/15793-16067;434-438;7-7];</data>
    </edge>
    <edge id="e1302" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1303" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$22()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1304" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1305" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1306" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1307" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[15481-16078;427-440;3-3/15481-16078;427-440;3-3];</data>
    </edge>
    <edge id="e1308" source="org.codehaus.jparsec.pattern.Patterns$24()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1309" source="org.codehaus.jparsec.pattern.Patterns$24.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16637-16897;458-462;7-7];</data>
    </edge>
    <edge id="e1310" source="org.codehaus.jparsec.pattern.Patterns$24.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16637-16897;458-462;7-7];</data>
    </edge>
    <edge id="e1311" source="org.codehaus.jparsec.pattern.Patterns$24.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16637-16897;458-462;7-7/16637-16897;458-462;7-7];</data>
    </edge>
    <edge id="e1312" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1313" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$24()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1314" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1315" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchRepeat(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1316" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1317" source="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16500-16908;455-464;3-3/16500-16908;455-464;3-3];</data>
    </edge>
    <edge id="e1318" source="org.codehaus.jparsec.pattern.Patterns$23()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1319" source="org.codehaus.jparsec.pattern.Patterns$23.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16349-16484;449-451;7-7];</data>
    </edge>
    <edge id="e1320" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.util.Checks.checkMax(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16085-16495;442-453;3-3];</data>
    </edge>
    <edge id="e1321" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns$23()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16085-16495;442-453;3-3];</data>
    </edge>
    <edge id="e1322" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16085-16495;442-453;3-3];</data>
    </edge>
    <edge id="e1323" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.CharPredicate,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16085-16495;442-453;3-3];</data>
    </edge>
    <edge id="e1324" source="org.codehaus.jparsec.pattern.Patterns$25()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1325" source="org.codehaus.jparsec.pattern.Patterns$25.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[17027-17155;469-471;7-7];</data>
    </edge>
    <edge id="e1326" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.util.Checks.checkMax(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16913-17166;466-473;3-3];</data>
    </edge>
    <edge id="e1327" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns$25()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16913-17166;466-473;3-3];</data>
    </edge>
    <edge id="e1328" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16913-17166;466-473;3-3];</data>
    </edge>
    <edge id="e1329" source="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.matchSome(int,org.codehaus.jparsec.pattern.Pattern,java.lang.CharSequence,int,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[16913-17166;466-473;3-3];</data>
    </edge>
    <edge id="e1330" source="org.codehaus.jparsec.pattern.Patterns$7()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1331" source="org.codehaus.jparsec.pattern.Patterns$7.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8261-8387;211-213;7-7];</data>
    </edge>
    <edge id="e1332" source="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8095-8398;208-215;3-3];</data>
    </edge>
    <edge id="e1333" source="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8095-8398;208-215;3-3];</data>
    </edge>
    <edge id="e1334" source="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.matchString(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8095-8398;208-215;3-3];</data>
    </edge>
    <edge id="e1335" source="org.codehaus.jparsec.pattern.Patterns$8()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1336" source="org.codehaus.jparsec.pattern.Patterns$8.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8595-8736;220-222;7-7];</data>
    </edge>
    <edge id="e1337" source="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8405-8747;217-224;3-3];</data>
    </edge>
    <edge id="e1338" source="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8405-8747;217-224;3-3];</data>
    </edge>
    <edge id="e1339" source="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.matchStringCaseInsensitive(java.lang.String,java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/pattern/Patterns.java;[8405-8747;217-224;3-3];</data>
    </edge>
    <edge id="e1340" source="org.codehaus.jparsec.pattern.PatternsTest.testAlways()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[368-538;15-19;3-3/368-538;15-19;3-3/368-538;15-19;3-3];</data>
    </edge>
    <edge id="e1341" source="org.codehaus.jparsec.pattern.PatternsTest.testAlways()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[368-538;15-19;3-3/368-538;15-19;3-3/368-538;15-19;3-3];</data>
    </edge>
    <edge id="e1342" source="org.codehaus.jparsec.pattern.PatternsTest.testAmong()" target="org.codehaus.jparsec.pattern.Patterns.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3439-3815;85-93;3-3];</data>
    </edge>
    <edge id="e1343" source="org.codehaus.jparsec.pattern.PatternsTest.testAmong()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3439-3815;85-93;3-3/3439-3815;85-93;3-3/3439-3815;85-93;3-3/3439-3815;85-93;3-3/3439-3815;85-93;3-3/3439-3815;85-93;3-3];</data>
    </edge>
    <edge id="e1344" source="org.codehaus.jparsec.pattern.PatternsTest.testAmong()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3439-3815;85-93;3-3/3439-3815;85-93;3-3/3439-3815;85-93;3-3];</data>
    </edge>
    <edge id="e1345" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Patterns.and(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1346" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1347" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3/6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1348" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3/6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1349" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3/6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1350" source="org.codehaus.jparsec.pattern.PatternsTest.testAnd()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6244-6682;142-149;3-3];</data>
    </edge>
    <edge id="e1351" source="org.codehaus.jparsec.pattern.PatternsTest.testAnyChar()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3];</data>
    </edge>
    <edge id="e1352" source="org.codehaus.jparsec.pattern.PatternsTest.testAnyChar()" target="org.codehaus.jparsec.pattern.Patterns#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3/739-1066;27-33;3-3];</data>
    </edge>
    <edge id="e1353" source="org.codehaus.jparsec.pattern.PatternsTest.testAnyChar()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[739-1066;27-33;3-3];</data>
    </edge>
    <edge id="e1354" source="org.codehaus.jparsec.pattern.PatternsTest.testDecInteger()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15289-15577;348-353;3-3/15289-15577;348-353;3-3/15289-15577;348-353;3-3/15289-15577;348-353;3-3];</data>
    </edge>
    <edge id="e1355" source="org.codehaus.jparsec.pattern.PatternsTest.testDecInteger()" target="org.codehaus.jparsec.pattern.Patterns#DEC_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15289-15577;348-353;3-3/15289-15577;348-353;3-3/15289-15577;348-353;3-3/15289-15577;348-353;3-3];</data>
    </edge>
    <edge id="e1356" source="org.codehaus.jparsec.pattern.PatternsTest.testDecInteger()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15289-15577;348-353;3-3/15289-15577;348-353;3-3];</data>
    </edge>
    <edge id="e1357" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimal()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3];</data>
    </edge>
    <edge id="e1358" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimal()" target="org.codehaus.jparsec.pattern.Patterns#DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3/13952-14279;316-322;3-3];</data>
    </edge>
    <edge id="e1359" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimal()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13952-14279;316-322;3-3/13952-14279;316-322;3-3];</data>
    </edge>
    <edge id="e1360" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalL()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3];</data>
    </edge>
    <edge id="e1361" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalL()" target="org.codehaus.jparsec.pattern.Patterns#STRICT_DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3];</data>
    </edge>
    <edge id="e1362" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalL()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12957-13467;296-304;3-3/12957-13467;296-304;3-3/12957-13467;296-304;3-3];</data>
    </edge>
    <edge id="e1363" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalR()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3];</data>
    </edge>
    <edge id="e1364" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalR()" target="org.codehaus.jparsec.pattern.Patterns#FRACTION">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3];</data>
    </edge>
    <edge id="e1365" source="org.codehaus.jparsec.pattern.PatternsTest.testDecimalR()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3/13474-13945;306-314;3-3];</data>
    </edge>
    <edge id="e1366" source="org.codehaus.jparsec.pattern.PatternsTest.testEof()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1853-2038;52-56;3-3/1853-2038;52-56;3-3/1853-2038;52-56;3-3];</data>
    </edge>
    <edge id="e1367" source="org.codehaus.jparsec.pattern.PatternsTest.testEof()" target="org.codehaus.jparsec.pattern.Patterns#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1853-2038;52-56;3-3/1853-2038;52-56;3-3/1853-2038;52-56;3-3];</data>
    </edge>
    <edge id="e1368" source="org.codehaus.jparsec.pattern.PatternsTest.testEscaped()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3];</data>
    </edge>
    <edge id="e1369" source="org.codehaus.jparsec.pattern.PatternsTest.testEscaped()" target="org.codehaus.jparsec.pattern.Patterns#ESCAPED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3];</data>
    </edge>
    <edge id="e1370" source="org.codehaus.jparsec.pattern.PatternsTest.testEscaped()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[3822-4164;95-101;3-3/3822-4164;95-101;3-3/3822-4164;95-101;3-3];</data>
    </edge>
    <edge id="e1371" source="org.codehaus.jparsec.pattern.PatternsTest.testHasAtLeast()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3];</data>
    </edge>
    <edge id="e1372" source="org.codehaus.jparsec.pattern.PatternsTest.testHasAtLeast()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3/1073-1493;35-42;3-3];</data>
    </edge>
    <edge id="e1373" source="org.codehaus.jparsec.pattern.PatternsTest.testHasAtLeast()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1073-1493;35-42;3-3];</data>
    </edge>
    <edge id="e1374" source="org.codehaus.jparsec.pattern.PatternsTest.testHasExact()" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3];</data>
    </edge>
    <edge id="e1375" source="org.codehaus.jparsec.pattern.PatternsTest.testHasExact()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3/1500-1846;44-50;3-3];</data>
    </edge>
    <edge id="e1376" source="org.codehaus.jparsec.pattern.PatternsTest.testHasExact()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[1500-1846;44-50;3-3];</data>
    </edge>
    <edge id="e1377" source="org.codehaus.jparsec.pattern.PatternsTest.testHexInteger()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3];</data>
    </edge>
    <edge id="e1378" source="org.codehaus.jparsec.pattern.PatternsTest.testHexInteger()" target="org.codehaus.jparsec.pattern.Patterns#HEX_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3];</data>
    </edge>
    <edge id="e1379" source="org.codehaus.jparsec.pattern.PatternsTest.testHexInteger()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[15584-16009;355-362;3-3/15584-16009;355-362;3-3/15584-16009;355-362;3-3];</data>
    </edge>
    <edge id="e1380" source="org.codehaus.jparsec.pattern.PatternsTest.testInteger()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14656-14925;333-338;3-3/14656-14925;333-338;3-3/14656-14925;333-338;3-3/14656-14925;333-338;3-3];</data>
    </edge>
    <edge id="e1381" source="org.codehaus.jparsec.pattern.PatternsTest.testInteger()" target="org.codehaus.jparsec.pattern.Patterns#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14656-14925;333-338;3-3/14656-14925;333-338;3-3/14656-14925;333-338;3-3/14656-14925;333-338;3-3];</data>
    </edge>
    <edge id="e1382" source="org.codehaus.jparsec.pattern.PatternsTest.testInteger()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14656-14925;333-338;3-3/14656-14925;333-338;3-3];</data>
    </edge>
    <edge id="e1383" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar()" target="org.codehaus.jparsec.pattern.Patterns.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2045-2330;58-63;3-3/2045-2330;58-63;3-3/2045-2330;58-63;3-3/2045-2330;58-63;3-3];</data>
    </edge>
    <edge id="e1384" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2045-2330;58-63;3-3/2045-2330;58-63;3-3/2045-2330;58-63;3-3/2045-2330;58-63;3-3];</data>
    </edge>
    <edge id="e1385" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2045-2330;58-63;3-3/2045-2330;58-63;3-3];</data>
    </edge>
    <edge id="e1386" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3];</data>
    </edge>
    <edge id="e1387" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3];</data>
    </edge>
    <edge id="e1388" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3];</data>
    </edge>
    <edge id="e1389" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3/2337-2790;65-71;3-3/2337-2790;65-71;3-3];</data>
    </edge>
    <edge id="e1390" source="org.codehaus.jparsec.pattern.PatternsTest.testIsChar_withPredicate()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2337-2790;65-71;3-3/2337-2790;65-71;3-3];</data>
    </edge>
    <edge id="e1391" source="org.codehaus.jparsec.pattern.PatternsTest.testLineComment()" target="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3];</data>
    </edge>
    <edge id="e1392" source="org.codehaus.jparsec.pattern.PatternsTest.testLineComment()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3/4171-4577;103-109;3-3];</data>
    </edge>
    <edge id="e1393" source="org.codehaus.jparsec.pattern.PatternsTest.testLineComment()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4171-4577;103-109;3-3/4171-4577;103-109;3-3];</data>
    </edge>
    <edge id="e1394" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Patterns.longer(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1395" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1396" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1397" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1398" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1399" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3/10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1400" source="org.codehaus.jparsec.pattern.PatternsTest.testLonger()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10898-11424;258-266;3-3];</data>
    </edge>
    <edge id="e1401" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Patterns.longest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1402" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1403" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3/11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1404" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1405" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1406" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3/11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1407" source="org.codehaus.jparsec.pattern.PatternsTest.testLongest()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11431-11914;268-275;3-3];</data>
    </edge>
    <edge id="e1408" source="org.codehaus.jparsec.pattern.PatternsTest.testMany()" target="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8068-8325;182-186;3-3/8068-8325;182-186;3-3/8068-8325;182-186;3-3];</data>
    </edge>
    <edge id="e1409" source="org.codehaus.jparsec.pattern.PatternsTest.testMany()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8068-8325;182-186;3-3/8068-8325;182-186;3-3/8068-8325;182-186;3-3];</data>
    </edge>
    <edge id="e1410" source="org.codehaus.jparsec.pattern.PatternsTest.testMany()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8068-8325;182-186;3-3/8068-8325;182-186;3-3];</data>
    </edge>
    <edge id="e1411" source="org.codehaus.jparsec.pattern.PatternsTest.testMany()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8068-8325;182-186;3-3];</data>
    </edge>
    <edge id="e1412" source="org.codehaus.jparsec.pattern.PatternsTest.testMany1()" target="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3];</data>
    </edge>
    <edge id="e1413" source="org.codehaus.jparsec.pattern.PatternsTest.testMany1()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3];</data>
    </edge>
    <edge id="e1414" source="org.codehaus.jparsec.pattern.PatternsTest.testMany1()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3];</data>
    </edge>
    <edge id="e1415" source="org.codehaus.jparsec.pattern.PatternsTest.testMany1()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3/8332-8693;188-193;3-3/8332-8693;188-193;3-3];</data>
    </edge>
    <edge id="e1416" source="org.codehaus.jparsec.pattern.PatternsTest.testMany1()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8332-8693;188-193;3-3];</data>
    </edge>
    <edge id="e1417" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_negativeNumberThrows()" target="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9083-9299;202-209;3-3];</data>
    </edge>
    <edge id="e1418" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_negativeNumberThrows()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9083-9299;202-209;3-3];</data>
    </edge>
    <edge id="e1419" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Patterns.many(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3];</data>
    </edge>
    <edge id="e1420" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3];</data>
    </edge>
    <edge id="e1421" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3];</data>
    </edge>
    <edge id="e1422" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3/8700-9076;195-200;3-3/8700-9076;195-200;3-3];</data>
    </edge>
    <edge id="e1423" source="org.codehaus.jparsec.pattern.PatternsTest.testMany_withMin()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[8700-9076;195-200;3-3];</data>
    </edge>
    <edge id="e1424" source="org.codehaus.jparsec.pattern.PatternsTest.testNever()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[545-732;21-25;3-3/545-732;21-25;3-3/545-732;21-25;3-3];</data>
    </edge>
    <edge id="e1425" source="org.codehaus.jparsec.pattern.PatternsTest.testNever()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[545-732;21-25;3-3/545-732;21-25;3-3/545-732;21-25;3-3];</data>
    </edge>
    <edge id="e1426" source="org.codehaus.jparsec.pattern.PatternsTest.testNever()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[545-732;21-25;3-3/545-732;21-25;3-3/545-732;21-25;3-3];</data>
    </edge>
    <edge id="e1427" source="org.codehaus.jparsec.pattern.PatternsTest.testNotString()" target="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5430-5749;127-132;3-3/5430-5749;127-132;3-3/5430-5749;127-132;3-3/5430-5749;127-132;3-3];</data>
    </edge>
    <edge id="e1428" source="org.codehaus.jparsec.pattern.PatternsTest.testNotString()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5430-5749;127-132;3-3/5430-5749;127-132;3-3/5430-5749;127-132;3-3/5430-5749;127-132;3-3];</data>
    </edge>
    <edge id="e1429" source="org.codehaus.jparsec.pattern.PatternsTest.testNotString()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5430-5749;127-132;3-3/5430-5749;127-132;3-3/5430-5749;127-132;3-3];</data>
    </edge>
    <edge id="e1430" source="org.codehaus.jparsec.pattern.PatternsTest.testNotStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Patterns.notStringCaseInsensitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3];</data>
    </edge>
    <edge id="e1431" source="org.codehaus.jparsec.pattern.PatternsTest.testNotStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3];</data>
    </edge>
    <edge id="e1432" source="org.codehaus.jparsec.pattern.PatternsTest.testNotStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3/5756-6237;134-140;3-3];</data>
    </edge>
    <edge id="e1433" source="org.codehaus.jparsec.pattern.PatternsTest.testOctInteger()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3];</data>
    </edge>
    <edge id="e1434" source="org.codehaus.jparsec.pattern.PatternsTest.testOctInteger()" target="org.codehaus.jparsec.pattern.Patterns#OCT_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3/14932-15282;340-346;3-3];</data>
    </edge>
    <edge id="e1435" source="org.codehaus.jparsec.pattern.PatternsTest.testOctInteger()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14932-15282;340-346;3-3/14932-15282;340-346;3-3];</data>
    </edge>
    <edge id="e1436" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns.or(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1437" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1438" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1439" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3/6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1440" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1441" source="org.codehaus.jparsec.pattern.PatternsTest.testOr()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[6689-7166;151-157;3-3];</data>
    </edge>
    <edge id="e1442" source="org.codehaus.jparsec.pattern.PatternsTest.testRange()" target="org.codehaus.jparsec.pattern.Patterns.range(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3];</data>
    </edge>
    <edge id="e1443" source="org.codehaus.jparsec.pattern.PatternsTest.testRange()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3];</data>
    </edge>
    <edge id="e1444" source="org.codehaus.jparsec.pattern.PatternsTest.testRange()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3/2797-3432;73-83;3-3];</data>
    </edge>
    <edge id="e1445" source="org.codehaus.jparsec.pattern.PatternsTest.testRegex()" target="org.codehaus.jparsec.pattern.Patterns.regex(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3];</data>
    </edge>
    <edge id="e1446" source="org.codehaus.jparsec.pattern.PatternsTest.testRegex()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3/16638-17058;378-385;3-3];</data>
    </edge>
    <edge id="e1447" source="org.codehaus.jparsec.pattern.PatternsTest.testRegex()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16638-17058;378-385;3-3/16638-17058;378-385;3-3];</data>
    </edge>
    <edge id="e1448" source="org.codehaus.jparsec.pattern.PatternsTest.testRegexpModifiers()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17604-17840;397-401;3-3/17604-17840;397-401;3-3/17604-17840;397-401;3-3];</data>
    </edge>
    <edge id="e1449" source="org.codehaus.jparsec.pattern.PatternsTest.testRegexpModifiers()" target="org.codehaus.jparsec.pattern.Patterns#REGEXP_MODIFIERS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17604-17840;397-401;3-3/17604-17840;397-401;3-3/17604-17840;397-401;3-3];</data>
    </edge>
    <edge id="e1450" source="org.codehaus.jparsec.pattern.PatternsTest.testRegexpPattern()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3];</data>
    </edge>
    <edge id="e1451" source="org.codehaus.jparsec.pattern.PatternsTest.testRegexpPattern()" target="org.codehaus.jparsec.pattern.Patterns#REGEXP_PATTERN">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3];</data>
    </edge>
    <edge id="e1452" source="org.codehaus.jparsec.pattern.PatternsTest.testRegexpPattern()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3/17065-17597;387-395;3-3];</data>
    </edge>
    <edge id="e1453" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()" target="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3/7545-7836;167-171;3-3/7545-7836;167-171;3-3];</data>
    </edge>
    <edge id="e1454" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3/7545-7836;167-171;3-3/7545-7836;167-171;3-3];</data>
    </edge>
    <edge id="e1455" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3/7545-7836;167-171;3-3];</data>
    </edge>
    <edge id="e1456" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3/7545-7836;167-171;3-3];</data>
    </edge>
    <edge id="e1457" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7545-7836;167-171;3-3];</data>
    </edge>
    <edge id="e1458" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat_negativeNumberThrows()" target="org.codehaus.jparsec.pattern.Patterns.repeat(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7843-8061;173-180;3-3];</data>
    </edge>
    <edge id="e1459" source="org.codehaus.jparsec.pattern.PatternsTest.testRepeat_negativeNumberThrows()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7843-8061;173-180;3-3];</data>
    </edge>
    <edge id="e1460" source="org.codehaus.jparsec.pattern.PatternsTest.testScientificNumber()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3];</data>
    </edge>
    <edge id="e1461" source="org.codehaus.jparsec.pattern.PatternsTest.testScientificNumber()" target="org.codehaus.jparsec.pattern.Patterns#SCIENTIFIC_NOTATION">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16016-16631;364-376;3-3];</data>
    </edge>
    <edge id="e1462" source="org.codehaus.jparsec.pattern.PatternsTest.testScientificNumber()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3/16016-16631;364-376;3-3];</data>
    </edge>
    <edge id="e1463" source="org.codehaus.jparsec.pattern.PatternsTest.testSequence()" target="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3/7173-7538;159-165;3-3/7173-7538;159-165;3-3];</data>
    </edge>
    <edge id="e1464" source="org.codehaus.jparsec.pattern.PatternsTest.testSequence()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3/7173-7538;159-165;3-3/7173-7538;159-165;3-3/7173-7538;159-165;3-3/7173-7538;159-165;3-3];</data>
    </edge>
    <edge id="e1465" source="org.codehaus.jparsec.pattern.PatternsTest.testSequence()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3/7173-7538;159-165;3-3/7173-7538;159-165;3-3];</data>
    </edge>
    <edge id="e1466" source="org.codehaus.jparsec.pattern.PatternsTest.testSequence()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3/7173-7538;159-165;3-3];</data>
    </edge>
    <edge id="e1467" source="org.codehaus.jparsec.pattern.PatternsTest.testSequence()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[7173-7538;159-165;3-3];</data>
    </edge>
    <edge id="e1468" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Patterns.shorter(org.codehaus.jparsec.pattern.Pattern,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1469" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1470" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1471" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1472" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1473" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3/11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1474" source="org.codehaus.jparsec.pattern.PatternsTest.testShorter()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[11921-12454;277-285;3-3];</data>
    </edge>
    <edge id="e1475" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Patterns.shortest(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1476" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1477" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3/12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1478" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Patterns.hasExact(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1479" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1480" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3/12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1481" source="org.codehaus.jparsec.pattern.PatternsTest.testShortest()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[12461-12950;287-294;3-3];</data>
    </edge>
    <edge id="e1482" source="org.codehaus.jparsec.pattern.PatternsTest.testSome()" target="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9306-9653;211-216;3-3/9306-9653;211-216;3-3/9306-9653;211-216;3-3/9306-9653;211-216;3-3];</data>
    </edge>
    <edge id="e1483" source="org.codehaus.jparsec.pattern.PatternsTest.testSome()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9306-9653;211-216;3-3/9306-9653;211-216;3-3/9306-9653;211-216;3-3/9306-9653;211-216;3-3];</data>
    </edge>
    <edge id="e1484" source="org.codehaus.jparsec.pattern.PatternsTest.testSome()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9306-9653;211-216;3-3/9306-9653;211-216;3-3/9306-9653;211-216;3-3];</data>
    </edge>
    <edge id="e1485" source="org.codehaus.jparsec.pattern.PatternsTest.testSome()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9306-9653;211-216;3-3];</data>
    </edge>
    <edge id="e1486" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_minBiggerThanMaxThrows()" target="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10669-10891;249-256;3-3];</data>
    </edge>
    <edge id="e1487" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_minBiggerThanMaxThrows()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10669-10891;249-256;3-3];</data>
    </edge>
    <edge id="e1488" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMaxThrows()" target="org.codehaus.jparsec.pattern.Patterns.some(int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10055-10439;225-238;3-3];</data>
    </edge>
    <edge id="e1489" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMaxThrows()" target="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10055-10439;225-238;3-3];</data>
    </edge>
    <edge id="e1490" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMaxThrows()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10055-10439;225-238;3-3/10055-10439;225-238;3-3];</data>
    </edge>
    <edge id="e1491" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMinThrows()" target="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10446-10662;240-247;3-3];</data>
    </edge>
    <edge id="e1492" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_negativeMinThrows()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[10446-10662;240-247;3-3];</data>
    </edge>
    <edge id="e1493" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Patterns.some(int,int,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3];</data>
    </edge>
    <edge id="e1494" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3];</data>
    </edge>
    <edge id="e1495" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3];</data>
    </edge>
    <edge id="e1496" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3/9660-10048;218-223;3-3/9660-10048;218-223;3-3];</data>
    </edge>
    <edge id="e1497" source="org.codehaus.jparsec.pattern.PatternsTest.testSome_withMin()" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[9660-10048;218-223;3-3];</data>
    </edge>
    <edge id="e1498" source="org.codehaus.jparsec.pattern.PatternsTest.testString()" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4584-4882;111-116;3-3/4584-4882;111-116;3-3/4584-4882;111-116;3-3/4584-4882;111-116;3-3];</data>
    </edge>
    <edge id="e1499" source="org.codehaus.jparsec.pattern.PatternsTest.testString()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4584-4882;111-116;3-3/4584-4882;111-116;3-3/4584-4882;111-116;3-3/4584-4882;111-116;3-3];</data>
    </edge>
    <edge id="e1500" source="org.codehaus.jparsec.pattern.PatternsTest.testString()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4584-4882;111-116;3-3/4584-4882;111-116;3-3];</data>
    </edge>
    <edge id="e1501" source="org.codehaus.jparsec.pattern.PatternsTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3];</data>
    </edge>
    <edge id="e1502" source="org.codehaus.jparsec.pattern.PatternsTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3];</data>
    </edge>
    <edge id="e1503" source="org.codehaus.jparsec.pattern.PatternsTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[4889-5423;118-125;3-3/4889-5423;118-125;3-3/4889-5423;118-125;3-3];</data>
    </edge>
    <edge id="e1504" source="org.codehaus.jparsec.pattern.PatternsTest.testWord()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3];</data>
    </edge>
    <edge id="e1505" source="org.codehaus.jparsec.pattern.PatternsTest.testWord()" target="org.codehaus.jparsec.pattern.Patterns#WORD">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3/14286-14649;324-331;3-3];</data>
    </edge>
    <edge id="e1506" source="org.codehaus.jparsec.pattern.PatternsTest.testWord()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/pattern/PatternsTest.java;[14286-14649;324-331;3-3/14286-14649;324-331;3-3];</data>
    </edge>
    <edge id="e1507" source="org.codehaus.jparsec.util.Checks.checkMax(int)" target="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3248-3391;80-84;3-3];</data>
    </edge>
    <edge id="e1508" source="org.codehaus.jparsec.util.Checks.checkMin(int)" target="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3100-3243;74-78;3-3];</data>
    </edge>
    <edge id="e1509" source="org.codehaus.jparsec.util.Checks.checkNonNegative(int,java.lang.String)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[3398-3638;86-93;3-3];</data>
    </edge>
    <edge id="e1510" source="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)" target="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2865-3095;67-72;3-3];</data>
    </edge>
    <edge id="e1511" source="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)" target="org.codehaus.jparsec.util.Checks.checkMax(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2865-3095;67-72;3-3];</data>
    </edge>
    <edge id="e1512" source="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2865-3095;67-72;3-3];</data>
    </edge>
    <edge id="e1513" source="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])" target="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Checks.java;[2431-2860;55-65;3-3];</data>
    </edge>
    <edge id="e1514" source="org.codehaus.jparsec.util.ChecksTest.checkNotNullState_noThrowIfObjectIsntNull()" target="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[1130-1352;44-48;3-3/1130-1352;44-48;3-3/1130-1352;44-48;3-3];</data>
    </edge>
    <edge id="e1515" source="org.codehaus.jparsec.util.ChecksTest.testCheckArgument_noThrowIfConditionIsTrue()" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[233-447;14-18;3-3/233-447;14-18;3-3/233-447;14-18;3-3];</data>
    </edge>
    <edge id="e1516" source="org.codehaus.jparsec.util.ChecksTest.testCheckArgument_throwsIfConditionIsFalse()" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[454-685;20-27;3-3];</data>
    </edge>
    <edge id="e1517" source="org.codehaus.jparsec.util.ChecksTest.testCheckNotNullState_throwsIfObjectIsNull()" target="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[1359-1604;50-57;3-3];</data>
    </edge>
    <edge id="e1518" source="org.codehaus.jparsec.util.ChecksTest.testCheckState_noThrowIfConditionIsTrue()" target="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[692-894;29-33;3-3/692-894;29-33;3-3/692-894;29-33;3-3];</data>
    </edge>
    <edge id="e1519" source="org.codehaus.jparsec.util.ChecksTest.testCheckState_throwsIfConditionIsFalse()" target="org.codehaus.jparsec.util.Checks.checkState(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ChecksTest.java;[901-1123;35-42;3-3];</data>
    </edge>
    <edge id="e1520" source="org.codehaus.jparsec.util.IntList()" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1827-1912;45-48;3-3];</data>
    </edge>
    <edge id="e1521" source="org.codehaus.jparsec.util.IntList#buf" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1661-1820;40-43;3-3];</data>
    </edge>
    <edge id="e1522" source="org.codehaus.jparsec.util.IntList.get(int)" target="org.codehaus.jparsec.util.IntList.checkIndex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2131-2410;60-69;3-3];</data>
    </edge>
    <edge id="e1523" source="org.codehaus.jparsec.util.IntList.get(int)" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2131-2410;60-69;3-3];</data>
    </edge>
    <edge id="e1524" source="org.codehaus.jparsec.util.IntList.set(int,int)" target="org.codehaus.jparsec.util.IntList.checkIndex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2417-2774;71-84;3-3];</data>
    </edge>
    <edge id="e1525" source="org.codehaus.jparsec.util.IntList.set(int,int)" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2417-2774;71-84;3-3/2417-2774;71-84;3-3];</data>
    </edge>
    <edge id="e1526" source="org.codehaus.jparsec.util.IntList.size()" target="org.codehaus.jparsec.util.IntList#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1919-2004;50-53;3-3];</data>
    </edge>
    <edge id="e1527" source="org.codehaus.jparsec.util.IntList.toArray()" target="org.codehaus.jparsec.util.IntList#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1454-1654;31-38;3-3/1454-1654;31-38;3-3];</data>
    </edge>
    <edge id="e1528" source="org.codehaus.jparsec.util.IntList.toArray()" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[1454-1654;31-38;3-3];</data>
    </edge>
    <edge id="e1529" source="org.codehaus.jparsec.util.IntList.add(int)" target="org.codehaus.jparsec.util.IntList.ensureCapacity(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3422-3627;111-121;3-3];</data>
    </edge>
    <edge id="e1530" source="org.codehaus.jparsec.util.IntList.add(int)" target="org.codehaus.jparsec.util.IntList#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3422-3627;111-121;3-3/3422-3627;111-121;3-3];</data>
    </edge>
    <edge id="e1531" source="org.codehaus.jparsec.util.IntList.add(int)" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3422-3627;111-121;3-3];</data>
    </edge>
    <edge id="e1532" source="org.codehaus.jparsec.util.IntList.checkIndex(int)" target="org.codehaus.jparsec.util.IntList#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2011-2124;55-58;3-3];</data>
    </edge>
    <edge id="e1533" source="org.codehaus.jparsec.util.IntList.ensureCapacity(int)" target="org.codehaus.jparsec.util.IntList.grow(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2956-3249;91-101;3-3];</data>
    </edge>
    <edge id="e1534" source="org.codehaus.jparsec.util.IntList.ensureCapacity(int)" target="org.codehaus.jparsec.util.IntList.calcSize(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2956-3249;91-101;3-3];</data>
    </edge>
    <edge id="e1535" source="org.codehaus.jparsec.util.IntList.ensureCapacity(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2956-3249;91-101;3-3/2956-3249;91-101;3-3/2956-3249;91-101;3-3];</data>
    </edge>
    <edge id="e1536" source="org.codehaus.jparsec.util.IntList.ensureCapacity(int)" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[2956-3249;91-101;3-3/2956-3249;91-101;3-3/2956-3249;91-101;3-3];</data>
    </edge>
    <edge id="e1537" source="org.codehaus.jparsec.util.IntList.grow(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3256-3415;103-109;3-3/3256-3415;103-109;3-3];</data>
    </edge>
    <edge id="e1538" source="org.codehaus.jparsec.util.IntList.grow(int)" target="org.codehaus.jparsec.util.IntList#buf">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3256-3415;103-109;3-3/3256-3415;103-109;3-3/3256-3415;103-109;3-3];</data>
    </edge>
    <edge id="e1539" source="org.codehaus.jparsec.util.IntList#buf" target="org.codehaus.jparsec.util.IntList.grow(int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/IntList.java;[3256-3415;103-109;3-3];</data>
    </edge>
    <edge id="e1540" source="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[2360-2561;95-100;3-3/2360-2561;95-100;3-3/2360-2561;95-100;3-3];</data>
    </edge>
    <edge id="e1541" source="org.codehaus.jparsec.util.IntListTest.testCalcSize()" target="org.codehaus.jparsec.util.IntList.calcSize(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[183-439;12-18;3-3/183-439;12-18;3-3/183-439;12-18;3-3/183-439;12-18;3-3/183-439;12-18;3-3];</data>
    </edge>
    <edge id="e1542" source="org.codehaus.jparsec.util.IntListTest.testConstructor()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[446-554;20-23;3-3];</data>
    </edge>
    <edge id="e1543" source="org.codehaus.jparsec.util.IntListTest.testConstructor()" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[446-554;20-23;3-3];</data>
    </edge>
    <edge id="e1544" source="org.codehaus.jparsec.util.IntListTest.testConstructor_withCapacity()" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[561-683;25-28;3-3];</data>
    </edge>
    <edge id="e1545" source="org.codehaus.jparsec.util.IntListTest.testConstructor_withCapacity()" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[561-683;25-28;3-3];</data>
    </edge>
    <edge id="e1546" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1547" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1548" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntList.ensureCapacity(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1549" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1550" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1551" source="org.codehaus.jparsec.util.IntListTest.testEnsureCapacity()" target="org.codehaus.jparsec.util.IntList.toArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1756-1965;71-77;3-3];</data>
    </edge>
    <edge id="e1552" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1553" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3/934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1554" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1555" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1556" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1557" source="org.codehaus.jparsec.util.IntListTest.testGet()" target="org.codehaus.jparsec.util.IntList.toArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[934-1172;38-45;3-3];</data>
    </edge>
    <edge id="e1558" source="org.codehaus.jparsec.util.IntListTest.testGet_throwsForIndexOutOfBounds()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1369-1554;55-61;3-3];</data>
    </edge>
    <edge id="e1559" source="org.codehaus.jparsec.util.IntListTest.testGet_throwsForIndexOutOfBounds()" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1369-1554;55-61;3-3];</data>
    </edge>
    <edge id="e1560" source="org.codehaus.jparsec.util.IntListTest.testGet_throwsForNegativeIndex()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1179-1362;47-53;3-3];</data>
    </edge>
    <edge id="e1561" source="org.codehaus.jparsec.util.IntListTest.testGet_throwsForNegativeIndex()" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1179-1362;47-53;3-3];</data>
    </edge>
    <edge id="e1562" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1563" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1564" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntList.set(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1565" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1566" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1567" source="org.codehaus.jparsec.util.IntListTest.testSet()" target="org.codehaus.jparsec.util.IntList.toArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1561-1749;63-69;3-3];</data>
    </edge>
    <edge id="e1568" source="org.codehaus.jparsec.util.IntListTest.testSet_throwsForIndexOutOfBounds()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[2165-2353;87-93;3-3];</data>
    </edge>
    <edge id="e1569" source="org.codehaus.jparsec.util.IntListTest.testSet_throwsForIndexOutOfBounds()" target="org.codehaus.jparsec.util.IntList.set(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[2165-2353;87-93;3-3];</data>
    </edge>
    <edge id="e1570" source="org.codehaus.jparsec.util.IntListTest.testSet_throwsForNegativeIndex()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1972-2158;79-85;3-3];</data>
    </edge>
    <edge id="e1571" source="org.codehaus.jparsec.util.IntListTest.testSet_throwsForNegativeIndex()" target="org.codehaus.jparsec.util.IntList.set(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[1972-2158;79-85;3-3];</data>
    </edge>
    <edge id="e1572" source="org.codehaus.jparsec.util.IntListTest.testToArray()" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[690-927;30-36;3-3];</data>
    </edge>
    <edge id="e1573" source="org.codehaus.jparsec.util.IntListTest.testToArray()" target="org.codehaus.jparsec.util.IntListTest.assertEqualArray(int[],int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[690-927;30-36;3-3/690-927;30-36;3-3];</data>
    </edge>
    <edge id="e1574" source="org.codehaus.jparsec.util.IntListTest.testToArray()" target="org.codehaus.jparsec.util.IntList.toArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[690-927;30-36;3-3/690-927;30-36;3-3];</data>
    </edge>
    <edge id="e1575" source="org.codehaus.jparsec.util.IntListTest.testToArray()" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/IntListTest.java;[690-927;30-36;3-3/690-927;30-36;3-3];</data>
    </edge>
    <edge id="e1576" source="org.codehaus.jparsec.util.Lists.arrayList(int)" target="org.codehaus.jparsec.util.Lists.capacity(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Lists.java;[1498-1718;33-36;3-3];</data>
    </edge>
    <edge id="e1577" source="org.codehaus.jparsec.util.Lists.capacity(int)" target="java.lang.Integer#MAX_VALUE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Lists.java;[1725-1874;38-40;3-3];</data>
    </edge>
    <edge id="e1578" source="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])" target="org.codehaus.jparsec.util.ObjectTester$AnotherType()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectTester.java;[486-736;20-26;3-3];</data>
    </edge>
    <edge id="e1579" source="org.codehaus.jparsec.util.ObjectsTest.testEquals()" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[183-382;12-17;3-3/183-382;12-17;3-3/183-382;12-17;3-3/183-382;12-17;3-3];</data>
    </edge>
    <edge id="e1580" source="org.codehaus.jparsec.util.ObjectsTest.testHashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[389-520;19-22;3-3/389-520;19-22;3-3];</data>
    </edge>
    <edge id="e1581" source="org.codehaus.jparsec.util.ObjectsTest.testIn()" target="org.codehaus.jparsec.util.Objects.in(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/ObjectsTest.java;[527-649;24-27;3-3/527-649;24-27;3-3];</data>
    </edge>
    <edge id="e1582" source="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])" target="org.codehaus.jparsec.util.Strings.join(java.lang.StringBuilder,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Strings.java;[1334-1636;25-30;3-3];</data>
    </edge>
    <edge id="e1583" source="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/util/Strings.java;[1334-1636;25-30;3-3];</data>
    </edge>
    <edge id="e1584" source="org.codehaus.jparsec.util.StringsTest.testJoin()" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/StringsTest.java;[189-399;12-16;3-3/189-399;12-16;3-3/189-399;12-16;3-3];</data>
    </edge>
    <edge id="e1585" source="org.codehaus.jparsec.util.StringsTest.testJoin_withStringBuilder()" target="org.codehaus.jparsec.util.Strings.join(java.lang.StringBuilder,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/util/StringsTest.java;[406-730;18-22;3-3/406-730;18-22;3-3/406-730;18-22;3-3];</data>
    </edge>
    <edge id="e1586" source="org.codehaus.jparsec.ActionParser(java.lang.Runnable)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1305-1365;21-23;3-3];</data>
    </edge>
    <edge id="e1587" source="org.codehaus.jparsec.ActionParser#action" target="org.codehaus.jparsec.ActionParser(java.lang.Runnable)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1305-1365;21-23;3-3];</data>
    </edge>
    <edge id="e1588" source="org.codehaus.jparsec.ActionParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ActionParser#action">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1372-1454;25-28;3-3];</data>
    </edge>
    <edge id="e1589" source="org.codehaus.jparsec.ActionParser.toString()" target="org.codehaus.jparsec.ActionParser#action">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ActionParser.java;[1461-1530;30-32;3-3];</data>
    </edge>
    <edge id="e1590" source="org.codehaus.jparsec.AllTests.suite()" target="org.codehaus.jparsec.AllTests#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/AllTests.java;[1372-1459;28-30;3-3];</data>
    </edge>
    <edge id="e1591" source="org.codehaus.jparsec.AnyCharScanner(java.lang.String)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1362-1416;26-28;3-3];</data>
    </edge>
    <edge id="e1592" source="org.codehaus.jparsec.AnyCharScanner#name" target="org.codehaus.jparsec.AnyCharScanner(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1362-1416;26-28;3-3];</data>
    </edge>
    <edge id="e1593" source="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
    </edge>
    <edge id="e1594" source="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
    </edge>
    <edge id="e1595" source="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
    </edge>
    <edge id="e1596" source="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.AnyCharScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
    </edge>
    <edge id="e1597" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.AnyCharScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1421-1603;30-38;3-3];</data>
    </edge>
    <edge id="e1598" source="org.codehaus.jparsec.AnyCharScanner.toString()" target="org.codehaus.jparsec.AnyCharScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AnyCharScanner.java;[1610-1666;40-42;3-3];</data>
    </edge>
    <edge id="e1599" source="org.codehaus.jparsec.ArrayParser(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1438-1503;26-28;3-3];</data>
    </edge>
    <edge id="e1600" source="org.codehaus.jparsec.ArrayParser#parsers" target="org.codehaus.jparsec.ArrayParser(org.codehaus.jparsec.Parser[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1438-1503;26-28;3-3];</data>
    </edge>
    <edge id="e1601" source="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3];</data>
    </edge>
    <edge id="e1602" source="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3];</data>
    </edge>
    <edge id="e1603" source="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3/1508-1814;30-39;3-3];</data>
    </edge>
    <edge id="e1604" source="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ArrayParser#parsers">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3/1508-1814;30-39;3-3/1508-1814;30-39;3-3];</data>
    </edge>
    <edge id="e1605" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ArrayParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ArrayParser.java;[1508-1814;30-39;3-3];</data>
    </edge>
    <edge id="e1606" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[377-668;21-29;3-3];</data>
    </edge>
    <edge id="e1607" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)" target="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[377-668;21-29;3-3/377-668;21-29;3-3];</data>
    </edge>
    <edge id="e1608" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[377-668;21-29;3-3];</data>
    </edge>
    <edge id="e1609" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[377-668;21-29;3-3];</data>
    </edge>
    <edge id="e1610" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1581-1963;57-67;3-3];</data>
    </edge>
    <edge id="e1611" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)" target="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1581-1963;57-67;3-3/1581-1963;57-67;3-3];</data>
    </edge>
    <edge id="e1612" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1581-1963;57-67;3-3];</data>
    </edge>
    <edge id="e1613" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1581-1963;57-67;3-3];</data>
    </edge>
    <edge id="e1614" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[675-1073;31-41;3-3];</data>
    </edge>
    <edge id="e1615" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[675-1073;31-41;3-3/675-1073;31-41;3-3];</data>
    </edge>
    <edge id="e1616" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[675-1073;31-41;3-3];</data>
    </edge>
    <edge id="e1617" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[675-1073;31-41;3-3];</data>
    </edge>
    <edge id="e1618" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1080-1574;43-55;3-3];</data>
    </edge>
    <edge id="e1619" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1080-1574;43-55;3-3/1080-1574;43-55;3-3];</data>
    </edge>
    <edge id="e1620" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1080-1574;43-55;3-3];</data>
    </edge>
    <edge id="e1621" source="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1080-1574;43-55;3-3];</data>
    </edge>
    <edge id="e1622" source="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[1970-2100;69-71;3-3];</data>
    </edge>
    <edge id="e1623" source="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2107-2293;73-76;3-3];</data>
    </edge>
    <edge id="e1624" source="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2107-2293;73-76;3-3];</data>
    </edge>
    <edge id="e1625" source="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2107-2293;73-76;3-3];</data>
    </edge>
    <edge id="e1626" source="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2621-2727;86-88;3-3];</data>
    </edge>
    <edge id="e1627" source="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2451-2614;82-84;3-3];</data>
    </edge>
    <edge id="e1628" source="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2451-2614;82-84;3-3];</data>
    </edge>
    <edge id="e1629" source="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2451-2614;82-84;3-3];</data>
    </edge>
    <edge id="e1630" source="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2981-3105;95-97;3-3];</data>
    </edge>
    <edge id="e1631" source="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2734-2974;90-93;3-3];</data>
    </edge>
    <edge id="e1632" source="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2734-2974;90-93;3-3];</data>
    </edge>
    <edge id="e1633" source="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/Asserts.java;[2734-2974;90-93;3-3];</data>
    </edge>
    <edge id="e1634" source="org.codehaus.jparsec.AtomicParser(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1297-1343;21-23;3-3];</data>
    </edge>
    <edge id="e1635" source="org.codehaus.jparsec.AtomicParser#p" target="org.codehaus.jparsec.AtomicParser(org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1297-1343;21-23;3-3];</data>
    </edge>
    <edge id="e1636" source="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1637" source="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1638" source="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1639" source="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1640" source="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.AtomicParser#p">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1641" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.AtomicParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1348-1550;25-32;3-3];</data>
    </edge>
    <edge id="e1642" source="org.codehaus.jparsec.AtomicParser.toString()" target="org.codehaus.jparsec.AtomicParser#p">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/AtomicParser.java;[1557-1621;34-36;3-3];</data>
    </edge>
    <edge id="e1643" source="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1346-1460;23-26;3-3];</data>
    </edge>
    <edge id="e1644" source="org.codehaus.jparsec.BestParser#parsers" target="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1346-1460;23-26;3-3];</data>
    </edge>
    <edge id="e1645" source="org.codehaus.jparsec.BestParser#order" target="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1346-1460;23-26;3-3];</data>
    </edge>
    <edge id="e1646" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1647" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1648" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1649" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1650" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1651" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1652" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1653" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.BestParser#parsers">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3/1465-1961;28-42;3-3/1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1654" source="org.codehaus.jparsec.BestParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.BestParser#order">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1465-1961;28-42;3-3];</data>
    </edge>
    <edge id="e1655" source="org.codehaus.jparsec.BestParser.toString()" target="org.codehaus.jparsec.BestParser#order">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BestParser.java;[1968-2036;44-46;3-3];</data>
    </edge>
    <edge id="e1656" source="org.codehaus.jparsec.BindNextParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1635-1795;30-34;3-3];</data>
    </edge>
    <edge id="e1657" source="org.codehaus.jparsec.BindNextParser#map" target="org.codehaus.jparsec.BindNextParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1635-1795;30-34;3-3];</data>
    </edge>
    <edge id="e1658" source="org.codehaus.jparsec.BindNextParser#parser" target="org.codehaus.jparsec.BindNextParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1635-1795;30-34;3-3];</data>
    </edge>
    <edge id="e1659" source="org.codehaus.jparsec.BindNextParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1800-1933;36-40;3-3];</data>
    </edge>
    <edge id="e1660" source="org.codehaus.jparsec.BindNextParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parsers.runNext(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1800-1933;36-40;3-3];</data>
    </edge>
    <edge id="e1661" source="org.codehaus.jparsec.BindNextParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.BindNextParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1800-1933;36-40;3-3];</data>
    </edge>
    <edge id="e1662" source="org.codehaus.jparsec.BindNextParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.BindNextParser#map">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1800-1933;36-40;3-3];</data>
    </edge>
    <edge id="e1663" source="org.codehaus.jparsec.BindNextParser.toString()" target="org.codehaus.jparsec.BindNextParser#map">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/BindNextParser.java;[1940-2006;42-44;3-3];</data>
    </edge>
    <edge id="e1664" source="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices" target="org.codehaus.jparsec.util.IntList(int)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[1850-1981;39-40;3-60];</data>
    </edge>
    <edge id="e1665" source="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence)" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[6257-6437;163-170;3-3];</data>
    </edge>
    <edge id="e1666" source="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5910-6250;152-161;3-3];</data>
    </edge>
    <edge id="e1667" source="org.codehaus.jparsec.DefaultSourceLocator#source" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5386-5903;136-150;3-3];</data>
    </edge>
    <edge id="e1668" source="org.codehaus.jparsec.DefaultSourceLocator#lineBreakChar" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5386-5903;136-150;3-3];</data>
    </edge>
    <edge id="e1669" source="org.codehaus.jparsec.DefaultSourceLocator#startLineNumber" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5386-5903;136-150;3-3];</data>
    </edge>
    <edge id="e1670" source="org.codehaus.jparsec.DefaultSourceLocator#startColumnNumber" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int,char)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5386-5903;136-150;3-3];</data>
    </edge>
    <edge id="e1671" source="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2350-2929;54-68;3-3];</data>
    </edge>
    <edge id="e1672" source="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2350-2929;54-68;3-3];</data>
    </edge>
    <edge id="e1673" source="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakColumnIndex(int)" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[4653-5003;114-122;3-3/4653-5003;114-122;3-3];</data>
    </edge>
    <edge id="e1674" source="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakColumnIndex(int)" target="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[4653-5003;114-122;3-3/4653-5003;114-122;3-3];</data>
    </edge>
    <edge id="e1675" source="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakLocation(int)" target="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5010-5135;124-126;3-3];</data>
    </edge>
    <edge id="e1676" source="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakLocation(int)" target="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakColumnIndex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5010-5135;124-126;3-3];</data>
    </edge>
    <edge id="e1677" source="org.codehaus.jparsec.DefaultSourceLocator.locate(int)" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5277-5379;132-134;3-3];</data>
    </edge>
    <edge id="e1678" source="org.codehaus.jparsec.DefaultSourceLocator.locate(int)" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5277-5379;132-134;3-3];</data>
    </edge>
    <edge id="e1679" source="org.codehaus.jparsec.DefaultSourceLocator.locate(int)" target="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5277-5379;132-134;3-3];</data>
    </edge>
    <edge id="e1680" source="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5142-5270;128-130;3-3];</data>
    </edge>
    <edge id="e1681" source="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)" target="org.codehaus.jparsec.DefaultSourceLocator#startLineNumber">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5142-5270;128-130;3-3];</data>
    </edge>
    <edge id="e1682" source="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)" target="org.codehaus.jparsec.DefaultSourceLocator#startColumnNumber">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[5142-5270;128-130;3-3];</data>
    </edge>
    <edge id="e1683" source="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3];</data>
    </edge>
    <edge id="e1684" source="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)" target="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3/2936-3501;70-81;3-3/2936-3501;70-81;3-3];</data>
    </edge>
    <edge id="e1685" source="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3];</data>
    </edge>
    <edge id="e1686" source="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)" target="org.codehaus.jparsec.util.IntList.get(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3];</data>
    </edge>
    <edge id="e1687" source="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)" target="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[2936-3501;70-81;3-3/2936-3501;70-81;3-3/2936-3501;70-81;3-3];</data>
    </edge>
    <edge id="e1688" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1689" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.util.IntList.size()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1690" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator.location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3/3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1691" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator.getLineBreakLocation(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1692" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3/3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1693" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1694" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1695" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator#lineBreakChar">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1696" source="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)" target="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3/3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1697" source="org.codehaus.jparsec.DefaultSourceLocator#nextIndex" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1698" source="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DefaultSourceLocator.java;[3508-4646;83-112;3-3];</data>
    </edge>
    <edge id="e1699" source="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])" target="org.codehaus.jparsec.util.IntList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5868-6026;168-174;3-3];</data>
    </edge>
    <edge id="e1700" source="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5868-6026;168-174;3-3];</data>
    </edge>
    <edge id="e1701" source="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])" target="org.codehaus.jparsec.util.IntList.add(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5711-5861;162-166;3-3];</data>
    </edge>
    <edge id="e1702" source="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])" target="org.codehaus.jparsec.DefaultSourceLocator#lineBreakIndices">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5711-5861;162-166;3-3];</data>
    </edge>
    <edge id="e1703" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_allSmaller()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1750-1874;54-56;3-3];</data>
    </edge>
    <edge id="e1704" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_allSmaller()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1750-1874;54-56;3-3];</data>
    </edge>
    <edge id="e1705" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1052-1185;34-36;3-3];</data>
    </edge>
    <edge id="e1706" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1052-1185;34-36;3-3];</data>
    </edge>
    <edge id="e1707" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[913-1045;30-32;3-3];</data>
    </edge>
    <edge id="e1708" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_firstElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[913-1045;30-32;3-3];</data>
    </edge>
    <edge id="e1709" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1611-1743;50-52;3-3];</data>
    </edge>
    <edge id="e1710" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1611-1743;50-52;3-3];</data>
    </edge>
    <edge id="e1711" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1473-1604;46-48;3-3];</data>
    </edge>
    <edge id="e1712" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_lastElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1473-1604;46-48;3-3];</data>
    </edge>
    <edge id="e1713" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_noElement()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2271-2386;70-72;3-3];</data>
    </edge>
    <edge id="e1714" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_noElement()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2271-2386;70-72;3-3];</data>
    </edge>
    <edge id="e1715" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneBiggerElement()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2010-2133;62-64;3-3];</data>
    </edge>
    <edge id="e1716" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneBiggerElement()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2010-2133;62-64;3-3];</data>
    </edge>
    <edge id="e1717" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneEqualElement()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1881-2003;58-60;3-3];</data>
    </edge>
    <edge id="e1718" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneEqualElement()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1881-2003;58-60;3-3];</data>
    </edge>
    <edge id="e1719" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneSmallerElement()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2140-2264;66-68;3-3];</data>
    </edge>
    <edge id="e1720" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_oneSmallerElement()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2140-2264;66-68;3-3];</data>
    </edge>
    <edge id="e1721" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1332-1466;42-44;3-3];</data>
    </edge>
    <edge id="e1722" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsBigger()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1332-1466;42-44;3-3];</data>
    </edge>
    <edge id="e1723" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocator.binarySearch(org.codehaus.jparsec.util.IntList,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1192-1325;38-40;3-3];</data>
    </edge>
    <edge id="e1724" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testBinarySearch_secondElementIsEqual()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.intList(int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[1192-1325;38-40;3-3];</data>
    </edge>
    <edge id="e1725" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5453-5704;156-160;3-3];</data>
    </edge>
    <edge id="e1726" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5453-5704;156-160;3-3/5453-5704;156-160;3-3];</data>
    </edge>
    <edge id="e1727" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate()" target="org.codehaus.jparsec.DefaultSourceLocator.locate(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5453-5704;156-160;3-3/5453-5704;156-160;3-3];</data>
    </edge>
    <edge id="e1728" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_emptySource()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[662-906;23-28;3-3];</data>
    </edge>
    <edge id="e1729" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_emptySource()" target="org.codehaus.jparsec.DefaultSourceLocator.locate(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[662-906;23-28;3-3/662-906;23-28;3-3];</data>
    </edge>
    <edge id="e1730" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_emptySource()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[662-906;23-28;3-3];</data>
    </edge>
    <edge id="e1731" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_onlyOneLineBreakCharacter()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[338-655;15-21;3-3];</data>
    </edge>
    <edge id="e1732" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_onlyOneLineBreakCharacter()" target="org.codehaus.jparsec.DefaultSourceLocator.locate(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[338-655;15-21;3-3/338-655;15-21;3-3/338-655;15-21;3-3];</data>
    </edge>
    <edge id="e1733" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLocate_onlyOneLineBreakCharacter()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[338-655;15-21;3-3/338-655;15-21;3-3];</data>
    </edge>
    <edge id="e1734" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3950-4172;115-119;3-3];</data>
    </edge>
    <edge id="e1735" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3950-4172;115-119;3-3];</data>
    </edge>
    <edge id="e1736" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInLastLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3950-4172;115-119;3-3];</data>
    </edge>
    <edge id="e1737" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3950-4172;115-119;3-3];</data>
    </edge>
    <edge id="e1738" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3030-3254;91-95;3-3];</data>
    </edge>
    <edge id="e1739" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3030-3254;91-95;3-3];</data>
    </edge>
    <edge id="e1740" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInSecondLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3030-3254;91-95;3-3];</data>
    </edge>
    <edge id="e1741" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3030-3254;91-95;3-3];</data>
    </edge>
    <edge id="e1742" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3491-3714;103-107;3-3];</data>
    </edge>
    <edge id="e1743" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3491-3714;103-107;3-3];</data>
    </edge>
    <edge id="e1744" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInThirdLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3491-3714;103-107;3-3];</data>
    </edge>
    <edge id="e1745" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3491-3714;103-107;3-3];</data>
    </edge>
    <edge id="e1746" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstLineBreak()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2806-3023;85-89;3-3];</data>
    </edge>
    <edge id="e1747" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstLineBreak()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2806-3023;85-89;3-3];</data>
    </edge>
    <edge id="e1748" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstLineBreak()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2806-3023;85-89;3-3];</data>
    </edge>
    <edge id="e1749" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_firstLineBreak()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2806-3023;85-89;3-3];</data>
    </edge>
    <edge id="e1750" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_inFirstLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2585-2799;79-83;3-3];</data>
    </edge>
    <edge id="e1751" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_inFirstLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2585-2799;79-83;3-3];</data>
    </edge>
    <edge id="e1752" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_inFirstLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2585-2799;79-83;3-3];</data>
    </edge>
    <edge id="e1753" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_inFirstLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2585-2799;79-83;3-3];</data>
    </edge>
    <edge id="e1754" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3261-3484;97-101;3-3];</data>
    </edge>
    <edge id="e1755" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3261-3484;97-101;3-3];</data>
    </edge>
    <edge id="e1756" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInSecondLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3261-3484;97-101;3-3];</data>
    </edge>
    <edge id="e1757" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInSecondLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3261-3484;97-101;3-3];</data>
    </edge>
    <edge id="e1758" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3721-3943;109-113;3-3];</data>
    </edge>
    <edge id="e1759" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3721-3943;109-113;3-3];</data>
    </edge>
    <edge id="e1760" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInThirdLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3721-3943;109-113;3-3];</data>
    </edge>
    <edge id="e1761" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_lastCharInThirdLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[3721-3943;109-113;3-3];</data>
    </edge>
    <edge id="e1762" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_noLineBreaksScanned()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2393-2578;74-77;3-3];</data>
    </edge>
    <edge id="e1763" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_noLineBreaksScanned()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2393-2578;74-77;3-3];</data>
    </edge>
    <edge id="e1764" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_noLineBreaksScanned()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[2393-2578;74-77;3-3];</data>
    </edge>
    <edge id="e1765" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_secondCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4179-4402;121-125;3-3];</data>
    </edge>
    <edge id="e1766" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_secondCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocatorTest.addLineBreaks(org.codehaus.jparsec.DefaultSourceLocator,int[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4179-4402;121-125;3-3];</data>
    </edge>
    <edge id="e1767" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_secondCharInLastLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4179-4402;121-125;3-3];</data>
    </edge>
    <edge id="e1768" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testLookup_secondCharInLastLine()" target="org.codehaus.jparsec.DefaultSourceLocator.lookup(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4179-4402;121-125;3-3];</data>
    </edge>
    <edge id="e1769" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
    </edge>
    <edge id="e1770" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
    </edge>
    <edge id="e1771" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
    </edge>
    <edge id="e1772" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()" target="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
    </edge>
    <edge id="e1773" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOnEof()" target="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4643-4900;135-140;3-3];</data>
    </edge>
    <edge id="e1774" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOutOfBounds()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4409-4636;127-133;3-3];</data>
    </edge>
    <edge id="e1775" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_indexOutOfBounds()" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4409-4636;127-133;3-3];</data>
    </edge>
    <edge id="e1776" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
    </edge>
    <edge id="e1777" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
    </edge>
    <edge id="e1778" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
    </edge>
    <edge id="e1779" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()" target="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
    </edge>
    <edge id="e1780" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_lastCharOfLine()" target="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[5178-5446;149-154;3-3];</data>
    </edge>
    <edge id="e1781" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
    </edge>
    <edge id="e1782" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()" target="org.codehaus.jparsec.error.Location(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
    </edge>
    <edge id="e1783" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()" target="org.codehaus.jparsec.DefaultSourceLocator.scanTo(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
    </edge>
    <edge id="e1784" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()" target="org.codehaus.jparsec.DefaultSourceLocator#nextIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
    </edge>
    <edge id="e1785" source="org.codehaus.jparsec.DefaultSourceLocatorTest.testScanTo_spansLines()" target="org.codehaus.jparsec.DefaultSourceLocator#nextColumnIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/DefaultSourceLocatorTest.java;[4907-5171;142-147;3-3];</data>
    </edge>
    <edge id="e1786" source="org.codehaus.jparsec.DelimitedListParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.ListFactory)" target="org.codehaus.jparsec.DelimitedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1494-1633;29-32;3-3];</data>
    </edge>
    <edge id="e1787" source="org.codehaus.jparsec.DelimitedListParser#listFactory" target="org.codehaus.jparsec.DelimitedListParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1494-1633;29-32;3-3];</data>
    </edge>
    <edge id="e1788" source="org.codehaus.jparsec.DelimitedListParser.begin()" target="org.codehaus.jparsec.ListFactory.newList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1638-1702;34-36;3-3];</data>
    </edge>
    <edge id="e1789" source="org.codehaus.jparsec.DelimitedListParser.begin()" target="org.codehaus.jparsec.DelimitedListParser#listFactory">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1638-1702;34-36;3-3];</data>
    </edge>
    <edge id="e1790" source="org.codehaus.jparsec.DelimitedListParser.element(org.codehaus.jparsec.ParseContext,java.util.List)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1707-1805;38-40;3-3];</data>
    </edge>
    <edge id="e1791" source="org.codehaus.jparsec.DelimitedListParser.element(org.codehaus.jparsec.ParseContext,java.util.List)" target="org.codehaus.jparsec.DelimitedParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedListParser.java;[1707-1805;38-40;3-3];</data>
    </edge>
    <edge id="e1792" source="org.codehaus.jparsec.DelimitedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1463-1558;28-31;3-3];</data>
    </edge>
    <edge id="e1793" source="org.codehaus.jparsec.DelimitedParser#parser" target="org.codehaus.jparsec.DelimitedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1463-1558;28-31;3-3];</data>
    </edge>
    <edge id="e1794" source="org.codehaus.jparsec.DelimitedParser#delim" target="org.codehaus.jparsec.DelimitedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1463-1558;28-31;3-3];</data>
    </edge>
    <edge id="e1795" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.DelimitedParser.begin()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1796" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3/1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1797" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3/1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1798" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.DelimitedParser.element(org.codehaus.jparsec.ParseContext,R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1799" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3/1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1800" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3/1563-2337;33-58;3-3/1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1801" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.DelimitedParser#delim">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1802" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3/1563-2337;33-58;3-3/1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1803" source="org.codehaus.jparsec.DelimitedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.DelimitedParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/DelimitedParser.java;[1563-2337;33-58;3-3];</data>
    </edge>
    <edge id="e1804" source="org.codehaus.jparsec.EmptyListParser#singleton" target="org.codehaus.jparsec.EmptyListParser()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1413-1516;27-28;3-73];</data>
    </edge>
    <edge id="e1805" source="org.codehaus.jparsec.EmptyListParser()" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1627-1654;35-35;3-30];</data>
    </edge>
    <edge id="e1806" source="org.codehaus.jparsec.EmptyListParser.instance()" target="org.codehaus.jparsec.EmptyListParser#singleton">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1523-1620;30-33;3-3];</data>
    </edge>
    <edge id="e1807" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.EmptyListParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyListParser.java;[1661-1764;37-40;3-3];</data>
    </edge>
    <edge id="e1808" source="org.codehaus.jparsec.EmptyParseError#index" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1560-1671;34-37;3-3];</data>
    </edge>
    <edge id="e1809" source="org.codehaus.jparsec.EmptyParseError#encountered" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1560-1671;34-37;3-3];</data>
    </edge>
    <edge id="e1810" source="org.codehaus.jparsec.EmptyParseError.getIndex()" target="org.codehaus.jparsec.EmptyParseError#index">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1887-1937;51-53;3-3];</data>
    </edge>
    <edge id="e1811" source="org.codehaus.jparsec.EmptyParseError.getEncountered()" target="org.codehaus.jparsec.EmptyParseError#encountered">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EmptyParseError.java;[1678-1743;39-41;3-3];</data>
    </edge>
    <edge id="e1812" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1813" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1814" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError.getEncountered()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1815" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError.getUnexpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1816" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError.getFailureMessage()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1817" source="org.codehaus.jparsec.EmptyParseErrorTest.testEmptyParseError()" target="org.codehaus.jparsec.EmptyParseError.getExpected()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/EmptyParseErrorTest.java;[1377-1693;27-34;3-3];</data>
    </edge>
    <edge id="e1818" source="org.codehaus.jparsec.EofParser(java.lang.String)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1340-1389;26-28;3-3];</data>
    </edge>
    <edge id="e1819" source="org.codehaus.jparsec.EofParser#name" target="org.codehaus.jparsec.EofParser(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1340-1389;26-28;3-3];</data>
    </edge>
    <edge id="e1820" source="org.codehaus.jparsec.EofParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1394-1519;30-34;3-3];</data>
    </edge>
    <edge id="e1821" source="org.codehaus.jparsec.EofParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1394-1519;30-34;3-3];</data>
    </edge>
    <edge id="e1822" source="org.codehaus.jparsec.EofParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.EofParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1394-1519;30-34;3-3];</data>
    </edge>
    <edge id="e1823" source="org.codehaus.jparsec.EofParser.toString()" target="org.codehaus.jparsec.EofParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/EofParser.java;[1526-1582;36-38;3-3];</data>
    </edge>
    <edge id="e1824" source="org.codehaus.jparsec.ExpectParser(java.lang.String)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1387-1439;26-28;3-3];</data>
    </edge>
    <edge id="e1825" source="org.codehaus.jparsec.ExpectParser#name" target="org.codehaus.jparsec.ExpectParser(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1387-1439;26-28;3-3];</data>
    </edge>
    <edge id="e1826" source="org.codehaus.jparsec.ExpectParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1444-1534;30-33;3-3];</data>
    </edge>
    <edge id="e1827" source="org.codehaus.jparsec.ExpectParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ExpectParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1444-1534;30-33;3-3];</data>
    </edge>
    <edge id="e1828" source="org.codehaus.jparsec.ExpectParser.toString()" target="org.codehaus.jparsec.ExpectParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ExpectParser.java;[1541-1597;35-37;3-3];</data>
    </edge>
    <edge id="e1829" source="org.codehaus.jparsec.FailureParser(java.lang.String)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1369-1423;26-28;3-3];</data>
    </edge>
    <edge id="e1830" source="org.codehaus.jparsec.FailureParser#message" target="org.codehaus.jparsec.FailureParser(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1369-1423;26-28;3-3];</data>
    </edge>
    <edge id="e1831" source="org.codehaus.jparsec.FailureParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1428-1517;30-33;3-3];</data>
    </edge>
    <edge id="e1832" source="org.codehaus.jparsec.FailureParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.FailureParser#message">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1428-1517;30-33;3-3];</data>
    </edge>
    <edge id="e1833" source="org.codehaus.jparsec.FailureParser.toString()" target="org.codehaus.jparsec.FailureParser#message">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/FailureParser.java;[1524-1583;35-37;3-3];</data>
    </edge>
    <edge id="e1834" source="org.codehaus.jparsec.GetIndexParser()" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1835" source="org.codehaus.jparsec.GetIndexParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/GetIndexParser.java;[1360-1465;24-27;3-3];</data>
    </edge>
    <edge id="e1836" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.GetIndexParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/GetIndexParser.java;[1360-1465;24-27;3-3];</data>
    </edge>
    <edge id="e1837" source="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1470-1695;25-30;3-3];</data>
    </edge>
    <edge id="e1838" source="org.codehaus.jparsec.IfElseParser#cond" target="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1470-1695;25-30;3-3];</data>
    </edge>
    <edge id="e1839" source="org.codehaus.jparsec.IfElseParser#consequence" target="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1470-1695;25-30;3-3];</data>
    </edge>
    <edge id="e1840" source="org.codehaus.jparsec.IfElseParser#alternative" target="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1470-1695;25-30;3-3];</data>
    </edge>
    <edge id="e1841" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.runWithoutRecordingError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1842" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1843" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1844" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3/1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1845" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1846" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1847" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1848" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1849" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IfElseParser#cond">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3/1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1850" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IfElseParser#consequence">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1851" source="org.codehaus.jparsec.IfElseParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IfElseParser#alternative">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IfElseParser.java;[1700-2081;32-42;3-3];</data>
    </edge>
    <edge id="e1852" source="org.codehaus.jparsec.Indentation$Punctuation#INDENT" target="org.codehaus.jparsec.Indentation$Punctuation()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3385-3390;75-75;5-10];</data>
    </edge>
    <edge id="e1853" source="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT" target="org.codehaus.jparsec.Indentation$Punctuation()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3393-3399;75-75;13-19];</data>
    </edge>
    <edge id="e1854" source="org.codehaus.jparsec.Indentation$Punctuation#LF" target="org.codehaus.jparsec.Indentation$Punctuation()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3402-3403;75-75;22-23];</data>
    </edge>
    <edge id="e1855" source="org.codehaus.jparsec.Indentation#INLINE_WHITESPACE" target="org.codehaus.jparsec.Indentation$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[1793-2191;38-49;3-4];</data>
    </edge>
    <edge id="e1856" source="org.codehaus.jparsec.Indentation#LINE_CONTINUATION" target="org.codehaus.jparsec.pattern.Patterns.sequence(org.codehaus.jparsec.pattern.Pattern[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[2198-2695;51-58;3-86];</data>
    </edge>
    <edge id="e1857" source="org.codehaus.jparsec.Indentation#INLINE_WHITESPACES" target="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[2702-2997;60-65;3-78];</data>
    </edge>
    <edge id="e1858" source="org.codehaus.jparsec.Indentation#WHITESPACES" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3004-3339;67-72;3-71];</data>
    </edge>
    <edge id="e1859" source="org.codehaus.jparsec.Indentation()" target="org.codehaus.jparsec.Indentation(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3754-3926;90-93;3-3];</data>
    </edge>
    <edge id="e1860" source="org.codehaus.jparsec.Indentation()" target="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3754-3926;90-93;3-3];</data>
    </edge>
    <edge id="e1861" source="org.codehaus.jparsec.Indentation()" target="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3754-3926;90-93;3-3];</data>
    </edge>
    <edge id="e1862" source="org.codehaus.jparsec.Indentation#indent" target="org.codehaus.jparsec.Indentation(java.lang.Object,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3480-3747;81-88;3-3];</data>
    </edge>
    <edge id="e1863" source="org.codehaus.jparsec.Indentation#outdent" target="org.codehaus.jparsec.Indentation(java.lang.Object,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3480-3747;81-88;3-3];</data>
    </edge>
    <edge id="e1864" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1865" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3/5103-6480;127-166;3-3/5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1866" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3/5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1867" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3/5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1868" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1869" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Token.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3/5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1870" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Indentation.pseudoToken(int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1871" source="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)" target="org.codehaus.jparsec.Indentation#outdent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[5103-6480;127-166;3-3];</data>
    </edge>
    <edge id="e1872" source="org.codehaus.jparsec.Indentation.indent()" target="org.codehaus.jparsec.Indentation.token(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3933-4071;95-98;3-3];</data>
    </edge>
    <edge id="e1873" source="org.codehaus.jparsec.Indentation.indent()" target="org.codehaus.jparsec.Indentation#indent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[3933-4071;95-98;3-3];</data>
    </edge>
    <edge id="e1874" source="org.codehaus.jparsec.Indentation$2.map(java.util.List)" target="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4770-4881;114-116;7-7];</data>
    </edge>
    <edge id="e1875" source="org.codehaus.jparsec.Indentation$2.map(java.util.List)" target="org.codehaus.jparsec.Indentation$Punctuation#LF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4770-4881;114-116;7-7];</data>
    </edge>
    <edge id="e1876" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1877" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1878" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1879" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1880" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1881" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Indentation$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1882" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1883" source="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Indentation$Punctuation#LF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4226-4968;105-121;3-3/4226-4968;105-121;3-3];</data>
    </edge>
    <edge id="e1884" source="org.codehaus.jparsec.Indentation.outdent()" target="org.codehaus.jparsec.Indentation.token(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4078-4219;100-103;3-3];</data>
    </edge>
    <edge id="e1885" source="org.codehaus.jparsec.Indentation.outdent()" target="org.codehaus.jparsec.Indentation#outdent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4078-4219;100-103;3-3];</data>
    </edge>
    <edge id="e1886" source="org.codehaus.jparsec.Indentation.token(java.lang.Object)" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4975-5098;123-125;3-3];</data>
    </edge>
    <edge id="e1887" source="org.codehaus.jparsec.Indentation.token(java.lang.Object)" target="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[4975-5098;123-125;3-3];</data>
    </edge>
    <edge id="e1888" source="org.codehaus.jparsec.Indentation.pseudoToken(int,java.lang.Object)" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[7225-7326;195-197;3-3];</data>
    </edge>
    <edge id="e1889" source="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)" target="org.codehaus.jparsec.Indentation.pseudoToken(int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[6487-7218;168-193;3-3/6487-7218;168-193;3-3];</data>
    </edge>
    <edge id="e1890" source="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[6487-7218;168-193;3-3/6487-7218;168-193;3-3];</data>
    </edge>
    <edge id="e1891" source="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)" target="org.codehaus.jparsec.Indentation#indent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[6487-7218;168-193;3-3];</data>
    </edge>
    <edge id="e1892" source="org.codehaus.jparsec.Indentation.newLine(org.codehaus.jparsec.Token,java.util.Stack,int,java.util.List)" target="org.codehaus.jparsec.Indentation#outdent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Indentation.java;[6487-7218;168-193;3-3];</data>
    </edge>
    <edge id="e1893" source="org.codehaus.jparsec.IndentationTest.analyze(java.lang.Object[])" target="org.codehaus.jparsec.Indentation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5644-5776;122-124;3-3];</data>
    </edge>
    <edge id="e1894" source="org.codehaus.jparsec.IndentationTest.analyze(java.lang.Object[])" target="org.codehaus.jparsec.Indentation.analyzeIndentations(java.util.List,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5644-5776;122-124;3-3];</data>
    </edge>
    <edge id="e1895" source="org.codehaus.jparsec.IndentationTest.analyze(java.lang.Object[])" target="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5644-5776;122-124;3-3];</data>
    </edge>
    <edge id="e1896" source="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])" target="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5781-6312;126-143;3-3];</data>
    </edge>
    <edge id="e1897" source="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5781-6312;126-143;3-3/5781-6312;126-143;3-3];</data>
    </edge>
    <edge id="e1898" source="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5781-6312;126-143;3-3];</data>
    </edge>
    <edge id="e1899" source="org.codehaus.jparsec.IndentationTest.testAnalyzeIndentations()" target="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3];</data>
    </edge>
    <edge id="e1900" source="org.codehaus.jparsec.IndentationTest.testAnalyzeIndentations()" target="org.codehaus.jparsec.IndentationTest.analyze(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3];</data>
    </edge>
    <edge id="e1901" source="org.codehaus.jparsec.IndentationTest.testAnalyzeIndentations()" target="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3];</data>
    </edge>
    <edge id="e1902" source="org.codehaus.jparsec.IndentationTest.testAnalyzeIndentations()" target="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3/3330-4612;77-96;3-3];</data>
    </edge>
    <edge id="e1903" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Indentation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1904" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Indentation.indent()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1905" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1906" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3/4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1907" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3/4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1908" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3/4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1909" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1910" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1911" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3/4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1912" source="org.codehaus.jparsec.IndentationTest.testIndent()" target="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4619-4937;98-104;3-3];</data>
    </edge>
    <edge id="e1913" source="org.codehaus.jparsec.IndentationTest.testInlineWhitespace()" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[1903-2217;41-48;3-3/1903-2217;41-48;3-3/1903-2217;41-48;3-3/1903-2217;41-48;3-3];</data>
    </edge>
    <edge id="e1914" source="org.codehaus.jparsec.IndentationTest.testInlineWhitespace()" target="org.codehaus.jparsec.Indentation#INLINE_WHITESPACE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[1903-2217;41-48;3-3];</data>
    </edge>
    <edge id="e1915" source="org.codehaus.jparsec.IndentationTest.testInlineWhitespaces()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2650-3053;60-68;3-3/2650-3053;60-68;3-3/2650-3053;60-68;3-3/2650-3053;60-68;3-3/2650-3053;60-68;3-3/2650-3053;60-68;3-3];</data>
    </edge>
    <edge id="e1916" source="org.codehaus.jparsec.IndentationTest.testInlineWhitespaces()" target="org.codehaus.jparsec.Indentation#INLINE_WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2650-3053;60-68;3-3];</data>
    </edge>
    <edge id="e1917" source="org.codehaus.jparsec.IndentationTest.testInlineWhitespaces()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2650-3053;60-68;3-3/2650-3053;60-68;3-3/2650-3053;60-68;3-3];</data>
    </edge>
    <edge id="e1918" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Indentation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1919" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Indentation.lexer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1920" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Parser.optional()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1921" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1922" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1923" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1924" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Indentation#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1925" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3/5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1926" source="org.codehaus.jparsec.IndentationTest.testLexer()" target="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[5272-5637;114-120;3-3/5272-5637;114-120;3-3];</data>
    </edge>
    <edge id="e1927" source="org.codehaus.jparsec.IndentationTest.testLineContinuation()" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3];</data>
    </edge>
    <edge id="e1928" source="org.codehaus.jparsec.IndentationTest.testLineContinuation()" target="org.codehaus.jparsec.Indentation#LINE_CONTINUATION">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2224-2643;50-58;3-3];</data>
    </edge>
    <edge id="e1929" source="org.codehaus.jparsec.IndentationTest.testLineContinuation()" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3/2224-2643;50-58;3-3];</data>
    </edge>
    <edge id="e1930" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Indentation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1931" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Indentation.outdent()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1932" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1933" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3/4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1934" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3/4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1935" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.IndentationTest.tokenList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3/4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1936" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1937" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1938" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Indentation$Punctuation#OUTDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3/4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1939" source="org.codehaus.jparsec.IndentationTest.testOutdent()" target="org.codehaus.jparsec.Indentation$Punctuation#INDENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[4944-5265;106-112;3-3];</data>
    </edge>
    <edge id="e1940" source="org.codehaus.jparsec.IndentationTest.testWhitespaces()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3060-3323;70-75;3-3];</data>
    </edge>
    <edge id="e1941" source="org.codehaus.jparsec.IndentationTest.testWhitespaces()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3060-3323;70-75;3-3];</data>
    </edge>
    <edge id="e1942" source="org.codehaus.jparsec.IndentationTest.testWhitespaces()" target="org.codehaus.jparsec.Indentation#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/IndentationTest.java;[3060-3323;70-75;3-3];</data>
    </edge>
    <edge id="e1943" source="org.codehaus.jparsec.IntOrders#LT" target="org.codehaus.jparsec.IntOrders$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1320-1659;25-35;3-4];</data>
    </edge>
    <edge id="e1944" source="org.codehaus.jparsec.IntOrders#GT" target="org.codehaus.jparsec.IntOrders$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IntOrders.java;[1666-2010;37-48;3-4];</data>
    </edge>
    <edge id="e1945" source="org.codehaus.jparsec.InternalFunctors#FIRST_OF_TWO" target="org.codehaus.jparsec.InternalFunctors$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2231-2469;56-64;3-4];</data>
    </edge>
    <edge id="e1946" source="org.codehaus.jparsec.InternalFunctors#LAST_OF_TWO" target="org.codehaus.jparsec.InternalFunctors$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2476-2709;66-74;3-4];</data>
    </edge>
    <edge id="e1947" source="org.codehaus.jparsec.InternalFunctors#LAST_OF_THREE" target="org.codehaus.jparsec.InternalFunctors$3()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2716-2961;76-84;3-4];</data>
    </edge>
    <edge id="e1948" source="org.codehaus.jparsec.InternalFunctors#LAST_OF_FOUR" target="org.codehaus.jparsec.InternalFunctors$4()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2968-3222;86-94;3-4];</data>
    </edge>
    <edge id="e1949" source="org.codehaus.jparsec.InternalFunctors#LAST_OF_FIVE" target="org.codehaus.jparsec.InternalFunctors$5()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3229-3493;96-104;3-4];</data>
    </edge>
    <edge id="e1950" source="org.codehaus.jparsec.InternalFunctors.lastOfFive()" target="org.codehaus.jparsec.InternalFunctors#LAST_OF_FIVE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3955-4075;126-129;3-3];</data>
    </edge>
    <edge id="e1951" source="org.codehaus.jparsec.InternalFunctors.lastOfFour()" target="org.codehaus.jparsec.InternalFunctors#LAST_OF_FOUR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3834-3948;121-124;3-3];</data>
    </edge>
    <edge id="e1952" source="org.codehaus.jparsec.InternalFunctors.lastOfThree()" target="org.codehaus.jparsec.InternalFunctors#LAST_OF_THREE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3717-3827;116-119;3-3];</data>
    </edge>
    <edge id="e1953" source="org.codehaus.jparsec.InternalFunctors.lastOfTwo()" target="org.codehaus.jparsec.InternalFunctors#LAST_OF_TWO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3610-3710;111-114;3-3];</data>
    </edge>
    <edge id="e1954" source="org.codehaus.jparsec.InternalFunctors$8.map(F)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4366-4485;138-141;7-7/4366-4485;138-141;7-7];</data>
    </edge>
    <edge id="e1955" source="org.codehaus.jparsec.InternalFunctors.fallback(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.InternalFunctors$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4080-4574;131-146;3-3];</data>
    </edge>
    <edge id="e1956" source="org.codehaus.jparsec.InternalFunctors.fallback(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[4080-4574;131-146;3-3/4080-4574;131-146;3-3];</data>
    </edge>
    <edge id="e1957" source="org.codehaus.jparsec.InternalFunctors.firstOfTwo()" target="org.codehaus.jparsec.InternalFunctors#FIRST_OF_TWO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[3500-3603;106-109;3-3];</data>
    </edge>
    <edge id="e1958" source="org.codehaus.jparsec.InternalFunctors$6.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1669-1835;33-38;7-7/1669-1835;33-38;7-7];</data>
    </edge>
    <edge id="e1959" source="org.codehaus.jparsec.InternalFunctors.isTokenType(java.lang.Class,java.lang.String)" target="org.codehaus.jparsec.InternalFunctors$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1549-1918;31-43;3-3];</data>
    </edge>
    <edge id="e1960" source="org.codehaus.jparsec.InternalFunctors.isTokenType(java.lang.Class,java.lang.String)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1549-1918;31-43;3-3/1549-1918;31-43;3-3];</data>
    </edge>
    <edge id="e1961" source="org.codehaus.jparsec.InternalFunctors$7.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[2030-2124;47-49;7-7];</data>
    </edge>
    <edge id="e1962" source="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)" target="org.codehaus.jparsec.InternalFunctors$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1925-2224;45-54;3-3];</data>
    </edge>
    <edge id="e1963" source="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/InternalFunctors.java;[1925-2224;45-54;3-3];</data>
    </edge>
    <edge id="e1964" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest()" target="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1965" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()" target="org.codehaus.jparsec.InternalFunctors.fallback(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3265-3363;97-99;5-5];</data>
    </edge>
    <edge id="e1966" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3265-3363;97-99;5-5];</data>
    </edge>
    <edge id="e1967" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3265-3363;97-99;5-5];</data>
    </edge>
    <edge id="e1968" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5/2958-3155;86-91;5-5/2958-3155;86-91;5-5];</data>
    </edge>
    <edge id="e1969" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5];</data>
    </edge>
    <edge id="e1970" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5];</data>
    </edge>
    <edge id="e1971" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5];</data>
    </edge>
    <edge id="e1972" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testBothMapsReturnNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2958-3155;86-91;5-5];</data>
    </edge>
    <edge id="e1973" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNonNull()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2554-2724;73-77;5-5/2554-2724;73-77;5-5];</data>
    </edge>
    <edge id="e1974" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNonNull()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2554-2724;73-77;5-5];</data>
    </edge>
    <edge id="e1975" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNonNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2554-2724;73-77;5-5];</data>
    </edge>
    <edge id="e1976" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNonNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2554-2724;73-77;5-5];</data>
    </edge>
    <edge id="e1977" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5/2735-2949;79-84;5-5/2735-2949;79-84;5-5];</data>
    </edge>
    <edge id="e1978" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5];</data>
    </edge>
    <edge id="e1979" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5];</data>
    </edge>
    <edge id="e1980" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5];</data>
    </edge>
    <edge id="e1981" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testFirstMapReturnsNull()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest#map2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2735-2949;79-84;5-5];</data>
    </edge>
    <edge id="e1982" source="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.testToString()" target="org.codehaus.jparsec.InternalFunctorsTest$FallbackTest.fallback()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[3166-3254;93-95;5-5];</data>
    </edge>
    <edge id="e1983" source="org.codehaus.jparsec.InternalFunctorsTest.testFirstOfTwo()" target="org.codehaus.jparsec.InternalFunctors.firstOfTwo()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1304-1500;39-43;3-3];</data>
    </edge>
    <edge id="e1984" source="org.codehaus.jparsec.InternalFunctorsTest.testFirstOfTwo()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1304-1500;39-43;3-3];</data>
    </edge>
    <edge id="e1985" source="org.codehaus.jparsec.InternalFunctorsTest.testIsTokenType()" target="org.codehaus.jparsec.InternalFunctors.isTokenType(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[506-855;20-26;3-3];</data>
    </edge>
    <edge id="e1986" source="org.codehaus.jparsec.InternalFunctorsTest.testIsTokenType()" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[506-855;20-26;3-3/506-855;20-26;3-3/506-855;20-26;3-3];</data>
    </edge>
    <edge id="e1987" source="org.codehaus.jparsec.InternalFunctorsTest.testIsTokenType()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[506-855;20-26;3-3/506-855;20-26;3-3/506-855;20-26;3-3];</data>
    </edge>
    <edge id="e1988" source="org.codehaus.jparsec.InternalFunctorsTest.testIsTokenType()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[506-855;20-26;3-3];</data>
    </edge>
    <edge id="e1989" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFive()" target="org.codehaus.jparsec.InternalFunctors.lastOfFive()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2163-2407;63-67;3-3];</data>
    </edge>
    <edge id="e1990" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFive()" target="org.codehaus.jparsec.functors.Map5.map(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[2163-2407;63-67;3-3];</data>
    </edge>
    <edge id="e1991" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFour()" target="org.codehaus.jparsec.InternalFunctors.lastOfFour()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1928-2156;57-61;3-3];</data>
    </edge>
    <edge id="e1992" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfFour()" target="org.codehaus.jparsec.functors.Map4.map(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1928-2156;57-61;3-3];</data>
    </edge>
    <edge id="e1993" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfThree()" target="org.codehaus.jparsec.InternalFunctors.lastOfThree()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1706-1921;51-55;3-3];</data>
    </edge>
    <edge id="e1994" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfThree()" target="org.codehaus.jparsec.functors.Map3.map(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1706-1921;51-55;3-3];</data>
    </edge>
    <edge id="e1995" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfTwo()" target="org.codehaus.jparsec.InternalFunctors.lastOfTwo()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1507-1699;45-49;3-3];</data>
    </edge>
    <edge id="e1996" source="org.codehaus.jparsec.InternalFunctorsTest.testLastOfTwo()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[1507-1699;45-49;3-3];</data>
    </edge>
    <edge id="e1997" source="org.codehaus.jparsec.InternalFunctorsTest.testTokenWithSameValue()" target="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[862-1297;28-37;3-3];</data>
    </edge>
    <edge id="e1998" source="org.codehaus.jparsec.InternalFunctorsTest.testTokenWithSameValue()" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[862-1297;28-37;3-3/862-1297;28-37;3-3/862-1297;28-37;3-3/862-1297;28-37;3-3];</data>
    </edge>
    <edge id="e1999" source="org.codehaus.jparsec.InternalFunctorsTest.testTokenWithSameValue()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/InternalFunctorsTest.java;[862-1297;28-37;3-3/862-1297;28-37;3-3/862-1297;28-37;3-3/862-1297;28-37;3-3];</data>
    </edge>
    <edge id="e2000" source="org.codehaus.jparsec.IsCharScanner(java.lang.String,org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1453-1563;29-32;3-3];</data>
    </edge>
    <edge id="e2001" source="org.codehaus.jparsec.IsCharScanner#name" target="org.codehaus.jparsec.IsCharScanner(java.lang.String,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1453-1563;29-32;3-3];</data>
    </edge>
    <edge id="e2002" source="org.codehaus.jparsec.IsCharScanner#predicate" target="org.codehaus.jparsec.IsCharScanner(java.lang.String,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1453-1563;29-32;3-3];</data>
    </edge>
    <edge id="e2003" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2004" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3/1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2005" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.peekChar()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2006" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.pattern.CharPredicate.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2007" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2008" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IsCharScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3/1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2009" source="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IsCharScanner#predicate">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2010" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.IsCharScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1568-1866;34-47;3-3];</data>
    </edge>
    <edge id="e2011" source="org.codehaus.jparsec.IsCharScanner.toString()" target="org.codehaus.jparsec.IsCharScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsCharScanner.java;[1873-1929;49-51;3-3];</data>
    </edge>
    <edge id="e2012" source="org.codehaus.jparsec.IsFragment.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1449-1697;27-35;3-3];</data>
    </edge>
    <edge id="e2013" source="org.codehaus.jparsec.IsFragment.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.IsFragment.isExpectedTag(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1449-1697;27-35;3-3];</data>
    </edge>
    <edge id="e2014" source="org.codehaus.jparsec.IsFragment.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Tokens$Fragment.tag()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1449-1697;27-35;3-3];</data>
    </edge>
    <edge id="e2015" source="org.codehaus.jparsec.IsFragment.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Tokens$Fragment.text()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsFragment.java;[1449-1697;27-35;3-3];</data>
    </edge>
    <edge id="e2016" source="org.codehaus.jparsec.IsTokenParser(org.codehaus.jparsec.TokenMap)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1318-1401;21-23;3-3];</data>
    </edge>
    <edge id="e2017" source="org.codehaus.jparsec.IsTokenParser#fromToken" target="org.codehaus.jparsec.IsTokenParser(org.codehaus.jparsec.TokenMap)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1318-1401;21-23;3-3];</data>
    </edge>
    <edge id="e2018" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2019" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3/1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2020" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getToken()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2021" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2022" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.next()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2023" source="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.IsTokenParser#fromToken">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3/1406-1747;25-39;3-3/1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2024" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.IsTokenParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1406-1747;25-39;3-3];</data>
    </edge>
    <edge id="e2025" source="org.codehaus.jparsec.IsTokenParser.toString()" target="org.codehaus.jparsec.IsTokenParser#fromToken">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/IsTokenParser.java;[1754-1826;41-43;3-3];</data>
    </edge>
    <edge id="e2026" source="org.codehaus.jparsec.Keywords$CaseInsensitive#COMPARATOR" target="org.codehaus.jparsec.Keywords$CaseInsensitive$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2601-2888;64-71;5-6];</data>
    </edge>
    <edge id="e2027" source="org.codehaus.jparsec.Keywords$CaseInsensitive.toMap(java.util.Map)" target="org.codehaus.jparsec.Keywords$CaseInsensitive$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3042-3315;78-85;5-5];</data>
    </edge>
    <edge id="e2028" source="org.codehaus.jparsec.Keywords$CaseInsensitive.comparator()" target="org.codehaus.jparsec.Keywords$CaseInsensitive#COMPARATOR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2894-2964;72-74;5-5];</data>
    </edge>
    <edge id="e2029" source="org.codehaus.jparsec.Keywords$CaseSensitive#COMPARATOR" target="org.codehaus.jparsec.Keywords$CaseSensitive$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1986-2263;44-51;5-6];</data>
    </edge>
    <edge id="e2030" source="org.codehaus.jparsec.Keywords$CaseSensitive.toMap(java.util.Map)" target="org.codehaus.jparsec.functors.Maps.map(java.util.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2403-2525;58-60;5-5];</data>
    </edge>
    <edge id="e2031" source="org.codehaus.jparsec.Keywords$CaseSensitive.comparator()" target="org.codehaus.jparsec.Keywords$CaseSensitive#COMPARATOR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[2269-2339;52-54;5-5];</data>
    </edge>
    <edge id="e2032" source="org.codehaus.jparsec.Keywords#CASE_SENSITIVE" target="org.codehaus.jparsec.Keywords$CaseSensitive()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1772-1840;40-40;3-71];</data>
    </edge>
    <edge id="e2033" source="org.codehaus.jparsec.Keywords#CASE_INSENSITIVE" target="org.codehaus.jparsec.Keywords$CaseInsensitive()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[1844-1916;41-41;3-75];</data>
    </edge>
    <edge id="e2034" source="org.codehaus.jparsec.Keywords$1.map(java.lang.String)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[4257-4412;110-114;7-7/4257-4412;110-114;7-7];</data>
    </edge>
    <edge id="e2035" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords.getStringCase(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2036" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords.unique(java.util.Comparator,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2037" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords$StringCase.comparator()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2038" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2039" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords$StringCase.toKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2040" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords$StringCase.toMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2041" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2042" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3/3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2043" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2044" source="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3680-4488;98-117;3-3];</data>
    </edge>
    <edge id="e2045" source="org.codehaus.jparsec.Keywords.getStringCase(boolean)" target="org.codehaus.jparsec.Keywords#CASE_SENSITIVE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3326-3455;88-90;3-3];</data>
    </edge>
    <edge id="e2046" source="org.codehaus.jparsec.Keywords.getStringCase(boolean)" target="org.codehaus.jparsec.Keywords#CASE_INSENSITIVE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Keywords.java;[3326-3455;88-90;3-3];</data>
    </edge>
    <edge id="e2047" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2048" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3/812-1494;27-40;3-3/812-1494;27-40;3-3/812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2049" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3/812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2050" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3/812-1494;27-40;3-3/812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2051" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Tokens.identifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2052" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2053" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2054" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseInsensitive()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[812-1494;27-40;3-3/812-1494;27-40;3-3/812-1494;27-40;3-3];</data>
    </edge>
    <edge id="e2055" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2056" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3/238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2057" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2058" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3/238-805;14-25;3-3/238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2059" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Tokens.identifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3/238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2060" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2061" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2062" source="org.codehaus.jparsec.KeywordsTest.testLexicon_caseSensitive()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[238-805;14-25;3-3/238-805;14-25;3-3/238-805;14-25;3-3];</data>
    </edge>
    <edge id="e2063" source="org.codehaus.jparsec.KeywordsTest.testUnique()" target="org.codehaus.jparsec.Asserts.assertArrayEquals(java.lang.Object[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[1501-1668;42-46;3-3];</data>
    </edge>
    <edge id="e2064" source="org.codehaus.jparsec.KeywordsTest.testUnique()" target="org.codehaus.jparsec.Keywords.unique(java.util.Comparator,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[1501-1668;42-46;3-3];</data>
    </edge>
    <edge id="e2065" source="org.codehaus.jparsec.KeywordsTest.testUnique()" target="java.lang.String#CASE_INSENSITIVE_ORDER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/KeywordsTest.java;[1501-1668;42-46;3-3];</data>
    </edge>
    <edge id="e2066" source="org.codehaus.jparsec.LazyParser(java.util.concurrent.atomic.AtomicReference)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1548-1615;31-33;3-3];</data>
    </edge>
    <edge id="e2067" source="org.codehaus.jparsec.LazyParser#ref" target="org.codehaus.jparsec.LazyParser(java.util.concurrent.atomic.AtomicReference)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1548-1615;31-33;3-3];</data>
    </edge>
    <edge id="e2068" source="org.codehaus.jparsec.LazyParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.LazyParser.deref()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1622-1701;35-37;3-3];</data>
    </edge>
    <edge id="e2069" source="org.codehaus.jparsec.LazyParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1622-1701;35-37;3-3];</data>
    </edge>
    <edge id="e2070" source="org.codehaus.jparsec.LazyParser.deref()" target="org.codehaus.jparsec.util.Checks.checkNotNullState(java.lang.Object,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1706-1907;39-44;3-3];</data>
    </edge>
    <edge id="e2071" source="org.codehaus.jparsec.LazyParser.deref()" target="org.codehaus.jparsec.LazyParser#ref">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/LazyParser.java;[1706-1907;39-44;3-3];</data>
    </edge>
    <edge id="e2072" source="org.codehaus.jparsec.Lexicon#words" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[1739-1855;37-40;3-3];</data>
    </edge>
    <edge id="e2073" source="org.codehaus.jparsec.Lexicon#tokenizer" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[1739-1855;37-40;3-3];</data>
    </edge>
    <edge id="e2074" source="org.codehaus.jparsec.Lexicon.word(java.lang.String)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3179-3581;77-88;3-3];</data>
    </edge>
    <edge id="e2075" source="org.codehaus.jparsec.Lexicon.word(java.lang.String)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3179-3581;77-88;3-3];</data>
    </edge>
    <edge id="e2076" source="org.codehaus.jparsec.Lexicon.word(java.lang.String)" target="org.codehaus.jparsec.Lexicon#words">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3179-3581;77-88;3-3];</data>
    </edge>
    <edge id="e2077" source="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3];</data>
    </edge>
    <edge id="e2078" source="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.InternalFunctors.fallback(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3];</data>
    </edge>
    <edge id="e2079" source="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3];</data>
    </edge>
    <edge id="e2080" source="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon#words">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3/3588-3841;90-95;3-3];</data>
    </edge>
    <edge id="e2081" source="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[3588-3841;90-95;3-3/3588-3841;90-95;3-3];</data>
    </edge>
    <edge id="e2082" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="org.codehaus.jparsec.Lexicon.token(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2083" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2084" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="org.codehaus.jparsec.Parser.atomic()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2085" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2086" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2087" source="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2040-2484;48-59;3-3/2040-2484;48-59;3-3];</data>
    </edge>
    <edge id="e2088" source="org.codehaus.jparsec.Lexicon.token(java.lang.String)" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2960-3174;72-75;3-3];</data>
    </edge>
    <edge id="e2089" source="org.codehaus.jparsec.Lexicon.token(java.lang.String)" target="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2960-3174;72-75;3-3];</data>
    </edge>
    <edge id="e2090" source="org.codehaus.jparsec.Lexicon.token(java.lang.String)" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2960-3174;72-75;3-3];</data>
    </edge>
    <edge id="e2091" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2092" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2093" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2094" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2095" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2096" source="org.codehaus.jparsec.Lexicon.token(java.lang.String[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[2491-2953;61-70;3-3/2491-2953;61-70;3-3/2491-2953;61-70;3-3];</data>
    </edge>
    <edge id="e2097" source="org.codehaus.jparsec.Lexicon.tokenizer()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Lexicon.java;[1862-2033;42-46;3-3];</data>
    </edge>
    <edge id="e2098" source="org.codehaus.jparsec.LexiconTest.testWord()" target="org.codehaus.jparsec.functors.Maps.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
    </edge>
    <edge id="e2099" source="org.codehaus.jparsec.LexiconTest.testWord()" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
    </edge>
    <edge id="e2100" source="org.codehaus.jparsec.LexiconTest.testWord()" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
    </edge>
    <edge id="e2101" source="org.codehaus.jparsec.LexiconTest.testWord()" target="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
    </edge>
    <edge id="e2102" source="org.codehaus.jparsec.LexiconTest.testWord()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[264-579;15-21;3-3];</data>
    </edge>
    <edge id="e2103" source="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()" target="org.codehaus.jparsec.functors.Maps.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
    </edge>
    <edge id="e2104" source="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
    </edge>
    <edge id="e2105" source="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
    </edge>
    <edge id="e2106" source="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()" target="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
    </edge>
    <edge id="e2107" source="org.codehaus.jparsec.LexiconTest.testWord_throwsForNullValue()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/LexiconTest.java;[586-968;23-32;3-3];</data>
    </edge>
    <edge id="e2108" source="org.codehaus.jparsec.ListFactories$1.newList()" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[2149-2217;51-53;5-5];</data>
    </edge>
    <edge id="e2109" source="org.codehaus.jparsec.ListFactories#ARRAY_LIST_FACTORY" target="org.codehaus.jparsec.ListFactories$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[2030-2222;49-54;3-4];</data>
    </edge>
    <edge id="e2110" source="org.codehaus.jparsec.ListFactories.arrayListFactory()" target="org.codehaus.jparsec.ListFactories#ARRAY_LIST_FACTORY">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1423-1623;30-34;3-3];</data>
    </edge>
    <edge id="e2111" source="org.codehaus.jparsec.ListFactories$2.newList()" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1889-2015;42-46;7-7];</data>
    </edge>
    <edge id="e2112" source="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)" target="org.codehaus.jparsec.ListFactories$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1630-2026;36-48;3-3];</data>
    </edge>
    <edge id="e2113" source="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListFactories.java;[1630-2026;36-48;3-3];</data>
    </edge>
    <edge id="e2114" source="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactory()" target="org.codehaus.jparsec.ListFactories.arrayListFactory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[241-715;14-22;3-3/241-715;14-22;3-3];</data>
    </edge>
    <edge id="e2115" source="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactory()" target="org.codehaus.jparsec.ListFactory.newList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[241-715;14-22;3-3/241-715;14-22;3-3];</data>
    </edge>
    <edge id="e2116" source="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactoryWithFirstElement()" target="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[722-989;24-28;3-3];</data>
    </edge>
    <edge id="e2117" source="org.codehaus.jparsec.ListFactoriesTest.testArrayListFactoryWithFirstElement()" target="org.codehaus.jparsec.ListFactory.newList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ListFactoriesTest.java;[722-989;24-28;3-3];</data>
    </edge>
    <edge id="e2118" source="org.codehaus.jparsec.ListParser(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1549-1623;32-34;3-3];</data>
    </edge>
    <edge id="e2119" source="org.codehaus.jparsec.ListParser#parsers" target="org.codehaus.jparsec.ListParser(org.codehaus.jparsec.Parser[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1549-1623;32-34;3-3];</data>
    </edge>
    <edge id="e2120" source="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2121" source="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2122" source="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2123" source="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2124" source="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ListParser#parsers">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3/1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2125" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ListParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ListParser.java;[1628-1911;36-44;3-3];</data>
    </edge>
    <edge id="e2126" source="org.codehaus.jparsec.MapParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1404-1516;24-27;3-3];</data>
    </edge>
    <edge id="e2127" source="org.codehaus.jparsec.MapParser#parser" target="org.codehaus.jparsec.MapParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1404-1516;24-27;3-3];</data>
    </edge>
    <edge id="e2128" source="org.codehaus.jparsec.MapParser#m" target="org.codehaus.jparsec.MapParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1404-1516;24-27;3-3];</data>
    </edge>
    <edge id="e2129" source="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2130" source="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2131" source="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2132" source="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.MapParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3/1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2133" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2134" source="org.codehaus.jparsec.MapParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.MapParser#m">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1521-1698;29-35;3-3];</data>
    </edge>
    <edge id="e2135" source="org.codehaus.jparsec.MapParser.toString()" target="org.codehaus.jparsec.MapParser#m">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/MapParser.java;[1705-1769;37-39;3-3];</data>
    </edge>
    <edge id="e2136" source="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1468-1662;29-33;3-3];</data>
    </edge>
    <edge id="e2137" source="org.codehaus.jparsec.NestableBlockCommentScanner#openQuote" target="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1468-1662;29-33;3-3];</data>
    </edge>
    <edge id="e2138" source="org.codehaus.jparsec.NestableBlockCommentScanner#closeQuote" target="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1468-1662;29-33;3-3];</data>
    </edge>
    <edge id="e2139" source="org.codehaus.jparsec.NestableBlockCommentScanner#commented" target="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1468-1662;29-33;3-3];</data>
    </edge>
    <edge id="e2140" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3/1667-2666;35-66;3-3/1667-2666;35-66;3-3/1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2141" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3/1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2142" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestableBlockCommentScanner#openQuote">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3/1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2143" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2144" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3/1667-2666;35-66;3-3/1667-2666;35-66;3-3/1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2145" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestableBlockCommentScanner#closeQuote">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2146" source="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestableBlockCommentScanner#commented">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2147" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.NestableBlockCommentScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestableBlockCommentScanner.java;[1667-2666;35-66;3-3];</data>
    </edge>
    <edge id="e2148" source="org.codehaus.jparsec.NestedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1351-1459;22-25;3-3];</data>
    </edge>
    <edge id="e2149" source="org.codehaus.jparsec.NestedParser#lexer" target="org.codehaus.jparsec.NestedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1351-1459;22-25;3-3];</data>
    </edge>
    <edge id="e2150" source="org.codehaus.jparsec.NestedParser#parser" target="org.codehaus.jparsec.NestedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1351-1459;22-25;3-3];</data>
    </edge>
    <edge id="e2151" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2152" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2153" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserState(java.lang.String,java.lang.CharSequence,org.codehaus.jparsec.Token[],int,org.codehaus.jparsec.SourceLocator,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2154" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2155" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2156" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestedParser#lexer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3/1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2157" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#module">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2158" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2159" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#locator">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2160" source="org.codehaus.jparsec.NestedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestedParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1464-1798;27-33;3-3];</data>
    </edge>
    <edge id="e2161" source="org.codehaus.jparsec.NestedParser.toString()" target="org.codehaus.jparsec.NestedParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedParser.java;[1805-1874;35-37;3-3];</data>
    </edge>
    <edge id="e2162" source="org.codehaus.jparsec.NestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1457-1566;27-30;3-3];</data>
    </edge>
    <edge id="e2163" source="org.codehaus.jparsec.NestedScanner#outer" target="org.codehaus.jparsec.NestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1457-1566;27-30;3-3];</data>
    </edge>
    <edge id="e2164" source="org.codehaus.jparsec.NestedScanner#inner" target="org.codehaus.jparsec.NestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1457-1566;27-30;3-3];</data>
    </edge>
    <edge id="e2165" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2166" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,int,org.codehaus.jparsec.SourceLocator,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2167" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.characters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2168" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2169" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3/1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2170" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestedScanner#outer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2171" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#module">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2172" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#locator">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2173" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2174" source="org.codehaus.jparsec.NestedScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.NestedScanner#inner">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NestedScanner.java;[1571-1886;32-38;3-3];</data>
    </edge>
    <edge id="e2175" source="org.codehaus.jparsec.NeverParser()" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2176" source="org.codehaus.jparsec.NeverParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.trap()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NeverParser.java;[1269-1351;20-23;3-3];</data>
    </edge>
    <edge id="e2177" source="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeDecimalAsLong(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.toDecDigit(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1753-1951;40-47;3-3];</data>
    </edge>
    <edge id="e2178" source="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeHexAsLong(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.toHexDigit(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[2156-2422;58-66;3-3];</data>
    </edge>
    <edge id="e2179" source="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeOctalAsLong(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.toOctDigit(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/NumberLiteralsTranslator.java;[1956-2151;49-56;3-3];</data>
    </edge>
    <edge id="e2180" source="org.codehaus.jparsec.OperatorTable$Operator#op" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2223-2395;49-53;5-5];</data>
    </edge>
    <edge id="e2181" source="org.codehaus.jparsec.OperatorTable$Operator#precedence" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2223-2395;49-53;5-5];</data>
    </edge>
    <edge id="e2182" source="org.codehaus.jparsec.OperatorTable$Operator#associativity" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2223-2395;49-53;5-5];</data>
    </edge>
    <edge id="e2183" source="org.codehaus.jparsec.OperatorTable$Operator.compareTo(org.codehaus.jparsec.OperatorTable$Operator)" target="org.codehaus.jparsec.OperatorTable$Operator#precedence">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2406-2676;55-60;5-5/2406-2676;55-60;5-5/2406-2676;55-60;5-5/2406-2676;55-60;5-5];</data>
    </edge>
    <edge id="e2184" source="org.codehaus.jparsec.OperatorTable$Operator.compareTo(org.codehaus.jparsec.OperatorTable$Operator)" target="org.codehaus.jparsec.OperatorTable$Operator#associativity">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2406-2676;55-60;5-5/2406-2676;55-60;5-5];</data>
    </edge>
    <edge id="e2185" source="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX" target="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[1956-1961;39-39;5-10];</data>
    </edge>
    <edge id="e2186" source="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX" target="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[1964-1970;39-39;13-19];</data>
    </edge>
    <edge id="e2187" source="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC" target="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[1973-1978;39-39;22-27];</data>
    </edge>
    <edge id="e2188" source="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC" target="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[1981-1986;39-39;30-35];</data>
    </edge>
    <edge id="e2189" source="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC" target="org.codehaus.jparsec.OperatorTable$Associativity()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[1989-1994;39-39;38-43];</data>
    </edge>
    <edge id="e2190" source="org.codehaus.jparsec.OperatorTable#ops" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2005-2057;42-42;3-55];</data>
    </edge>
    <edge id="e2191" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2192" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2193" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2194" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2195" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.infixn(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2196" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2197" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2198" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2199" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2200" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6454-6950;189-206;3-3];</data>
    </edge>
    <edge id="e2201" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2202" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="org.codehaus.jparsec.OperatorTable.slice(org.codehaus.jparsec.OperatorTable$Operator[],int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2203" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Associativity,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2204" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2205" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="org.codehaus.jparsec.OperatorTable$Operator#precedence">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2206" source="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])" target="org.codehaus.jparsec.OperatorTable$Operator#associativity">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3/5052-6212;143-179;3-3/5052-6212;143-179;3-3/5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2207" source="int#length" target="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[5052-6212;143-179;3-3];</data>
    </edge>
    <edge id="e2208" source="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3432-3826;89-100;3-3];</data>
    </edge>
    <edge id="e2209" source="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3432-3826;89-100;3-3];</data>
    </edge>
    <edge id="e2210" source="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3432-3826;89-100;3-3];</data>
    </edge>
    <edge id="e2211" source="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4232-4625;114-125;3-3];</data>
    </edge>
    <edge id="e2212" source="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4232-4625;114-125;3-3];</data>
    </edge>
    <edge id="e2213" source="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4232-4625;114-125;3-3];</data>
    </edge>
    <edge id="e2214" source="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3833-4228;102-113;3-3];</data>
    </edge>
    <edge id="e2215" source="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3833-4228;102-113;3-3];</data>
    </edge>
    <edge id="e2216" source="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3833-4228;102-113;3-3];</data>
    </edge>
    <edge id="e2217" source="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3058-3425;76-87;3-3];</data>
    </edge>
    <edge id="e2218" source="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3058-3425;76-87;3-3];</data>
    </edge>
    <edge id="e2219" source="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[3058-3425;76-87;3-3];</data>
    </edge>
    <edge id="e2220" source="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2687-3051;63-74;3-3];</data>
    </edge>
    <edge id="e2221" source="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2687-3051;63-74;3-3];</data>
    </edge>
    <edge id="e2222" source="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[2687-3051;63-74;3-3];</data>
    </edge>
    <edge id="e2223" source="org.codehaus.jparsec.OperatorTable.operators()" target="org.codehaus.jparsec.OperatorTable#ops">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4932-5045;138-141;3-3/4932-5045;138-141;3-3/4932-5045;138-141;3-3];</data>
    </edge>
    <edge id="e2224" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable.buildExpressionParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.OperatorTable$Operator[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4633-4925;128-136;3-3];</data>
    </edge>
    <edge id="e2225" source="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.OperatorTable.operators()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[4633-4925;128-136;3-3];</data>
    </edge>
    <edge id="e2226" source="org.codehaus.jparsec.OperatorTable.slice(org.codehaus.jparsec.OperatorTable$Operator[],int,int)" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6219-6447;181-187;3-3];</data>
    </edge>
    <edge id="e2227" source="org.codehaus.jparsec.OperatorTable.slice(org.codehaus.jparsec.OperatorTable$Operator[],int,int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6219-6447;181-187;3-3];</data>
    </edge>
    <edge id="e2228" source="org.codehaus.jparsec.OperatorTable.slice(org.codehaus.jparsec.OperatorTable$Operator[],int,int)" target="org.codehaus.jparsec.OperatorTable$Operator#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OperatorTable.java;[6219-6447;181-187;3-3];</data>
    </edge>
    <edge id="e2229" source="org.codehaus.jparsec.OperatorTableExpressionTest()" target="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2230" source="org.codehaus.jparsec.OperatorTableExpressionTest.op(java.lang.String,T)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2494-2591;67-69;3-3];</data>
    </edge>
    <edge id="e2231" source="org.codehaus.jparsec.OperatorTableExpressionTest.op(java.lang.String,T)" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2494-2591;67-69;3-3];</data>
    </edge>
    <edge id="e2232" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2233" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2234" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest.op(java.lang.String,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2235" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2236" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2237" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3/2106-2487;55-65;3-3/2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2238" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2239" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2240" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2241" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#negate">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2242" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#percent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2243" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#power">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2244" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#plus">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2245" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#subtract">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2246" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#multiply">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2247" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#point">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2248" source="org.codehaus.jparsec.OperatorTableExpressionTest.parser()" target="org.codehaus.jparsec.Scanners#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[2106-2487;55-65;3-3];</data>
    </edge>
    <edge id="e2249" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2250" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2251" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2252" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2253" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest.parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2254" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#point">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2255" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#plus">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2256" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#percent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2257" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#subtract">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2258" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#negate">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2259" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#power">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2260" source="org.codehaus.jparsec.OperatorTableExpressionTest.testBuildExpressionParser()" target="org.codehaus.jparsec.OperatorTableExpressionTest#multiply">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1019-1930;29-48;3-3/1019-1930;29-48;3-3];</data>
    </edge>
    <edge id="e2261" source="org.codehaus.jparsec.OperatorTableExpressionTest.testEmptyOperatorTable()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1937-2101;50-53;3-3];</data>
    </edge>
    <edge id="e2262" source="org.codehaus.jparsec.OperatorTableExpressionTest.testEmptyOperatorTable()" target="org.codehaus.jparsec.OperatorTable()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1937-2101;50-53;3-3];</data>
    </edge>
    <edge id="e2263" source="org.codehaus.jparsec.OperatorTableExpressionTest.testEmptyOperatorTable()" target="org.codehaus.jparsec.OperatorTable.build(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableExpressionTest.java;[1937-2101;50-53;3-3];</data>
    </edge>
    <edge id="e2264" source="org.codehaus.jparsec.OperatorTableTest#OP" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[449-500;18-18;3-54];</data>
    </edge>
    <edge id="e2265" source="org.codehaus.jparsec.OperatorTableTest#UNARY_OP" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[504-581;19-19;3-80];</data>
    </edge>
    <edge id="e2266" source="org.codehaus.jparsec.OperatorTableTest#BINARY_OP" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[585-673;20-20;3-91];</data>
    </edge>
    <edge id="e2267" source="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])" target="org.codehaus.jparsec.OperatorTableTest.assertSameOrder(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1767-2042;53-60;3-3];</data>
    </edge>
    <edge id="e2268" source="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])" target="org.codehaus.jparsec.OperatorTableTest.assertOrder(T,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1767-2042;53-60;3-3];</data>
    </edge>
    <edge id="e2269" source="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1767-2042;53-60;3-3/1767-2042;53-60;3-3];</data>
    </edge>
    <edge id="e2270" source="org.codehaus.jparsec.OperatorTableTest.operator(int,org.codehaus.jparsec.OperatorTable$Associativity)" target="org.codehaus.jparsec.OperatorTable$Operator(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[2446-2584;71-73;3-3];</data>
    </edge>
    <edge id="e2271" source="org.codehaus.jparsec.OperatorTableTest.operator(int,org.codehaus.jparsec.OperatorTable$Associativity)" target="org.codehaus.jparsec.OperatorTableTest#OP">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[2446-2584;71-73;3-3];</data>
    </edge>
    <edge id="e2272" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2273" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2274" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2275" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2276" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2277" source="org.codehaus.jparsec.OperatorTableTest.testAssociativityOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[680-784;22-24;3-3];</data>
    </edge>
    <edge id="e2278" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2279" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.infixl(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2280" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.infixr(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2281" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.prefix(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2282" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.postfix(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3/1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2283" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.infixn(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2284" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable.operators()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2285" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTableTest#BINARY_OP">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2286" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTableTest#UNARY_OP">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2287" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2288" source="org.codehaus.jparsec.OperatorTableTest.testGetOperators()" target="org.codehaus.jparsec.OperatorTable$Operator#precedence">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3/1102-1762;34-51;3-3];</data>
    </edge>
    <edge id="e2289" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTableTest.assertTotalOrder(T[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2290" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTableTest.operator(int,org.codehaus.jparsec.OperatorTable$Associativity)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2291" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#PREFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2292" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#POSTFIX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2293" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#LASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2294" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#NASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2295" source="org.codehaus.jparsec.OperatorTableTest.testOperatorOrder()" target="org.codehaus.jparsec.OperatorTable$Associativity#RASSOC">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorTableTest.java;[791-1095;26-32;3-3/791-1095;26-32;3-3];</data>
    </edge>
    <edge id="e2296" source="org.codehaus.jparsec.Operators$Suite#list" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[3634-3723;77-78;5-53];</data>
    </edge>
    <edge id="e2297" source="org.codehaus.jparsec.Operators$Suite(java.lang.String)" target="org.codehaus.jparsec.Operators$Suite#list">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[3734-3795;80-82;5-5];</data>
    </edge>
    <edge id="e2298" source="org.codehaus.jparsec.Operators$Suite.add(java.lang.String)" target="org.codehaus.jparsec.Operators$Suite#list">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[3806-4154;84-95;5-5/3806-4154;84-95;5-5/3806-4154;84-95;5-5];</data>
    </edge>
    <edge id="e2299" source="org.codehaus.jparsec.Operators$Suites#list" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4377-4432;103-103;5-60];</data>
    </edge>
    <edge id="e2300" source="org.codehaus.jparsec.Operators$Suites.toArray()" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4813-5386;117-131;5-5];</data>
    </edge>
    <edge id="e2301" source="org.codehaus.jparsec.Operators$Suites.toArray()" target="org.codehaus.jparsec.Operators$Suites#list">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4813-5386;117-131;5-5/4813-5386;117-131;5-5];</data>
    </edge>
    <edge id="e2302" source="org.codehaus.jparsec.Operators$Suites.toArray()" target="org.codehaus.jparsec.Operators$Suite#list">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4813-5386;117-131;5-5];</data>
    </edge>
    <edge id="e2303" source="org.codehaus.jparsec.Operators$Suites.add(java.lang.String)" target="org.codehaus.jparsec.Operators$Suite.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4443-4802;105-115;5-5];</data>
    </edge>
    <edge id="e2304" source="org.codehaus.jparsec.Operators$Suites.add(java.lang.String)" target="org.codehaus.jparsec.Operators$Suite(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4443-4802;105-115;5-5];</data>
    </edge>
    <edge id="e2305" source="org.codehaus.jparsec.Operators$Suites.add(java.lang.String)" target="org.codehaus.jparsec.Operators$Suites#list">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[4443-4802;105-115;5-5/4443-4802;105-115;5-5];</data>
    </edge>
    <edge id="e2306" source="org.codehaus.jparsec.Operators#LONGER_STRING_FIRST" target="org.codehaus.jparsec.Operators$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[2813-2994;58-62;3-4];</data>
    </edge>
    <edge id="e2307" source="org.codehaus.jparsec.Operators.sort(java.lang.String[])" target="org.codehaus.jparsec.Operators$Suites()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[5397-5929;134-147;3-3];</data>
    </edge>
    <edge id="e2308" source="org.codehaus.jparsec.Operators.sort(java.lang.String[])" target="org.codehaus.jparsec.Operators$Suites.add(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[5397-5929;134-147;3-3];</data>
    </edge>
    <edge id="e2309" source="org.codehaus.jparsec.Operators.sort(java.lang.String[])" target="org.codehaus.jparsec.Operators$Suites.toArray()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[5397-5929;134-147;3-3];</data>
    </edge>
    <edge id="e2310" source="org.codehaus.jparsec.Operators.sort(java.lang.String[])" target="org.codehaus.jparsec.Operators#LONGER_STRING_FIRST">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[5397-5929;134-147;3-3];</data>
    </edge>
    <edge id="e2311" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Operators.sort(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2312" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2313" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2314" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2315" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2316" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2317" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.functors.Maps.map(java.util.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2318" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2319" source="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Operators.java;[1579-2806;34-56;3-3/1579-2806;34-56;3-3];</data>
    </edge>
    <edge id="e2320" source="org.codehaus.jparsec.OperatorsTest.testLexicon()" target="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3];</data>
    </edge>
    <edge id="e2321" source="org.codehaus.jparsec.OperatorsTest.testLexicon()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3/607-1009;22-32;3-3];</data>
    </edge>
    <edge id="e2322" source="org.codehaus.jparsec.OperatorsTest.testLexicon()" target="org.codehaus.jparsec.Lexicon.word(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3];</data>
    </edge>
    <edge id="e2323" source="org.codehaus.jparsec.OperatorsTest.testLexicon()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3];</data>
    </edge>
    <edge id="e2324" source="org.codehaus.jparsec.OperatorsTest.testLexicon()" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[607-1009;22-32;3-3];</data>
    </edge>
    <edge id="e2325" source="org.codehaus.jparsec.OperatorsTest.testSort()" target="org.codehaus.jparsec.Asserts.assertArrayEquals(java.lang.Object[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3];</data>
    </edge>
    <edge id="e2326" source="org.codehaus.jparsec.OperatorsTest.testSort()" target="org.codehaus.jparsec.Operators.sort(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/OperatorsTest.java;[183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3/183-600;13-20;3-3];</data>
    </edge>
    <edge id="e2327" source="org.codehaus.jparsec.OrParser(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1316-1404;21-23;3-3];</data>
    </edge>
    <edge id="e2328" source="org.codehaus.jparsec.OrParser#alternatives" target="org.codehaus.jparsec.OrParser(org.codehaus.jparsec.Parser[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1316-1404;21-23;3-3];</data>
    </edge>
    <edge id="e2329" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2330" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2331" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2332" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2333" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2334" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2335" source="org.codehaus.jparsec.OrParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.OrParser#alternatives">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/OrParser.java;[1409-1797;25-38;3-3];</data>
    </edge>
    <edge id="e2336" source="org.codehaus.jparsec.ParseContext$ErrorType#NONE" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[1931-1977;50-51;5-15];</data>
    </edge>
    <edge id="e2337" source="org.codehaus.jparsec.ParseContext$ErrorType#TRAP" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[1989-2093;53-54;5-15];</data>
    </edge>
    <edge id="e2338" source="org.codehaus.jparsec.ParseContext$ErrorType#UNEXPECTED" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2105-2208;56-57;5-21];</data>
    </edge>
    <edge id="e2339" source="org.codehaus.jparsec.ParseContext$ErrorType#EXPECTED" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2220-2281;59-60;5-18];</data>
    </edge>
    <edge id="e2340" source="org.codehaus.jparsec.ParseContext$ErrorType#FAILURE" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2293-2389;62-63;5-18];</data>
    </edge>
    <edge id="e2341" source="org.codehaus.jparsec.ParseContext$ErrorType#EXPECT" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2401-2502;65-66;5-16];</data>
    </edge>
    <edge id="e2342" source="org.codehaus.jparsec.ParseContext$ErrorType#mergeable" target="org.codehaus.jparsec.ParseContext$ErrorType(boolean)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2514-2583;68-70;5-5];</data>
    </edge>
    <edge id="e2343" source="org.codehaus.jparsec.ParseContext#errors" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[2810-2868;78-78;3-61];</data>
    </edge>
    <edge id="e2344" source="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,int,java.lang.String,org.codehaus.jparsec.SourceLocator)" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7437-7624;247-250;3-3];</data>
    </edge>
    <edge id="e2345" source="org.codehaus.jparsec.ParseContext#source" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2346" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2347" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2348" source="org.codehaus.jparsec.ParseContext#at" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2349" source="org.codehaus.jparsec.ParseContext#module" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2350" source="org.codehaus.jparsec.ParseContext#locator" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2351" source="org.codehaus.jparsec.ParseContext#currentErrorAt" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7631-7904;252-261;3-3];</data>
    </edge>
    <edge id="e2352" source="org.codehaus.jparsec.ParseContext.suppressError(boolean)" target="org.codehaus.jparsec.ParseContext#errorSuppressed">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3071-3269;84-89;3-3];</data>
    </edge>
    <edge id="e2353" source="org.codehaus.jparsec.ParseContext#errorSuppressed" target="org.codehaus.jparsec.ParseContext.suppressError(boolean)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3071-3269;84-89;3-3];</data>
    </edge>
    <edge id="e2354" source="org.codehaus.jparsec.ParseContext.errorIndex()" target="org.codehaus.jparsec.ParseContext#currentErrorIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3276-3416;91-94;3-3];</data>
    </edge>
    <edge id="e2355" source="org.codehaus.jparsec.ParseContext.getIndex()" target="org.codehaus.jparsec.ParseContext.toIndex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5255-5363;158-161;3-3];</data>
    </edge>
    <edge id="e2356" source="org.codehaus.jparsec.ParseContext.getIndex()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5255-5363;158-161;3-3];</data>
    </edge>
    <edge id="e2357" source="org.codehaus.jparsec.ParseContext.getEncountered()" target="org.codehaus.jparsec.ParseContext.getInputName(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4743-4881;138-143;3-3];</data>
    </edge>
    <edge id="e2358" source="org.codehaus.jparsec.ParseContext.getEncountered()" target="org.codehaus.jparsec.ParseContext#encountered">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4743-4881;138-143;3-3/4743-4881;138-143;3-3];</data>
    </edge>
    <edge id="e2359" source="org.codehaus.jparsec.ParseContext.getEncountered()" target="org.codehaus.jparsec.ParseContext#currentErrorAt">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4743-4881;138-143;3-3];</data>
    </edge>
    <edge id="e2360" source="org.codehaus.jparsec.ParseContext.errors()" target="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3543-3658;101-104;3-3];</data>
    </edge>
    <edge id="e2361" source="org.codehaus.jparsec.ParseContext.errorType()" target="org.codehaus.jparsec.ParseContext#currentErrorType">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3421-3536;96-99;3-3];</data>
    </edge>
    <edge id="e2362" source="org.codehaus.jparsec.ParseContext$1(int,java.lang.String)" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2363" source="org.codehaus.jparsec.ParseContext$2(int,java.lang.String)" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2364" source="org.codehaus.jparsec.ParseContext$3(int,java.lang.String)" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2365" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext.toIndex(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2366" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext.getEncountered()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2367" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.util.Lists.arrayList(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2368" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$1(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2369" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.EmptyParseError(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3/3665-4738;106-136;3-3/3665-4738;106-136;3-3/3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2370" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$2(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2371" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$3(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2372" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext#currentErrorAt">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2373" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3/3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2374" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext#currentErrorType">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2375" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$ErrorType#UNEXPECTED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2376" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$ErrorType#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2377" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$ErrorType#EXPECTED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2378" source="org.codehaus.jparsec.ParseContext.renderError()" target="org.codehaus.jparsec.ParseContext$ErrorType#EXPECT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[3665-4738;106-136;3-3];</data>
    </edge>
    <edge id="e2379" source="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)" target="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6491-6565;204-206;3-3];</data>
    </edge>
    <edge id="e2380" source="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)" target="org.codehaus.jparsec.ParseContext$ErrorType#EXPECTED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6491-6565;204-206;3-3];</data>
    </edge>
    <edge id="e2381" source="org.codehaus.jparsec.ParseContext.fail(java.lang.String)" target="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6409-6484;200-202;3-3];</data>
    </edge>
    <edge id="e2382" source="org.codehaus.jparsec.ParseContext.fail(java.lang.String)" target="org.codehaus.jparsec.ParseContext$ErrorType#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6409-6484;200-202;3-3];</data>
    </edge>
    <edge id="e2383" source="org.codehaus.jparsec.ParseContext.next()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7314-7360;237-240;3-3];</data>
    </edge>
    <edge id="e2384" source="org.codehaus.jparsec.ParseContext.next()" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7314-7360;237-240;3-3];</data>
    </edge>
    <edge id="e2385" source="org.codehaus.jparsec.ParseContext#at" target="org.codehaus.jparsec.ParseContext.next(int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7367-7430;242-245;3-3];</data>
    </edge>
    <edge id="e2386" source="org.codehaus.jparsec.ParseContext.next(int)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7367-7430;242-245;3-3];</data>
    </edge>
    <edge id="e2387" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2388" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2389" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext#errorSuppressed">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2390" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3/5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2391" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext#currentErrorAt">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2392" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2393" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext#currentErrorType">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3/5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2394" source="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)" target="org.codehaus.jparsec.ParseContext$ErrorType#mergeable">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[5708-6340;172-194;3-3];</data>
    </edge>
    <edge id="e2395" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6657-6769;212-216;3-3];</data>
    </edge>
    <edge id="e2396" source="org.codehaus.jparsec.ParseContext#at" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6657-6769;212-216;3-3];</data>
    </edge>
    <edge id="e2397" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6657-6769;212-216;3-3];</data>
    </edge>
    <edge id="e2398" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7228-7307;232-235;3-3];</data>
    </edge>
    <edge id="e2399" source="org.codehaus.jparsec.ParseContext#at" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[7228-7307;232-235;3-3];</data>
    </edge>
    <edge id="e2400" source="org.codehaus.jparsec.ParseContext#encountered" target="org.codehaus.jparsec.ParseContext.setEncountered(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[4888-5089;145-151;3-3];</data>
    </edge>
    <edge id="e2401" source="org.codehaus.jparsec.ParseContext#currentErrorIndex" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
    </edge>
    <edge id="e2402" source="org.codehaus.jparsec.ParseContext#currentErrorAt" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
    </edge>
    <edge id="e2403" source="org.codehaus.jparsec.ParseContext#currentErrorType" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
    </edge>
    <edge id="e2404" source="org.codehaus.jparsec.ParseContext#encountered" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
    </edge>
    <edge id="e2405" source="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)" target="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6971-7221;224-230;3-3];</data>
    </edge>
    <edge id="e2406" source="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType,java.util.List)" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6776-6966;218-222;3-3];</data>
    </edge>
    <edge id="e2407" source="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType,java.util.List)" target="org.codehaus.jparsec.ParseContext#errors">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6776-6966;218-222;3-3];</data>
    </edge>
    <edge id="e2408" source="org.codehaus.jparsec.ParseContext.trap()" target="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6347-6402;196-198;3-3];</data>
    </edge>
    <edge id="e2409" source="org.codehaus.jparsec.ParseContext.trap()" target="org.codehaus.jparsec.ParseContext$ErrorType#TRAP">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6347-6402;196-198;3-3];</data>
    </edge>
    <edge id="e2410" source="org.codehaus.jparsec.ParseContext.unexpected(java.lang.String)" target="org.codehaus.jparsec.ParseContext.raise(org.codehaus.jparsec.ParseContext$ErrorType,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6572-6650;208-210;3-3];</data>
    </edge>
    <edge id="e2411" source="org.codehaus.jparsec.ParseContext.unexpected(java.lang.String)" target="org.codehaus.jparsec.ParseContext$ErrorType#UNEXPECTED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParseContext.java;[6572-6650;208-210;3-3];</data>
    </edge>
    <edge id="e2412" source="org.codehaus.jparsec.Parser$Reference#lazy" target="org.codehaus.jparsec.LazyParser(java.util.concurrent.atomic.AtomicReference)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[3916-3970;82-82;5-59];</data>
    </edge>
    <edge id="e2413" source="org.codehaus.jparsec.Parser$Reference.lazy()" target="org.codehaus.jparsec.Parser$Reference#lazy">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[3981-4161;84-90;5-5];</data>
    </edge>
    <edge id="e2414" source="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10478-10778;291-298;3-3];</data>
    </edge>
    <edge id="e2415" source="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Maps.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10478-10778;291-298;3-3];</data>
    </edge>
    <edge id="e2416" source="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.IfElseParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10785-11118;300-307;3-3];</data>
    </edge>
    <edge id="e2417" source="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.MapParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8009-8240;213-219;3-3];</data>
    </edge>
    <edge id="e2418" source="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4501-4751;103-109;3-3];</data>
    </edge>
    <edge id="e2419" source="org.codehaus.jparsec.Parser.retn(R)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4314-4494;98-101;3-3];</data>
    </edge>
    <edge id="e2420" source="org.codehaus.jparsec.Parser.retn(R)" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4314-4494;98-101;3-3];</data>
    </edge>
    <edge id="e2421" source="org.codehaus.jparsec.Parser.newReference()" target="org.codehaus.jparsec.Parser$Reference()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4172-4307;93-96;3-3];</data>
    </edge>
    <edge id="e2422" source="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.BindNextParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[4758-5064;111-117;3-3];</data>
    </edge>
    <edge id="e2423" source="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21527-21629;584-587;3-3];</data>
    </edge>
    <edge id="e2424" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20502-20612;549-552;3-3];</data>
    </edge>
    <edge id="e2425" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20169-20495;538-547;3-3];</data>
    </edge>
    <edge id="e2426" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)" target="org.codehaus.jparsec.DefaultSourceLocator(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20169-20495;538-547;3-3];</data>
    </edge>
    <edge id="e2427" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String,org.codehaus.jparsec.SourceLocator)" target="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[19721-20162;526-536;3-3];</data>
    </edge>
    <edge id="e2428" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String,org.codehaus.jparsec.SourceLocator)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[19721-20162;526-536;3-3];</data>
    </edge>
    <edge id="e2429" source="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String,org.codehaus.jparsec.SourceLocator)" target="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[19721-20162;526-536;3-3];</data>
    </edge>
    <edge id="e2430" source="org.codehaus.jparsec.Parser.parse(java.lang.Readable)" target="org.codehaus.jparsec.Parser.parse(java.lang.Readable,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20620-20769;555-558;3-3];</data>
    </edge>
    <edge id="e2431" source="org.codehaus.jparsec.Parser.parse(java.lang.Readable,java.lang.String)" target="org.codehaus.jparsec.Parser.copy(java.lang.Readable,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20774-21195;560-571;3-3];</data>
    </edge>
    <edge id="e2432" source="org.codehaus.jparsec.Parser.parse(java.lang.Readable,java.lang.String)" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[20774-21195;560-571;3-3];</data>
    </edge>
    <edge id="e2433" source="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21888-22049;595-602;3-3];</data>
    </edge>
    <edge id="e2434" source="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21888-22049;595-602;3-3];</data>
    </edge>
    <edge id="e2435" source="org.codehaus.jparsec.Parser.atLeast(int)" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6380-6671;163-169;3-3];</data>
    </edge>
    <edge id="e2436" source="org.codehaus.jparsec.Parser.atLeast(int)" target="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6380-6671;163-169;3-3];</data>
    </edge>
    <edge id="e2437" source="org.codehaus.jparsec.Parser.atomic()" target="org.codehaus.jparsec.AtomicParser(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9664-9817;265-268;3-3];</data>
    </edge>
    <edge id="e2438" source="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11642-12087;326-335;3-3];</data>
    </edge>
    <edge id="e2439" source="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11642-12087;326-335;3-3];</data>
    </edge>
    <edge id="e2440" source="org.codehaus.jparsec.Parser.endBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12970-13254;362-370;3-3];</data>
    </edge>
    <edge id="e2441" source="org.codehaus.jparsec.Parser.endBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12970-13254;362-370;3-3];</data>
    </edge>
    <edge id="e2442" source="org.codehaus.jparsec.Parser.endBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13259-13545;372-380;3-3];</data>
    </edge>
    <edge id="e2443" source="org.codehaus.jparsec.Parser.endBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13259-13545;372-380;3-3];</data>
    </edge>
    <edge id="e2444" source="org.codehaus.jparsec.Parser.fails()" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10282-10471;286-289;3-3];</data>
    </edge>
    <edge id="e2445" source="org.codehaus.jparsec.Parser.fails()" target="org.codehaus.jparsec.Parsers#FALSE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10282-10471;286-289;3-3];</data>
    </edge>
    <edge id="e2446" source="org.codehaus.jparsec.Parser.fails()" target="org.codehaus.jparsec.Parsers#TRUE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10282-10471;286-289;3-3];</data>
    </edge>
    <edge id="e2447" source="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5071-5347;119-125;3-3];</data>
    </edge>
    <edge id="e2448" source="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.InternalFunctors.firstOfTwo()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5071-5347;119-125;3-3];</data>
    </edge>
    <edge id="e2449" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.nested(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18118-18484;488-496;3-3];</data>
    </edge>
    <edge id="e2450" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.tokens(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18118-18484;488-496;3-3];</data>
    </edge>
    <edge id="e2451" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18118-18484;488-496;3-3];</data>
    </edge>
    <edge id="e2452" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18118-18484;488-496;3-3];</data>
    </edge>
    <edge id="e2453" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18491-18834;498-506;3-3];</data>
    </edge>
    <edge id="e2454" source="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18491-18834;498-506;3-3];</data>
    </edge>
    <edge id="e2455" source="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[16190-16912;445-458;2-3];</data>
    </edge>
    <edge id="e2456" source="org.codehaus.jparsec.Parser.infixn(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15635-16186;433-443;3-3];</data>
    </edge>
    <edge id="e2457" source="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[16917-17578;460-471;3-3];</data>
    </edge>
    <edge id="e2458" source="org.codehaus.jparsec.Parser.label(java.lang.String)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11125-11370;309-315;3-3];</data>
    </edge>
    <edge id="e2459" source="org.codehaus.jparsec.Parser.label(java.lang.String)" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[11125-11370;309-315;3-3];</data>
    </edge>
    <edge id="e2460" source="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.optional()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18841-19714;508-524;3-3];</data>
    </edge>
    <edge id="e2461" source="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18841-19714;508-524;3-3];</data>
    </edge>
    <edge id="e2462" source="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.token()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18841-19714;508-524;3-3];</data>
    </edge>
    <edge id="e2463" source="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[18841-19714;508-524;3-3];</data>
    </edge>
    <edge id="e2464" source="org.codehaus.jparsec.Parser.many()" target="org.codehaus.jparsec.Parser.atLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5597-5800;135-141;3-3];</data>
    </edge>
    <edge id="e2465" source="org.codehaus.jparsec.Parser.many1()" target="org.codehaus.jparsec.Parser.atLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5982-6187;148-154;3-3];</data>
    </edge>
    <edge id="e2466" source="org.codehaus.jparsec.Parser.not()" target="org.codehaus.jparsec.Parser.not(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9028-9185;246-249;3-3];</data>
    </edge>
    <edge id="e2467" source="org.codehaus.jparsec.Parser.not(java.lang.String)" target="org.codehaus.jparsec.Parser.peek()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9192-9485;251-258;3-3];</data>
    </edge>
    <edge id="e2468" source="org.codehaus.jparsec.Parser.not(java.lang.String)" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9192-9485;251-258;3-3];</data>
    </edge>
    <edge id="e2469" source="org.codehaus.jparsec.Parser.not(java.lang.String)" target="org.codehaus.jparsec.Parsers.unexpected(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9192-9485;251-258;3-3];</data>
    </edge>
    <edge id="e2470" source="org.codehaus.jparsec.Parser.not(java.lang.String)" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9192-9485;251-258;3-3];</data>
    </edge>
    <edge id="e2471" source="org.codehaus.jparsec.Parser.notFollowedBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5354-5590;127-133;3-3];</data>
    </edge>
    <edge id="e2472" source="org.codehaus.jparsec.Parser.notFollowedBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5354-5590;127-133;3-3];</data>
    </edge>
    <edge id="e2473" source="org.codehaus.jparsec.Parser.optional()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8542-8786;231-237;3-3];</data>
    </edge>
    <edge id="e2474" source="org.codehaus.jparsec.Parser.optional()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8542-8786;231-237;3-3];</data>
    </edge>
    <edge id="e2475" source="org.codehaus.jparsec.Parser.optional(T)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8793-9021;239-244;3-3];</data>
    </edge>
    <edge id="e2476" source="org.codehaus.jparsec.Parser.optional(T)" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8793-9021;239-244;3-3];</data>
    </edge>
    <edge id="e2477" source="org.codehaus.jparsec.Parser.or(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[8245-8535;221-229;3-3];</data>
    </edge>
    <edge id="e2478" source="org.codehaus.jparsec.Parser.peek()" target="org.codehaus.jparsec.PeekParser(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9492-9657;260-263;3-3];</data>
    </edge>
    <edge id="e2479" source="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15130-15630;421-431;3-3];</data>
    </edge>
    <edge id="e2480" source="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15130-15630;421-431;3-3];</data>
    </edge>
    <edge id="e2481" source="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#POSTFIX_OPERATOR_MAP2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[15130-15630;421-431;3-3];</data>
    </edge>
    <edge id="e2482" source="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14623-15125;409-419;3-3];</data>
    </edge>
    <edge id="e2483" source="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14623-15125;409-419;3-3];</data>
    </edge>
    <edge id="e2484" source="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#PREFIX_OPERATOR_MAP2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14623-15125;409-419;3-3];</data>
    </edge>
    <edge id="e2485" source="org.codehaus.jparsec.Parser.sepBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12671-12965;353-360;3-3];</data>
    </edge>
    <edge id="e2486" source="org.codehaus.jparsec.Parser.sepBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12671-12965;353-360;3-3];</data>
    </edge>
    <edge id="e2487" source="org.codehaus.jparsec.Parser.sepBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.EmptyListParser.instance()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12671-12965;353-360;3-3];</data>
    </edge>
    <edge id="e2488" source="org.codehaus.jparsec.Parser$1.map(T)" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12448-12628;345-348;7-7];</data>
    </edge>
    <edge id="e2489" source="org.codehaus.jparsec.Parser$1.map(T)" target="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12448-12628;345-348;7-7];</data>
    </edge>
    <edge id="e2490" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2491" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2492" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2493" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2494" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2495" source="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[12092-12664;337-351;3-3];</data>
    </edge>
    <edge id="e2496" source="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14173-14618;398-407;3-3];</data>
    </edge>
    <edge id="e2497" source="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14173-14618;398-407;3-3];</data>
    </edge>
    <edge id="e2498" source="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.EmptyListParser.instance()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[14173-14618;398-407;3-3];</data>
    </edge>
    <edge id="e2499" source="org.codehaus.jparsec.Parser$2.map(T)" target="org.codehaus.jparsec.DelimitedListParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13981-14156;391-394;7-7];</data>
    </edge>
    <edge id="e2500" source="org.codehaus.jparsec.Parser$2.map(T)" target="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13981-14156;391-394;7-7];</data>
    </edge>
    <edge id="e2501" source="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13550-14168;382-396;3-3];</data>
    </edge>
    <edge id="e2502" source="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13550-14168;382-396;3-3];</data>
    </edge>
    <edge id="e2503" source="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.DelimitedListParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13550-14168;382-396;3-3];</data>
    </edge>
    <edge id="e2504" source="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ListFactories.arrayListFactoryWithFirstElement(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[13550-14168;382-396;3-3];</data>
    </edge>
    <edge id="e2505" source="org.codehaus.jparsec.Parser.skipAtLeast(int)" target="org.codehaus.jparsec.SkipAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6678-6931;171-177;3-3];</data>
    </edge>
    <edge id="e2506" source="org.codehaus.jparsec.Parser.skipAtLeast(int)" target="org.codehaus.jparsec.util.Checks.checkMin(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6678-6931;171-177;3-3];</data>
    </edge>
    <edge id="e2507" source="org.codehaus.jparsec.Parser.skipMany()" target="org.codehaus.jparsec.Parser.skipAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[5807-5975;143-146;3-3];</data>
    </edge>
    <edge id="e2508" source="org.codehaus.jparsec.Parser.skipMany1()" target="org.codehaus.jparsec.Parser.skipAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6194-6372;156-161;3-3];</data>
    </edge>
    <edge id="e2509" source="org.codehaus.jparsec.Parser.skipTimes(int)" target="org.codehaus.jparsec.Parser.skipTimes(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[6938-7139;179-185;3-3];</data>
    </edge>
    <edge id="e2510" source="org.codehaus.jparsec.Parser.skipTimes(int,int)" target="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7697-8002;204-211;3-3];</data>
    </edge>
    <edge id="e2511" source="org.codehaus.jparsec.Parser.skipTimes(int,int)" target="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7697-8002;204-211;3-3];</data>
    </edge>
    <edge id="e2512" source="org.codehaus.jparsec.Parser.source()" target="org.codehaus.jparsec.ReturnSourceParser(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[17947-18111;483-486;3-3];</data>
    </edge>
    <edge id="e2513" source="org.codehaus.jparsec.Parser.step(int)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9824-10065;270-277;3-3];</data>
    </edge>
    <edge id="e2514" source="org.codehaus.jparsec.Parser.step(int)" target="org.codehaus.jparsec.StepParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[9824-10065;270-277;3-3];</data>
    </edge>
    <edge id="e2515" source="org.codehaus.jparsec.Parser.succeeds()" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10072-10275;279-284;3-3];</data>
    </edge>
    <edge id="e2516" source="org.codehaus.jparsec.Parser.succeeds()" target="org.codehaus.jparsec.Parsers#TRUE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10072-10275;279-284;3-3];</data>
    </edge>
    <edge id="e2517" source="org.codehaus.jparsec.Parser.succeeds()" target="org.codehaus.jparsec.Parsers#FALSE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[10072-10275;279-284;3-3];</data>
    </edge>
    <edge id="e2518" source="org.codehaus.jparsec.Parser.times(int)" target="org.codehaus.jparsec.Parser.times(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7146-7348;187-193;3-3];</data>
    </edge>
    <edge id="e2519" source="org.codehaus.jparsec.Parser.times(int,int)" target="org.codehaus.jparsec.util.Checks.checkMinMax(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7355-7690;195-202;3-3];</data>
    </edge>
    <edge id="e2520" source="org.codehaus.jparsec.Parser.times(int,int)" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[7355-7690;195-202;3-3];</data>
    </edge>
    <edge id="e2521" source="org.codehaus.jparsec.Parser.token()" target="org.codehaus.jparsec.ToTokenParser(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[17585-17940;473-481;3-3];</data>
    </edge>
    <edge id="e2522" source="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.error.ParserException(java.lang.Throwable,org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
    </edge>
    <edge id="e2523" source="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SourceLocator.locate(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
    </edge>
    <edge id="e2524" source="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
    </edge>
    <edge id="e2525" source="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#module">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
    </edge>
    <edge id="e2526" source="org.codehaus.jparsec.Parser.asParserException(java.lang.Throwable,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#locator">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parser.java;[21636-21881;589-593;3-3];</data>
    </edge>
    <edge id="e2527" source="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7886-8488;190-204;3-3/7886-8488;190-204;3-3/7886-8488;190-204;3-3/7886-8488;190-204;3-3/7886-8488;190-204;3-3/7886-8488;190-204;3-3];</data>
    </edge>
    <edge id="e2528" source="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7886-8488;190-204;3-3/7886-8488;190-204;3-3];</data>
    </edge>
    <edge id="e2529" source="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.Parsers.longer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7886-8488;190-204;3-3/7886-8488;190-204;3-3];</data>
    </edge>
    <edge id="e2530" source="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)" target="org.codehaus.jparsec.Parsers.shorter(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7886-8488;190-204;3-3/7886-8488;190-204;3-3];</data>
    </edge>
    <edge id="e2531" source="org.codehaus.jparsec.ParserErrorHandlingTest$1.map(java.util.List)" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7006-7398;171-180;11-11];</data>
    </edge>
    <edge id="e2532" source="org.codehaus.jparsec.ParserErrorHandlingTest$1.map(java.util.List)" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7006-7398;171-180;11-11/7006-7398;171-180;11-11];</data>
    </edge>
    <edge id="e2533" source="org.codehaus.jparsec.ParserErrorHandlingTest$1.map(java.util.List)" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7006-7398;171-180;11-11/7006-7398;171-180;11-11];</data>
    </edge>
    <edge id="e2534" source="org.codehaus.jparsec.ParserErrorHandlingTest$1.map(java.util.List)" target="org.codehaus.jparsec.Token.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[7006-7398;171-180;11-11];</data>
    </edge>
    <edge id="e2535" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2536" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2537" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2538" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2539" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.ParserErrorHandlingTest$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2540" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2541" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3/6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2542" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3/6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2543" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Token.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2544" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3/6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2545" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.InternalFunctors.tokenWithSameValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3/6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2546" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2547" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2548" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3/6718-7879;166-188;3-3/6718-7879;166-188;3-3/6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2549" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2550" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2551" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2552" source="org.codehaus.jparsec.ParserErrorHandlingTest.testEmptyTokenCounts()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[6718-7879;166-188;3-3];</data>
    </edge>
    <edge id="e2553" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3];</data>
    </edge>
    <edge id="e2554" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()" target="org.codehaus.jparsec.Parsers.longer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3];</data>
    </edge>
    <edge id="e2555" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3/3883-4082;107-111;3-3];</data>
    </edge>
    <edge id="e2556" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3/3883-4082;107-111;3-3];</data>
    </edge>
    <edge id="e2557" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesLonger()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3883-4082;107-111;3-3];</data>
    </edge>
    <edge id="e2558" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3];</data>
    </edge>
    <edge id="e2559" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3];</data>
    </edge>
    <edge id="e2560" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3/3685-3876;101-105;3-3];</data>
    </edge>
    <edge id="e2561" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3/3685-3876;101-105;3-3];</data>
    </edge>
    <edge id="e2562" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesOr()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3685-3876;101-105;3-3];</data>
    </edge>
    <edge id="e2563" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2564" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2565" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3/3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2566" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.Parser.atomic()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2567" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3/3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2568" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesPlus()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3474-3678;95-99;3-3];</data>
    </edge>
    <edge id="e2569" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2570" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3/4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2571" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2572" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2573" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.many1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2574" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.skipMany1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2575" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.times(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3/4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2576" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.skipTimes(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3/4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2577" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2578" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesRepetition()" target="org.codehaus.jparsec.Parser.skipTimes(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4297-5479;119-140;3-3];</data>
    </edge>
    <edge id="e2579" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3];</data>
    </edge>
    <edge id="e2580" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()" target="org.codehaus.jparsec.Parsers.shorter(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3];</data>
    </edge>
    <edge id="e2581" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3/4089-4290;113-117;3-3];</data>
    </edge>
    <edge id="e2582" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3/4089-4290;113-117;3-3];</data>
    </edge>
    <edge id="e2583" source="org.codehaus.jparsec.ParserErrorHandlingTest.testErrorSurvivesShorter()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[4089-4290;113-117;3-3];</data>
    </edge>
    <edge id="e2584" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectMerged()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2974-3303;80-87;3-3/2974-3303;80-87;3-3];</data>
    </edge>
    <edge id="e2585" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectMerged()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2974-3303;80-87;3-3/2974-3303;80-87;3-3];</data>
    </edge>
    <edge id="e2586" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectMerged()" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2974-3303;80-87;3-3/2974-3303;80-87;3-3/2974-3303;80-87;3-3/2974-3303;80-87;3-3];</data>
    </edge>
    <edge id="e2587" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectMerged()" target="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2974-3303;80-87;3-3];</data>
    </edge>
    <edge id="e2588" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3];</data>
    </edge>
    <edge id="e2589" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3];</data>
    </edge>
    <edge id="e2590" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3/1852-2022;43-47;3-3];</data>
    </edge>
    <edge id="e2591" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3];</data>
    </edge>
    <edge id="e2592" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectOverridesNot()" target="org.codehaus.jparsec.Parser.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1852-2022;43-47;3-3];</data>
    </edge>
    <edge id="e2593" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectedMerged()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3310-3467;89-93;3-3];</data>
    </edge>
    <edge id="e2594" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectedMerged()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3310-3467;89-93;3-3];</data>
    </edge>
    <edge id="e2595" source="org.codehaus.jparsec.ParserErrorHandlingTest.testExpectedMerged()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[3310-3467;89-93;3-3/3310-3467;89-93;3-3];</data>
    </edge>
    <edge id="e2596" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
    </edge>
    <edge id="e2597" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
    </edge>
    <edge id="e2598" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
    </edge>
    <edge id="e2599" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
    </edge>
    <edge id="e2600" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExpect()" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2029-2182;49-53;3-3];</data>
    </edge>
    <edge id="e2601" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3];</data>
    </edge>
    <edge id="e2602" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3/2189-2375;55-59;3-3];</data>
    </edge>
    <edge id="e2603" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3/2189-2375;55-59;3-3];</data>
    </edge>
    <edge id="e2604" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3];</data>
    </edge>
    <edge id="e2605" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFailureOverridesExplicitExpect()" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2189-2375;55-59;3-3];</data>
    </edge>
    <edge id="e2606" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstFailureWins()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2828-2967;75-78;3-3];</data>
    </edge>
    <edge id="e2607" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstFailureWins()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2828-2967;75-78;3-3];</data>
    </edge>
    <edge id="e2608" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstFailureWins()" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2828-2967;75-78;3-3/2828-2967;75-78;3-3];</data>
    </edge>
    <edge id="e2609" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNeverWins()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2560-2663;66-68;3-3];</data>
    </edge>
    <edge id="e2610" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNeverWins()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2560-2663;66-68;3-3/2560-2663;66-68;3-3];</data>
    </edge>
    <edge id="e2611" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNotWins()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2670-2821;70-73;3-3];</data>
    </edge>
    <edge id="e2612" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNotWins()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2670-2821;70-73;3-3];</data>
    </edge>
    <edge id="e2613" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNotWins()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2670-2821;70-73;3-3/2670-2821;70-73;3-3];</data>
    </edge>
    <edge id="e2614" source="org.codehaus.jparsec.ParserErrorHandlingTest.testFirstNotWins()" target="org.codehaus.jparsec.Parser.not(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2670-2821;70-73;3-3/2670-2821;70-73;3-3];</data>
    </edge>
    <edge id="e2615" source="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
    </edge>
    <edge id="e2616" source="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
    </edge>
    <edge id="e2617" source="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
    </edge>
    <edge id="e2618" source="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
    </edge>
    <edge id="e2619" source="org.codehaus.jparsec.ParserErrorHandlingTest.testMoreRelevantErrorWins()" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[2382-2553;61-64;3-3];</data>
    </edge>
    <edge id="e2620" source="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3];</data>
    </edge>
    <edge id="e2621" source="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3/1670-1845;37-41;3-3/1670-1845;37-41;3-3];</data>
    </edge>
    <edge id="e2622" source="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3/1670-1845;37-41;3-3];</data>
    </edge>
    <edge id="e2623" source="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()" target="org.codehaus.jparsec.Parser.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3];</data>
    </edge>
    <edge id="e2624" source="org.codehaus.jparsec.ParserErrorHandlingTest.testNotOverridesNever()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[1670-1845;37-41;3-3];</data>
    </edge>
    <edge id="e2625" source="org.codehaus.jparsec.ParserErrorHandlingTest.testOuterExpectWins()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5486-5623;142-144;3-3];</data>
    </edge>
    <edge id="e2626" source="org.codehaus.jparsec.ParserErrorHandlingTest.testOuterExpectWins()" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5486-5623;142-144;3-3];</data>
    </edge>
    <edge id="e2627" source="org.codehaus.jparsec.ParserErrorHandlingTest.testOuterExpectWins()" target="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5486-5623;142-144;3-3];</data>
    </edge>
    <edge id="e2628" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2629" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2630" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2631" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2632" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2633" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2634" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2635" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2636" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2637" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.ParserErrorHandlingTest.assertError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2638" source="org.codehaus.jparsec.ParserErrorHandlingTest.testTokenLevelError()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserErrorHandlingTest.java;[5630-6711;146-164;3-3/5630-6711;146-164;3-3];</data>
    </edge>
    <edge id="e2639" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2640" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2641" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2642" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3/3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2643" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2644" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3395-3766;94-103;3-3];</data>
    </edge>
    <edge id="e2645" source="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2769-3032;74-81;3-3];</data>
    </edge>
    <edge id="e2646" source="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2769-3032;74-81;3-3];</data>
    </edge>
    <edge id="e2647" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
    </edge>
    <edge id="e2648" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
    </edge>
    <edge id="e2649" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
    </edge>
    <edge id="e2650" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
    </edge>
    <edge id="e2651" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3037-3390;83-92;3-3];</data>
    </edge>
    <edge id="e2652" source="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4990-5248;138-144;3-3];</data>
    </edge>
    <edge id="e2653" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3];</data>
    </edge>
    <edge id="e2654" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3];</data>
    </edge>
    <edge id="e2655" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3/2209-2499;56-63;3-3];</data>
    </edge>
    <edge id="e2656" source="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3];</data>
    </edge>
    <edge id="e2657" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2209-2499;56-63;3-3];</data>
    </edge>
    <edge id="e2658" source="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2034-2204;49-54;3-3];</data>
    </edge>
    <edge id="e2659" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.greedyRun(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2504-2764;65-72;3-3];</data>
    </edge>
    <edge id="e2660" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2504-2764;65-72;3-3];</data>
    </edge>
    <edge id="e2661" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2504-2764;65-72;3-3];</data>
    </edge>
    <edge id="e2662" source="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[2504-2764;65-72;3-3];</data>
    </edge>
    <edge id="e2663" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2664" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3/4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2665" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2666" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2667" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3/4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2668" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2669" source="org.codehaus.jparsec.ParserInternals.runNestedParser(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4068-4655;114-127;3-3];</data>
    </edge>
    <edge id="e2670" source="org.codehaus.jparsec.ParserInternals.runWithoutRecordingError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.suppressError(boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[5253-5529;146-152;3-3/5253-5529;146-152;3-3];</data>
    </edge>
    <edge id="e2671" source="org.codehaus.jparsec.ParserInternals.runWithoutRecordingError(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[5253-5529;146-152;3-3];</data>
    </edge>
    <edge id="e2672" source="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3771-4063;105-112;3-3];</data>
    </edge>
    <edge id="e2673" source="org.codehaus.jparsec.ParserInternals.stillThere(org.codehaus.jparsec.ParseContext,int,int)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[3771-4063;105-112;3-3];</data>
    </edge>
    <edge id="e2674" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.errorIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2675" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.setErrorState(int,int,org.codehaus.jparsec.ParseContext$ErrorType,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2676" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.errorType()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2677" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.errors()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2678" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.isEof()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2679" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.setEncountered(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2680" source="org.codehaus.jparsec.ParserInternals.copyError(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getEncountered()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[4660-4985;129-136;3-3];</data>
    </edge>
    <edge id="e2681" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3/1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2682" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2683" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.IntOrder.compare(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2684" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3/1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2685" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2686" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2687" source="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2688" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2689" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ParserInternals.runForBestFit(org.codehaus.jparsec.IntOrder,org.codehaus.jparsec.Parser[],int,org.codehaus.jparsec.ParseContext,java.lang.Object,int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserInternals.java;[1338-2029;27-47;3-3];</data>
    </edge>
    <edge id="e2690" source="org.codehaus.jparsec.ParserReferenceTest.testLazy()" target="org.codehaus.jparsec.Parser.newReference()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[311-674;15-24;3-3];</data>
    </edge>
    <edge id="e2691" source="org.codehaus.jparsec.ParserReferenceTest.testLazy()" target="org.codehaus.jparsec.Parser$Reference.lazy()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[311-674;15-24;3-3];</data>
    </edge>
    <edge id="e2692" source="org.codehaus.jparsec.ParserReferenceTest.testLazy()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[311-674;15-24;3-3/311-674;15-24;3-3];</data>
    </edge>
    <edge id="e2693" source="org.codehaus.jparsec.ParserReferenceTest.testLazy()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[311-674;15-24;3-3/311-674;15-24;3-3];</data>
    </edge>
    <edge id="e2694" source="org.codehaus.jparsec.ParserReferenceTest.testUninitializedLazy()" target="org.codehaus.jparsec.Parser.newReference()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[681-886;26-30;3-3];</data>
    </edge>
    <edge id="e2695" source="org.codehaus.jparsec.ParserReferenceTest.testUninitializedLazy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[681-886;26-30;3-3];</data>
    </edge>
    <edge id="e2696" source="org.codehaus.jparsec.ParserReferenceTest.testUninitializedLazy()" target="org.codehaus.jparsec.Parser$Reference.lazy()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserReferenceTest.java;[681-886;26-30;3-3];</data>
    </edge>
    <edge id="e2697" source="org.codehaus.jparsec.ParserState(java.lang.String,java.lang.CharSequence,org.codehaus.jparsec.Token[],int,org.codehaus.jparsec.SourceLocator,int,java.lang.Object)" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1760-1995;44-49;3-3];</data>
    </edge>
    <edge id="e2698" source="org.codehaus.jparsec.ParserState#input" target="org.codehaus.jparsec.ParserState(java.lang.String,java.lang.CharSequence,org.codehaus.jparsec.Token[],int,org.codehaus.jparsec.SourceLocator,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1760-1995;44-49;3-3];</data>
    </edge>
    <edge id="e2699" source="org.codehaus.jparsec.ParserState#endIndex" target="org.codehaus.jparsec.ParserState(java.lang.String,java.lang.CharSequence,org.codehaus.jparsec.Token[],int,org.codehaus.jparsec.SourceLocator,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1760-1995;44-49;3-3];</data>
    </edge>
    <edge id="e2700" source="org.codehaus.jparsec.ParserState.isEof()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1515-1576;31-33;3-3];</data>
    </edge>
    <edge id="e2701" source="org.codehaus.jparsec.ParserState.isEof()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1515-1576;31-33;3-3];</data>
    </edge>
    <edge id="e2702" source="org.codehaus.jparsec.ParserState.isEof()" target="org.codehaus.jparsec.ParserState#input">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1515-1576;31-33;3-3];</data>
    </edge>
    <edge id="e2703" source="org.codehaus.jparsec.ParserState.toIndex(int)" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1583-1695;35-38;3-3];</data>
    </edge>
    <edge id="e2704" source="org.codehaus.jparsec.ParserState.toIndex(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1583-1695;35-38;3-3];</data>
    </edge>
    <edge id="e2705" source="org.codehaus.jparsec.ParserState.toIndex(int)" target="org.codehaus.jparsec.ParserState#input">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1583-1695;35-38;3-3/1583-1695;35-38;3-3];</data>
    </edge>
    <edge id="e2706" source="org.codehaus.jparsec.ParserState.toIndex(int)" target="org.codehaus.jparsec.ParserState#endIndex">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1583-1695;35-38;3-3];</data>
    </edge>
    <edge id="e2707" source="org.codehaus.jparsec.ParserState.getInputName(int)" target="org.codehaus.jparsec.Token.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2232-2350;59-62;3-3];</data>
    </edge>
    <edge id="e2708" source="org.codehaus.jparsec.ParserState.getInputName(int)" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2232-2350;59-62;3-3];</data>
    </edge>
    <edge id="e2709" source="org.codehaus.jparsec.ParserState.getInputName(int)" target="org.codehaus.jparsec.ParserState#input">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2232-2350;59-62;3-3/2232-2350;59-62;3-3];</data>
    </edge>
    <edge id="e2710" source="org.codehaus.jparsec.ParserState.getInputName(int)" target="org.codehaus.jparsec.ParseContext#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[2232-2350;59-62;3-3];</data>
    </edge>
    <edge id="e2711" source="org.codehaus.jparsec.ParserState.getToken()" target="org.codehaus.jparsec.ParserState#input">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1700-1753;40-42;3-3];</data>
    </edge>
    <edge id="e2712" source="org.codehaus.jparsec.ParserState.getToken()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ParserState.java;[1700-1753;40-42;3-3];</data>
    </edge>
    <edge id="e2713" source="org.codehaus.jparsec.ParserTest#INTEGER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[832-925;28-28;3-96];</data>
    </edge>
    <edge id="e2714" source="org.codehaus.jparsec.ParserTest#FOO" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[929-986;29-29;3-60];</data>
    </edge>
    <edge id="e2715" source="org.codehaus.jparsec.ParserTest#FAILURE" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[990-1059;30-30;3-72];</data>
    </edge>
    <edge id="e2716" source="org.codehaus.jparsec.ParserTest#COMMA" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1063-1125;31-31;3-65];</data>
    </edge>
    <edge id="e2717" source="org.codehaus.jparsec.ParserTest()" target="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2718" source="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])" target="org.codehaus.jparsec.ParserTest.assertList(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21795-21960;564-567;3-3];</data>
    </edge>
    <edge id="e2719" source="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21795-21960;564-567;3-3];</data>
    </edge>
    <edge id="e2720" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2721" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2722" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Parser.skipTimes(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2723" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2724" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2725" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2726" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2727" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2728" source="org.codehaus.jparsec.ParserTest.skipTimes_range()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4818-5355;128-137;3-3/4818-5355;128-137;3-3];</data>
    </edge>
    <edge id="e2729" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.Parser.atomic()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3/9962-10238;243-248;3-3/9962-10238;243-248;3-3/9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2730" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3/9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2731" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3/9962-10238;243-248;3-3/9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2732" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2733" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2734" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2735" source="org.codehaus.jparsec.ParserTest.testAtomic()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9962-10238;243-248;3-3];</data>
    </edge>
    <edge id="e2736" source="org.codehaus.jparsec.ParserTest.testBetween()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11883-11988;301-303;3-3];</data>
    </edge>
    <edge id="e2737" source="org.codehaus.jparsec.ParserTest.testBetween()" target="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11883-11988;301-303;3-3];</data>
    </edge>
    <edge id="e2738" source="org.codehaus.jparsec.ParserTest.testBetween()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11883-11988;301-303;3-3/11883-11988;301-303;3-3];</data>
    </edge>
    <edge id="e2739" source="org.codehaus.jparsec.ParserTest.testBetween()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11883-11988;301-303;3-3];</data>
    </edge>
    <edge id="e2740" source="org.codehaus.jparsec.ParserTest.testCast()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11680-11876;295-299;3-3];</data>
    </edge>
    <edge id="e2741" source="org.codehaus.jparsec.ParserTest.testCast()" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11680-11876;295-299;3-3];</data>
    </edge>
    <edge id="e2742" source="org.codehaus.jparsec.ParserTest.testCast()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11680-11876;295-299;3-3];</data>
    </edge>
    <edge id="e2743" source="org.codehaus.jparsec.ParserTest.testCopy()" target="org.codehaus.jparsec.Parser.copy(java.lang.Readable,java.lang.Appendable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21570-21788;557-562;3-3];</data>
    </edge>
    <edge id="e2744" source="org.codehaus.jparsec.ParserTest.testEmptyListParser_toString()" target="org.codehaus.jparsec.EmptyListParser.instance()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16567-16677;424-426;3-3];</data>
    </edge>
    <edge id="e2745" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.Parser.endBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3/13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2746" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3/13209-13584;338-346;3-3/13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2747" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3/13209-13584;338-346;3-3/13209-13584;338-346;3-3/13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2748" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2749" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3/13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2750" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2751" source="org.codehaus.jparsec.ParserTest.testEndBy()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13209-13584;338-346;3-3];</data>
    </edge>
    <edge id="e2752" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.Parser.endBy1(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3/13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2753" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3/13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2754" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3/13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2755" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3/13591-13951;348-356;3-3/13591-13951;348-356;3-3/13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2756" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2757" source="org.codehaus.jparsec.ParserTest.testEndBy1()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13591-13951;348-356;3-3];</data>
    </edge>
    <edge id="e2758" source="org.codehaus.jparsec.ParserTest.testFails()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10876-11078;270-274;3-3/10876-11078;270-274;3-3/10876-11078;270-274;3-3];</data>
    </edge>
    <edge id="e2759" source="org.codehaus.jparsec.ParserTest.testFails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10876-11078;270-274;3-3/10876-11078;270-274;3-3];</data>
    </edge>
    <edge id="e2760" source="org.codehaus.jparsec.ParserTest.testFails()" target="org.codehaus.jparsec.Parser.fails()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10876-11078;270-274;3-3/10876-11078;270-274;3-3/10876-11078;270-274;3-3];</data>
    </edge>
    <edge id="e2761" source="org.codehaus.jparsec.ParserTest.testFails()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10876-11078;270-274;3-3];</data>
    </edge>
    <edge id="e2762" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2763" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3/3445-3692;97-101;3-3/3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2764" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3/3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2765" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3/3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2766" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3/3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2767" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2768" source="org.codehaus.jparsec.ParserTest.testFollowedBy()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3445-3692;97-101;3-3];</data>
    </edge>
    <edge id="e2769" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2770" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2771" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2772" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2773" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2774" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2775" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2776" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2777" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2778" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2779" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2780" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Terminals$CharLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2781" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Terminals$LongLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2782" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Parsers#ANY_TOKEN">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3/19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2783" source="org.codehaus.jparsec.ParserTest.testFrom()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19614-20452;520-532;3-3];</data>
    </edge>
    <edge id="e2784" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3/20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2785" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2786" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3/20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2787" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3/20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2788" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3/20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2789" source="org.codehaus.jparsec.ParserTest.testFrom_throwsOnScanners()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20459-20789;534-539;3-3];</data>
    </edge>
    <edge id="e2790" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2791" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2792" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2793" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2794" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2795" source="org.codehaus.jparsec.ParserTest.testFrom_withDelimiter()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[20796-21140;541-547;3-3];</data>
    </edge>
    <edge id="e2796" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2797" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2798" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2799" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3/11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2800" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2801" source="org.codehaus.jparsec.ParserTest.testIfElse()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11085-11345;276-282;3-3];</data>
    </edge>
    <edge id="e2802" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2803" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2804" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2805" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2806" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.Parser.ifelse(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2807" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2808" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.ParserTest#next">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3/11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2809" source="org.codehaus.jparsec.ParserTest.testIfElse_withNext()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11352-11523;284-288;3-3];</data>
    </edge>
    <edge id="e2810" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3/18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2811" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2812" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2813" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2814" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2815" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2816" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3/18528-18819;485-492;3-3/18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2817" source="org.codehaus.jparsec.ParserTest.testInfixl()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18528-18819;485-492;3-3];</data>
    </edge>
    <edge id="e2818" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2819" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2820" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2821" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2822" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2823" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2824" source="org.codehaus.jparsec.ParserTest.testInfixl_fails()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18826-18952;494-497;3-3];</data>
    </edge>
    <edge id="e2825" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2826" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.Parser.infixl(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2827" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2828" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2829" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2830" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2831" source="org.codehaus.jparsec.ParserTest.testInfixl_noOperator()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18313-18521;478-483;3-3];</data>
    </edge>
    <edge id="e2832" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2833" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2834" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.Parser.infixn(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2835" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2836" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2837" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2838" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3/18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2839" source="org.codehaus.jparsec.ParserTest.testInfixn()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18054-18306;470-476;3-3];</data>
    </edge>
    <edge id="e2840" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2841" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.Parser.infixn(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2842" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2843" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2844" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2845" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2846" source="org.codehaus.jparsec.ParserTest.testInfixn_noOperator()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17839-18047;463-468;3-3];</data>
    </edge>
    <edge id="e2847" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3/19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2848" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2849" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2850" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2851" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2852" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2853" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3/19174-19474;506-513;3-3/19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2854" source="org.codehaus.jparsec.ParserTest.testInfixr()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19174-19474;506-513;3-3];</data>
    </edge>
    <edge id="e2855" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2856" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2857" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2858" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2859" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2860" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2861" source="org.codehaus.jparsec.ParserTest.testInfixr_fails()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[19481-19607;515-518;3-3];</data>
    </edge>
    <edge id="e2862" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2863" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.Parser.infixr(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2864" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2865" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2866" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2867" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2868" source="org.codehaus.jparsec.ParserTest.testInfixr_noOperator()" target="org.codehaus.jparsec.ParserTest#binaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[18959-19167;499-504;3-3];</data>
    </edge>
    <edge id="e2869" source="org.codehaus.jparsec.ParserTest.testLabel()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3];</data>
    </edge>
    <edge id="e2870" source="org.codehaus.jparsec.ParserTest.testLabel()" target="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3/11530-11673;290-293;3-3];</data>
    </edge>
    <edge id="e2871" source="org.codehaus.jparsec.ParserTest.testLabel()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3];</data>
    </edge>
    <edge id="e2872" source="org.codehaus.jparsec.ParserTest.testLabel()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3];</data>
    </edge>
    <edge id="e2873" source="org.codehaus.jparsec.ParserTest.testLabel()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[11530-11673;290-293;3-3];</data>
    </edge>
    <edge id="e2874" source="org.codehaus.jparsec.ParserTest.testLexer()" target="org.codehaus.jparsec.Parser.lexer(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3];</data>
    </edge>
    <edge id="e2875" source="org.codehaus.jparsec.ParserTest.testLexer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3/21147-21563;549-555;3-3/21147-21563;549-555;3-3/21147-21563;549-555;3-3];</data>
    </edge>
    <edge id="e2876" source="org.codehaus.jparsec.ParserTest.testLexer()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3/21147-21563;549-555;3-3/21147-21563;549-555;3-3];</data>
    </edge>
    <edge id="e2877" source="org.codehaus.jparsec.ParserTest.testLexer()" target="org.codehaus.jparsec.Terminals$LongLiteral#DEC_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3];</data>
    </edge>
    <edge id="e2878" source="org.codehaus.jparsec.ParserTest.testLexer()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[21147-21563;549-555;3-3];</data>
    </edge>
    <edge id="e2879" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2880" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2881" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2882" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2883" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2884" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Parser.atLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2885" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2886" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2887" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2888" source="org.codehaus.jparsec.ParserTest.testMany()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7725-8547;189-204;3-3/7725-8547;189-204;3-3/7725-8547;189-204;3-3];</data>
    </edge>
    <edge id="e2889" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3/7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2890" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2891" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.Parser.many1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2892" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3/7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2893" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2894" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2895" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2896" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2897" source="org.codehaus.jparsec.ParserTest.testMany1()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[7246-7718;178-187;3-3];</data>
    </edge>
    <edge id="e2898" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2899" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2900" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2901" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3/12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2902" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.ParserTest#map">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3/12029-12223;306-311;3-3/12029-12223;306-311;3-3/12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2903" source="org.codehaus.jparsec.ParserTest.testMap()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12029-12223;306-311;3-3/12029-12223;306-311;3-3];</data>
    </edge>
    <edge id="e2904" source="org.codehaus.jparsec.ParserTest.testMap_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
    </edge>
    <edge id="e2905" source="org.codehaus.jparsec.ParserTest.testMap_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
    </edge>
    <edge id="e2906" source="org.codehaus.jparsec.ParserTest.testMap_fails()" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
    </edge>
    <edge id="e2907" source="org.codehaus.jparsec.ParserTest.testMap_fails()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
    </edge>
    <edge id="e2908" source="org.codehaus.jparsec.ParserTest.testMap_fails()" target="org.codehaus.jparsec.ParserTest#map">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12230-12361;313-316;3-3];</data>
    </edge>
    <edge id="e2909" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3/3053-3306;85-90;3-3/3053-3306;85-90;3-3/3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2910" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2911" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2912" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2913" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3/3053-3306;85-90;3-3/3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2914" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3/3053-3306;85-90;3-3/3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2915" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2916" source="org.codehaus.jparsec.ParserTest.testNext()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3053-3306;85-90;3-3];</data>
    </edge>
    <edge id="e2917" source="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
    </edge>
    <edge id="e2918" source="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
    </edge>
    <edge id="e2919" source="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
    </edge>
    <edge id="e2920" source="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
    </edge>
    <edge id="e2921" source="org.codehaus.jparsec.ParserTest.testNext_firstParserFails()" target="org.codehaus.jparsec.ParserTest#next">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2755-2873;74-77;3-3];</data>
    </edge>
    <edge id="e2922" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2923" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2924" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2925" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2926" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.ParserTest#next">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3/2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2927" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2928" source="org.codehaus.jparsec.ParserTest.testNext_nextParserFails()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2880-3046;79-83;3-3];</data>
    </edge>
    <edge id="e2929" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2930" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2931" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2932" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3/2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2933" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.ParserTest#next">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3/2543-2748;67-72;3-3/2543-2748;67-72;3-3/2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2934" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2935" source="org.codehaus.jparsec.ParserTest.testNext_withMap()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2543-2748;67-72;3-3/2543-2748;67-72;3-3];</data>
    </edge>
    <edge id="e2936" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3/9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2937" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Parser.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3/9351-9639;227-233;3-3/9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2938" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2939" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2940" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2941" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Parser.not(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3/9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2942" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2943" source="org.codehaus.jparsec.ParserTest.testNot()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9351-9639;227-233;3-3/9351-9639;227-233;3-3/9351-9639;227-233;3-3/9351-9639;227-233;3-3];</data>
    </edge>
    <edge id="e2944" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3/3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2945" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.Parser.notFollowedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3/3699-4031;103-108;3-3/3699-4031;103-108;3-3/3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2946" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2947" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2948" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3/3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2949" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3/3699-4031;103-108;3-3/3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2950" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3/3699-4031;103-108;3-3/3699-4031;103-108;3-3/3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2951" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2952" source="org.codehaus.jparsec.ParserTest.testNotFollowedBy()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3699-4031;103-108;3-3];</data>
    </edge>
    <edge id="e2953" source="org.codehaus.jparsec.ParserTest.testOptional()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3/8950-9134;215-219;3-3];</data>
    </edge>
    <edge id="e2954" source="org.codehaus.jparsec.ParserTest.testOptional()" target="org.codehaus.jparsec.Parser.optional()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3/8950-9134;215-219;3-3/8950-9134;215-219;3-3];</data>
    </edge>
    <edge id="e2955" source="org.codehaus.jparsec.ParserTest.testOptional()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3];</data>
    </edge>
    <edge id="e2956" source="org.codehaus.jparsec.ParserTest.testOptional()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3];</data>
    </edge>
    <edge id="e2957" source="org.codehaus.jparsec.ParserTest.testOptional()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8950-9134;215-219;3-3/8950-9134;215-219;3-3];</data>
    </edge>
    <edge id="e2958" source="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3/9141-9344;221-225;3-3];</data>
    </edge>
    <edge id="e2959" source="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()" target="org.codehaus.jparsec.Parser.optional(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3/9141-9344;221-225;3-3/9141-9344;221-225;3-3];</data>
    </edge>
    <edge id="e2960" source="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3];</data>
    </edge>
    <edge id="e2961" source="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3];</data>
    </edge>
    <edge id="e2962" source="org.codehaus.jparsec.ParserTest.testOptional_withDefaultValue()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9141-9344;221-225;3-3/9141-9344;221-225;3-3];</data>
    </edge>
    <edge id="e2963" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.Parser.or(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2964" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2965" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2966" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2967" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2968" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2969" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2970" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2971" source="org.codehaus.jparsec.ParserTest.testOr()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[8554-8943;206-213;3-3/8554-8943;206-213;3-3/8554-8943;206-213;3-3];</data>
    </edge>
    <edge id="e2972" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2973" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2974" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2975" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.Parser.parse(java.lang.Readable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2976" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.Parser.parse(java.lang.Readable,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2977" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.error.ParserException.getLocation()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3/1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2978" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3/1132-1826;33-47;3-3/1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2979" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3/1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2980" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.error.Location#line">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2981" source="org.codehaus.jparsec.ParserTest.testParse()" target="org.codehaus.jparsec.error.Location#column">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1132-1826;33-47;3-3];</data>
    </edge>
    <edge id="e2982" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2983" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.Parser.peek()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3/9646-9955;235-241;3-3/9646-9955;235-241;3-3/9646-9955;235-241;3-3/9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2984" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3/9646-9955;235-241;3-3/9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2985" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3/9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2986" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2987" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2988" source="org.codehaus.jparsec.ParserTest.testPeek()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[9646-9955;235-241;3-3/9646-9955;235-241;3-3/9646-9955;235-241;3-3];</data>
    </edge>
    <edge id="e2989" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3/17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2990" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2991" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2992" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2993" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2994" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2995" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.ParserTest#unaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3/17495-17782;453-460;3-3/17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2996" source="org.codehaus.jparsec.ParserTest.testPostfix()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17495-17782;453-460;3-3];</data>
    </edge>
    <edge id="e2997" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e2998" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.Parser.postfix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e2999" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e3000" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e3001" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e3002" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e3003" source="org.codehaus.jparsec.ParserTest.testPostfix_noOperator()" target="org.codehaus.jparsec.ParserTest#unaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[17274-17488;446-451;3-3];</data>
    </edge>
    <edge id="e3004" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3/16941-17267;436-444;3-3/16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3005" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3006" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3007" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3008" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3009" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3010" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.ParserTest#unaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3/16941-17267;436-444;3-3/16941-17267;436-444;3-3/16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3011" source="org.codehaus.jparsec.ParserTest.testPrefix()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16941-17267;436-444;3-3];</data>
    </edge>
    <edge id="e3012" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3013" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.Parser.prefix(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3014" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3015" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3016" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3017" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3018" source="org.codehaus.jparsec.ParserTest.testPrefix_noOperator()" target="org.codehaus.jparsec.ParserTest#unaryOp">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[16723-16934;429-434;3-3];</data>
    </edge>
    <edge id="e3019" source="org.codehaus.jparsec.ParserTest.testRetn()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3];</data>
    </edge>
    <edge id="e3020" source="org.codehaus.jparsec.ParserTest.testRetn()" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3/3313-3438;92-95;3-3];</data>
    </edge>
    <edge id="e3021" source="org.codehaus.jparsec.ParserTest.testRetn()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3];</data>
    </edge>
    <edge id="e3022" source="org.codehaus.jparsec.ParserTest.testRetn()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3];</data>
    </edge>
    <edge id="e3023" source="org.codehaus.jparsec.ParserTest.testRetn()" target="org.codehaus.jparsec.ParserTest#FAILURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[3313-3438;92-95;3-3];</data>
    </edge>
    <edge id="e3024" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.Parser.sepBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3/12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3025" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3/12796-13202;328-336;3-3/12796-13202;328-336;3-3/12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3026" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3/12796-13202;328-336;3-3/12796-13202;328-336;3-3/12796-13202;328-336;3-3/12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3027" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3/12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3028" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3029" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3030" source="org.codehaus.jparsec.ParserTest.testSepBy()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12796-13202;328-336;3-3];</data>
    </edge>
    <edge id="e3031" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.Parser.sepBy1(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3/12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3032" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3/12368-12789;318-326;3-3/12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3033" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3/12368-12789;318-326;3-3/12368-12789;318-326;3-3/12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3034" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3/12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3035" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3036" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3/12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3037" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3038" source="org.codehaus.jparsec.ParserTest.testSepBy1()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[12368-12789;318-326;3-3];</data>
    </edge>
    <edge id="e3039" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parser.sepEndBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3040" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3041" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3042" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3043" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3044" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3045" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3046" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parser.atomic()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3047" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3048" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3049" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3050" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3051" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3052" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3/15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3053" source="org.codehaus.jparsec.ParserTest.testSepEndBy()" target="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[15256-16560;391-422;3-3];</data>
    </edge>
    <edge id="e3054" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parser.sepEndBy1(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3055" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3056" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3057" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3058" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3059" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3060" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parser.atomic()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3061" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3062" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3063" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3064" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3065" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3066" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3067" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3/13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3068" source="org.codehaus.jparsec.ParserTest.testSepEndBy1()" target="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[13956-15251;358-389;3-3];</data>
    </edge>
    <edge id="e3069" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3070" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3071" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3072" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3073" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3074" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Parser.skipAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3075" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3076" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3077" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3078" source="org.codehaus.jparsec.ParserTest.testSkipMany()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5922-6775;151-166;3-3/5922-6775;151-166;3-3/5922-6775;151-166;3-3];</data>
    </edge>
    <edge id="e3079" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3/6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3080" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3081" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Parser.skipMany1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3082" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3/6782-7239;168-176;3-3/6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3083" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3084" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3085" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3086" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3087" source="org.codehaus.jparsec.ParserTest.testSkipMany1()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[6782-7239;168-176;3-3];</data>
    </edge>
    <edge id="e3088" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3/4038-4418;110-117;3-3/4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3089" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3/4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3090" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.Parser.skipTimes(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3/4038-4418;110-117;3-3/4038-4418;110-117;3-3/4038-4418;110-117;3-3/4038-4418;110-117;3-3/4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3091" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3/4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3092" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3/4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3093" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3094" source="org.codehaus.jparsec.ParserTest.testSkipTimes()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4038-4418;110-117;3-3];</data>
    </edge>
    <edge id="e3095" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3/1833-2240;49-57;3-3/1833-2240;49-57;3-3/1833-2240;49-57;3-3/1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3096" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3/1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3097" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3/1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3098" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Parser.label(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3099" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3100" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3101" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3/1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3102" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.ParserTest#COMMA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3103" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3104" source="org.codehaus.jparsec.ParserTest.testSource()" target="java.lang.Integer#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3105" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3106" source="org.codehaus.jparsec.ParserTest.testSource()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[1833-2240;49-57;3-3];</data>
    </edge>
    <edge id="e3107" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3/10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3108" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3109" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3110" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3/10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3111" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3112" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3113" source="org.codehaus.jparsec.ParserTest.testStep()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10245-10439;250-253;3-3/10245-10439;250-253;3-3];</data>
    </edge>
    <edge id="e3114" source="org.codehaus.jparsec.ParserTest.testStep_negativeStep()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10446-10647;255-262;3-3];</data>
    </edge>
    <edge id="e3115" source="org.codehaus.jparsec.ParserTest.testStep_negativeStep()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10446-10647;255-262;3-3];</data>
    </edge>
    <edge id="e3116" source="org.codehaus.jparsec.ParserTest.testSucceeds()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10654-10869;264-268;3-3/10654-10869;264-268;3-3/10654-10869;264-268;3-3];</data>
    </edge>
    <edge id="e3117" source="org.codehaus.jparsec.ParserTest.testSucceeds()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10654-10869;264-268;3-3/10654-10869;264-268;3-3];</data>
    </edge>
    <edge id="e3118" source="org.codehaus.jparsec.ParserTest.testSucceeds()" target="org.codehaus.jparsec.Parser.succeeds()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10654-10869;264-268;3-3/10654-10869;264-268;3-3/10654-10869;264-268;3-3];</data>
    </edge>
    <edge id="e3119" source="org.codehaus.jparsec.ParserTest.testSucceeds()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[10654-10869;264-268;3-3];</data>
    </edge>
    <edge id="e3120" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3/4425-4811;119-126;3-3/4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3121" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3/4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3122" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3/4425-4811;119-126;3-3/4425-4811;119-126;3-3/4425-4811;119-126;3-3/4425-4811;119-126;3-3/4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3123" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3/4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3124" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3/4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3125" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3126" source="org.codehaus.jparsec.ParserTest.testTimes()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[4425-4811;119-126;3-3];</data>
    </edge>
    <edge id="e3127" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.ParserTest.assertListParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3128" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3129" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.Parser.times(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3130" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3131" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3132" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3133" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3134" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3135" source="org.codehaus.jparsec.ParserTest.testTimes_range()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[5362-5915;139-149;3-3/5362-5915;139-149;3-3];</data>
    </edge>
    <edge id="e3136" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.Parser.token()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3/2247-2494;59-64;3-3/2247-2494;59-64;3-3/2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3137" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3/2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3138" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3/2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3139" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3140" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.ParserTest#FOO">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3/2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3141" source="org.codehaus.jparsec.ParserTest.testToken()" target="org.codehaus.jparsec.ParserTest#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParserTest.java;[2247-2494;59-64;3-3/2247-2494;59-64;3-3];</data>
    </edge>
    <edge id="e3142" source="org.codehaus.jparsec.Parsers$Rhs#op" target="org.codehaus.jparsec.Parsers$Rhs(org.codehaus.jparsec.functors.Map2,T)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25597-25700;697-700;5-5];</data>
    </edge>
    <edge id="e3143" source="org.codehaus.jparsec.Parsers$Rhs#rhs" target="org.codehaus.jparsec.Parsers$Rhs(org.codehaus.jparsec.functors.Map2,T)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25597-25700;697-700;5-5];</data>
    </edge>
    <edge id="e3144" source="org.codehaus.jparsec.Parsers$Rhs.toString()" target="org.codehaus.jparsec.Parsers$Rhs#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25711-25781;702-704;5-5];</data>
    </edge>
    <edge id="e3145" source="org.codehaus.jparsec.Parsers$Rhs.toString()" target="org.codehaus.jparsec.Parsers$Rhs#rhs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25711-25781;702-704;5-5];</data>
    </edge>
    <edge id="e3146" source="org.codehaus.jparsec.Parsers#EOF" target="org.codehaus.jparsec.Parsers.eof(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[1987-2108;43-44;3-49];</data>
    </edge>
    <edge id="e3147" source="org.codehaus.jparsec.Parsers$1.map(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2291-2356;48-50;7-7];</data>
    </edge>
    <edge id="e3148" source="org.codehaus.jparsec.Parsers#ANY_TOKEN" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2113-2443;46-54;3-7];</data>
    </edge>
    <edge id="e3149" source="org.codehaus.jparsec.Parsers#INDEX" target="org.codehaus.jparsec.GetIndexParser()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2450-2588;56-57;3-67];</data>
    </edge>
    <edge id="e3150" source="org.codehaus.jparsec.Parsers#ALWAYS" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2595-2679;59-60;3-54];</data>
    </edge>
    <edge id="e3151" source="org.codehaus.jparsec.Parsers#NEVER" target="org.codehaus.jparsec.NeverParser()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2686-2780;62-63;3-64];</data>
    </edge>
    <edge id="e3152" source="org.codehaus.jparsec.Parsers#TRUE" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2787-2837;65-65;3-53];</data>
    </edge>
    <edge id="e3153" source="org.codehaus.jparsec.Parsers#FALSE" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2841-2893;66-66;3-55];</data>
    </edge>
    <edge id="e3154" source="org.codehaus.jparsec.Parsers#PREFIX_OPERATOR_MAP2" target="org.codehaus.jparsec.Parsers.prefixOperatorMap2(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20513-20615;551-552;3-72];</data>
    </edge>
    <edge id="e3155" source="org.codehaus.jparsec.Parsers#POSTFIX_OPERATOR_MAP2" target="org.codehaus.jparsec.Parsers.postfixOperatorMap2(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20620-20725;554-555;3-75];</data>
    </edge>
    <edge id="e3156" source="org.codehaus.jparsec.Parsers#INFIXR_OPERATOR_MAP2" target="org.codehaus.jparsec.Parsers.toInfixRhs()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25790-25884;707-708;3-64];</data>
    </edge>
    <edge id="e3157" source="org.codehaus.jparsec.Parsers#APPLY_INFIXR_OPERATORS" target="org.codehaus.jparsec.Parsers.applyInfixrOperators()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26283-26389;721-722;3-76];</data>
    </edge>
    <edge id="e3158" source="org.codehaus.jparsec.Parsers#MAP_OPERATOR_AND_RHS_TO_CLOSURE" target="org.codehaus.jparsec.Parsers.fromOperatorAndRhsToClosure()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26988-27102;743-744;3-84];</data>
    </edge>
    <edge id="e3159" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10403-10827;277-285;3-3];</data>
    </edge>
    <edge id="e3160" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8124-8526;214-222;3-3];</data>
    </edge>
    <edge id="e3161" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Maps.toTuple5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8124-8526;214-222;3-3];</data>
    </edge>
    <edge id="e3162" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10010-10398;267-275;3-3];</data>
    </edge>
    <edge id="e3163" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7752-8119;204-212;3-3];</data>
    </edge>
    <edge id="e3164" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Maps.toTuple4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7752-8119;204-212;3-3];</data>
    </edge>
    <edge id="e3165" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)" target="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9652-10005;257-265;3-3];</data>
    </edge>
    <edge id="e3166" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7421-7747;195-202;3-3];</data>
    </edge>
    <edge id="e3167" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Maps.toTuple3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7421-7747;195-202;3-3];</data>
    </edge>
    <edge id="e3168" source="org.codehaus.jparsec.Parsers$10$1.map(A)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27358-27421;750-752;11-11];</data>
    </edge>
    <edge id="e3169" source="org.codehaus.jparsec.Parsers$10.map(org.codehaus.jparsec.functors.Map2,B)" target="org.codehaus.jparsec.Parsers$10$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27257-27541;748-757;7-7];</data>
    </edge>
    <edge id="e3170" source="org.codehaus.jparsec.Parsers$10.map(org.codehaus.jparsec.functors.Map2,B)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27257-27541;748-757;7-7];</data>
    </edge>
    <edge id="e3171" source="org.codehaus.jparsec.Parsers.fromOperatorAndRhsToClosure()" target="org.codehaus.jparsec.Parsers$10()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27107-27648;746-762;3-3];</data>
    </edge>
    <edge id="e3172" source="org.codehaus.jparsec.Parsers.fromOperatorAndRhsToClosure()" target="org.codehaus.jparsec.Parsers$10$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27107-27648;746-762;3-3];</data>
    </edge>
    <edge id="e3173" source="org.codehaus.jparsec.Parsers.fromOperatorAndRhsToClosure()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[27107-27648;746-762;3-3];</data>
    </edge>
    <edge id="e3174" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)" target="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9326-9647;248-255;3-3];</data>
    </edge>
    <edge id="e3175" source="org.codehaus.jparsec.Parsers.pair(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6768-7103;179-185;3-3];</data>
    </edge>
    <edge id="e3176" source="org.codehaus.jparsec.Parsers.pair(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Maps.toPair()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6768-7103;179-185;3-3];</data>
    </edge>
    <edge id="e3177" source="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.pair(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[7108-7416;187-193;3-3];</data>
    </edge>
    <edge id="e3178" source="org.codehaus.jparsec.Parsers.runNext(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20292-20508;545-549;3-3];</data>
    </edge>
    <edge id="e3179" source="org.codehaus.jparsec.Parsers.runNext(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20292-20508;545-549;3-3];</data>
    </edge>
    <edge id="e3180" source="org.codehaus.jparsec.Parsers.runNext(org.codehaus.jparsec.ParseContext,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20292-20508;545-549;3-3];</data>
    </edge>
    <edge id="e3181" source="org.codehaus.jparsec.Parsers.applyInfixOperators(T,java.util.List)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24381-24583;655-661;3-3];</data>
    </edge>
    <edge id="e3182" source="org.codehaus.jparsec.Parsers.applyPostfixOperators(T,java.lang.Iterable)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25254-25458;684-690;3-3];</data>
    </edge>
    <edge id="e3183" source="org.codehaus.jparsec.Parsers.applyPrefixOperators(T,java.util.List)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24588-24836;663-670;3-3];</data>
    </edge>
    <edge id="e3184" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3185" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3186" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.error.ParserException(org.codehaus.jparsec.error.ParseErrorDetails,java.lang.String,org.codehaus.jparsec.error.Location)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3187" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.ParseContext.renderError()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3188" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.SourceLocator.locate(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3189" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.ParseContext.errorIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3190" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3191" source="org.codehaus.jparsec.Parsers.parse(java.lang.CharSequence,org.codehaus.jparsec.Parser,org.codehaus.jparsec.SourceLocator,java.lang.String)" target="org.codehaus.jparsec.ParseContext#module">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3532-4013;90-102;3-3];</data>
    </edge>
    <edge id="e3192" source="org.codehaus.jparsec.Parsers.always()" target="org.codehaus.jparsec.Parsers#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[2900-3039;68-72;3-3];</data>
    </edge>
    <edge id="e3193" source="org.codehaus.jparsec.Parsers.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[9059-9321;240-246;3-3];</data>
    </edge>
    <edge id="e3194" source="org.codehaus.jparsec.Parsers$3()" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3195" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Parsers$3.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5467-5564;143-146;7-7];</data>
    </edge>
    <edge id="e3196" source="org.codehaus.jparsec.Parsers.constant(T)" target="org.codehaus.jparsec.Parsers$3()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5237-5660;138-151;3-3];</data>
    </edge>
    <edge id="e3197" source="org.codehaus.jparsec.Parsers.constant(T)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5237-5660;138-151;3-3];</data>
    </edge>
    <edge id="e3198" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5237-5660;138-151;3-3];</data>
    </edge>
    <edge id="e3199" source="org.codehaus.jparsec.Parsers.expect(java.lang.String)" target="org.codehaus.jparsec.ExpectParser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18105-18289;485-488;3-3];</data>
    </edge>
    <edge id="e3200" source="org.codehaus.jparsec.Parsers.fail(java.lang.String)" target="org.codehaus.jparsec.FailureParser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3364-3525;85-88;3-3];</data>
    </edge>
    <edge id="e3201" source="org.codehaus.jparsec.Parsers$5$1.map(java.util.List)" target="org.codehaus.jparsec.Parsers.applyInfixOperators(T,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22841-22941;608-610;11-11];</data>
    </edge>
    <edge id="e3202" source="org.codehaus.jparsec.Parsers$5.map(T)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22724-23049;606-615;7-7];</data>
    </edge>
    <edge id="e3203" source="org.codehaus.jparsec.Parsers$5.map(T)" target="org.codehaus.jparsec.Parsers$5$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22724-23049;606-615;7-7];</data>
    </edge>
    <edge id="e3204" source="org.codehaus.jparsec.Parsers$5.map(T)" target="org.codehaus.jparsec.Parsers.applyInfixOperators(T,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[22724-23049;606-615;7-7];</data>
    </edge>
    <edge id="e3205" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3206" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3207" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers$5()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3208" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3209" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers$5$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3210" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.applyInfixOperators(T,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3211" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3212" source="org.codehaus.jparsec.Parsers.infixl(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#MAP_OPERATOR_AND_RHS_TO_CLOSURE">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21855-23161;588-621;3-3];</data>
    </edge>
    <edge id="e3213" source="org.codehaus.jparsec.Parsers$4$1.map(org.codehaus.jparsec.functors.Map2,T)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21469-21584;573-575;15-15];</data>
    </edge>
    <edge id="e3214" source="org.codehaus.jparsec.Parsers$4.map(T)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
    </edge>
    <edge id="e3215" source="org.codehaus.jparsec.Parsers$4.map(T)" target="org.codehaus.jparsec.Parsers$4$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
    </edge>
    <edge id="e3216" source="org.codehaus.jparsec.Parsers$4.map(T)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
    </edge>
    <edge id="e3217" source="org.codehaus.jparsec.Parsers$4.map(T)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
    </edge>
    <edge id="e3218" source="org.codehaus.jparsec.Parsers$4.map(T)" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[21301-21762;570-581;7-7];</data>
    </edge>
    <edge id="e3219" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3220" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers$4()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3221" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3222" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers$4$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3223" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3224" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3225" source="org.codehaus.jparsec.Parsers.infixn(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[20730-21850;557-586;3-3];</data>
    </edge>
    <edge id="e3226" source="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23166-23965;623-641;3-3/23166-23965;623-641;3-3];</data>
    </edge>
    <edge id="e3227" source="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23166-23965;623-641;3-3];</data>
    </edge>
    <edge id="e3228" source="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#INFIXR_OPERATOR_MAP2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23166-23965;623-641;3-3];</data>
    </edge>
    <edge id="e3229" source="org.codehaus.jparsec.Parsers.infixr(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers#APPLY_INFIXR_OPERATORS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23166-23965;623-641;3-3];</data>
    </edge>
    <edge id="e3230" source="org.codehaus.jparsec.Parsers.list(java.lang.Iterable)" target="org.codehaus.jparsec.ListParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8773-9052;232-238;3-3];</data>
    </edge>
    <edge id="e3231" source="org.codehaus.jparsec.Parsers.list(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8773-9052;232-238;3-3];</data>
    </edge>
    <edge id="e3232" source="org.codehaus.jparsec.Parsers.longer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16023-16340;431-438;3-3];</data>
    </edge>
    <edge id="e3233" source="org.codehaus.jparsec.Parsers.longest(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16751-17054;450-456;3-3];</data>
    </edge>
    <edge id="e3234" source="org.codehaus.jparsec.Parsers.longest(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16751-17054;450-456;3-3];</data>
    </edge>
    <edge id="e3235" source="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3];</data>
    </edge>
    <edge id="e3236" source="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3];</data>
    </edge>
    <edge id="e3237" source="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3];</data>
    </edge>
    <edge id="e3238" source="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3/16345-16746;440-448;3-3];</data>
    </edge>
    <edge id="e3239" source="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.IntOrders#GT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[16345-16746;440-448;3-3];</data>
    </edge>
    <edge id="e3240" source="org.codehaus.jparsec.Parsers.nested(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.NestedParser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4698-5232;124-136;3-3];</data>
    </edge>
    <edge id="e3241" source="org.codehaus.jparsec.Parsers.never()" target="org.codehaus.jparsec.Parsers#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3046-3180;74-78;3-3];</data>
    </edge>
    <edge id="e3242" source="org.codehaus.jparsec.Parsers.or(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15601-15822;419-424;3-3];</data>
    </edge>
    <edge id="e3243" source="org.codehaus.jparsec.Parsers.or(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15601-15822;419-424;3-3];</data>
    </edge>
    <edge id="e3244" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12284-12524;327-333;3-3];</data>
    </edge>
    <edge id="e3245" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12284-12524;327-333;3-3];</data>
    </edge>
    <edge id="e3246" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12531-12806;335-342;3-3];</data>
    </edge>
    <edge id="e3247" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12531-12806;335-342;3-3];</data>
    </edge>
    <edge id="e3248" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12813-13122;344-352;3-3];</data>
    </edge>
    <edge id="e3249" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[12813-13122;344-352;3-3];</data>
    </edge>
    <edge id="e3250" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13129-13467;354-362;3-3];</data>
    </edge>
    <edge id="e3251" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13129-13467;354-362;3-3];</data>
    </edge>
    <edge id="e3252" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13474-13840;364-372;3-3];</data>
    </edge>
    <edge id="e3253" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13474-13840;364-372;3-3];</data>
    </edge>
    <edge id="e3254" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13847-14247;374-383;3-3];</data>
    </edge>
    <edge id="e3255" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[13847-14247;374-383;3-3];</data>
    </edge>
    <edge id="e3256" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14254-14682;385-394;3-3];</data>
    </edge>
    <edge id="e3257" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14254-14682;385-394;3-3];</data>
    </edge>
    <edge id="e3258" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14689-15145;396-405;3-3];</data>
    </edge>
    <edge id="e3259" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[14689-15145;396-405;3-3];</data>
    </edge>
    <edge id="e3260" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15152-15594;407-417;3-3];</data>
    </edge>
    <edge id="e3261" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15152-15594;407-417;3-3];</data>
    </edge>
    <edge id="e3262" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.OrParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15152-15594;407-417;3-3];</data>
    </edge>
    <edge id="e3263" source="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15152-15594;407-417;3-3/15152-15594;407-417;3-3];</data>
    </edge>
    <edge id="e3264" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11267-11538;298-305;3-3];</data>
    </edge>
    <edge id="e3265" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11545-11852;307-315;3-3];</data>
    </edge>
    <edge id="e3266" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11859-12277;317-325;3-3];</data>
    </edge>
    <edge id="e3267" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11859-12277;317-325;3-3];</data>
    </edge>
    <edge id="e3268" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11859-12277;317-325;3-3];</data>
    </edge>
    <edge id="e3269" source="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11859-12277;317-325;3-3/11859-12277;317-325;3-3];</data>
    </edge>
    <edge id="e3270" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5665-5948;153-159;3-3];</data>
    </edge>
    <edge id="e3271" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.InternalFunctors.lastOfTwo()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5665-5948;153-159;3-3];</data>
    </edge>
    <edge id="e3272" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5953-6187;161-164;3-3];</data>
    </edge>
    <edge id="e3273" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.InternalFunctors.lastOfThree()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[5953-6187;161-164;3-3];</data>
    </edge>
    <edge id="e3274" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6192-6458;166-170;3-3];</data>
    </edge>
    <edge id="e3275" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.InternalFunctors.lastOfFour()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6192-6458;166-170;3-3];</data>
    </edge>
    <edge id="e3276" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6463-6763;172-177;3-3];</data>
    </edge>
    <edge id="e3277" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.InternalFunctors.lastOfFive()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[6463-6763;172-177;3-3];</data>
    </edge>
    <edge id="e3278" source="org.codehaus.jparsec.Parsers.shorter(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17059-17379;458-465;3-3];</data>
    </edge>
    <edge id="e3279" source="org.codehaus.jparsec.Parsers.shortest(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17792-18098;477-483;3-3];</data>
    </edge>
    <edge id="e3280" source="org.codehaus.jparsec.Parsers.shortest(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17792-18098;477-483;3-3];</data>
    </edge>
    <edge id="e3281" source="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3];</data>
    </edge>
    <edge id="e3282" source="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser.cast()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3];</data>
    </edge>
    <edge id="e3283" source="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.BestParser(org.codehaus.jparsec.Parser[],org.codehaus.jparsec.IntOrder)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3];</data>
    </edge>
    <edge id="e3284" source="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3/17384-17787;467-475;3-3];</data>
    </edge>
    <edge id="e3285" source="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.IntOrders#LT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[17384-17787;467-475;3-3];</data>
    </edge>
    <edge id="e3286" source="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)" target="org.codehaus.jparsec.IsTokenParser(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18489-18962;495-505;3-3];</data>
    </edge>
    <edge id="e3287" source="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18967-19397;507-517;3-3];</data>
    </edge>
    <edge id="e3288" source="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)" target="org.codehaus.jparsec.InternalFunctors.isTokenType(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18967-19397;507-517;3-3];</data>
    </edge>
    <edge id="e3289" source="org.codehaus.jparsec.Parsers.unexpected(java.lang.String)" target="org.codehaus.jparsec.UnexpectedParser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[18294-18484;490-493;3-3];</data>
    </edge>
    <edge id="e3290" source="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19402-19821;519-529;3-3];</data>
    </edge>
    <edge id="e3291" source="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArrayWithIteration(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19402-19821;519-529;3-3];</data>
    </edge>
    <edge id="e3292" source="org.codehaus.jparsec.Parsers.toArrayWithIteration(java.lang.Iterable)" target="org.codehaus.jparsec.util.Lists.arrayList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19826-20105;531-538;3-3];</data>
    </edge>
    <edge id="e3293" source="org.codehaus.jparsec.Parsers.toArrayWithIteration(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[19826-20105;531-538;3-3];</data>
    </edge>
    <edge id="e3294" source="org.codehaus.jparsec.Parsers$9.map(T,java.util.List)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26519-26896;726-736;7-7/26519-26896;726-736;7-7];</data>
    </edge>
    <edge id="e3295" source="org.codehaus.jparsec.Parsers$9.map(T,java.util.List)" target="org.codehaus.jparsec.Parsers$Rhs#rhs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26519-26896;726-736;7-7/26519-26896;726-736;7-7];</data>
    </edge>
    <edge id="e3296" source="org.codehaus.jparsec.Parsers$9.map(T,java.util.List)" target="org.codehaus.jparsec.Parsers$Rhs#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26519-26896;726-736;7-7/26519-26896;726-736;7-7];</data>
    </edge>
    <edge id="e3297" source="org.codehaus.jparsec.Parsers.applyInfixrOperators()" target="org.codehaus.jparsec.Parsers$9()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26394-26983;724-741;3-3];</data>
    </edge>
    <edge id="e3298" source="org.codehaus.jparsec.Parsers.applyInfixrOperators()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26394-26983;724-741;3-3/26394-26983;724-741;3-3];</data>
    </edge>
    <edge id="e3299" source="org.codehaus.jparsec.Parsers.applyInfixrOperators()" target="org.codehaus.jparsec.Parsers$Rhs#rhs">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26394-26983;724-741;3-3/26394-26983;724-741;3-3];</data>
    </edge>
    <edge id="e3300" source="org.codehaus.jparsec.Parsers.applyInfixrOperators()" target="org.codehaus.jparsec.Parsers$Rhs#op">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26394-26983;724-741;3-3/26394-26983;724-741;3-3];</data>
    </edge>
    <edge id="e3301" source="org.codehaus.jparsec.Parsers$7.map(T,java.util.List)" target="org.codehaus.jparsec.Parsers.applyPostfixOperators(T,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25045-25166;675-677;7-7];</data>
    </edge>
    <edge id="e3302" source="org.codehaus.jparsec.Parsers.postfixOperatorMap2(java.lang.String)" target="org.codehaus.jparsec.Parsers$7()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24841-25249;672-682;3-3];</data>
    </edge>
    <edge id="e3303" source="org.codehaus.jparsec.Parsers.postfixOperatorMap2(java.lang.String)" target="org.codehaus.jparsec.Parsers.applyPostfixOperators(T,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24841-25249;672-682;3-3];</data>
    </edge>
    <edge id="e3304" source="org.codehaus.jparsec.Parsers$6.map(java.util.List,T)" target="org.codehaus.jparsec.Parsers.applyPrefixOperators(T,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[24173-24293;646-648;7-7];</data>
    </edge>
    <edge id="e3305" source="org.codehaus.jparsec.Parsers.prefixOperatorMap2(java.lang.String)" target="org.codehaus.jparsec.Parsers$6()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23970-24376;643-653;3-3];</data>
    </edge>
    <edge id="e3306" source="org.codehaus.jparsec.Parsers.prefixOperatorMap2(java.lang.String)" target="org.codehaus.jparsec.Parsers.applyPrefixOperators(T,java.util.List)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[23970-24376;643-653;3-3];</data>
    </edge>
    <edge id="e3307" source="org.codehaus.jparsec.Parsers$8.map(org.codehaus.jparsec.functors.Map2,T)" target="org.codehaus.jparsec.Parsers$Rhs(org.codehaus.jparsec.functors.Map2,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[26062-26171;712-714;7-7];</data>
    </edge>
    <edge id="e3308" source="org.codehaus.jparsec.Parsers.toInfixRhs()" target="org.codehaus.jparsec.Parsers$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25889-26278;710-719;3-3];</data>
    </edge>
    <edge id="e3309" source="org.codehaus.jparsec.Parsers.toInfixRhs()" target="org.codehaus.jparsec.Parsers$Rhs(org.codehaus.jparsec.functors.Map2,T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[25889-26278;710-719;3-3];</data>
    </edge>
    <edge id="e3310" source="org.codehaus.jparsec.Parsers.alt(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[15829-16018;426-429;3-3];</data>
    </edge>
    <edge id="e3311" source="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.ArrayParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[8533-8766;224-230;3-3];</data>
    </edge>
    <edge id="e3312" source="org.codehaus.jparsec.Parsers.eof(java.lang.String)" target="org.codehaus.jparsec.EofParser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[3185-3359;80-83;3-3];</data>
    </edge>
    <edge id="e3313" source="org.codehaus.jparsec.Parsers.runnable(java.lang.Runnable)" target="org.codehaus.jparsec.ActionParser(java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4018-4234;104-110;3-3];</data>
    </edge>
    <edge id="e3314" source="org.codehaus.jparsec.Parsers.sequence(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11042-11259;292-295;3-3];</data>
    </edge>
    <edge id="e3315" source="org.codehaus.jparsec.Parsers.sequence(java.lang.Iterable)" target="org.codehaus.jparsec.Parsers.toArray(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[11042-11259;292-295;3-3];</data>
    </edge>
    <edge id="e3316" source="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.SequenceParser(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[10834-11035;287-290;3-3];</data>
    </edge>
    <edge id="e3317" source="org.codehaus.jparsec.Parsers.tokens(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4239-4691;112-122;3-3];</data>
    </edge>
    <edge id="e3318" source="org.codehaus.jparsec.Parsers.tokens(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers$2()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Parsers.java;[4239-4691;112-122;3-3];</data>
    </edge>
    <edge id="e3319" source="org.codehaus.jparsec.ParsersTest()" target="org.codehaus.jparsec.easymock.BaseMockTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3320" source="org.codehaus.jparsec.ParsersTest.testAlways()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[789-856;27-29;3-3];</data>
    </edge>
    <edge id="e3321" source="org.codehaus.jparsec.ParsersTest.testAlways()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[789-856;27-29;3-3];</data>
    </edge>
    <edge id="e3322" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3323" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3324" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3/21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3325" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3/21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3326" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3/21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3327" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3328" source="org.codehaus.jparsec.ParsersTest.testAnyToken()" target="org.codehaus.jparsec.Parsers#ANY_TOKEN">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21051-21381;561-569;3-3/21051-21381;561-569;3-3/21051-21381;561-569;3-3];</data>
    </edge>
    <edge id="e3329" source="org.codehaus.jparsec.ParsersTest.testArray()" target="org.codehaus.jparsec.Parsers.array(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6357-6658;182-188;3-3];</data>
    </edge>
    <edge id="e3330" source="org.codehaus.jparsec.ParsersTest.testArray()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6357-6658;182-188;3-3/6357-6658;182-188;3-3];</data>
    </edge>
    <edge id="e3331" source="org.codehaus.jparsec.ParsersTest.testArray()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6357-6658;182-188;3-3];</data>
    </edge>
    <edge id="e3332" source="org.codehaus.jparsec.ParsersTest.testArray()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6357-6658;182-188;3-3/6357-6658;182-188;3-3];</data>
    </edge>
    <edge id="e3333" source="org.codehaus.jparsec.ParsersTest.testBetween()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[999-1129;36-38;3-3];</data>
    </edge>
    <edge id="e3334" source="org.codehaus.jparsec.ParsersTest.testBetween()" target="org.codehaus.jparsec.Parsers.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[999-1129;36-38;3-3];</data>
    </edge>
    <edge id="e3335" source="org.codehaus.jparsec.ParsersTest.testBetween()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[999-1129;36-38;3-3/999-1129;36-38;3-3];</data>
    </edge>
    <edge id="e3336" source="org.codehaus.jparsec.ParsersTest.testBetween()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[999-1129;36-38;3-3];</data>
    </edge>
    <edge id="e3337" source="org.codehaus.jparsec.ParsersTest.testConstant()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1386-1570;48-51;3-3];</data>
    </edge>
    <edge id="e3338" source="org.codehaus.jparsec.ParsersTest.testConstant()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1386-1570;48-51;3-3/1386-1570;48-51;3-3];</data>
    </edge>
    <edge id="e3339" source="org.codehaus.jparsec.ParsersTest.testConstant()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1386-1570;48-51;3-3];</data>
    </edge>
    <edge id="e3340" source="org.codehaus.jparsec.ParsersTest.testConstant()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1386-1570;48-51;3-3];</data>
    </edge>
    <edge id="e3341" source="org.codehaus.jparsec.ParsersTest.testEof()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1136-1379;40-46;3-3/1136-1379;40-46;3-3];</data>
    </edge>
    <edge id="e3342" source="org.codehaus.jparsec.ParsersTest.testEof()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1136-1379;40-46;3-3/1136-1379;40-46;3-3];</data>
    </edge>
    <edge id="e3343" source="org.codehaus.jparsec.ParsersTest.testEof()" target="org.codehaus.jparsec.Parsers.eof(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1136-1379;40-46;3-3/1136-1379;40-46;3-3];</data>
    </edge>
    <edge id="e3344" source="org.codehaus.jparsec.ParsersTest.testEof()" target="org.codehaus.jparsec.Parsers#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1136-1379;40-46;3-3/1136-1379;40-46;3-3/1136-1379;40-46;3-3];</data>
    </edge>
    <edge id="e3345" source="org.codehaus.jparsec.ParsersTest.testExpect()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17076-17232;452-455;3-3];</data>
    </edge>
    <edge id="e3346" source="org.codehaus.jparsec.ParsersTest.testExpect()" target="org.codehaus.jparsec.Parsers.expect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17076-17232;452-455;3-3/17076-17232;452-455;3-3];</data>
    </edge>
    <edge id="e3347" source="org.codehaus.jparsec.ParsersTest.testFail()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7012-7154;199-202;3-3];</data>
    </edge>
    <edge id="e3348" source="org.codehaus.jparsec.ParsersTest.testFail()" target="org.codehaus.jparsec.Parsers.fail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7012-7154;199-202;3-3/7012-7154;199-202;3-3];</data>
    </edge>
    <edge id="e3349" source="org.codehaus.jparsec.ParsersTest.testIndex()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21386-21529;571-574;3-3];</data>
    </edge>
    <edge id="e3350" source="org.codehaus.jparsec.ParsersTest.testIndex()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21386-21529;571-574;3-3];</data>
    </edge>
    <edge id="e3351" source="org.codehaus.jparsec.ParsersTest.testIndex()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21386-21529;571-574;3-3];</data>
    </edge>
    <edge id="e3352" source="org.codehaus.jparsec.ParsersTest.testIndex()" target="org.codehaus.jparsec.Parsers#INDEX">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21386-21529;571-574;3-3/21386-21529;571-574;3-3];</data>
    </edge>
    <edge id="e3353" source="org.codehaus.jparsec.ParsersTest.testList()" target="org.codehaus.jparsec.Parsers.list(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6665-7005;190-197;3-3];</data>
    </edge>
    <edge id="e3354" source="org.codehaus.jparsec.ParsersTest.testList()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6665-7005;190-197;3-3/6665-7005;190-197;3-3];</data>
    </edge>
    <edge id="e3355" source="org.codehaus.jparsec.ParsersTest.testList()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6665-7005;190-197;3-3];</data>
    </edge>
    <edge id="e3356" source="org.codehaus.jparsec.ParsersTest.testList()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[6665-7005;190-197;3-3/6665-7005;190-197;3-3];</data>
    </edge>
    <edge id="e3357" source="org.codehaus.jparsec.ParsersTest.testLonger()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3];</data>
    </edge>
    <edge id="e3358" source="org.codehaus.jparsec.ParsersTest.testLonger()" target="org.codehaus.jparsec.Parsers.longer(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3];</data>
    </edge>
    <edge id="e3359" source="org.codehaus.jparsec.ParsersTest.testLonger()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3];</data>
    </edge>
    <edge id="e3360" source="org.codehaus.jparsec.ParsersTest.testLonger()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3/14162-14579;386-392;3-3];</data>
    </edge>
    <edge id="e3361" source="org.codehaus.jparsec.ParsersTest.testLongest()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3];</data>
    </edge>
    <edge id="e3362" source="org.codehaus.jparsec.ParsersTest.testLongest()" target="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3];</data>
    </edge>
    <edge id="e3363" source="org.codehaus.jparsec.ParsersTest.testLongest()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3];</data>
    </edge>
    <edge id="e3364" source="org.codehaus.jparsec.ParsersTest.testLongest()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3/15449-16013;416-424;3-3];</data>
    </edge>
    <edge id="e3365" source="org.codehaus.jparsec.ParsersTest.testLongest()" target="org.codehaus.jparsec.Parsers.longest(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15449-16013;416-424;3-3];</data>
    </edge>
    <edge id="e3366" source="org.codehaus.jparsec.ParsersTest.testLongest_0Parser()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15181-15271;406-408;3-3];</data>
    </edge>
    <edge id="e3367" source="org.codehaus.jparsec.ParsersTest.testLongest_0Parser()" target="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15181-15271;406-408;3-3];</data>
    </edge>
    <edge id="e3368" source="org.codehaus.jparsec.ParsersTest.testLongest_1Parser()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15278-15442;410-414;3-3];</data>
    </edge>
    <edge id="e3369" source="org.codehaus.jparsec.ParsersTest.testLongest_1Parser()" target="org.codehaus.jparsec.Parsers.longest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[15278-15442;410-414;3-3];</data>
    </edge>
    <edge id="e3370" source="org.codehaus.jparsec.ParsersTest.testNever()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[863-992;31-34;3-3];</data>
    </edge>
    <edge id="e3371" source="org.codehaus.jparsec.ParsersTest.testNever()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[863-992;31-34;3-3/863-992;31-34;3-3];</data>
    </edge>
    <edge id="e3372" source="org.codehaus.jparsec.ParsersTest.testOr_0Parser()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8166-8246;232-234;3-3];</data>
    </edge>
    <edge id="e3373" source="org.codehaus.jparsec.ParsersTest.testOr_0Parser()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8166-8246;232-234;3-3];</data>
    </edge>
    <edge id="e3374" source="org.codehaus.jparsec.ParsersTest.testOr_10Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[13325-14155;365-384;3-3/13325-14155;365-384;3-3];</data>
    </edge>
    <edge id="e3375" source="org.codehaus.jparsec.ParsersTest.testOr_10Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3];</data>
    </edge>
    <edge id="e3376" source="org.codehaus.jparsec.ParsersTest.testOr_10Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3/13325-14155;365-384;3-3];</data>
    </edge>
    <edge id="e3377" source="org.codehaus.jparsec.ParsersTest.testOr_10Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[13325-14155;365-384;3-3];</data>
    </edge>
    <edge id="e3378" source="org.codehaus.jparsec.ParsersTest.testOr_1Parser()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8253-8407;236-240;3-3];</data>
    </edge>
    <edge id="e3379" source="org.codehaus.jparsec.ParsersTest.testOr_1Parser()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8253-8407;236-240;3-3];</data>
    </edge>
    <edge id="e3380" source="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3];</data>
    </edge>
    <edge id="e3381" source="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3];</data>
    </edge>
    <edge id="e3382" source="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3];</data>
    </edge>
    <edge id="e3383" source="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3/8916-9357;253-261;3-3];</data>
    </edge>
    <edge id="e3384" source="org.codehaus.jparsec.ParsersTest.testOr_2Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8916-9357;253-261;3-3/8916-9357;253-261;3-3];</data>
    </edge>
    <edge id="e3385" source="org.codehaus.jparsec.ParsersTest.testOr_3Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9364-9713;263-270;3-3/9364-9713;263-270;3-3];</data>
    </edge>
    <edge id="e3386" source="org.codehaus.jparsec.ParsersTest.testOr_3Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9364-9713;263-270;3-3/9364-9713;263-270;3-3/9364-9713;263-270;3-3/9364-9713;263-270;3-3/9364-9713;263-270;3-3];</data>
    </edge>
    <edge id="e3387" source="org.codehaus.jparsec.ParsersTest.testOr_3Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9364-9713;263-270;3-3/9364-9713;263-270;3-3/9364-9713;263-270;3-3/9364-9713;263-270;3-3];</data>
    </edge>
    <edge id="e3388" source="org.codehaus.jparsec.ParsersTest.testOr_3Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9364-9713;263-270;3-3];</data>
    </edge>
    <edge id="e3389" source="org.codehaus.jparsec.ParsersTest.testOr_4Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9720-10139;272-281;3-3/9720-10139;272-281;3-3];</data>
    </edge>
    <edge id="e3390" source="org.codehaus.jparsec.ParsersTest.testOr_4Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3];</data>
    </edge>
    <edge id="e3391" source="org.codehaus.jparsec.ParsersTest.testOr_4Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3/9720-10139;272-281;3-3];</data>
    </edge>
    <edge id="e3392" source="org.codehaus.jparsec.ParsersTest.testOr_4Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[9720-10139;272-281;3-3];</data>
    </edge>
    <edge id="e3393" source="org.codehaus.jparsec.ParsersTest.testOr_5Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10146-10647;283-295;3-3/10146-10647;283-295;3-3];</data>
    </edge>
    <edge id="e3394" source="org.codehaus.jparsec.ParsersTest.testOr_5Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3];</data>
    </edge>
    <edge id="e3395" source="org.codehaus.jparsec.ParsersTest.testOr_5Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3/10146-10647;283-295;3-3];</data>
    </edge>
    <edge id="e3396" source="org.codehaus.jparsec.ParsersTest.testOr_5Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10146-10647;283-295;3-3];</data>
    </edge>
    <edge id="e3397" source="org.codehaus.jparsec.ParsersTest.testOr_6Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10654-11217;297-310;3-3/10654-11217;297-310;3-3];</data>
    </edge>
    <edge id="e3398" source="org.codehaus.jparsec.ParsersTest.testOr_6Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3];</data>
    </edge>
    <edge id="e3399" source="org.codehaus.jparsec.ParsersTest.testOr_6Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3/10654-11217;297-310;3-3];</data>
    </edge>
    <edge id="e3400" source="org.codehaus.jparsec.ParsersTest.testOr_6Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[10654-11217;297-310;3-3];</data>
    </edge>
    <edge id="e3401" source="org.codehaus.jparsec.ParsersTest.testOr_7Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11224-11850;312-326;3-3/11224-11850;312-326;3-3];</data>
    </edge>
    <edge id="e3402" source="org.codehaus.jparsec.ParsersTest.testOr_7Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3];</data>
    </edge>
    <edge id="e3403" source="org.codehaus.jparsec.ParsersTest.testOr_7Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3/11224-11850;312-326;3-3];</data>
    </edge>
    <edge id="e3404" source="org.codehaus.jparsec.ParsersTest.testOr_7Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11224-11850;312-326;3-3];</data>
    </edge>
    <edge id="e3405" source="org.codehaus.jparsec.ParsersTest.testOr_8Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11857-12553;328-344;3-3/11857-12553;328-344;3-3];</data>
    </edge>
    <edge id="e3406" source="org.codehaus.jparsec.ParsersTest.testOr_8Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3];</data>
    </edge>
    <edge id="e3407" source="org.codehaus.jparsec.ParsersTest.testOr_8Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3/11857-12553;328-344;3-3];</data>
    </edge>
    <edge id="e3408" source="org.codehaus.jparsec.ParsersTest.testOr_8Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[11857-12553;328-344;3-3];</data>
    </edge>
    <edge id="e3409" source="org.codehaus.jparsec.ParsersTest.testOr_9Parsers()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[12560-13318;346-363;3-3/12560-13318;346-363;3-3];</data>
    </edge>
    <edge id="e3410" source="org.codehaus.jparsec.ParsersTest.testOr_9Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3];</data>
    </edge>
    <edge id="e3411" source="org.codehaus.jparsec.ParsersTest.testOr_9Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3/12560-13318;346-363;3-3];</data>
    </edge>
    <edge id="e3412" source="org.codehaus.jparsec.ParsersTest.testOr_9Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[12560-13318;346-363;3-3];</data>
    </edge>
    <edge id="e3413" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.Parsers.or(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3414" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3415" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3416" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.Parsers.or(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3417" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3/8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3418" source="org.codehaus.jparsec.ParsersTest.testOr_withIterable()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[8414-8909;242-251;3-3/8414-8909;242-251;3-3];</data>
    </edge>
    <edge id="e3419" source="org.codehaus.jparsec.ParsersTest.testPair()" target="org.codehaus.jparsec.Parsers.pair(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3];</data>
    </edge>
    <edge id="e3420" source="org.codehaus.jparsec.ParsersTest.testPair()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3/4550-4818;135-141;3-3];</data>
    </edge>
    <edge id="e3421" source="org.codehaus.jparsec.ParsersTest.testPair()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3];</data>
    </edge>
    <edge id="e3422" source="org.codehaus.jparsec.ParsersTest.testPair()" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3];</data>
    </edge>
    <edge id="e3423" source="org.codehaus.jparsec.ParsersTest.testPair()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4550-4818;135-141;3-3/4550-4818;135-141;3-3];</data>
    </edge>
    <edge id="e3424" source="org.codehaus.jparsec.ParsersTest.testPlus_0Parser()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7161-7245;204-206;3-3];</data>
    </edge>
    <edge id="e3425" source="org.codehaus.jparsec.ParsersTest.testPlus_0Parser()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7161-7245;204-206;3-3];</data>
    </edge>
    <edge id="e3426" source="org.codehaus.jparsec.ParsersTest.testPlus_1Parser()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7252-7410;208-212;3-3];</data>
    </edge>
    <edge id="e3427" source="org.codehaus.jparsec.ParsersTest.testPlus_1Parser()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7252-7410;208-212;3-3];</data>
    </edge>
    <edge id="e3428" source="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3/7417-7793;214-221;3-3/7417-7793;214-221;3-3];</data>
    </edge>
    <edge id="e3429" source="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3/7417-7793;214-221;3-3/7417-7793;214-221;3-3];</data>
    </edge>
    <edge id="e3430" source="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3/7417-7793;214-221;3-3];</data>
    </edge>
    <edge id="e3431" source="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3/7417-7793;214-221;3-3];</data>
    </edge>
    <edge id="e3432" source="org.codehaus.jparsec.ParsersTest.testPlus_2Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7417-7793;214-221;3-3/7417-7793;214-221;3-3/7417-7793;214-221;3-3];</data>
    </edge>
    <edge id="e3433" source="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3/7800-8159;223-230;3-3];</data>
    </edge>
    <edge id="e3434" source="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3/7800-8159;223-230;3-3/7800-8159;223-230;3-3/7800-8159;223-230;3-3/7800-8159;223-230;3-3];</data>
    </edge>
    <edge id="e3435" source="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3/7800-8159;223-230;3-3/7800-8159;223-230;3-3];</data>
    </edge>
    <edge id="e3436" source="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3];</data>
    </edge>
    <edge id="e3437" source="org.codehaus.jparsec.ParsersTest.testPlus_3Parsers()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[7800-8159;223-230;3-3];</data>
    </edge>
    <edge id="e3438" source="org.codehaus.jparsec.ParsersTest.testRunnable()" target="org.codehaus.jparsec.easymock.BaseMockTest.mock(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3];</data>
    </edge>
    <edge id="e3439" source="org.codehaus.jparsec.ParsersTest.testRunnable()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3];</data>
    </edge>
    <edge id="e3440" source="org.codehaus.jparsec.ParsersTest.testRunnable()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3];</data>
    </edge>
    <edge id="e3441" source="org.codehaus.jparsec.ParsersTest.testRunnable()" target="org.codehaus.jparsec.Parsers.runnable(java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3/1577-1822;53-59;3-3];</data>
    </edge>
    <edge id="e3442" source="org.codehaus.jparsec.ParsersTest.testRunnable()" target="java.lang.Runnable#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1577-1822;53-59;3-3];</data>
    </edge>
    <edge id="e3443" source="org.codehaus.jparsec.ParsersTest.testSequence()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3461-3815;103-111;3-3];</data>
    </edge>
    <edge id="e3444" source="org.codehaus.jparsec.ParsersTest.testSequence()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3461-3815;103-111;3-3/3461-3815;103-111;3-3/3461-3815;103-111;3-3];</data>
    </edge>
    <edge id="e3445" source="org.codehaus.jparsec.ParsersTest.testSequence()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3461-3815;103-111;3-3];</data>
    </edge>
    <edge id="e3446" source="org.codehaus.jparsec.ParsersTest.testSequence()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3461-3815;103-111;3-3/3461-3815;103-111;3-3/3461-3815;103-111;3-3];</data>
    </edge>
    <edge id="e3447" source="org.codehaus.jparsec.ParsersTest.testSequence_0Parser()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4181-4348;123-127;3-3];</data>
    </edge>
    <edge id="e3448" source="org.codehaus.jparsec.ParsersTest.testSequence_0Parser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4181-4348;123-127;3-3];</data>
    </edge>
    <edge id="e3449" source="org.codehaus.jparsec.ParsersTest.testSequence_1Parser()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4355-4543;129-133;3-3];</data>
    </edge>
    <edge id="e3450" source="org.codehaus.jparsec.ParsersTest.testSequence_1Parser()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4355-4543;129-133;3-3];</data>
    </edge>
    <edge id="e3451" source="org.codehaus.jparsec.ParsersTest.testSequence_1Parser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4355-4543;129-133;3-3];</data>
    </edge>
    <edge id="e3452" source="org.codehaus.jparsec.ParsersTest.testSequence_2Parsers()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1829-2122;61-67;3-3];</data>
    </edge>
    <edge id="e3453" source="org.codehaus.jparsec.ParsersTest.testSequence_2Parsers()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1829-2122;61-67;3-3/1829-2122;61-67;3-3];</data>
    </edge>
    <edge id="e3454" source="org.codehaus.jparsec.ParsersTest.testSequence_2Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1829-2122;61-67;3-3];</data>
    </edge>
    <edge id="e3455" source="org.codehaus.jparsec.ParsersTest.testSequence_2Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[1829-2122;61-67;3-3/1829-2122;61-67;3-3];</data>
    </edge>
    <edge id="e3456" source="org.codehaus.jparsec.ParsersTest.testSequence_3Parsers()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2129-2495;69-77;3-3];</data>
    </edge>
    <edge id="e3457" source="org.codehaus.jparsec.ParsersTest.testSequence_3Parsers()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2129-2495;69-77;3-3/2129-2495;69-77;3-3/2129-2495;69-77;3-3];</data>
    </edge>
    <edge id="e3458" source="org.codehaus.jparsec.ParsersTest.testSequence_3Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2129-2495;69-77;3-3];</data>
    </edge>
    <edge id="e3459" source="org.codehaus.jparsec.ParsersTest.testSequence_3Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2129-2495;69-77;3-3/2129-2495;69-77;3-3/2129-2495;69-77;3-3];</data>
    </edge>
    <edge id="e3460" source="org.codehaus.jparsec.ParsersTest.testSequence_4Parsers()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2502-2936;79-88;3-3];</data>
    </edge>
    <edge id="e3461" source="org.codehaus.jparsec.ParsersTest.testSequence_4Parsers()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2502-2936;79-88;3-3/2502-2936;79-88;3-3/2502-2936;79-88;3-3/2502-2936;79-88;3-3];</data>
    </edge>
    <edge id="e3462" source="org.codehaus.jparsec.ParsersTest.testSequence_4Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2502-2936;79-88;3-3];</data>
    </edge>
    <edge id="e3463" source="org.codehaus.jparsec.ParsersTest.testSequence_4Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2502-2936;79-88;3-3/2502-2936;79-88;3-3/2502-2936;79-88;3-3/2502-2936;79-88;3-3];</data>
    </edge>
    <edge id="e3464" source="org.codehaus.jparsec.ParsersTest.testSequence_5Parsers()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2943-3454;90-101;3-3];</data>
    </edge>
    <edge id="e3465" source="org.codehaus.jparsec.ParsersTest.testSequence_5Parsers()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3];</data>
    </edge>
    <edge id="e3466" source="org.codehaus.jparsec.ParsersTest.testSequence_5Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2943-3454;90-101;3-3];</data>
    </edge>
    <edge id="e3467" source="org.codehaus.jparsec.ParsersTest.testSequence_5Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3/2943-3454;90-101;3-3];</data>
    </edge>
    <edge id="e3468" source="org.codehaus.jparsec.ParsersTest.testSequence_withIterable()" target="org.codehaus.jparsec.Parsers.sequence(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3822-4174;113-121;3-3];</data>
    </edge>
    <edge id="e3469" source="org.codehaus.jparsec.ParsersTest.testSequence_withIterable()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3822-4174;113-121;3-3/3822-4174;113-121;3-3];</data>
    </edge>
    <edge id="e3470" source="org.codehaus.jparsec.ParsersTest.testSequence_withIterable()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3822-4174;113-121;3-3];</data>
    </edge>
    <edge id="e3471" source="org.codehaus.jparsec.ParsersTest.testSequence_withIterable()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[3822-4174;113-121;3-3/3822-4174;113-121;3-3];</data>
    </edge>
    <edge id="e3472" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3473" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3474" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3475" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3/17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3476" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3477" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2()" target="org.codehaus.jparsec.ParsersTest#map2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17466-17733;463-469;3-3/17466-17733;463-469;3-3/17466-17733;463-469;3-3];</data>
    </edge>
    <edge id="e3478" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3];</data>
    </edge>
    <edge id="e3479" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3];</data>
    </edge>
    <edge id="e3480" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3/17740-17957;471-476;3-3];</data>
    </edge>
    <edge id="e3481" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3/17740-17957;471-476;3-3];</data>
    </edge>
    <edge id="e3482" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap2_fails()" target="org.codehaus.jparsec.ParsersTest#map2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17740-17957;471-476;3-3];</data>
    </edge>
    <edge id="e3483" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.functors.Map3.map(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3484" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3485" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3486" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3/18025-18311;479-485;3-3/18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3487" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3488" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3()" target="org.codehaus.jparsec.ParsersTest#map3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18025-18311;479-485;3-3/18025-18311;479-485;3-3/18025-18311;479-485;3-3];</data>
    </edge>
    <edge id="e3489" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3];</data>
    </edge>
    <edge id="e3490" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3];</data>
    </edge>
    <edge id="e3491" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3/18318-18589;487-493;3-3/18318-18589;487-493;3-3];</data>
    </edge>
    <edge id="e3492" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3/18318-18589;487-493;3-3/18318-18589;487-493;3-3];</data>
    </edge>
    <edge id="e3493" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap3_fails()" target="org.codehaus.jparsec.ParsersTest#map3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18318-18589;487-493;3-3];</data>
    </edge>
    <edge id="e3494" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.functors.Map4.map(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3495" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3496" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3497" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3/18668-18981;496-503;3-3/18668-18981;496-503;3-3/18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3498" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3499" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4()" target="org.codehaus.jparsec.ParsersTest#map4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18668-18981;496-503;3-3/18668-18981;496-503;3-3/18668-18981;496-503;3-3];</data>
    </edge>
    <edge id="e3500" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3];</data>
    </edge>
    <edge id="e3501" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3];</data>
    </edge>
    <edge id="e3502" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3/18988-19324;505-513;3-3/18988-19324;505-513;3-3/18988-19324;505-513;3-3];</data>
    </edge>
    <edge id="e3503" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3/18988-19324;505-513;3-3/18988-19324;505-513;3-3/18988-19324;505-513;3-3];</data>
    </edge>
    <edge id="e3504" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap4_fails()" target="org.codehaus.jparsec.ParsersTest#map4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[18988-19324;505-513;3-3];</data>
    </edge>
    <edge id="e3505" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.functors.Map5.map(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3506" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3507" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3508" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3/19414-19746;516-523;3-3/19414-19746;516-523;3-3/19414-19746;516-523;3-3/19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3509" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3510" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5()" target="org.codehaus.jparsec.ParsersTest#map5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19414-19746;516-523;3-3/19414-19746;516-523;3-3/19414-19746;516-523;3-3];</data>
    </edge>
    <edge id="e3511" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3];</data>
    </edge>
    <edge id="e3512" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3];</data>
    </edge>
    <edge id="e3513" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3];</data>
    </edge>
    <edge id="e3514" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3/19753-20148;525-534;3-3];</data>
    </edge>
    <edge id="e3515" source="org.codehaus.jparsec.ParsersTest.testSequence_withMap5_fails()" target="org.codehaus.jparsec.ParsersTest#map5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[19753-20148;525-534;3-3];</data>
    </edge>
    <edge id="e3516" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3517" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.Parsers.shorter(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3518" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3519" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3520" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3521" source="org.codehaus.jparsec.ParsersTest.testShorter()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3/14586-15174;394-404;3-3];</data>
    </edge>
    <edge id="e3522" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3523" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3524" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3525" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3526" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.Parser.followedBy(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3527" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3/16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3528" source="org.codehaus.jparsec.ParsersTest.testShortest()" target="org.codehaus.jparsec.Parsers.shortest(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16292-17069;436-450;3-3];</data>
    </edge>
    <edge id="e3529" source="org.codehaus.jparsec.ParsersTest.testShortest_0Parser()" target="org.codehaus.jparsec.Parsers.never()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16020-16112;426-428;3-3];</data>
    </edge>
    <edge id="e3530" source="org.codehaus.jparsec.ParsersTest.testShortest_0Parser()" target="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16020-16112;426-428;3-3];</data>
    </edge>
    <edge id="e3531" source="org.codehaus.jparsec.ParsersTest.testShortest_1Parser()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16119-16285;430-434;3-3];</data>
    </edge>
    <edge id="e3532" source="org.codehaus.jparsec.ParsersTest.testShortest_1Parser()" target="org.codehaus.jparsec.Parsers.shortest(org.codehaus.jparsec.Parser[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[16119-16285;430-434;3-3];</data>
    </edge>
    <edge id="e3533" source="org.codehaus.jparsec.ParsersTest.testToArray()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21536-21858;576-584;3-3/21536-21858;576-584;3-3];</data>
    </edge>
    <edge id="e3534" source="org.codehaus.jparsec.ParsersTest.testToArray()" target="org.codehaus.jparsec.Parsers.toArray(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21536-21858;576-584;3-3];</data>
    </edge>
    <edge id="e3535" source="org.codehaus.jparsec.ParsersTest.testToArray()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21536-21858;576-584;3-3];</data>
    </edge>
    <edge id="e3536" source="org.codehaus.jparsec.ParsersTest.testToArrayWithIteration()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21865-22213;586-594;3-3/21865-22213;586-594;3-3];</data>
    </edge>
    <edge id="e3537" source="org.codehaus.jparsec.ParsersTest.testToArrayWithIteration()" target="org.codehaus.jparsec.Parsers.toArrayWithIteration(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21865-22213;586-594;3-3];</data>
    </edge>
    <edge id="e3538" source="org.codehaus.jparsec.ParsersTest.testToArrayWithIteration()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[21865-22213;586-594;3-3];</data>
    </edge>
    <edge id="e3539" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3540" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3541" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3542" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3543" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3544" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3545" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3546" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3547" source="org.codehaus.jparsec.ParsersTest.testToken()" target="org.codehaus.jparsec.ParsersTest#fromToken">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20192-20507;537-544;3-3/20192-20507;537-544;3-3/20192-20507;537-544;3-3];</data>
    </edge>
    <edge id="e3548" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3549" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3550" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3551" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3552" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3553" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3554" source="org.codehaus.jparsec.ParsersTest.testTokenType()" target="java.lang.Character#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20768-21044;554-559;3-3];</data>
    </edge>
    <edge id="e3555" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3556" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3557" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.easymock.BaseMockTest.replay()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3558" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3559" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3560" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3561" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3562" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.Parser.times(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3563" source="org.codehaus.jparsec.ParsersTest.testToken_fails()" target="org.codehaus.jparsec.ParsersTest#fromToken">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[20511-20761;545-552;3-3/20511-20761;545-552;3-3];</data>
    </edge>
    <edge id="e3564" source="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()" target="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3];</data>
    </edge>
    <edge id="e3565" source="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3/4825-5104;143-149;3-3];</data>
    </edge>
    <edge id="e3566" source="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3];</data>
    </edge>
    <edge id="e3567" source="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()" target="org.codehaus.jparsec.functors.Tuples.pair(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3];</data>
    </edge>
    <edge id="e3568" source="org.codehaus.jparsec.ParsersTest.testTuple_2Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[4825-5104;143-149;3-3/4825-5104;143-149;3-3];</data>
    </edge>
    <edge id="e3569" source="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()" target="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3];</data>
    </edge>
    <edge id="e3570" source="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3/5111-5453;151-158;3-3/5111-5453;151-158;3-3];</data>
    </edge>
    <edge id="e3571" source="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3];</data>
    </edge>
    <edge id="e3572" source="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3];</data>
    </edge>
    <edge id="e3573" source="org.codehaus.jparsec.ParsersTest.testTuple_3Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5111-5453;151-158;3-3/5111-5453;151-158;3-3/5111-5453;151-158;3-3];</data>
    </edge>
    <edge id="e3574" source="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()" target="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3];</data>
    </edge>
    <edge id="e3575" source="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3/5460-5865;160-168;3-3/5460-5865;160-168;3-3/5460-5865;160-168;3-3];</data>
    </edge>
    <edge id="e3576" source="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3];</data>
    </edge>
    <edge id="e3577" source="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3];</data>
    </edge>
    <edge id="e3578" source="org.codehaus.jparsec.ParsersTest.testTuple_4Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5460-5865;160-168;3-3/5460-5865;160-168;3-3/5460-5865;160-168;3-3/5460-5865;160-168;3-3];</data>
    </edge>
    <edge id="e3579" source="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()" target="org.codehaus.jparsec.Parsers.tuple(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3];</data>
    </edge>
    <edge id="e3580" source="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3];</data>
    </edge>
    <edge id="e3581" source="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3];</data>
    </edge>
    <edge id="e3582" source="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()" target="org.codehaus.jparsec.functors.Tuples.tuple(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3];</data>
    </edge>
    <edge id="e3583" source="org.codehaus.jparsec.ParsersTest.testTuple_5Parsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3/5872-6350;170-180;3-3];</data>
    </edge>
    <edge id="e3584" source="org.codehaus.jparsec.ParsersTest.testUnexpected()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17239-17409;457-460;3-3];</data>
    </edge>
    <edge id="e3585" source="org.codehaus.jparsec.ParsersTest.testUnexpected()" target="org.codehaus.jparsec.Parsers.unexpected(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ParsersTest.java;[17239-17409;457-460;3-3/17239-17409;457-460;3-3];</data>
    </edge>
    <edge id="e3586" source="org.codehaus.jparsec.PatternScanner(java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1438-1537;29-32;3-3];</data>
    </edge>
    <edge id="e3587" source="org.codehaus.jparsec.PatternScanner#name" target="org.codehaus.jparsec.PatternScanner(java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1438-1537;29-32;3-3];</data>
    </edge>
    <edge id="e3588" source="org.codehaus.jparsec.PatternScanner#pattern" target="org.codehaus.jparsec.PatternScanner(java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1438-1537;29-32;3-3];</data>
    </edge>
    <edge id="e3589" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.characters()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3590" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.pattern.Pattern.match(java.lang.CharSequence,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3591" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.expected(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3592" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.next(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3593" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3594" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.PatternScanner#pattern">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3595" source="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.PatternScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3596" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.PatternScanner.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1542-1868;34-45;3-3];</data>
    </edge>
    <edge id="e3597" source="org.codehaus.jparsec.PatternScanner.toString()" target="org.codehaus.jparsec.PatternScanner#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PatternScanner.java;[1875-1931;47-49;3-3];</data>
    </edge>
    <edge id="e3598" source="org.codehaus.jparsec.PeekParser(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1300-1359;21-23;3-3];</data>
    </edge>
    <edge id="e3599" source="org.codehaus.jparsec.PeekParser#parser" target="org.codehaus.jparsec.PeekParser(org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1300-1359;21-23;3-3];</data>
    </edge>
    <edge id="e3600" source="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
    </edge>
    <edge id="e3601" source="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.setAt(int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
    </edge>
    <edge id="e3602" source="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
    </edge>
    <edge id="e3603" source="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
    </edge>
    <edge id="e3604" source="org.codehaus.jparsec.PeekParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.PeekParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/PeekParser.java;[1364-1543;25-31;3-3];</data>
    </edge>
    <edge id="e3605" source="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1418-1539;25-27;3-3];</data>
    </edge>
    <edge id="e3606" source="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.ListFactories.arrayListFactory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1418-1539;25-27;3-3];</data>
    </edge>
    <edge id="e3607" source="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1544-1715;29-33;3-3];</data>
    </edge>
    <edge id="e3608" source="org.codehaus.jparsec.RepeatAtLeastParser#parser" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1544-1715;29-33;3-3];</data>
    </edge>
    <edge id="e3609" source="org.codehaus.jparsec.RepeatAtLeastParser#min" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1544-1715;29-33;3-3];</data>
    </edge>
    <edge id="e3610" source="org.codehaus.jparsec.RepeatAtLeastParser#listFactory" target="org.codehaus.jparsec.RepeatAtLeastParser(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1544-1715;29-33;3-3];</data>
    </edge>
    <edge id="e3611" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ListFactory.newList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3612" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3613" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3614" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatAtLeastParser#listFactory">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3615" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatAtLeastParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3/1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3616" source="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatAtLeastParser#min">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3617" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.RepeatAtLeastParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatAtLeastParser.java;[1720-2016;35-44;3-3];</data>
    </edge>
    <edge id="e3618" source="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int)" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1443-1576;26-28;3-3];</data>
    </edge>
    <edge id="e3619" source="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int)" target="org.codehaus.jparsec.ListFactories.arrayListFactory()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1443-1576;26-28;3-3];</data>
    </edge>
    <edge id="e3620" source="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
    </edge>
    <edge id="e3621" source="org.codehaus.jparsec.RepeatTimesParser#parser" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
    </edge>
    <edge id="e3622" source="org.codehaus.jparsec.RepeatTimesParser#min" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
    </edge>
    <edge id="e3623" source="org.codehaus.jparsec.RepeatTimesParser#max" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
    </edge>
    <edge id="e3624" source="org.codehaus.jparsec.RepeatTimesParser#listFactory" target="org.codehaus.jparsec.RepeatTimesParser(org.codehaus.jparsec.Parser,int,int,org.codehaus.jparsec.ListFactory)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1581-1786;30-36;3-3];</data>
    </edge>
    <edge id="e3625" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ListFactory.newList()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3626" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3627" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,java.util.Collection,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3628" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatTimesParser#listFactory">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3629" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatTimesParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3/1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3630" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatTimesParser#min">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3/1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3631" source="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.RepeatTimesParser#max">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3632" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.RepeatTimesParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/RepeatTimesParser.java;[1791-2106;38-47;3-3];</data>
    </edge>
    <edge id="e3633" source="org.codehaus.jparsec.ReturnSourceParser(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1415-1482;26-28;3-3];</data>
    </edge>
    <edge id="e3634" source="org.codehaus.jparsec.ReturnSourceParser#parser" target="org.codehaus.jparsec.ReturnSourceParser(org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1415-1482;26-28;3-3];</data>
    </edge>
    <edge id="e3635" source="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3/1487-1719;30-37;3-3];</data>
    </edge>
    <edge id="e3636" source="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3];</data>
    </edge>
    <edge id="e3637" source="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ReturnSourceParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3];</data>
    </edge>
    <edge id="e3638" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3];</data>
    </edge>
    <edge id="e3639" source="org.codehaus.jparsec.ReturnSourceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ReturnSourceParser.java;[1487-1719;30-37;3-3];</data>
    </edge>
    <edge id="e3640" source="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,int,org.codehaus.jparsec.SourceLocator,java.lang.Object)" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,java.lang.Object,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1522-2074;32-44;3-3];</data>
    </edge>
    <edge id="e3641" source="org.codehaus.jparsec.ScannerState#end" target="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,int,org.codehaus.jparsec.SourceLocator,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1522-2074;32-44;3-3];</data>
    </edge>
    <edge id="e3642" source="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,org.codehaus.jparsec.SourceLocator)" target="org.codehaus.jparsec.ParseContext(java.lang.CharSequence,int,java.lang.String,org.codehaus.jparsec.SourceLocator)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1355-1515;27-30;3-3];</data>
    </edge>
    <edge id="e3643" source="org.codehaus.jparsec.ScannerState#end" target="org.codehaus.jparsec.ScannerState(java.lang.String,java.lang.CharSequence,int,org.codehaus.jparsec.SourceLocator)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[1355-1515;27-30;3-3];</data>
    </edge>
    <edge id="e3644" source="org.codehaus.jparsec.ScannerState.isEof()" target="org.codehaus.jparsec.ScannerState#end">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2148-2200;50-52;3-3];</data>
    </edge>
    <edge id="e3645" source="org.codehaus.jparsec.ScannerState.isEof()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2148-2200;50-52;3-3];</data>
    </edge>
    <edge id="e3646" source="org.codehaus.jparsec.ScannerState.peekChar()" target="org.codehaus.jparsec.ParseContext#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2081-2141;46-48;3-3];</data>
    </edge>
    <edge id="e3647" source="org.codehaus.jparsec.ScannerState.peekChar()" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2081-2141;46-48;3-3];</data>
    </edge>
    <edge id="e3648" source="org.codehaus.jparsec.ScannerState.characters()" target="org.codehaus.jparsec.ParseContext#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2398-2457;63-65;3-3];</data>
    </edge>
    <edge id="e3649" source="org.codehaus.jparsec.ScannerState.getInputName(int)" target="org.codehaus.jparsec.ScannerState#end">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2265-2391;58-61;3-3];</data>
    </edge>
    <edge id="e3650" source="org.codehaus.jparsec.ScannerState.getInputName(int)" target="org.codehaus.jparsec.ParseContext#EOF">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2265-2391;58-61;3-3];</data>
    </edge>
    <edge id="e3651" source="org.codehaus.jparsec.ScannerState.getInputName(int)" target="org.codehaus.jparsec.ParseContext#source">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ScannerState.java;[2265-2391;58-61;3-3];</data>
    </edge>
    <edge id="e3652" source="org.codehaus.jparsec.Scanners#WHITESPACES" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[1891-2089;36-38;3-75];</data>
    </edge>
    <edge id="e3653" source="org.codehaus.jparsec.Scanners#ANY_CHAR" target="org.codehaus.jparsec.AnyCharScanner(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2096-2344;40-44;3-82];</data>
    </edge>
    <edge id="e3654" source="org.codehaus.jparsec.Scanners#JAVA_LINE_COMMENT" target="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2351-2471;46-47;3-73];</data>
    </edge>
    <edge id="e3655" source="org.codehaus.jparsec.Scanners#SQL_LINE_COMMENT" target="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2478-2592;49-50;3-72];</data>
    </edge>
    <edge id="e3656" source="org.codehaus.jparsec.Scanners#HASKELL_LINE_COMMENT" target="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2599-2734;52-53;3-76];</data>
    </edge>
    <edge id="e3657" source="org.codehaus.jparsec.Scanners#JAVA_BLOCK_COMMENTED" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2741-2857;55-56;3-60];</data>
    </edge>
    <edge id="e3658" source="org.codehaus.jparsec.Scanners#JAVA_BLOCK_COMMENT" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[2864-3041;58-60;3-73];</data>
    </edge>
    <edge id="e3659" source="org.codehaus.jparsec.Scanners#SQL_BLOCK_COMMENT" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[3048-3219;62-64;3-73];</data>
    </edge>
    <edge id="e3660" source="org.codehaus.jparsec.Scanners#HASKELL_BLOCK_COMMENT" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[3226-3445;66-68;3-89];</data>
    </edge>
    <edge id="e3661" source="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_STRING" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[3452-3798;70-76;3-87];</data>
    </edge>
    <edge id="e3662" source="org.codehaus.jparsec.Scanners#DOUBLE_QUOTE_STRING" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[3803-4102;78-84;3-16];</data>
    </edge>
    <edge id="e3663" source="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_CHAR" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[4109-4358;86-89;3-16];</data>
    </edge>
    <edge id="e3664" source="org.codehaus.jparsec.Scanners#JAVA_DELIMITER" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[4365-4628;91-96;3-82];</data>
    </edge>
    <edge id="e3665" source="org.codehaus.jparsec.Scanners#HASKELL_DELIMITER" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[4635-4907;98-103;3-88];</data>
    </edge>
    <edge id="e3666" source="org.codehaus.jparsec.Scanners#SQL_DELIMITER" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[4914-5154;105-110;3-80];</data>
    </edge>
    <edge id="e3667" source="org.codehaus.jparsec.Scanners#IDENTIFIER" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[5161-5412;112-116;3-90];</data>
    </edge>
    <edge id="e3668" source="org.codehaus.jparsec.Scanners#INTEGER" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[5419-5542;118-119;3-93];</data>
    </edge>
    <edge id="e3669" source="org.codehaus.jparsec.Scanners#DECIMAL" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[5549-5678;121-122;3-93];</data>
    </edge>
    <edge id="e3670" source="org.codehaus.jparsec.Scanners#DEC_INTEGER" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[5685-5875;124-126;3-64];</data>
    </edge>
    <edge id="e3671" source="org.codehaus.jparsec.Scanners#OCT_INTEGER" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[5882-6053;128-130;3-62];</data>
    </edge>
    <edge id="e3672" source="org.codehaus.jparsec.Scanners#HEX_INTEGER" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6060-6263;132-134;3-68];</data>
    </edge>
    <edge id="e3673" source="org.codehaus.jparsec.Scanners#SCIENTIFIC_NOTATION" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6270-6446;136-138;3-76];</data>
    </edge>
    <edge id="e3674" source="org.codehaus.jparsec.Scanners.among(java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11884-12239;311-319;3-3/11884-12239;311-319;3-3];</data>
    </edge>
    <edge id="e3675" source="org.codehaus.jparsec.Scanners.among(java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11884-12239;311-319;3-3];</data>
    </edge>
    <edge id="e3676" source="org.codehaus.jparsec.Scanners.among(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11884-12239;311-319;3-3];</data>
    </edge>
    <edge id="e3677" source="org.codehaus.jparsec.Scanners.among(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11884-12239;311-319;3-3];</data>
    </edge>
    <edge id="e3678" source="org.codehaus.jparsec.Scanners.among(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11482-11877;299-309;3-3];</data>
    </edge>
    <edge id="e3679" source="org.codehaus.jparsec.Scanners.among(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11482-11877;299-309;3-3];</data>
    </edge>
    <edge id="e3680" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3681" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3682" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.notString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3683" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3684" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3685" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3686" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13361-13687;352-359;3-3];</data>
    </edge>
    <edge id="e3687" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3/13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3688" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3/13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3689" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3690" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3691" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3692" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3693" source="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13694-14248;361-374;3-3];</data>
    </edge>
    <edge id="e3694" source="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14255-14737;376-387;3-3];</data>
    </edge>
    <edge id="e3695" source="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.not()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14255-14737;376-387;3-3];</data>
    </edge>
    <edge id="e3696" source="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14255-14737;376-387;3-3];</data>
    </edge>
    <edge id="e3697" source="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14255-14737;376-387;3-3];</data>
    </edge>
    <edge id="e3698" source="org.codehaus.jparsec.Scanners.isChar(char)" target="org.codehaus.jparsec.Scanners.isChar(char,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10557-10828;268-276;3-3];</data>
    </edge>
    <edge id="e3699" source="org.codehaus.jparsec.Scanners.isChar(char,java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10179-10550;257-266;3-3];</data>
    </edge>
    <edge id="e3700" source="org.codehaus.jparsec.Scanners.isChar(char,java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10179-10550;257-266;3-3];</data>
    </edge>
    <edge id="e3701" source="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9447-9761;234-243;3-3];</data>
    </edge>
    <edge id="e3702" source="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)" target="org.codehaus.jparsec.IsCharScanner(java.lang.String,org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9768-10172;245-255;3-3];</data>
    </edge>
    <edge id="e3703" source="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13015-13354;343-350;3-3];</data>
    </edge>
    <edge id="e3704" source="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.lineComment(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[13015-13354;343-350;3-3];</data>
    </edge>
    <edge id="e3705" source="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6453-6780;140-148;3-3];</data>
    </edge>
    <edge id="e3706" source="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6453-6780;140-148;3-3];</data>
    </edge>
    <edge id="e3707" source="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6453-6780;140-148;3-3];</data>
    </edge>
    <edge id="e3708" source="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.Pattern,java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7114-7477;160-169;3-3];</data>
    </edge>
    <edge id="e3709" source="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.Pattern,java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7114-7477;160-169;3-3];</data>
    </edge>
    <edge id="e3710" source="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6787-7107;150-158;3-3];</data>
    </edge>
    <edge id="e3711" source="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.CharPredicate)" target="org.codehaus.jparsec.pattern.Patterns.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[6787-7107;150-158;3-3];</data>
    </edge>
    <edge id="e3712" source="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.Pattern,java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7484-7849;171-180;3-3];</data>
    </edge>
    <edge id="e3713" source="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.Pattern,java.lang.String)" target="org.codehaus.jparsec.pattern.Pattern.many1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7484-7849;171-180;3-3];</data>
    </edge>
    <edge id="e3714" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14744-15150;389-399;3-3];</data>
    </edge>
    <edge id="e3715" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14744-15150;389-399;3-3];</data>
    </edge>
    <edge id="e3716" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[14744-15150;389-399;3-3];</data>
    </edge>
    <edge id="e3717" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15157-15672;401-413;3-3];</data>
    </edge>
    <edge id="e3718" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15157-15672;401-413;3-3/15157-15672;401-413;3-3];</data>
    </edge>
    <edge id="e3719" source="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15157-15672;401-413;3-3];</data>
    </edge>
    <edge id="e3720" source="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.NestableBlockCommentScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[15679-16173;415-427;3-3];</data>
    </edge>
    <edge id="e3721" source="org.codehaus.jparsec.Scanners.nestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.NestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17024-17399;451-459;3-3];</data>
    </edge>
    <edge id="e3722" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)" target="org.codehaus.jparsec.Scanners.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12660-13008;333-341;3-3];</data>
    </edge>
    <edge id="e3723" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12660-13008;333-341;3-3];</data>
    </edge>
    <edge id="e3724" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12660-13008;333-341;3-3];</data>
    </edge>
    <edge id="e3725" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)" target="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12660-13008;333-341;3-3];</data>
    </edge>
    <edge id="e3726" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12246-12653;321-331;3-3];</data>
    </edge>
    <edge id="e3727" source="org.codehaus.jparsec.Scanners.notAmong(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[12246-12653;321-331;3-3];</data>
    </edge>
    <edge id="e3728" source="org.codehaus.jparsec.Scanners.notChar(char)" target="org.codehaus.jparsec.Scanners.notChar(char,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[11214-11475;289-297;3-3];</data>
    </edge>
    <edge id="e3729" source="org.codehaus.jparsec.Scanners.notChar(char,java.lang.String)" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10835-11207;278-287;3-3];</data>
    </edge>
    <edge id="e3730" source="org.codehaus.jparsec.Scanners.notChar(char,java.lang.String)" target="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[10835-11207;278-287;3-3];</data>
    </edge>
    <edge id="e3731" source="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)" target="org.codehaus.jparsec.PatternScanner(java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8406-8768;203-212;3-3];</data>
    </edge>
    <edge id="e3732" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.pattern.Patterns.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3733" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.pattern.Pattern.next(org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3734" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.pattern.Patterns.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3735" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.pattern.CharPredicates.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3736" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3737" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3738" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3739" source="org.codehaus.jparsec.Scanners.quoted(char,char)" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16180-16580;429-437;3-3];</data>
    </edge>
    <edge id="e3740" source="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parsers.sequence(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16587-17017;439-449;3-3];</data>
    </edge>
    <edge id="e3741" source="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.skipMany()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16587-17017;439-449;3-3];</data>
    </edge>
    <edge id="e3742" source="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.source()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[16587-17017;439-449;3-3];</data>
    </edge>
    <edge id="e3743" source="org.codehaus.jparsec.Scanners.quotedBy(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser.between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[18015-18135;478-480;3-3];</data>
    </edge>
    <edge id="e3744" source="org.codehaus.jparsec.Scanners.string(java.lang.String)" target="org.codehaus.jparsec.Scanners.string(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[7854-8066;182-190;3-3];</data>
    </edge>
    <edge id="e3745" source="org.codehaus.jparsec.Scanners.string(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8073-8399;192-201;3-3];</data>
    </edge>
    <edge id="e3746" source="org.codehaus.jparsec.Scanners.string(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8073-8399;192-201;3-3];</data>
    </edge>
    <edge id="e3747" source="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String)" target="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[9172-9442;225-232;3-3];</data>
    </edge>
    <edge id="e3748" source="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8775-9165;214-223;3-3];</data>
    </edge>
    <edge id="e3749" source="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.pattern.Patterns.stringCaseInsensitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[8775-9165;214-223;3-3];</data>
    </edge>
    <edge id="e3750" source="org.codehaus.jparsec.Scanners$1()" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3751" source="org.codehaus.jparsec.Scanners$1.match(java.lang.CharSequence,int,int)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17730-17997;469-474;7-7/17730-17997;469-474;7-7];</data>
    </edge>
    <edge id="e3752" source="org.codehaus.jparsec.Scanners.notChar2(char,char)" target="org.codehaus.jparsec.Scanners$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17406-18008;461-476;3-3];</data>
    </edge>
    <edge id="e3753" source="org.codehaus.jparsec.Scanners.notChar2(char,char)" target="org.codehaus.jparsec.pattern.Pattern()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17406-18008;461-476;3-3];</data>
    </edge>
    <edge id="e3754" source="org.codehaus.jparsec.Scanners.notChar2(char,char)" target="org.codehaus.jparsec.pattern.Pattern#MISMATCH">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Scanners.java;[17406-18008;461-476;3-3/17406-18008;461-476;3-3];</data>
    </edge>
    <edge id="e3755" source="org.codehaus.jparsec.ScannersTest.testAmong()" target="org.codehaus.jparsec.Scanners.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6380-6707;181-188;3-3];</data>
    </edge>
    <edge id="e3756" source="org.codehaus.jparsec.ScannersTest.testAmong()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6380-6707;181-188;3-3/6380-6707;181-188;3-3];</data>
    </edge>
    <edge id="e3757" source="org.codehaus.jparsec.ScannersTest.testAmong()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6380-6707;181-188;3-3];</data>
    </edge>
    <edge id="e3758" source="org.codehaus.jparsec.ScannersTest.testAmong()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6380-6707;181-188;3-3/6380-6707;181-188;3-3];</data>
    </edge>
    <edge id="e3759" source="org.codehaus.jparsec.ScannersTest.testAmong_noChars()" target="org.codehaus.jparsec.Scanners.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6714-6942;190-194;3-3];</data>
    </edge>
    <edge id="e3760" source="org.codehaus.jparsec.ScannersTest.testAmong_noChars()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6714-6942;190-194;3-3/6714-6942;190-194;3-3];</data>
    </edge>
    <edge id="e3761" source="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()" target="org.codehaus.jparsec.Scanners.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
    </edge>
    <edge id="e3762" source="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
    </edge>
    <edge id="e3763" source="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
    </edge>
    <edge id="e3764" source="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
    </edge>
    <edge id="e3765" source="org.codehaus.jparsec.ScannersTest.testAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6949-7212;196-202;3-3];</data>
    </edge>
    <edge id="e3766" source="org.codehaus.jparsec.ScannersTest.testAnyChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5450-5835;154-163;3-3/5450-5835;154-163;3-3/5450-5835;154-163;3-3/5450-5835;154-163;3-3];</data>
    </edge>
    <edge id="e3767" source="org.codehaus.jparsec.ScannersTest.testAnyChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5450-5835;154-163;3-3];</data>
    </edge>
    <edge id="e3768" source="org.codehaus.jparsec.ScannersTest.testAnyChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5450-5835;154-163;3-3];</data>
    </edge>
    <edge id="e3769" source="org.codehaus.jparsec.ScannersTest.testAnyChar()" target="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5450-5835;154-163;3-3];</data>
    </edge>
    <edge id="e3770" source="org.codehaus.jparsec.ScannersTest.testBlockComment()" target="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12339-12755;346-354;3-3];</data>
    </edge>
    <edge id="e3771" source="org.codehaus.jparsec.ScannersTest.testBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12339-12755;346-354;3-3/12339-12755;346-354;3-3/12339-12755;346-354;3-3];</data>
    </edge>
    <edge id="e3772" source="org.codehaus.jparsec.ScannersTest.testBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12339-12755;346-354;3-3];</data>
    </edge>
    <edge id="e3773" source="org.codehaus.jparsec.ScannersTest.testBlockComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12339-12755;346-354;3-3/12339-12755;346-354;3-3];</data>
    </edge>
    <edge id="e3774" source="org.codehaus.jparsec.ScannersTest.testBlockComment_emptyQuotes()" target="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12762-12941;356-360;3-3];</data>
    </edge>
    <edge id="e3775" source="org.codehaus.jparsec.ScannersTest.testBlockComment_emptyQuotes()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12762-12941;356-360;3-3];</data>
    </edge>
    <edge id="e3776" source="org.codehaus.jparsec.ScannersTest.testBlockComment_emptyQuotes()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12762-12941;356-360;3-3];</data>
    </edge>
    <edge id="e3777" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withEmptyQuotedPattern()" target="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13330-13623;372-378;3-3];</data>
    </edge>
    <edge id="e3778" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withEmptyQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13330-13623;372-378;3-3];</data>
    </edge>
    <edge id="e3779" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withEmptyQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13330-13623;372-378;3-3/13330-13623;372-378;3-3/13330-13623;372-378;3-3];</data>
    </edge>
    <edge id="e3780" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withEmptyQuotedPattern()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13330-13623;372-378;3-3];</data>
    </edge>
    <edge id="e3781" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()" target="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3];</data>
    </edge>
    <edge id="e3782" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3/13938-14270;388-395;3-3];</data>
    </edge>
    <edge id="e3783" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3/13938-14270;388-395;3-3];</data>
    </edge>
    <edge id="e3784" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3/13938-14270;388-395;3-3];</data>
    </edge>
    <edge id="e3785" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withParsers()" target="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13938-14270;388-395;3-3];</data>
    </edge>
    <edge id="e3786" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3787" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3/14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3788" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3789" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3790" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3/14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3791" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMatchesEmpty()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14277-14625;397-404;3-3];</data>
    </edge>
    <edge id="e3792" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.Scanners.blockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3793" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3/14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3794" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3795" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3796" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3/14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3797" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedParserThatMismatches()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14632-14977;406-413;3-3];</data>
    </edge>
    <edge id="e3798" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3];</data>
    </edge>
    <edge id="e3799" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.pattern.Patterns.hasAtLeast(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3];</data>
    </edge>
    <edge id="e3800" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3/12948-13323;362-370;3-3/12948-13323;362-370;3-3];</data>
    </edge>
    <edge id="e3801" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3];</data>
    </edge>
    <edge id="e3802" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[12948-13323;362-370;3-3/12948-13323;362-370;3-3];</data>
    </edge>
    <edge id="e3803" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPatternThatMismatches()" target="org.codehaus.jparsec.Scanners.blockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13630-13931;380-386;3-3];</data>
    </edge>
    <edge id="e3804" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPatternThatMismatches()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13630-13931;380-386;3-3];</data>
    </edge>
    <edge id="e3805" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPatternThatMismatches()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13630-13931;380-386;3-3/13630-13931;380-386;3-3/13630-13931;380-386;3-3];</data>
    </edge>
    <edge id="e3806" source="org.codehaus.jparsec.ScannersTest.testBlockComment_withQuotedPatternThatMismatches()" target="org.codehaus.jparsec.pattern.Patterns#NEVER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[13630-13931;380-386;3-3];</data>
    </edge>
    <edge id="e3807" source="org.codehaus.jparsec.ScannersTest.testDecInteger()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1248-1457;42-46;3-3];</data>
    </edge>
    <edge id="e3808" source="org.codehaus.jparsec.ScannersTest.testDecInteger()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1248-1457;42-46;3-3];</data>
    </edge>
    <edge id="e3809" source="org.codehaus.jparsec.ScannersTest.testDecInteger()" target="org.codehaus.jparsec.Scanners#DEC_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1248-1457;42-46;3-3];</data>
    </edge>
    <edge id="e3810" source="org.codehaus.jparsec.ScannersTest.testDecimal()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1002-1241;34-40;3-3/1002-1241;34-40;3-3/1002-1241;34-40;3-3/1002-1241;34-40;3-3];</data>
    </edge>
    <edge id="e3811" source="org.codehaus.jparsec.ScannersTest.testDecimal()" target="org.codehaus.jparsec.Scanners#DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1002-1241;34-40;3-3];</data>
    </edge>
    <edge id="e3812" source="org.codehaus.jparsec.ScannersTest.testDoubleQuoteString()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8884-9288;255-264;3-3/8884-9288;255-264;3-3/8884-9288;255-264;3-3];</data>
    </edge>
    <edge id="e3813" source="org.codehaus.jparsec.ScannersTest.testDoubleQuoteString()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8884-9288;255-264;3-3/8884-9288;255-264;3-3/8884-9288;255-264;3-3/8884-9288;255-264;3-3];</data>
    </edge>
    <edge id="e3814" source="org.codehaus.jparsec.ScannersTest.testDoubleQuoteString()" target="org.codehaus.jparsec.Scanners#DOUBLE_QUOTE_STRING">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8884-9288;255-264;3-3];</data>
    </edge>
    <edge id="e3815" source="org.codehaus.jparsec.ScannersTest.testHaskellBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11911-12332;336-344;3-3/11911-12332;336-344;3-3/11911-12332;336-344;3-3];</data>
    </edge>
    <edge id="e3816" source="org.codehaus.jparsec.ScannersTest.testHaskellBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11911-12332;336-344;3-3];</data>
    </edge>
    <edge id="e3817" source="org.codehaus.jparsec.ScannersTest.testHaskellBlockComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11911-12332;336-344;3-3/11911-12332;336-344;3-3];</data>
    </edge>
    <edge id="e3818" source="org.codehaus.jparsec.ScannersTest.testHaskellBlockComment()" target="org.codehaus.jparsec.Scanners#HASKELL_BLOCK_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11911-12332;336-344;3-3];</data>
    </edge>
    <edge id="e3819" source="org.codehaus.jparsec.ScannersTest.testHaskellDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10711-11062;306-314;3-3/10711-11062;306-314;3-3/10711-11062;306-314;3-3/10711-11062;306-314;3-3/10711-11062;306-314;3-3];</data>
    </edge>
    <edge id="e3820" source="org.codehaus.jparsec.ScannersTest.testHaskellDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10711-11062;306-314;3-3];</data>
    </edge>
    <edge id="e3821" source="org.codehaus.jparsec.ScannersTest.testHaskellDelimiter()" target="org.codehaus.jparsec.Scanners#HASKELL_DELIMITER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10711-11062;306-314;3-3];</data>
    </edge>
    <edge id="e3822" source="org.codehaus.jparsec.ScannersTest.testHaskellLineComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8739-8877;250-253;3-3];</data>
    </edge>
    <edge id="e3823" source="org.codehaus.jparsec.ScannersTest.testHaskellLineComment()" target="org.codehaus.jparsec.Scanners#HASKELL_LINE_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8739-8877;250-253;3-3];</data>
    </edge>
    <edge id="e3824" source="org.codehaus.jparsec.ScannersTest.testHexInteger()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1759-2055;56-62;3-3/1759-2055;56-62;3-3];</data>
    </edge>
    <edge id="e3825" source="org.codehaus.jparsec.ScannersTest.testHexInteger()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1759-2055;56-62;3-3];</data>
    </edge>
    <edge id="e3826" source="org.codehaus.jparsec.ScannersTest.testHexInteger()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1759-2055;56-62;3-3];</data>
    </edge>
    <edge id="e3827" source="org.codehaus.jparsec.ScannersTest.testHexInteger()" target="org.codehaus.jparsec.Scanners#HEX_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1759-2055;56-62;3-3];</data>
    </edge>
    <edge id="e3828" source="org.codehaus.jparsec.ScannersTest.testIdentifier()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[516-783;19-25;3-3/516-783;19-25;3-3/516-783;19-25;3-3];</data>
    </edge>
    <edge id="e3829" source="org.codehaus.jparsec.ScannersTest.testIdentifier()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[516-783;19-25;3-3];</data>
    </edge>
    <edge id="e3830" source="org.codehaus.jparsec.ScannersTest.testIdentifier()" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[516-783;19-25;3-3];</data>
    </edge>
    <edge id="e3831" source="org.codehaus.jparsec.ScannersTest.testInteger()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[790-995;27-32;3-3/790-995;27-32;3-3];</data>
    </edge>
    <edge id="e3832" source="org.codehaus.jparsec.ScannersTest.testInteger()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[790-995;27-32;3-3];</data>
    </edge>
    <edge id="e3833" source="org.codehaus.jparsec.ScannersTest.testInteger()" target="org.codehaus.jparsec.Scanners#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[790-995;27-32;3-3];</data>
    </edge>
    <edge id="e3834" source="org.codehaus.jparsec.ScannersTest.testIsChar()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
    </edge>
    <edge id="e3835" source="org.codehaus.jparsec.ScannersTest.testIsChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
    </edge>
    <edge id="e3836" source="org.codehaus.jparsec.ScannersTest.testIsChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
    </edge>
    <edge id="e3837" source="org.codehaus.jparsec.ScannersTest.testIsChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
    </edge>
    <edge id="e3838" source="org.codehaus.jparsec.ScannersTest.testIsChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5842-6102;165-171;3-3];</data>
    </edge>
    <edge id="e3839" source="org.codehaus.jparsec.ScannersTest.testJavaBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11069-11484;316-324;3-3/11069-11484;316-324;3-3/11069-11484;316-324;3-3];</data>
    </edge>
    <edge id="e3840" source="org.codehaus.jparsec.ScannersTest.testJavaBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11069-11484;316-324;3-3];</data>
    </edge>
    <edge id="e3841" source="org.codehaus.jparsec.ScannersTest.testJavaBlockComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11069-11484;316-324;3-3/11069-11484;316-324;3-3];</data>
    </edge>
    <edge id="e3842" source="org.codehaus.jparsec.ScannersTest.testJavaBlockComment()" target="org.codehaus.jparsec.Scanners#JAVA_BLOCK_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11069-11484;316-324;3-3];</data>
    </edge>
    <edge id="e3843" source="org.codehaus.jparsec.ScannersTest.testJavaDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10009-10354;286-294;3-3/10009-10354;286-294;3-3/10009-10354;286-294;3-3/10009-10354;286-294;3-3/10009-10354;286-294;3-3];</data>
    </edge>
    <edge id="e3844" source="org.codehaus.jparsec.ScannersTest.testJavaDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10009-10354;286-294;3-3];</data>
    </edge>
    <edge id="e3845" source="org.codehaus.jparsec.ScannersTest.testJavaDelimiter()" target="org.codehaus.jparsec.Scanners#JAVA_DELIMITER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10009-10354;286-294;3-3];</data>
    </edge>
    <edge id="e3846" source="org.codehaus.jparsec.ScannersTest.testJavaLineComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8463-8595;240-243;3-3];</data>
    </edge>
    <edge id="e3847" source="org.codehaus.jparsec.ScannersTest.testJavaLineComment()" target="org.codehaus.jparsec.Scanners#JAVA_LINE_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8463-8595;240-243;3-3];</data>
    </edge>
    <edge id="e3848" source="org.codehaus.jparsec.ScannersTest.testLineComment()" target="org.codehaus.jparsec.Scanners.lineComment(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8027-8456;228-238;3-3];</data>
    </edge>
    <edge id="e3849" source="org.codehaus.jparsec.ScannersTest.testLineComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8027-8456;228-238;3-3/8027-8456;228-238;3-3];</data>
    </edge>
    <edge id="e3850" source="org.codehaus.jparsec.ScannersTest.testLineComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8027-8456;228-238;3-3/8027-8456;228-238;3-3/8027-8456;228-238;3-3];</data>
    </edge>
    <edge id="e3851" source="org.codehaus.jparsec.ScannersTest.testLineComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8027-8456;228-238;3-3/8027-8456;228-238;3-3/8027-8456;228-238;3-3];</data>
    </edge>
    <edge id="e3852" source="org.codehaus.jparsec.ScannersTest.testMany1_withCharPredicate()" target="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2800-3116;82-87;3-3];</data>
    </edge>
    <edge id="e3853" source="org.codehaus.jparsec.ScannersTest.testMany1_withCharPredicate()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2800-3116;82-87;3-3];</data>
    </edge>
    <edge id="e3854" source="org.codehaus.jparsec.ScannersTest.testMany1_withCharPredicate()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2800-3116;82-87;3-3/2800-3116;82-87;3-3];</data>
    </edge>
    <edge id="e3855" source="org.codehaus.jparsec.ScannersTest.testMany1_withCharPredicate()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2800-3116;82-87;3-3];</data>
    </edge>
    <edge id="e3856" source="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()" target="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3];</data>
    </edge>
    <edge id="e3857" source="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3];</data>
    </edge>
    <edge id="e3858" source="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3];</data>
    </edge>
    <edge id="e3859" source="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3/3628-4006;104-111;3-3];</data>
    </edge>
    <edge id="e3860" source="org.codehaus.jparsec.ScannersTest.testMany1_withPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3628-4006;104-111;3-3/3628-4006;104-111;3-3];</data>
    </edge>
    <edge id="e3861" source="org.codehaus.jparsec.ScannersTest.testMany1_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Scanners.many1(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4013-4207;113-117;3-3];</data>
    </edge>
    <edge id="e3862" source="org.codehaus.jparsec.ScannersTest.testMany1_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4013-4207;113-117;3-3];</data>
    </edge>
    <edge id="e3863" source="org.codehaus.jparsec.ScannersTest.testMany1_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4013-4207;113-117;3-3];</data>
    </edge>
    <edge id="e3864" source="org.codehaus.jparsec.ScannersTest.testMany1_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4013-4207;113-117;3-3];</data>
    </edge>
    <edge id="e3865" source="org.codehaus.jparsec.ScannersTest.testMany_withCharPredicate()" target="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2594-2793;76-80;3-3];</data>
    </edge>
    <edge id="e3866" source="org.codehaus.jparsec.ScannersTest.testMany_withCharPredicate()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2594-2793;76-80;3-3/2594-2793;76-80;3-3];</data>
    </edge>
    <edge id="e3867" source="org.codehaus.jparsec.ScannersTest.testMany_withCharPredicate()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2594-2793;76-80;3-3];</data>
    </edge>
    <edge id="e3868" source="org.codehaus.jparsec.ScannersTest.testMany_withPattern()" target="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3123-3422;89-96;3-3];</data>
    </edge>
    <edge id="e3869" source="org.codehaus.jparsec.ScannersTest.testMany_withPattern()" target="org.codehaus.jparsec.pattern.Patterns.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3123-3422;89-96;3-3];</data>
    </edge>
    <edge id="e3870" source="org.codehaus.jparsec.ScannersTest.testMany_withPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3123-3422;89-96;3-3/3123-3422;89-96;3-3];</data>
    </edge>
    <edge id="e3871" source="org.codehaus.jparsec.ScannersTest.testMany_withPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3123-3422;89-96;3-3/3123-3422;89-96;3-3/3123-3422;89-96;3-3];</data>
    </edge>
    <edge id="e3872" source="org.codehaus.jparsec.ScannersTest.testMany_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Scanners.many(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3429-3621;98-102;3-3];</data>
    </edge>
    <edge id="e3873" source="org.codehaus.jparsec.ScannersTest.testMany_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3429-3621;98-102;3-3];</data>
    </edge>
    <edge id="e3874" source="org.codehaus.jparsec.ScannersTest.testMany_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3429-3621;98-102;3-3];</data>
    </edge>
    <edge id="e3875" source="org.codehaus.jparsec.ScannersTest.testMany_withPatternThatConsumesNoInput()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[3429-3621;98-102;3-3];</data>
    </edge>
    <edge id="e3876" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14984-15434;415-424;3-3];</data>
    </edge>
    <edge id="e3877" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14984-15434;415-424;3-3/14984-15434;415-424;3-3];</data>
    </edge>
    <edge id="e3878" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[14984-15434;415-424;3-3/14984-15434;415-424;3-3/14984-15434;415-424;3-3/14984-15434;415-424;3-3];</data>
    </edge>
    <edge id="e3879" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3880" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3881" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3882" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3883" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3884" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_closeQuoteConsumesNoChar()" target="java.lang.IllegalStateException#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17907-18174;480-484;3-3];</data>
    </edge>
    <edge id="e3885" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3886" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3887" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3888" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3889" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="org.codehaus.jparsec.Scanners#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3890" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_openQuoteConsumesNoChar()" target="java.lang.IllegalStateException#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17635-17900;474-478;3-3];</data>
    </edge>
    <edge id="e3891" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_quotedConsumesNoChar()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17399-17628;469-472;3-3];</data>
    </edge>
    <edge id="e3892" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_quotedConsumesNoChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17399-17628;469-472;3-3];</data>
    </edge>
    <edge id="e3893" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_quotedConsumesNoChar()" target="org.codehaus.jparsec.pattern.Patterns#ALWAYS">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17399-17628;469-472;3-3];</data>
    </edge>
    <edge id="e3894" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_quotedConsumesNoChar()" target="java.lang.IllegalStateException#class">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[17399-17628;469-472;3-3];</data>
    </edge>
    <edge id="e3895" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3896" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3/15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3897" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3898" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.pattern.CharPredicates.not(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3899" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3/15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3900" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3/15897-16486;436-447;3-3/15897-16486;436-447;3-3/15897-16486;436-447;3-3/15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3901" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedParser()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_DIGIT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15897-16486;436-447;3-3];</data>
    </edge>
    <edge id="e3902" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(java.lang.String,java.lang.String,org.codehaus.jparsec.pattern.Pattern)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15441-15890;426-434;3-3];</data>
    </edge>
    <edge id="e3903" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15441-15890;426-434;3-3/15441-15890;426-434;3-3];</data>
    </edge>
    <edge id="e3904" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15441-15890;426-434;3-3/15441-15890;426-434;3-3/15441-15890;426-434;3-3/15441-15890;426-434;3-3];</data>
    </edge>
    <edge id="e3905" source="org.codehaus.jparsec.ScannersTest.testNestableBlockComment_withQuotedPattern()" target="org.codehaus.jparsec.pattern.Patterns#ANY_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[15441-15890;426-434;3-3];</data>
    </edge>
    <edge id="e3906" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3907" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3/16981-17392;459-467;3-3/16981-17392;459-467;3-3/16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3908" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Parser.step(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3/16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3909" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3/16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3910" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Scanners.among(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3911" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3/16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3912" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_notLogicalPartialMatch()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16981-17392;459-467;3-3];</data>
    </edge>
    <edge id="e3913" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.Scanners.nestableBlockComment(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3914" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3/16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3915" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3916" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.Parser.many()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3917" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3/16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3918" source="org.codehaus.jparsec.ScannersTest.testNestedBlockComment_partialMatch()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[16493-16974;449-457;3-3/16493-16974;449-457;3-3/16493-16974;449-457;3-3];</data>
    </edge>
    <edge id="e3919" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Scanners.nestedScanner(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3920" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Scanners.isChar(org.codehaus.jparsec.pattern.CharPredicate)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3921" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Parser.skipMany1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3922" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3923" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Parser.skipTimes(int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3924" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3925" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3/19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3926" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3/19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3927" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3/19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3928" source="org.codehaus.jparsec.ScannersTest.testNestedScanner()" target="org.codehaus.jparsec.pattern.CharPredicates#IS_ALPHA">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[19046-19699;510-522;3-3];</data>
    </edge>
    <edge id="e3929" source="org.codehaus.jparsec.ScannersTest.testNotAmong()" target="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3];</data>
    </edge>
    <edge id="e3930" source="org.codehaus.jparsec.ScannersTest.testNotAmong()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3];</data>
    </edge>
    <edge id="e3931" source="org.codehaus.jparsec.ScannersTest.testNotAmong()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3];</data>
    </edge>
    <edge id="e3932" source="org.codehaus.jparsec.ScannersTest.testNotAmong()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3];</data>
    </edge>
    <edge id="e3933" source="org.codehaus.jparsec.ScannersTest.testNotAmong()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7219-7524;204-211;3-3/7219-7524;204-211;3-3];</data>
    </edge>
    <edge id="e3934" source="org.codehaus.jparsec.ScannersTest.testNotAmong_noChars()" target="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7531-7774;213-218;3-3];</data>
    </edge>
    <edge id="e3935" source="org.codehaus.jparsec.ScannersTest.testNotAmong_noChars()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7531-7774;213-218;3-3];</data>
    </edge>
    <edge id="e3936" source="org.codehaus.jparsec.ScannersTest.testNotAmong_noChars()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7531-7774;213-218;3-3];</data>
    </edge>
    <edge id="e3937" source="org.codehaus.jparsec.ScannersTest.testNotAmong_noChars()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7531-7774;213-218;3-3];</data>
    </edge>
    <edge id="e3938" source="org.codehaus.jparsec.ScannersTest.testNotAmong_oneChar()" target="org.codehaus.jparsec.Scanners.notAmong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7781-8020;220-226;3-3];</data>
    </edge>
    <edge id="e3939" source="org.codehaus.jparsec.ScannersTest.testNotAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7781-8020;220-226;3-3];</data>
    </edge>
    <edge id="e3940" source="org.codehaus.jparsec.ScannersTest.testNotAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7781-8020;220-226;3-3];</data>
    </edge>
    <edge id="e3941" source="org.codehaus.jparsec.ScannersTest.testNotAmong_oneChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[7781-8020;220-226;3-3/7781-8020;220-226;3-3];</data>
    </edge>
    <edge id="e3942" source="org.codehaus.jparsec.ScannersTest.testNotChar()" target="org.codehaus.jparsec.Scanners.notChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
    </edge>
    <edge id="e3943" source="org.codehaus.jparsec.ScannersTest.testNotChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
    </edge>
    <edge id="e3944" source="org.codehaus.jparsec.ScannersTest.testNotChar()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
    </edge>
    <edge id="e3945" source="org.codehaus.jparsec.ScannersTest.testNotChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
    </edge>
    <edge id="e3946" source="org.codehaus.jparsec.ScannersTest.testNotChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[6109-6373;173-179;3-3];</data>
    </edge>
    <edge id="e3947" source="org.codehaus.jparsec.ScannersTest.testOctInteger()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1464-1752;48-54;3-3/1464-1752;48-54;3-3];</data>
    </edge>
    <edge id="e3948" source="org.codehaus.jparsec.ScannersTest.testOctInteger()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1464-1752;48-54;3-3];</data>
    </edge>
    <edge id="e3949" source="org.codehaus.jparsec.ScannersTest.testOctInteger()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1464-1752;48-54;3-3];</data>
    </edge>
    <edge id="e3950" source="org.codehaus.jparsec.ScannersTest.testOctInteger()" target="org.codehaus.jparsec.Scanners#OCT_INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[1464-1752;48-54;3-3];</data>
    </edge>
    <edge id="e3951" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3952" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3953" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3954" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3955" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3956" source="org.codehaus.jparsec.ScannersTest.testPattern()" target="org.codehaus.jparsec.pattern.Patterns#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4821-5115;137-143;3-3];</data>
    </edge>
    <edge id="e3957" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3958" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3/18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3959" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.Scanners.pattern(org.codehaus.jparsec.pattern.Pattern,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3960" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3/18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3961" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3/18366-18742;492-500;3-3/18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3962" source="org.codehaus.jparsec.ScannersTest.testQuoted()" target="org.codehaus.jparsec.pattern.Patterns#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18366-18742;492-500;3-3];</data>
    </edge>
    <edge id="e3963" source="org.codehaus.jparsec.ScannersTest.testQuoted_byChar()" target="org.codehaus.jparsec.Scanners.quoted(char,char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18181-18359;486-490;3-3];</data>
    </edge>
    <edge id="e3964" source="org.codehaus.jparsec.ScannersTest.testQuoted_byChar()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18181-18359;486-490;3-3];</data>
    </edge>
    <edge id="e3965" source="org.codehaus.jparsec.ScannersTest.testQuoted_byChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18181-18359;486-490;3-3];</data>
    </edge>
    <edge id="e3966" source="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()" target="org.codehaus.jparsec.Scanners.quoted(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3];</data>
    </edge>
    <edge id="e3967" source="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3/18749-19039;502-508;3-3];</data>
    </edge>
    <edge id="e3968" source="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()" target="org.codehaus.jparsec.Parsers.always()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3];</data>
    </edge>
    <edge id="e3969" source="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3];</data>
    </edge>
    <edge id="e3970" source="org.codehaus.jparsec.ScannersTest.testQuoted_quotedParserConsumeNoChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[18749-19039;502-508;3-3/18749-19039;502-508;3-3];</data>
    </edge>
    <edge id="e3971" source="org.codehaus.jparsec.ScannersTest.testScientificNotation()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2062-2587;64-74;3-3/2062-2587;64-74;3-3/2062-2587;64-74;3-3/2062-2587;64-74;3-3];</data>
    </edge>
    <edge id="e3972" source="org.codehaus.jparsec.ScannersTest.testScientificNotation()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2062-2587;64-74;3-3/2062-2587;64-74;3-3];</data>
    </edge>
    <edge id="e3973" source="org.codehaus.jparsec.ScannersTest.testScientificNotation()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2062-2587;64-74;3-3/2062-2587;64-74;3-3];</data>
    </edge>
    <edge id="e3974" source="org.codehaus.jparsec.ScannersTest.testScientificNotation()" target="org.codehaus.jparsec.Scanners#SCIENTIFIC_NOTATION">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[2062-2587;64-74;3-3];</data>
    </edge>
    <edge id="e3975" source="org.codehaus.jparsec.ScannersTest.testSingleQuoteChar()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9575-10002;274-284;3-3/9575-10002;274-284;3-3/9575-10002;274-284;3-3/9575-10002;274-284;3-3];</data>
    </edge>
    <edge id="e3976" source="org.codehaus.jparsec.ScannersTest.testSingleQuoteChar()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9575-10002;274-284;3-3/9575-10002;274-284;3-3/9575-10002;274-284;3-3/9575-10002;274-284;3-3];</data>
    </edge>
    <edge id="e3977" source="org.codehaus.jparsec.ScannersTest.testSingleQuoteChar()" target="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9575-10002;274-284;3-3];</data>
    </edge>
    <edge id="e3978" source="org.codehaus.jparsec.ScannersTest.testSingleQuoteString()" target="org.codehaus.jparsec.Asserts.assertStringScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9295-9568;266-272;3-3/9295-9568;266-272;3-3/9295-9568;266-272;3-3/9295-9568;266-272;3-3];</data>
    </edge>
    <edge id="e3979" source="org.codehaus.jparsec.ScannersTest.testSingleQuoteString()" target="org.codehaus.jparsec.Scanners#SINGLE_QUOTE_STRING">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[9295-9568;266-272;3-3];</data>
    </edge>
    <edge id="e3980" source="org.codehaus.jparsec.ScannersTest.testSqlBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11491-11904;326-334;3-3/11491-11904;326-334;3-3/11491-11904;326-334;3-3];</data>
    </edge>
    <edge id="e3981" source="org.codehaus.jparsec.ScannersTest.testSqlBlockComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11491-11904;326-334;3-3];</data>
    </edge>
    <edge id="e3982" source="org.codehaus.jparsec.ScannersTest.testSqlBlockComment()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11491-11904;326-334;3-3/11491-11904;326-334;3-3];</data>
    </edge>
    <edge id="e3983" source="org.codehaus.jparsec.ScannersTest.testSqlBlockComment()" target="org.codehaus.jparsec.Scanners#SQL_BLOCK_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[11491-11904;326-334;3-3];</data>
    </edge>
    <edge id="e3984" source="org.codehaus.jparsec.ScannersTest.testSqlDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10361-10704;296-304;3-3/10361-10704;296-304;3-3/10361-10704;296-304;3-3/10361-10704;296-304;3-3/10361-10704;296-304;3-3];</data>
    </edge>
    <edge id="e3985" source="org.codehaus.jparsec.ScannersTest.testSqlDelimiter()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10361-10704;296-304;3-3];</data>
    </edge>
    <edge id="e3986" source="org.codehaus.jparsec.ScannersTest.testSqlDelimiter()" target="org.codehaus.jparsec.Scanners#SQL_DELIMITER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[10361-10704;296-304;3-3];</data>
    </edge>
    <edge id="e3987" source="org.codehaus.jparsec.ScannersTest.testSqlLineComment()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8602-8732;245-248;3-3];</data>
    </edge>
    <edge id="e3988" source="org.codehaus.jparsec.ScannersTest.testSqlLineComment()" target="org.codehaus.jparsec.Scanners#SQL_LINE_COMMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[8602-8732;245-248;3-3];</data>
    </edge>
    <edge id="e3989" source="org.codehaus.jparsec.ScannersTest.testString()" target="org.codehaus.jparsec.Scanners.string(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3];</data>
    </edge>
    <edge id="e3990" source="org.codehaus.jparsec.ScannersTest.testString()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3];</data>
    </edge>
    <edge id="e3991" source="org.codehaus.jparsec.ScannersTest.testString()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3];</data>
    </edge>
    <edge id="e3992" source="org.codehaus.jparsec.ScannersTest.testString()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3];</data>
    </edge>
    <edge id="e3993" source="org.codehaus.jparsec.ScannersTest.testString()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4214-4514;119-126;3-3/4214-4514;119-126;3-3];</data>
    </edge>
    <edge id="e3994" source="org.codehaus.jparsec.ScannersTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.Scanners.stringCaseInsensitive(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5122-5443;145-152;3-3];</data>
    </edge>
    <edge id="e3995" source="org.codehaus.jparsec.ScannersTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5122-5443;145-152;3-3/5122-5443;145-152;3-3/5122-5443;145-152;3-3];</data>
    </edge>
    <edge id="e3996" source="org.codehaus.jparsec.ScannersTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5122-5443;145-152;3-3];</data>
    </edge>
    <edge id="e3997" source="org.codehaus.jparsec.ScannersTest.testStringCaseInsensitive()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[5122-5443;145-152;3-3];</data>
    </edge>
    <edge id="e3998" source="org.codehaus.jparsec.ScannersTest.testWhitespaces()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4521-4814;128-135;3-3];</data>
    </edge>
    <edge id="e3999" source="org.codehaus.jparsec.ScannersTest.testWhitespaces()" target="org.codehaus.jparsec.Asserts.assertScanner(org.codehaus.jparsec.Parser,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4521-4814;128-135;3-3];</data>
    </edge>
    <edge id="e4000" source="org.codehaus.jparsec.ScannersTest.testWhitespaces()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4521-4814;128-135;3-3/4521-4814;128-135;3-3];</data>
    </edge>
    <edge id="e4001" source="org.codehaus.jparsec.ScannersTest.testWhitespaces()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/ScannersTest.java;[4521-4814;128-135;3-3];</data>
    </edge>
    <edge id="e4002" source="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1441-1587;25-29;3-3];</data>
    </edge>
    <edge id="e4003" source="org.codehaus.jparsec.Sequence2Parser#p1" target="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1441-1587;25-29;3-3];</data>
    </edge>
    <edge id="e4004" source="org.codehaus.jparsec.Sequence2Parser#p2" target="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1441-1587;25-29;3-3];</data>
    </edge>
    <edge id="e4005" source="org.codehaus.jparsec.Sequence2Parser#m2" target="org.codehaus.jparsec.Sequence2Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map2)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1441-1587;25-29;3-3];</data>
    </edge>
    <edge id="e4006" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3/1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4007" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3/1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4008" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map2.map(A,B)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4009" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence2Parser#p1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3/1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4010" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence2Parser#p2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3/1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4011" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4012" source="org.codehaus.jparsec.Sequence2Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence2Parser#m2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1592-1868;31-40;3-3];</data>
    </edge>
    <edge id="e4013" source="org.codehaus.jparsec.Sequence2Parser.toString()" target="org.codehaus.jparsec.Sequence2Parser#m2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence2Parser.java;[1875-1940;42-44;3-3];</data>
    </edge>
    <edge id="e4014" source="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
    </edge>
    <edge id="e4015" source="org.codehaus.jparsec.Sequence3Parser#p1" target="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
    </edge>
    <edge id="e4016" source="org.codehaus.jparsec.Sequence3Parser#p2" target="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
    </edge>
    <edge id="e4017" source="org.codehaus.jparsec.Sequence3Parser#p3" target="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
    </edge>
    <edge id="e4018" source="org.codehaus.jparsec.Sequence3Parser#m3" target="org.codehaus.jparsec.Sequence3Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map3)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1485-1680;26-32;3-3];</data>
    </edge>
    <edge id="e4019" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3/1685-2054;34-46;3-3/1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4020" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3/1685-2054;34-46;3-3/1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4021" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map3.map(A,B,C)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4022" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence3Parser#p1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3/1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4023" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence3Parser#p2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3/1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4024" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence3Parser#p3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3/1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4025" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4026" source="org.codehaus.jparsec.Sequence3Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence3Parser#m3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[1685-2054;34-46;3-3];</data>
    </edge>
    <edge id="e4027" source="org.codehaus.jparsec.Sequence3Parser.toString()" target="org.codehaus.jparsec.Sequence3Parser#m3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence3Parser.java;[2061-2126;48-50;3-3];</data>
    </edge>
    <edge id="e4028" source="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4029" source="org.codehaus.jparsec.Sequence4Parser#p1" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4030" source="org.codehaus.jparsec.Sequence4Parser#p2" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4031" source="org.codehaus.jparsec.Sequence4Parser#p3" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4032" source="org.codehaus.jparsec.Sequence4Parser#p4" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4033" source="org.codehaus.jparsec.Sequence4Parser#m4" target="org.codehaus.jparsec.Sequence4Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map4)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1529-1767;27-34;3-3];</data>
    </edge>
    <edge id="e4034" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3/1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4035" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3/1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4036" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map4.map(A,B,C,D)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4037" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence4Parser#p1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4038" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence4Parser#p2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4039" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence4Parser#p3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4040" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence4Parser#p4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3/1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4041" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4042" source="org.codehaus.jparsec.Sequence4Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence4Parser#m4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[1772-2234;36-51;3-3];</data>
    </edge>
    <edge id="e4043" source="org.codehaus.jparsec.Sequence4Parser.toString()" target="org.codehaus.jparsec.Sequence4Parser#m4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence4Parser.java;[2241-2306;53-55;3-3];</data>
    </edge>
    <edge id="e4044" source="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4045" source="org.codehaus.jparsec.Sequence5Parser#p1" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4046" source="org.codehaus.jparsec.Sequence5Parser#p2" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4047" source="org.codehaus.jparsec.Sequence5Parser#p3" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4048" source="org.codehaus.jparsec.Sequence5Parser#p4" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4049" source="org.codehaus.jparsec.Sequence5Parser#p5" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4050" source="org.codehaus.jparsec.Sequence5Parser#m5" target="org.codehaus.jparsec.Sequence5Parser(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.functors.Map5)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1573-1854;28-36;3-3];</data>
    </edge>
    <edge id="e4051" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4052" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.getReturn(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4053" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.functors.Map5.map(A,B,C,D,E)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4054" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#p1">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4055" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#p2">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4056" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#p3">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4057" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#p4">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4058" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#p5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3/1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4059" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4060" source="org.codehaus.jparsec.Sequence5Parser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Sequence5Parser#m5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[1859-2414;38-56;3-3];</data>
    </edge>
    <edge id="e4061" source="org.codehaus.jparsec.Sequence5Parser.toString()" target="org.codehaus.jparsec.Sequence5Parser#m5">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Sequence5Parser.java;[2421-2486;58-60;3-3];</data>
    </edge>
    <edge id="e4062" source="org.codehaus.jparsec.SequenceParser(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1309-1377;21-23;3-3];</data>
    </edge>
    <edge id="e4063" source="org.codehaus.jparsec.SequenceParser#parsers" target="org.codehaus.jparsec.SequenceParser(org.codehaus.jparsec.Parser[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1309-1377;21-23;3-3];</data>
    </edge>
    <edge id="e4064" source="org.codehaus.jparsec.SequenceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1382-1524;25-30;3-3];</data>
    </edge>
    <edge id="e4065" source="org.codehaus.jparsec.SequenceParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SequenceParser#parsers">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SequenceParser.java;[1382-1524;25-30;3-3];</data>
    </edge>
    <edge id="e4066" source="org.codehaus.jparsec.SkipAtLeastParser(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1332-1427;22-25;3-3];</data>
    </edge>
    <edge id="e4067" source="org.codehaus.jparsec.SkipAtLeastParser#parser" target="org.codehaus.jparsec.SkipAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1332-1427;22-25;3-3];</data>
    </edge>
    <edge id="e4068" source="org.codehaus.jparsec.SkipAtLeastParser#min" target="org.codehaus.jparsec.SkipAtLeastParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1332-1427;22-25;3-3];</data>
    </edge>
    <edge id="e4069" source="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3];</data>
    </edge>
    <edge id="e4070" source="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.many(org.codehaus.jparsec.Parser,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3];</data>
    </edge>
    <edge id="e4071" source="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SkipAtLeastParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3/1432-1660;27-34;3-3];</data>
    </edge>
    <edge id="e4072" source="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SkipAtLeastParser#min">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3];</data>
    </edge>
    <edge id="e4073" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.SkipAtLeastParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipAtLeastParser.java;[1432-1660;27-34;3-3];</data>
    </edge>
    <edge id="e4074" source="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1355-1477;23-27;3-3];</data>
    </edge>
    <edge id="e4075" source="org.codehaus.jparsec.SkipTimesParser#parser" target="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1355-1477;23-27;3-3];</data>
    </edge>
    <edge id="e4076" source="org.codehaus.jparsec.SkipTimesParser#min" target="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1355-1477;23-27;3-3];</data>
    </edge>
    <edge id="e4077" source="org.codehaus.jparsec.SkipTimesParser#max" target="org.codehaus.jparsec.SkipTimesParser(org.codehaus.jparsec.Parser,int,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1355-1477;23-27;3-3];</data>
    </edge>
    <edge id="e4078" source="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeat(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4079" source="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParserInternals.repeatAtMost(org.codehaus.jparsec.Parser,int,org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4080" source="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SkipTimesParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3/1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4081" source="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SkipTimesParser#min">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3/1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4082" source="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SkipTimesParser#max">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4083" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.SkipTimesParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SkipTimesParser.java;[1482-1729;29-36;3-3];</data>
    </edge>
    <edge id="e4084" source="org.codehaus.jparsec.StepParser(org.codehaus.jparsec.Parser,int)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1324-1406;23-26;3-3];</data>
    </edge>
    <edge id="e4085" source="org.codehaus.jparsec.StepParser#parser" target="org.codehaus.jparsec.StepParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1324-1406;23-26;3-3];</data>
    </edge>
    <edge id="e4086" source="org.codehaus.jparsec.StepParser#n" target="org.codehaus.jparsec.StepParser(org.codehaus.jparsec.Parser,int)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1324-1406;23-26;3-3];</data>
    </edge>
    <edge id="e4087" source="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
    </edge>
    <edge id="e4088" source="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
    </edge>
    <edge id="e4089" source="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.StepParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
    </edge>
    <edge id="e4090" source="org.codehaus.jparsec.ParseContext#step" target="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
    </edge>
    <edge id="e4091" source="org.codehaus.jparsec.StepParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.StepParser#n">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1411-1568;28-33;3-3];</data>
    </edge>
    <edge id="e4092" source="org.codehaus.jparsec.StepParser.toString()" target="org.codehaus.jparsec.StepParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StepParser.java;[1575-1644;35-37;3-3];</data>
    </edge>
    <edge id="e4093" source="org.codehaus.jparsec.StringLiteralsTranslator.tokenizeDoubleQuote(java.lang.String)" target="org.codehaus.jparsec.StringLiteralsTranslator.escapedChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/StringLiteralsTranslator.java;[1580-1969;38-52;3-3];</data>
    </edge>
    <edge id="e4094" source="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1317-1406;21-23;3-3];</data>
    </edge>
    <edge id="e4095" source="org.codehaus.jparsec.SumParser#alternatives" target="org.codehaus.jparsec.SumParser(org.codehaus.jparsec.Parser[])">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1317-1406;21-23;3-3];</data>
    </edge>
    <edge id="e4096" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.run(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4097" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.set(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4098" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4099" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#at">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3/1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4100" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#step">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3/1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4101" source="org.codehaus.jparsec.SumParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.SumParser#alternatives">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/SumParser.java;[1411-1764;25-37;3-3];</data>
    </edge>
    <edge id="e4102" source="org.codehaus.jparsec.Terminals$CharLiteral#PARSER" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2153-2331;46-48;5-64];</data>
    </edge>
    <edge id="e4103" source="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2342-2650;50-55;5-72];</data>
    </edge>
    <edge id="e4104" source="org.codehaus.jparsec.Terminals$DecimalLiteral#PARSER" target="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[6109-6290;145-148;5-70];</data>
    </edge>
    <edge id="e4105" source="org.codehaus.jparsec.Terminals$DecimalLiteral#TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[6301-6599;150-155;5-61];</data>
    </edge>
    <edge id="e4106" source="org.codehaus.jparsec.Terminals$Identifier#PARSER" target="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[7450-7730;180-185;5-73];</data>
    </edge>
    <edge id="e4107" source="org.codehaus.jparsec.Terminals$Identifier#TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[7741-8155;187-195;5-67];</data>
    </edge>
    <edge id="e4108" source="org.codehaus.jparsec.Terminals$IntegerLiteral#PARSER" target="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[5427-5608;127-130;5-70];</data>
    </edge>
    <edge id="e4109" source="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[5619-5910;132-137;5-61];</data>
    </edge>
    <edge id="e4110" source="org.codehaus.jparsec.Terminals$LongLiteral#PARSER" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[3828-3981;86-87;5-95];</data>
    </edge>
    <edge id="e4111" source="org.codehaus.jparsec.Terminals$LongLiteral#DEC_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[3992-4270;89-94;5-60];</data>
    </edge>
    <edge id="e4112" source="org.codehaus.jparsec.Terminals$LongLiteral#OCT_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[4281-4624;96-103;5-60];</data>
    </edge>
    <edge id="e4113" source="org.codehaus.jparsec.Terminals$LongLiteral#HEX_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[4635-4987;105-112;5-60];</data>
    </edge>
    <edge id="e4114" source="org.codehaus.jparsec.Terminals$LongLiteral#TOKENIZER" target="org.codehaus.jparsec.Parsers.plus(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[4998-5243;114-119;5-66];</data>
    </edge>
    <edge id="e4115" source="org.codehaus.jparsec.Terminals$ScientificNumberLiteral#PARSER" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[6796-7008;163-165;5-81];</data>
    </edge>
    <edge id="e4116" source="org.codehaus.jparsec.Terminals$ScientificNumberLiteral#TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[7019-7292;167-172;5-76];</data>
    </edge>
    <edge id="e4117" source="org.codehaus.jparsec.Terminals$StringLiteral#PARSER" target="org.codehaus.jparsec.Parsers.tokenType(java.lang.Class,java.lang.String)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2810-2968;63-64;5-98];</data>
    </edge>
    <edge id="e4118" source="org.codehaus.jparsec.Terminals$StringLiteral#DOUBLE_QUOTE_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[2979-3288;66-71;5-76];</data>
    </edge>
    <edge id="e4119" source="org.codehaus.jparsec.Terminals$StringLiteral#SINGLE_QUOTE_TOKENIZER" target="org.codehaus.jparsec.Parser.map(org.codehaus.jparsec.functors.Map)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[3299-3635;73-78;5-76];</data>
    </edge>
    <edge id="e4120" source="org.codehaus.jparsec.Terminals#RESERVED" target="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[1723-1994;34-39;3-71];</data>
    </edge>
    <edge id="e4121" source="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon(org.codehaus.jparsec.functors.Map,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8166-8250;198-200;3-3];</data>
    </edge>
    <edge id="e4122" source="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon#words">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8166-8250;198-200;3-3];</data>
    </edge>
    <edge id="e4123" source="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)" target="org.codehaus.jparsec.Lexicon#tokenizer">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8166-8250;198-200;3-3];</data>
    </edge>
    <edge id="e4124" source="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])" target="org.codehaus.jparsec.Parsers.token(org.codehaus.jparsec.TokenMap)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13729-13973;312-318;3-3];</data>
    </edge>
    <edge id="e4125" source="org.codehaus.jparsec.Terminals.fragment(java.lang.Object[])" target="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13729-13973;312-318;3-3];</data>
    </edge>
    <edge id="e4126" source="org.codehaus.jparsec.Terminals.caseInsensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8254-9094;201-215;3-3];</data>
    </edge>
    <edge id="e4127" source="org.codehaus.jparsec.Terminals.caseInsensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8254-9094;201-215;3-3];</data>
    </edge>
    <edge id="e4128" source="org.codehaus.jparsec.Terminals.caseInsensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[8254-9094;201-215;3-3];</data>
    </edge>
    <edge id="e4129" source="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9942-10735;233-247;3-3];</data>
    </edge>
    <edge id="e4130" source="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9942-10735;233-247;3-3];</data>
    </edge>
    <edge id="e4131" source="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[11536-12435;265-281;3-3];</data>
    </edge>
    <edge id="e4132" source="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9101-9935;217-231;3-3];</data>
    </edge>
    <edge id="e4133" source="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Scanners#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9101-9935;217-231;3-3];</data>
    </edge>
    <edge id="e4134" source="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[9101-9935;217-231;3-3];</data>
    </edge>
    <edge id="e4135" source="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[10742-11529;249-263;3-3];</data>
    </edge>
    <edge id="e4136" source="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[10742-11529;249-263;3-3];</data>
    </edge>
    <edge id="e4137" source="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[12442-13336;283-299;3-3];</data>
    </edge>
    <edge id="e4138" source="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
    </edge>
    <edge id="e4139" source="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
    </edge>
    <edge id="e4140" source="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Keywords.lexicon(org.codehaus.jparsec.Parser,java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
    </edge>
    <edge id="e4141" source="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
    </edge>
    <edge id="e4142" source="org.codehaus.jparsec.Terminals.instance(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[],boolean,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Lexicon.union(org.codehaus.jparsec.Lexicon)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14541-14938;337-344;3-3];</data>
    </edge>
    <edge id="e4143" source="org.codehaus.jparsec.Terminals.operators(java.lang.String[])" target="org.codehaus.jparsec.Terminals(org.codehaus.jparsec.Lexicon)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13343-13722;301-310;3-3];</data>
    </edge>
    <edge id="e4144" source="org.codehaus.jparsec.Terminals.operators(java.lang.String[])" target="org.codehaus.jparsec.Operators.lexicon(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13343-13722;301-310;3-3];</data>
    </edge>
    <edge id="e4145" source="org.codehaus.jparsec.Terminals$1()" target="org.codehaus.jparsec.IsFragment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4146" source="org.codehaus.jparsec.Terminals$1.isExpectedTag(java.lang.Object)" target="org.codehaus.jparsec.util.Objects.in(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14224-14316;326-328;7-7];</data>
    </edge>
    <edge id="e4147" source="org.codehaus.jparsec.Terminals$1.toString()" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14324-14523;329-333;7-7];</data>
    </edge>
    <edge id="e4148" source="org.codehaus.jparsec.Terminals$1.toString()" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[14324-14523;329-333;7-7/14324-14523;329-333;7-7];</data>
    </edge>
    <edge id="e4149" source="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])" target="org.codehaus.jparsec.Terminals$1()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3];</data>
    </edge>
    <edge id="e4150" source="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])" target="org.codehaus.jparsec.IsFragment()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3];</data>
    </edge>
    <edge id="e4151" source="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])" target="org.codehaus.jparsec.util.Objects.in(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3];</data>
    </edge>
    <edge id="e4152" source="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])" target="org.codehaus.jparsec.util.Strings.join(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3];</data>
    </edge>
    <edge id="e4153" source="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])" target="int#length">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[13980-14534;320-335;3-3/13980-14534;320-335;3-3];</data>
    </edge>
    <edge id="e4154" source="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)" target="org.codehaus.jparsec.util.Checks.checkArgument(boolean,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[15094-15326;350-356;3-3];</data>
    </edge>
    <edge id="e4155" source="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)" target="org.codehaus.jparsec.Terminals.equals(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Terminals.java;[15094-15326;350-356;3-3];</data>
    </edge>
    <edge id="e4156" source="org.codehaus.jparsec.TerminalsTest.assertDup(java.lang.String[],java.lang.String[],boolean)" target="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12923-13132;273-278;3-3];</data>
    </edge>
    <edge id="e4157" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Terminals.caseInsensitive(java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4158" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4159" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4160" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4161" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4162" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4163" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4164" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4165" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3/9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4166" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[9607-10527;211-225;3-3];</data>
    </edge>
    <edge id="e4167" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Terminals.caseInsensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4168" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4169" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4170" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4171" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4172" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4173" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4174" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4175" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Scanners#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4176" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3/11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4177" source="org.codehaus.jparsec.TerminalsTest.testCaseInsensitive_withScanner()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[11375-12213;242-255;3-3];</data>
    </edge>
    <edge id="e4178" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4179" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4180" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4181" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4182" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4183" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4184" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4185" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4186" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3/8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4187" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8671-9600;195-209;3-3];</data>
    </edge>
    <edge id="e4188" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Terminals.caseSensitive(org.codehaus.jparsec.Parser,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4189" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4190" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4191" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4192" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4193" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4194" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4195" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4196" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Scanners#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4197" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3/10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4198" source="org.codehaus.jparsec.TerminalsTest.testCaseSensitive_withScanner()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[10534-11368;227-240;3-3];</data>
    </edge>
    <edge id="e4199" source="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
    </edge>
    <edge id="e4200" source="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
    </edge>
    <edge id="e4201" source="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()" target="org.codehaus.jparsec.Terminals$CharLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
    </edge>
    <edge id="e4202" source="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()" target="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
    </edge>
    <edge id="e4203" source="org.codehaus.jparsec.TerminalsTest.testCharLiteralParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5474-5655;116-120;3-3];</data>
    </edge>
    <edge id="e4204" source="org.codehaus.jparsec.TerminalsTest.testCheckDup()" target="org.codehaus.jparsec.Terminals.checkDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12511-12916;265-271;3-3/12511-12916;265-271;3-3/12511-12916;265-271;3-3];</data>
    </edge>
    <edge id="e4205" source="org.codehaus.jparsec.TerminalsTest.testCheckDup()" target="org.codehaus.jparsec.TerminalsTest.assertDup(java.lang.String[],java.lang.String[],boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12511-12916;265-271;3-3/12511-12916;265-271;3-3];</data>
    </edge>
    <edge id="e4206" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
    </edge>
    <edge id="e4207" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
    </edge>
    <edge id="e4208" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()" target="org.codehaus.jparsec.Terminals$DecimalLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
    </edge>
    <edge id="e4209" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()" target="org.codehaus.jparsec.Terminals$DecimalLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
    </edge>
    <edge id="e4210" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6391-6572;145-149;3-3];</data>
    </edge>
    <edge id="e4211" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3];</data>
    </edge>
    <edge id="e4212" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralTokenizer()" target="org.codehaus.jparsec.Tokens.decimalLiteral(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3];</data>
    </edge>
    <edge id="e4213" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1033-1806;34-43;3-3];</data>
    </edge>
    <edge id="e4214" source="org.codehaus.jparsec.TerminalsTest.testDecimalLiteralTokenizer()" target="org.codehaus.jparsec.Terminals$DecimalLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3/1033-1806;34-43;3-3];</data>
    </edge>
    <edge id="e4215" source="org.codehaus.jparsec.TerminalsTest.testDoubleQuoteString()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[597-816;24-27;3-3/597-816;24-27;3-3];</data>
    </edge>
    <edge id="e4216" source="org.codehaus.jparsec.TerminalsTest.testDoubleQuoteString()" target="org.codehaus.jparsec.Terminals$StringLiteral#DOUBLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[597-816;24-27;3-3/597-816;24-27;3-3];</data>
    </edge>
    <edge id="e4217" source="org.codehaus.jparsec.TerminalsTest.testEquals()" target="org.codehaus.jparsec.Terminals.equals(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[12220-12504;257-263;3-3/12220-12504;257-263;3-3/12220-12504;257-263;3-3/12220-12504;257-263;3-3/12220-12504;257-263;3-3];</data>
    </edge>
    <edge id="e4218" source="org.codehaus.jparsec.TerminalsTest.testFromFragment()" target="org.codehaus.jparsec.Terminals.fromFragment(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3];</data>
    </edge>
    <edge id="e4219" source="org.codehaus.jparsec.TerminalsTest.testFromFragment()" target="org.codehaus.jparsec.TokenMap.map(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3];</data>
    </edge>
    <edge id="e4220" source="org.codehaus.jparsec.TerminalsTest.testFromFragment()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3];</data>
    </edge>
    <edge id="e4221" source="org.codehaus.jparsec.TerminalsTest.testFromFragment()" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3/6579-7185;151-160;3-3];</data>
    </edge>
    <edge id="e4222" source="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
    </edge>
    <edge id="e4223" source="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
    </edge>
    <edge id="e4224" source="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()" target="org.codehaus.jparsec.Terminals$Identifier#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
    </edge>
    <edge id="e4225" source="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()" target="org.codehaus.jparsec.Terminals$Identifier#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
    </edge>
    <edge id="e4226" source="org.codehaus.jparsec.TerminalsTest.testIdentifierParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6040-6198;134-137;3-3];</data>
    </edge>
    <edge id="e4227" source="org.codehaus.jparsec.TerminalsTest.testIdentifierTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3];</data>
    </edge>
    <edge id="e4228" source="org.codehaus.jparsec.TerminalsTest.testIdentifierTokenizer()" target="org.codehaus.jparsec.Tokens.identifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3];</data>
    </edge>
    <edge id="e4229" source="org.codehaus.jparsec.TerminalsTest.testIdentifierTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4937-5467;107-114;3-3];</data>
    </edge>
    <edge id="e4230" source="org.codehaus.jparsec.TerminalsTest.testIdentifierTokenizer()" target="org.codehaus.jparsec.Terminals$Identifier#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3/4937-5467;107-114;3-3];</data>
    </edge>
    <edge id="e4231" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
    </edge>
    <edge id="e4232" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
    </edge>
    <edge id="e4233" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
    </edge>
    <edge id="e4234" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
    </edge>
    <edge id="e4235" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[6205-6384;139-143;3-3];</data>
    </edge>
    <edge id="e4236" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3];</data>
    </edge>
    <edge id="e4237" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3];</data>
    </edge>
    <edge id="e4238" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3];</data>
    </edge>
    <edge id="e4239" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()" target="org.codehaus.jparsec.Terminals$IntegerLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3];</data>
    </edge>
    <edge id="e4240" source="org.codehaus.jparsec.TerminalsTest.testIntegerLiteralTokenizer()" target="org.codehaus.jparsec.Tokens$Tag#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3/1813-2339;45-51;3-3];</data>
    </edge>
    <edge id="e4241" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralDecTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2876-3220;64-69;3-3/2876-3220;64-69;3-3];</data>
    </edge>
    <edge id="e4242" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralDecTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2876-3220;64-69;3-3];</data>
    </edge>
    <edge id="e4243" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralDecTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2876-3220;64-69;3-3];</data>
    </edge>
    <edge id="e4244" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralDecTokenizer()" target="org.codehaus.jparsec.Terminals$LongLiteral#DEC_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2876-3220;64-69;3-3/2876-3220;64-69;3-3/2876-3220;64-69;3-3/2876-3220;64-69;3-3];</data>
    </edge>
    <edge id="e4245" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralHexTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3];</data>
    </edge>
    <edge id="e4246" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralHexTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3227-3794;71-80;3-3/3227-3794;71-80;3-3];</data>
    </edge>
    <edge id="e4247" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralHexTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3227-3794;71-80;3-3];</data>
    </edge>
    <edge id="e4248" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralHexTokenizer()" target="org.codehaus.jparsec.Terminals$LongLiteral#HEX_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3/3227-3794;71-80;3-3];</data>
    </edge>
    <edge id="e4249" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralOctTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3994-4476;89-96;3-3/3994-4476;89-96;3-3];</data>
    </edge>
    <edge id="e4250" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralOctTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3994-4476;89-96;3-3/3994-4476;89-96;3-3/3994-4476;89-96;3-3];</data>
    </edge>
    <edge id="e4251" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralOctTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3994-4476;89-96;3-3];</data>
    </edge>
    <edge id="e4252" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralOctTokenizer()" target="org.codehaus.jparsec.Terminals$LongLiteral#OCT_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3994-4476;89-96;3-3/3994-4476;89-96;3-3/3994-4476;89-96;3-3/3994-4476;89-96;3-3/3994-4476;89-96;3-3/3994-4476;89-96;3-3];</data>
    </edge>
    <edge id="e4253" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
    </edge>
    <edge id="e4254" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
    </edge>
    <edge id="e4255" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()" target="org.codehaus.jparsec.Terminals$LongLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
    </edge>
    <edge id="e4256" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()" target="org.codehaus.jparsec.Terminals$LongLiteral#DEC_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
    </edge>
    <edge id="e4257" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5662-5822;122-125;3-3];</data>
    </edge>
    <edge id="e4258" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3];</data>
    </edge>
    <edge id="e4259" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4483-4930;98-105;3-3];</data>
    </edge>
    <edge id="e4260" source="org.codehaus.jparsec.TerminalsTest.testLongLiteralTokenizer()" target="org.codehaus.jparsec.Terminals$LongLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3/4483-4930;98-105;3-3];</data>
    </edge>
    <edge id="e4261" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Terminals.caseSensitive(java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4262" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Lexicon.phrase(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4263" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4264" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4265" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Parser.parse(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4266" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3/8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4267" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4268" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Parser.optional()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4269" source="org.codehaus.jparsec.TerminalsTest.testPhrase()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[8183-8664;184-193;3-3];</data>
    </edge>
    <edge id="e4270" source="org.codehaus.jparsec.TerminalsTest.testScientificNumberLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2346-2869;53-62;3-3/2346-2869;53-62;3-3/2346-2869;53-62;3-3];</data>
    </edge>
    <edge id="e4271" source="org.codehaus.jparsec.TerminalsTest.testScientificNumberLiteralTokenizer()" target="org.codehaus.jparsec.Tokens.scientificNotation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2346-2869;53-62;3-3/2346-2869;53-62;3-3/2346-2869;53-62;3-3];</data>
    </edge>
    <edge id="e4272" source="org.codehaus.jparsec.TerminalsTest.testScientificNumberLiteralTokenizer()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2346-2869;53-62;3-3];</data>
    </edge>
    <edge id="e4273" source="org.codehaus.jparsec.TerminalsTest.testScientificNumberLiteralTokenizer()" target="org.codehaus.jparsec.Terminals$ScientificNumberLiteral#TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[2346-2869;53-62;3-3/2346-2869;53-62;3-3/2346-2869;53-62;3-3/2346-2869;53-62;3-3];</data>
    </edge>
    <edge id="e4274" source="org.codehaus.jparsec.TerminalsTest.testSingleQuoteChar()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[397-590;19-22;3-3/397-590;19-22;3-3];</data>
    </edge>
    <edge id="e4275" source="org.codehaus.jparsec.TerminalsTest.testSingleQuoteChar()" target="org.codehaus.jparsec.Terminals$CharLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[397-590;19-22;3-3/397-590;19-22;3-3];</data>
    </edge>
    <edge id="e4276" source="org.codehaus.jparsec.TerminalsTest.testSingleQuoteString()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[823-1026;29-32;3-3/823-1026;29-32;3-3];</data>
    </edge>
    <edge id="e4277" source="org.codehaus.jparsec.TerminalsTest.testSingleQuoteString()" target="org.codehaus.jparsec.Terminals$StringLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[823-1026;29-32;3-3/823-1026;29-32;3-3];</data>
    </edge>
    <edge id="e4278" source="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
    </edge>
    <edge id="e4279" source="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
    </edge>
    <edge id="e4280" source="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()" target="org.codehaus.jparsec.Terminals$StringLiteral#PARSER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
    </edge>
    <edge id="e4281" source="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()" target="org.codehaus.jparsec.Terminals$StringLiteral#SINGLE_QUOTE_TOKENIZER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
    </edge>
    <edge id="e4282" source="org.codehaus.jparsec.TerminalsTest.testStringLiteralParser()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[5829-6033;127-132;3-3];</data>
    </edge>
    <edge id="e4283" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Terminals.operators(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4284" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4285" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4286" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4287" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4288" source="org.codehaus.jparsec.TerminalsTest.testToken_noTokenName()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7192-7414;162-166;3-3];</data>
    </edge>
    <edge id="e4289" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Terminals.operators(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4290" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4291" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4292" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4293" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4294" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4295" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4296" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4297" source="org.codehaus.jparsec.TerminalsTest.testToken_oneTokenNameOnly()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7421-7759;168-174;3-3];</data>
    </edge>
    <edge id="e4298" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Terminals.operators(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4299" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Lexicon.token(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4300" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Parser.from(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4301" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Lexicon.tokenizer()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4302" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Asserts.assertParser(org.codehaus.jparsec.Parser,java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3/7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4303" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3/7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4304" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3/7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4305" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Asserts.assertFailure(org.codehaus.jparsec.Parser,java.lang.String,int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4306" source="org.codehaus.jparsec.TerminalsTest.testToken_tokenNamesListed()" target="org.codehaus.jparsec.Scanners#WHITESPACES">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[7766-8176;176-182;3-3];</data>
    </edge>
    <edge id="e4307" source="org.codehaus.jparsec.TerminalsTest.testTokenizeHexAsLong_throwsIfStringIsTooShort()" target="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeHexAsLong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TerminalsTest.java;[3801-3987;82-87;3-3];</data>
    </edge>
    <edge id="e4308" source="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)" target="org.codehaus.jparsec.Parsers.constant(T)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[222-454;14-20;3-3];</data>
    </edge>
    <edge id="e4309" source="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)" target="org.codehaus.jparsec.Parser.next(org.codehaus.jparsec.Parser)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[222-454;14-20;3-3];</data>
    </edge>
    <edge id="e4310" source="org.codehaus.jparsec.TestParsers.areChars(java.lang.String)" target="org.codehaus.jparsec.TestParsers.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[222-454;14-20;3-3];</data>
    </edge>
    <edge id="e4311" source="org.codehaus.jparsec.TestParsers.isChar(char)" target="org.codehaus.jparsec.Scanners.isChar(char)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[132-215;10-12;3-3];</data>
    </edge>
    <edge id="e4312" source="org.codehaus.jparsec.TestParsers.isChar(char)" target="org.codehaus.jparsec.Parser.retn(R)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TestParsers.java;[132-215;10-12;3-3];</data>
    </edge>
    <edge id="e4313" source="org.codehaus.jparsec.ToTokenParser(org.codehaus.jparsec.Parser)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[238-300;11-13;3-3];</data>
    </edge>
    <edge id="e4314" source="org.codehaus.jparsec.ToTokenParser#parser" target="org.codehaus.jparsec.ToTokenParser(org.codehaus.jparsec.Parser)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[238-300;11-13;3-3];</data>
    </edge>
    <edge id="e4315" source="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.getIndex()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3/305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4316" source="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Parser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4317" source="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4318" source="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ToTokenParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4319" source="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext#result">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4320" source="org.codehaus.jparsec.ParseContext#result" target="org.codehaus.jparsec.ToTokenParser.apply(org.codehaus.jparsec.ParseContext)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[305-577;15-24;3-3];</data>
    </edge>
    <edge id="e4321" source="org.codehaus.jparsec.ToTokenParser.toString()" target="org.codehaus.jparsec.ToTokenParser#parser">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/ToTokenParser.java;[584-653;26-28;3-3];</data>
    </edge>
    <edge id="e4322" source="org.codehaus.jparsec.Token#ind" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1483-1735;31-40;3-3];</data>
    </edge>
    <edge id="e4323" source="org.codehaus.jparsec.Token#len" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1483-1735;31-40;3-3];</data>
    </edge>
    <edge id="e4324" source="org.codehaus.jparsec.Token#value" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1483-1735;31-40;3-3];</data>
    </edge>
    <edge id="e4325" source="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.util.Objects.equals(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2420-2547;73-75;3-3];</data>
    </edge>
    <edge id="e4326" source="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token#ind">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2420-2547;73-75;3-3/2420-2547;73-75;3-3];</data>
    </edge>
    <edge id="e4327" source="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2420-2547;73-75;3-3/2420-2547;73-75;3-3];</data>
    </edge>
    <edge id="e4328" source="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)" target="org.codehaus.jparsec.Token#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2420-2547;73-75;3-3/2420-2547;73-75;3-3];</data>
    </edge>
    <edge id="e4329" source="org.codehaus.jparsec.Token.equals(java.lang.Object)" target="org.codehaus.jparsec.Token.equalToken(org.codehaus.jparsec.Token)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2271-2413;66-71;3-3];</data>
    </edge>
    <edge id="e4330" source="org.codehaus.jparsec.Token.hashCode()" target="org.codehaus.jparsec.util.Objects.hashCode(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2168-2264;62-64;3-3];</data>
    </edge>
    <edge id="e4331" source="org.codehaus.jparsec.Token.hashCode()" target="org.codehaus.jparsec.Token#ind">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2168-2264;62-64;3-3];</data>
    </edge>
    <edge id="e4332" source="org.codehaus.jparsec.Token.hashCode()" target="org.codehaus.jparsec.Token#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2168-2264;62-64;3-3];</data>
    </edge>
    <edge id="e4333" source="org.codehaus.jparsec.Token.hashCode()" target="org.codehaus.jparsec.Token#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2168-2264;62-64;3-3];</data>
    </edge>
    <edge id="e4334" source="org.codehaus.jparsec.Token.index()" target="org.codehaus.jparsec.Token#ind">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1831-1933;47-50;3-3];</data>
    </edge>
    <edge id="e4335" source="org.codehaus.jparsec.Token.length()" target="org.codehaus.jparsec.Token#len">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1742-1824;42-45;3-3];</data>
    </edge>
    <edge id="e4336" source="org.codehaus.jparsec.Token.value()" target="org.codehaus.jparsec.Token#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[1940-2018;52-55;3-3];</data>
    </edge>
    <edge id="e4337" source="org.codehaus.jparsec.Token.toString()" target="org.codehaus.jparsec.Token#value">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Token.java;[2025-2161;57-60;3-3];</data>
    </edge>
    <edge id="e4338" source="org.codehaus.jparsec.TokenTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[656-1020;31-37;3-3/656-1020;31-37;3-3];</data>
    </edge>
    <edge id="e4339" source="org.codehaus.jparsec.TokenTest.testEquals()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3/656-1020;31-37;3-3];</data>
    </edge>
    <edge id="e4340" source="org.codehaus.jparsec.TokenTest.testEquals()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[656-1020;31-37;3-3];</data>
    </edge>
    <edge id="e4341" source="org.codehaus.jparsec.TokenTest.testIndex()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[311-391;18-20;3-3];</data>
    </edge>
    <edge id="e4342" source="org.codehaus.jparsec.TokenTest.testIndex()" target="org.codehaus.jparsec.Token.index()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[311-391;18-20;3-3];</data>
    </edge>
    <edge id="e4343" source="org.codehaus.jparsec.TokenTest.testLength()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[222-304;14-16;3-3];</data>
    </edge>
    <edge id="e4344" source="org.codehaus.jparsec.TokenTest.testLength()" target="org.codehaus.jparsec.Token.length()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[222-304;14-16;3-3];</data>
    </edge>
    <edge id="e4345" source="org.codehaus.jparsec.TokenTest.testToString()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[494-649;26-29;3-3/494-649;26-29;3-3];</data>
    </edge>
    <edge id="e4346" source="org.codehaus.jparsec.TokenTest.testToString()" target="org.codehaus.jparsec.Token.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[494-649;26-29;3-3/494-649;26-29;3-3];</data>
    </edge>
    <edge id="e4347" source="org.codehaus.jparsec.TokenTest.testValue()" target="org.codehaus.jparsec.Token(int,int,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[398-487;22-24;3-3];</data>
    </edge>
    <edge id="e4348" source="org.codehaus.jparsec.TokenTest.testValue()" target="org.codehaus.jparsec.Token.value()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenTest.java;[398-487;22-24;3-3];</data>
    </edge>
    <edge id="e4349" source="org.codehaus.jparsec.TokenizerMaps#RESERVED_FRAGMENT" target="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[1530-1701;30-31;3-80];</data>
    </edge>
    <edge id="e4350" source="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT" target="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[1708-1885;33-34;3-84];</data>
    </edge>
    <edge id="e4351" source="org.codehaus.jparsec.TokenizerMaps#INTEGER_FRAGMENT" target="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[1892-2060;36-37;3-78];</data>
    </edge>
    <edge id="e4352" source="org.codehaus.jparsec.TokenizerMaps#DECIMAL_FRAGMENT" target="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[2067-2235;39-40;3-78];</data>
    </edge>
    <edge id="e4353" source="org.codehaus.jparsec.TokenizerMaps$1.map(java.lang.String)" target="org.codehaus.jparsec.Tokens.scientificNotation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[2484-2954;48-57;9-9];</data>
    </edge>
    <edge id="e4354" source="org.codehaus.jparsec.TokenizerMaps#SCIENTIFIC_NOTATION" target="org.codehaus.jparsec.TokenizerMaps$1()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[2242-3058;42-61;3-8];</data>
    </edge>
    <edge id="e4355" source="org.codehaus.jparsec.TokenizerMaps$2.map(java.lang.String)" target="org.codehaus.jparsec.StringLiteralsTranslator.tokenizeDoubleQuote(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3368-3470;69-71;5-5];</data>
    </edge>
    <edge id="e4356" source="org.codehaus.jparsec.TokenizerMaps#DOUBLE_QUOTE_STRING" target="org.codehaus.jparsec.TokenizerMaps$2()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3065-3558;63-75;3-4];</data>
    </edge>
    <edge id="e4357" source="org.codehaus.jparsec.TokenizerMaps$3.map(java.lang.String)" target="org.codehaus.jparsec.StringLiteralsTranslator.tokenizeSingleQuote(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3906-4014;83-85;5-5];</data>
    </edge>
    <edge id="e4358" source="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_STRING" target="org.codehaus.jparsec.TokenizerMaps$3()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[3563-4102;77-89;3-4];</data>
    </edge>
    <edge id="e4359" source="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_CHAR" target="org.codehaus.jparsec.TokenizerMaps$4()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4109-4724;91-106;3-4];</data>
    </edge>
    <edge id="e4360" source="org.codehaus.jparsec.TokenizerMaps$5.map(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeDecimalAsLong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4943-5045;113-115;5-5];</data>
    </edge>
    <edge id="e4361" source="org.codehaus.jparsec.TokenizerMaps#DEC_AS_LONG" target="org.codehaus.jparsec.TokenizerMaps$5()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[4731-5125;108-119;3-4];</data>
    </edge>
    <edge id="e4362" source="org.codehaus.jparsec.TokenizerMaps$6.map(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeOctalAsLong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5342-5442;126-128;5-5];</data>
    </edge>
    <edge id="e4363" source="org.codehaus.jparsec.TokenizerMaps#OCT_AS_LONG" target="org.codehaus.jparsec.TokenizerMaps$6()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5132-5522;121-132;3-4];</data>
    </edge>
    <edge id="e4364" source="org.codehaus.jparsec.TokenizerMaps$7.map(java.lang.String)" target="org.codehaus.jparsec.NumberLiteralsTranslator.tokenizeHexAsLong(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5745-5843;139-141;5-5];</data>
    </edge>
    <edge id="e4365" source="org.codehaus.jparsec.TokenizerMaps#HEX_AS_LONG" target="org.codehaus.jparsec.TokenizerMaps$7()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5529-5923;134-145;3-4];</data>
    </edge>
    <edge id="e4366" source="org.codehaus.jparsec.TokenizerMaps$8.map(java.lang.String)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[6178-6262;153-155;7-7];</data>
    </edge>
    <edge id="e4367" source="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)" target="org.codehaus.jparsec.TokenizerMaps$8()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5930-6360;147-160;3-3];</data>
    </edge>
    <edge id="e4368" source="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/TokenizerMaps.java;[5930-6360;147-160;3-3];</data>
    </edge>
    <edge id="e4369" source="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2980-3222;85-90;3-3];</data>
    </edge>
    <edge id="e4370" source="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Tokens$Fragment.tag()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2980-3222;85-90;3-3];</data>
    </edge>
    <edge id="e4371" source="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)" target="org.codehaus.jparsec.Tokens$Fragment.text()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2980-3222;85-90;3-3];</data>
    </edge>
    <edge id="e4372" source="org.codehaus.jparsec.TokenizerMapsTest.testDecAsLong()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1285-1464;46-49;3-3];</data>
    </edge>
    <edge id="e4373" source="org.codehaus.jparsec.TokenizerMapsTest.testDecAsLong()" target="org.codehaus.jparsec.TokenizerMaps#DEC_AS_LONG">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1285-1464;46-49;3-3/1285-1464;46-49;3-3];</data>
    </edge>
    <edge id="e4374" source="org.codehaus.jparsec.TokenizerMapsTest.testDecimalFragment()" target="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[756-859;32-34;3-3];</data>
    </edge>
    <edge id="e4375" source="org.codehaus.jparsec.TokenizerMapsTest.testDecimalFragment()" target="org.codehaus.jparsec.Tokens$Tag#DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[756-859;32-34;3-3];</data>
    </edge>
    <edge id="e4376" source="org.codehaus.jparsec.TokenizerMapsTest.testDecimalFragment()" target="org.codehaus.jparsec.TokenizerMaps#DECIMAL_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[756-859;32-34;3-3];</data>
    </edge>
    <edge id="e4377" source="org.codehaus.jparsec.TokenizerMapsTest.testDoubleQuoteString()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1843-2057;61-64;3-3];</data>
    </edge>
    <edge id="e4378" source="org.codehaus.jparsec.TokenizerMapsTest.testDoubleQuoteString()" target="org.codehaus.jparsec.TokenizerMaps#DOUBLE_QUOTE_STRING">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1843-2057;61-64;3-3/1843-2057;61-64;3-3];</data>
    </edge>
    <edge id="e4379" source="org.codehaus.jparsec.TokenizerMapsTest.testFragment()" target="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[318-407;16-18;3-3];</data>
    </edge>
    <edge id="e4380" source="org.codehaus.jparsec.TokenizerMapsTest.testFragment()" target="org.codehaus.jparsec.TokenizerMaps.fragment(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[318-407;16-18;3-3];</data>
    </edge>
    <edge id="e4381" source="org.codehaus.jparsec.TokenizerMapsTest.testHexAsLong()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1656-1836;56-59;3-3];</data>
    </edge>
    <edge id="e4382" source="org.codehaus.jparsec.TokenizerMapsTest.testHexAsLong()" target="org.codehaus.jparsec.TokenizerMaps#HEX_AS_LONG">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1656-1836;56-59;3-3/1656-1836;56-59;3-3];</data>
    </edge>
    <edge id="e4383" source="org.codehaus.jparsec.TokenizerMapsTest.testIdentifierFragment()" target="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[527-639;24-26;3-3];</data>
    </edge>
    <edge id="e4384" source="org.codehaus.jparsec.TokenizerMapsTest.testIdentifierFragment()" target="org.codehaus.jparsec.Tokens$Tag#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[527-639;24-26;3-3];</data>
    </edge>
    <edge id="e4385" source="org.codehaus.jparsec.TokenizerMapsTest.testIdentifierFragment()" target="org.codehaus.jparsec.TokenizerMaps#IDENTIFIER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[527-639;24-26;3-3];</data>
    </edge>
    <edge id="e4386" source="org.codehaus.jparsec.TokenizerMapsTest.testIntegerFragment()" target="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[646-749;28-30;3-3];</data>
    </edge>
    <edge id="e4387" source="org.codehaus.jparsec.TokenizerMapsTest.testIntegerFragment()" target="org.codehaus.jparsec.Tokens$Tag#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[646-749;28-30;3-3];</data>
    </edge>
    <edge id="e4388" source="org.codehaus.jparsec.TokenizerMapsTest.testIntegerFragment()" target="org.codehaus.jparsec.TokenizerMaps#INTEGER_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[646-749;28-30;3-3];</data>
    </edge>
    <edge id="e4389" source="org.codehaus.jparsec.TokenizerMapsTest.testOctAsLong()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1471-1649;51-54;3-3];</data>
    </edge>
    <edge id="e4390" source="org.codehaus.jparsec.TokenizerMapsTest.testOctAsLong()" target="org.codehaus.jparsec.TokenizerMaps#OCT_AS_LONG">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[1471-1649;51-54;3-3/1471-1649;51-54;3-3];</data>
    </edge>
    <edge id="e4391" source="org.codehaus.jparsec.TokenizerMapsTest.testReservedFragment()" target="org.codehaus.jparsec.TokenizerMapsTest.assertFragment(java.lang.Object,org.codehaus.jparsec.functors.Map)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[414-520;20-22;3-3];</data>
    </edge>
    <edge id="e4392" source="org.codehaus.jparsec.TokenizerMapsTest.testReservedFragment()" target="org.codehaus.jparsec.Tokens$Tag#RESERVED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[414-520;20-22;3-3];</data>
    </edge>
    <edge id="e4393" source="org.codehaus.jparsec.TokenizerMapsTest.testReservedFragment()" target="org.codehaus.jparsec.TokenizerMaps#RESERVED_FRAGMENT">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[414-520;20-22;3-3];</data>
    </edge>
    <edge id="e4394" source="org.codehaus.jparsec.TokenizerMapsTest.testScientificNotation()" target="org.codehaus.jparsec.Tokens$ScientificNotation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3];</data>
    </edge>
    <edge id="e4395" source="org.codehaus.jparsec.TokenizerMapsTest.testScientificNotation()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3];</data>
    </edge>
    <edge id="e4396" source="org.codehaus.jparsec.TokenizerMapsTest.testScientificNotation()" target="org.codehaus.jparsec.TokenizerMaps#SCIENTIFIC_NOTATION">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3/2273-2975;71-83;3-3];</data>
    </edge>
    <edge id="e4397" source="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteChar()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[866-1278;36-44;3-3/866-1278;36-44;3-3/866-1278;36-44;3-3];</data>
    </edge>
    <edge id="e4398" source="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteChar()" target="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_CHAR">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[866-1278;36-44;3-3/866-1278;36-44;3-3/866-1278;36-44;3-3/866-1278;36-44;3-3];</data>
    </edge>
    <edge id="e4399" source="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteString()" target="org.codehaus.jparsec.functors.Map.map(From)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2064-2266;66-69;3-3];</data>
    </edge>
    <edge id="e4400" source="org.codehaus.jparsec.TokenizerMapsTest.testSingleQuoteString()" target="org.codehaus.jparsec.TokenizerMaps#SINGLE_QUOTE_STRING">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokenizerMapsTest.java;[2064-2266;66-69;3-3/2064-2266;66-69;3-3];</data>
    </edge>
    <edge id="e4401" source="org.codehaus.jparsec.Tokens$Fragment#text" target="org.codehaus.jparsec.Tokens$Fragment(java.lang.String,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3118-3211;91-94;5-5];</data>
    </edge>
    <edge id="e4402" source="org.codehaus.jparsec.Tokens$Fragment#tag" target="org.codehaus.jparsec.Tokens$Fragment(java.lang.String,java.lang.Object)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3118-3211;91-94;5-5];</data>
    </edge>
    <edge id="e4403" source="org.codehaus.jparsec.Tokens$Fragment.equalFragment(org.codehaus.jparsec.Tokens$Fragment)" target="org.codehaus.jparsec.Tokens$Fragment#tag">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3429-3533;106-108;5-5/3429-3533;106-108;5-5];</data>
    </edge>
    <edge id="e4404" source="org.codehaus.jparsec.Tokens$Fragment.equalFragment(org.codehaus.jparsec.Tokens$Fragment)" target="org.codehaus.jparsec.Tokens$Fragment#text">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3429-3533;106-108;5-5/3429-3533;106-108;5-5];</data>
    </edge>
    <edge id="e4405" source="org.codehaus.jparsec.Tokens$Fragment.equals(java.lang.Object)" target="org.codehaus.jparsec.Tokens$Fragment.equalFragment(org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3544-3710;110-115;5-5];</data>
    </edge>
    <edge id="e4406" source="org.codehaus.jparsec.Tokens$Fragment.hashCode()" target="org.codehaus.jparsec.Tokens$Fragment#tag">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3717-3807;117-119;5-5];</data>
    </edge>
    <edge id="e4407" source="org.codehaus.jparsec.Tokens$Fragment.hashCode()" target="org.codehaus.jparsec.Tokens$Fragment#text">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3717-3807;117-119;5-5];</data>
    </edge>
    <edge id="e4408" source="org.codehaus.jparsec.Tokens$Fragment.tag()" target="org.codehaus.jparsec.Tokens$Fragment#tag">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3327-3418;101-104;5-5];</data>
    </edge>
    <edge id="e4409" source="org.codehaus.jparsec.Tokens$Fragment.text()" target="org.codehaus.jparsec.Tokens$Fragment#text">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3222-3316;96-99;5-5];</data>
    </edge>
    <edge id="e4410" source="org.codehaus.jparsec.Tokens$Fragment.toString()" target="org.codehaus.jparsec.Tokens$Fragment#text">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[3818-3878;121-123;5-5];</data>
    </edge>
    <edge id="e4411" source="org.codehaus.jparsec.Tokens$ScientificNotation#significand" target="org.codehaus.jparsec.Tokens$ScientificNotation(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4347-4470;138-141;5-5];</data>
    </edge>
    <edge id="e4412" source="org.codehaus.jparsec.Tokens$ScientificNotation#exponent" target="org.codehaus.jparsec.Tokens$ScientificNotation(java.lang.String,java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4347-4470;138-141;5-5];</data>
    </edge>
    <edge id="e4413" source="org.codehaus.jparsec.Tokens$ScientificNotation.equals(java.lang.Object)" target="org.codehaus.jparsec.Tokens$ScientificNotation#significand">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4576-4848;147-153;5-5/4576-4848;147-153;5-5];</data>
    </edge>
    <edge id="e4414" source="org.codehaus.jparsec.Tokens$ScientificNotation.equals(java.lang.Object)" target="org.codehaus.jparsec.Tokens$ScientificNotation#exponent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4576-4848;147-153;5-5/4576-4848;147-153;5-5];</data>
    </edge>
    <edge id="e4415" source="org.codehaus.jparsec.Tokens$ScientificNotation.hashCode()" target="org.codehaus.jparsec.Tokens$ScientificNotation#significand">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4859-4961;155-157;5-5];</data>
    </edge>
    <edge id="e4416" source="org.codehaus.jparsec.Tokens$ScientificNotation.hashCode()" target="org.codehaus.jparsec.Tokens$ScientificNotation#exponent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4859-4961;155-157;5-5];</data>
    </edge>
    <edge id="e4417" source="org.codehaus.jparsec.Tokens$ScientificNotation.toString()" target="org.codehaus.jparsec.Tokens$ScientificNotation#significand">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4481-4565;143-145;5-5];</data>
    </edge>
    <edge id="e4418" source="org.codehaus.jparsec.Tokens$ScientificNotation.toString()" target="org.codehaus.jparsec.Tokens$ScientificNotation#exponent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[4481-4565;143-145;5-5];</data>
    </edge>
    <edge id="e4419" source="org.codehaus.jparsec.Tokens$Tag#RESERVED" target="org.codehaus.jparsec.Tokens$Tag()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[5045-5077;163-164;5-12];</data>
    </edge>
    <edge id="e4420" source="org.codehaus.jparsec.Tokens$Tag#IDENTIFIER" target="org.codehaus.jparsec.Tokens$Tag()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[5089-5128;166-167;5-14];</data>
    </edge>
    <edge id="e4421" source="org.codehaus.jparsec.Tokens$Tag#INTEGER" target="org.codehaus.jparsec.Tokens$Tag()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[5140-5181;169-170;5-11];</data>
    </edge>
    <edge id="e4422" source="org.codehaus.jparsec.Tokens$Tag#DECIMAL" target="org.codehaus.jparsec.Tokens$Tag()">
      <data key="type">INLINE_CONSTRUCTOR_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[5193-5233;172-173;5-11];</data>
    </edge>
    <edge id="e4423" source="org.codehaus.jparsec.Tokens.decimalLiteral(java.lang.String)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2145-2394;58-66;3-3];</data>
    </edge>
    <edge id="e4424" source="org.codehaus.jparsec.Tokens.decimalLiteral(java.lang.String)" target="org.codehaus.jparsec.Tokens$Tag#DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2145-2394;58-66;3-3];</data>
    </edge>
    <edge id="e4425" source="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)" target="org.codehaus.jparsec.Tokens$Fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1338-1645;27-36;3-3];</data>
    </edge>
    <edge id="e4426" source="org.codehaus.jparsec.Tokens.identifier(java.lang.String)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1897-2138;48-56;3-3];</data>
    </edge>
    <edge id="e4427" source="org.codehaus.jparsec.Tokens.identifier(java.lang.String)" target="org.codehaus.jparsec.Tokens$Tag#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1897-2138;48-56;3-3];</data>
    </edge>
    <edge id="e4428" source="org.codehaus.jparsec.Tokens.integerLiteral(java.lang.String)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2401-2650;68-76;3-3];</data>
    </edge>
    <edge id="e4429" source="org.codehaus.jparsec.Tokens.integerLiteral(java.lang.String)" target="org.codehaus.jparsec.Tokens$Tag#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2401-2650;68-76;3-3];</data>
    </edge>
    <edge id="e4430" source="org.codehaus.jparsec.Tokens.reserved(java.lang.String)" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1652-1890;38-46;3-3];</data>
    </edge>
    <edge id="e4431" source="org.codehaus.jparsec.Tokens.reserved(java.lang.String)" target="org.codehaus.jparsec.Tokens$Tag#RESERVED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[1652-1890;38-46;3-3];</data>
    </edge>
    <edge id="e4432" source="org.codehaus.jparsec.Tokens.scientificNotation(java.lang.String,java.lang.String)" target="org.codehaus.jparsec.Tokens$ScientificNotation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/Tokens.java;[2657-2942;78-84;3-3];</data>
    </edge>
    <edge id="e4433" source="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)" target="org.codehaus.jparsec.Tokens$Fragment.text()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1649-1805;53-56;3-3];</data>
    </edge>
    <edge id="e4434" source="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)" target="org.codehaus.jparsec.Tokens$Fragment.tag()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1649-1805;53-56;3-3];</data>
    </edge>
    <edge id="e4435" source="org.codehaus.jparsec.TokensTest.testDecimal()" target="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[976-1076;35-37;3-3];</data>
    </edge>
    <edge id="e4436" source="org.codehaus.jparsec.TokensTest.testDecimal()" target="org.codehaus.jparsec.Tokens.decimalLiteral(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[976-1076;35-37;3-3];</data>
    </edge>
    <edge id="e4437" source="org.codehaus.jparsec.TokensTest.testDecimal()" target="org.codehaus.jparsec.Tokens$Tag#DECIMAL">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[976-1076;35-37;3-3];</data>
    </edge>
    <edge id="e4438" source="org.codehaus.jparsec.TokensTest.testFragment()" target="org.codehaus.jparsec.Tokens.fragment(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3/364-761;17-25;3-3/364-761;17-25;3-3/364-761;17-25;3-3/364-761;17-25;3-3];</data>
    </edge>
    <edge id="e4439" source="org.codehaus.jparsec.TokensTest.testFragment()" target="org.codehaus.jparsec.Tokens$Fragment.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3];</data>
    </edge>
    <edge id="e4440" source="org.codehaus.jparsec.TokensTest.testFragment()" target="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3];</data>
    </edge>
    <edge id="e4441" source="org.codehaus.jparsec.TokensTest.testFragment()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3];</data>
    </edge>
    <edge id="e4442" source="org.codehaus.jparsec.TokensTest.testFragment()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[364-761;17-25;3-3];</data>
    </edge>
    <edge id="e4443" source="org.codehaus.jparsec.TokensTest.testInteger()" target="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1083-1183;39-41;3-3];</data>
    </edge>
    <edge id="e4444" source="org.codehaus.jparsec.TokensTest.testInteger()" target="org.codehaus.jparsec.Tokens.integerLiteral(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1083-1183;39-41;3-3];</data>
    </edge>
    <edge id="e4445" source="org.codehaus.jparsec.TokensTest.testInteger()" target="org.codehaus.jparsec.Tokens$Tag#INTEGER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1083-1183;39-41;3-3];</data>
    </edge>
    <edge id="e4446" source="org.codehaus.jparsec.TokensTest.testReserved()" target="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[768-864;27-29;3-3];</data>
    </edge>
    <edge id="e4447" source="org.codehaus.jparsec.TokensTest.testReserved()" target="org.codehaus.jparsec.Tokens.reserved(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[768-864;27-29;3-3];</data>
    </edge>
    <edge id="e4448" source="org.codehaus.jparsec.TokensTest.testReserved()" target="org.codehaus.jparsec.Tokens$Tag#RESERVED">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[768-864;27-29;3-3];</data>
    </edge>
    <edge id="e4449" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.Tokens.scientificNotation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3/1190-1642;43-51;3-3/1190-1642;43-51;3-3/1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4450" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.Tokens$ScientificNotation.toString()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4451" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.util.ObjectTester.assertEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4452" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.util.ObjectTester.assertNotEqual(java.lang.Object,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4453" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.Tokens$ScientificNotation#significand">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4454" source="org.codehaus.jparsec.TokensTest.testScientificNumber()" target="org.codehaus.jparsec.Tokens$ScientificNotation#exponent">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[1190-1642;43-51;3-3];</data>
    </edge>
    <edge id="e4455" source="org.codehaus.jparsec.TokensTest.testWord()" target="org.codehaus.jparsec.TokensTest.assertFragment(java.lang.Object,java.lang.String,org.codehaus.jparsec.Tokens$Fragment)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[871-969;31-33;3-3];</data>
    </edge>
    <edge id="e4456" source="org.codehaus.jparsec.TokensTest.testWord()" target="org.codehaus.jparsec.Tokens.identifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[871-969;31-33;3-3];</data>
    </edge>
    <edge id="e4457" source="org.codehaus.jparsec.TokensTest.testWord()" target="org.codehaus.jparsec.Tokens$Tag#IDENTIFIER">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/test/org/codehaus/jparsec/TokensTest.java;[871-969;31-33;3-3];</data>
    </edge>
    <edge id="e4458" source="org.codehaus.jparsec.UnexpectedParser(java.lang.String)" target="org.codehaus.jparsec.Parser()">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1301-1357;21-23;3-3];</data>
    </edge>
    <edge id="e4459" source="org.codehaus.jparsec.UnexpectedParser#name" target="org.codehaus.jparsec.UnexpectedParser(java.lang.String)">
      <data key="type">WRITE_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1301-1357;21-23;3-3];</data>
    </edge>
    <edge id="e4460" source="org.codehaus.jparsec.UnexpectedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.ParseContext.unexpected(java.lang.String)">
      <data key="type">METHOD_CALL</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1362-1460;25-28;3-3];</data>
    </edge>
    <edge id="e4461" source="org.codehaus.jparsec.UnexpectedParser.apply(org.codehaus.jparsec.ParseContext)" target="org.codehaus.jparsec.UnexpectedParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1362-1460;25-28;3-3];</data>
    </edge>
    <edge id="e4462" source="org.codehaus.jparsec.UnexpectedParser.toString()" target="org.codehaus.jparsec.UnexpectedParser#name">
      <data key="type">READ_OPERATION</data>
      <data key="sourcecode">/home/vince/Experiments/steimann/jparsec/src/org/codehaus/jparsec/UnexpectedParser.java;[1467-1523;30-32;3-3];</data>
    </edge>
  </graph>
</graphml>
